{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  // @generated by Peggy 4.2.0.\n  //\n  // https://peggyjs.org/\n  function rootNode(comment) {\n    return comment !== null ? {\n      comment,\n      variations: []\n    } : {\n      variations: []\n    };\n  }\n  function node(move, suffix, nag, comment, variations) {\n    const node = {\n      move,\n      variations\n    };\n    if (suffix) {\n      node.suffix = suffix;\n    }\n    if (nag) {\n      node.nag = nag;\n    }\n    if (comment !== null) {\n      node.comment = comment;\n    }\n    return node;\n  }\n  function lineToTree(...nodes) {\n    const [root, ...rest] = nodes;\n    let parent = root;\n    for (const child of rest) {\n      if (child !== null) {\n        parent.variations = [child, ...child.variations];\n        child.variations = [];\n        parent = child;\n      }\n    }\n    return root;\n  }\n  function pgn(headers, game) {\n    if (game.marker && game.marker.comment) {\n      let node = game.root;\n      while (true) {\n        const next = node.variations[0];\n        if (!next) {\n          node.comment = game.marker.comment;\n          break;\n        }\n        node = next;\n      }\n    }\n    return {\n      headers,\n      root: game.root,\n      result: (game.marker && game.marker.result) ?? undefined\n    };\n  }\n  function peg$subclass(child, parent) {\n    function C() {\n      this.constructor = child;\n    }\n    C.prototype = parent.prototype;\n    child.prototype = new C();\n  }\n  function peg$SyntaxError(message, expected, found, location) {\n    var self = Error.call(this, message);\n    // istanbul ignore next Check is a necessary evil to support older environments\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(self, peg$SyntaxError.prototype);\n    }\n    self.expected = expected;\n    self.found = found;\n    self.location = location;\n    self.name = \"SyntaxError\";\n    return self;\n  }\n  peg$subclass(peg$SyntaxError, Error);\n  function peg$padEnd(str, targetLength, padString) {\n    padString = padString || \" \";\n    if (str.length > targetLength) {\n      return str;\n    }\n    targetLength -= str.length;\n    padString += padString.repeat(targetLength);\n    return str + padString.slice(0, targetLength);\n  }\n  peg$SyntaxError.prototype.format = function (sources) {\n    var str = \"Error: \" + this.message;\n    if (this.location) {\n      var src = null;\n      var k;\n      for (k = 0; k < sources.length; k++) {\n        if (sources[k].source === this.location.source) {\n          src = sources[k].text.split(/\\r\\n|\\n|\\r/g);\n          break;\n        }\n      }\n      var s = this.location.start;\n      var offset_s = this.location.source && typeof this.location.source.offset === \"function\" ? this.location.source.offset(s) : s;\n      var loc = this.location.source + \":\" + offset_s.line + \":\" + offset_s.column;\n      if (src) {\n        var e = this.location.end;\n        var filler = peg$padEnd(\"\", offset_s.line.toString().length, ' ');\n        var line = src[s.line - 1];\n        var last = s.line === e.line ? e.column : line.length + 1;\n        var hatLen = last - s.column || 1;\n        str += \"\\n --> \" + loc + \"\\n\" + filler + \" |\\n\" + offset_s.line + \" | \" + line + \"\\n\" + filler + \" | \" + peg$padEnd(\"\", s.column - 1, ' ') + peg$padEnd(\"\", hatLen, \"^\");\n      } else {\n        str += \"\\n at \" + loc;\n      }\n    }\n    return str;\n  };\n  peg$SyntaxError.buildMessage = function (expected, found) {\n    var DESCRIBE_EXPECTATION_FNS = {\n      literal: function (expectation) {\n        return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n      },\n      class: function (expectation) {\n        var escapedParts = expectation.parts.map(function (part) {\n          return Array.isArray(part) ? classEscape(part[0]) + \"-\" + classEscape(part[1]) : classEscape(part);\n        });\n        return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts.join(\"\") + \"]\";\n      },\n      any: function () {\n        return \"any character\";\n      },\n      end: function () {\n        return \"end of input\";\n      },\n      other: function (expectation) {\n        return expectation.description;\n      }\n    };\n    function hex(ch) {\n      return ch.charCodeAt(0).toString(16).toUpperCase();\n    }\n    function literalEscape(s) {\n      return s.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, \"\\\\\\\"\").replace(/\\0/g, \"\\\\0\").replace(/\\t/g, \"\\\\t\").replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\").replace(/[\\x00-\\x0F]/g, function (ch) {\n        return \"\\\\x0\" + hex(ch);\n      }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n        return \"\\\\x\" + hex(ch);\n      });\n    }\n    function classEscape(s) {\n      return s.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\]/g, \"\\\\]\").replace(/\\^/g, \"\\\\^\").replace(/-/g, \"\\\\-\").replace(/\\0/g, \"\\\\0\").replace(/\\t/g, \"\\\\t\").replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\").replace(/[\\x00-\\x0F]/g, function (ch) {\n        return \"\\\\x0\" + hex(ch);\n      }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n        return \"\\\\x\" + hex(ch);\n      });\n    }\n    function describeExpectation(expectation) {\n      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n    }\n    function describeExpected(expected) {\n      var descriptions = expected.map(describeExpectation);\n      var i, j;\n      descriptions.sort();\n      if (descriptions.length > 0) {\n        for (i = 1, j = 1; i < descriptions.length; i++) {\n          if (descriptions[i - 1] !== descriptions[i]) {\n            descriptions[j] = descriptions[i];\n            j++;\n          }\n        }\n        descriptions.length = j;\n      }\n      switch (descriptions.length) {\n        case 1:\n          return descriptions[0];\n        case 2:\n          return descriptions[0] + \" or \" + descriptions[1];\n        default:\n          return descriptions.slice(0, -1).join(\", \") + \", or \" + descriptions[descriptions.length - 1];\n      }\n    }\n    function describeFound(found) {\n      return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n    }\n    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n  };\n  function peg$parse(input, options) {\n    options = options !== undefined ? options : {};\n    var peg$FAILED = {};\n    var peg$source = options.grammarSource;\n    var peg$startRuleFunctions = {\n      pgn: peg$parsepgn\n    };\n    var peg$startRuleFunction = peg$parsepgn;\n    var peg$c0 = \"[\";\n    var peg$c1 = \"\\\"\";\n    var peg$c2 = \"]\";\n    var peg$c3 = \".\";\n    var peg$c4 = \"O-O-O\";\n    var peg$c5 = \"O-O\";\n    var peg$c6 = \"0-0-0\";\n    var peg$c7 = \"0-0\";\n    var peg$c8 = \"$\";\n    var peg$c9 = \"{\";\n    var peg$c10 = \"}\";\n    var peg$c11 = \";\";\n    var peg$c12 = \"(\";\n    var peg$c13 = \")\";\n    var peg$c14 = \"1-0\";\n    var peg$c15 = \"0-1\";\n    var peg$c16 = \"1/2-1/2\";\n    var peg$c17 = \"*\";\n    var peg$r0 = /^[a-zA-Z]/;\n    var peg$r1 = /^[^\"]/;\n    var peg$r2 = /^[0-9]/;\n    var peg$r3 = /^[.]/;\n    var peg$r4 = /^[a-zA-Z1-8\\-=]/;\n    var peg$r5 = /^[+#]/;\n    var peg$r6 = /^[!?]/;\n    var peg$r7 = /^[^}]/;\n    var peg$r8 = /^[^\\r\\n]/;\n    var peg$r9 = /^[ \\t\\r\\n]/;\n    var peg$e0 = peg$otherExpectation(\"tag pair\");\n    var peg$e1 = peg$literalExpectation(\"[\", false);\n    var peg$e2 = peg$literalExpectation(\"\\\"\", false);\n    var peg$e3 = peg$literalExpectation(\"]\", false);\n    var peg$e4 = peg$otherExpectation(\"tag name\");\n    var peg$e5 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false);\n    var peg$e6 = peg$otherExpectation(\"tag value\");\n    var peg$e7 = peg$classExpectation([\"\\\"\"], true, false);\n    var peg$e8 = peg$otherExpectation(\"move number\");\n    var peg$e9 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n    var peg$e10 = peg$literalExpectation(\".\", false);\n    var peg$e11 = peg$classExpectation([\".\"], false, false);\n    var peg$e12 = peg$otherExpectation(\"standard algebraic notation\");\n    var peg$e13 = peg$literalExpectation(\"O-O-O\", false);\n    var peg$e14 = peg$literalExpectation(\"O-O\", false);\n    var peg$e15 = peg$literalExpectation(\"0-0-0\", false);\n    var peg$e16 = peg$literalExpectation(\"0-0\", false);\n    var peg$e17 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"1\", \"8\"], \"-\", \"=\"], false, false);\n    var peg$e18 = peg$classExpectation([\"+\", \"#\"], false, false);\n    var peg$e19 = peg$otherExpectation(\"suffix annotation\");\n    var peg$e20 = peg$classExpectation([\"!\", \"?\"], false, false);\n    var peg$e21 = peg$otherExpectation(\"NAG\");\n    var peg$e22 = peg$literalExpectation(\"$\", false);\n    var peg$e23 = peg$otherExpectation(\"brace comment\");\n    var peg$e24 = peg$literalExpectation(\"{\", false);\n    var peg$e25 = peg$classExpectation([\"}\"], true, false);\n    var peg$e26 = peg$literalExpectation(\"}\", false);\n    var peg$e27 = peg$otherExpectation(\"rest of line comment\");\n    var peg$e28 = peg$literalExpectation(\";\", false);\n    var peg$e29 = peg$classExpectation([\"\\r\", \"\\n\"], true, false);\n    var peg$e30 = peg$otherExpectation(\"variation\");\n    var peg$e31 = peg$literalExpectation(\"(\", false);\n    var peg$e32 = peg$literalExpectation(\")\", false);\n    var peg$e33 = peg$otherExpectation(\"game termination marker\");\n    var peg$e34 = peg$literalExpectation(\"1-0\", false);\n    var peg$e35 = peg$literalExpectation(\"0-1\", false);\n    var peg$e36 = peg$literalExpectation(\"1/2-1/2\", false);\n    var peg$e37 = peg$literalExpectation(\"*\", false);\n    var peg$e38 = peg$otherExpectation(\"whitespace\");\n    var peg$e39 = peg$classExpectation([\" \", \"\\t\", \"\\r\", \"\\n\"], false, false);\n    var peg$f0 = function (headers, game) {\n      return pgn(headers, game);\n    };\n    var peg$f1 = function (tagPairs) {\n      return Object.fromEntries(tagPairs);\n    };\n    var peg$f2 = function (tagName, tagValue) {\n      return [tagName, tagValue];\n    };\n    var peg$f3 = function (root, marker) {\n      return {\n        root,\n        marker\n      };\n    };\n    var peg$f4 = function (comment, moves) {\n      return lineToTree(rootNode(comment), ...moves.flat());\n    };\n    var peg$f5 = function (san, suffix, nag, comment, variations) {\n      return node(san, suffix, nag, comment, variations);\n    };\n    var peg$f6 = function (nag) {\n      return nag;\n    };\n    var peg$f7 = function (comment) {\n      return comment.replace(/[\\r\\n]+/g, \" \");\n    };\n    var peg$f8 = function (comment) {\n      return comment.trim();\n    };\n    var peg$f9 = function (line) {\n      return line;\n    };\n    var peg$f10 = function (result, comment) {\n      return {\n        result,\n        comment\n      };\n    };\n    var peg$currPos = options.peg$currPos | 0;\n    var peg$posDetailsCache = [{\n      line: 1,\n      column: 1\n    }];\n    var peg$maxFailPos = peg$currPos;\n    var peg$maxFailExpected = options.peg$maxFailExpected || [];\n    var peg$silentFails = options.peg$silentFails | 0;\n    var peg$result;\n    if (options.startRule) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n    function peg$literalExpectation(text, ignoreCase) {\n      return {\n        type: \"literal\",\n        text: text,\n        ignoreCase: ignoreCase\n      };\n    }\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n      return {\n        type: \"class\",\n        parts: parts,\n        inverted: inverted,\n        ignoreCase: ignoreCase\n      };\n    }\n    function peg$endExpectation() {\n      return {\n        type: \"end\"\n      };\n    }\n    function peg$otherExpectation(description) {\n      return {\n        type: \"other\",\n        description: description\n      };\n    }\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos];\n      var p;\n      if (details) {\n        return details;\n      } else {\n        if (pos >= peg$posDetailsCache.length) {\n          p = peg$posDetailsCache.length - 1;\n        } else {\n          p = pos;\n          while (!peg$posDetailsCache[--p]) {}\n        }\n        details = peg$posDetailsCache[p];\n        details = {\n          line: details.line,\n          column: details.column\n        };\n        while (p < pos) {\n          if (input.charCodeAt(p) === 10) {\n            details.line++;\n            details.column = 1;\n          } else {\n            details.column++;\n          }\n          p++;\n        }\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n    function peg$computeLocation(startPos, endPos, offset) {\n      var startPosDetails = peg$computePosDetails(startPos);\n      var endPosDetails = peg$computePosDetails(endPos);\n      var res = {\n        source: peg$source,\n        start: {\n          offset: startPos,\n          line: startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line: endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n      return res;\n    }\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) {\n        return;\n      }\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n      peg$maxFailExpected.push(expected);\n    }\n    function peg$buildStructuredError(expected, found, location) {\n      return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);\n    }\n    function peg$parsepgn() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n      s1 = peg$parsetagPairSection();\n      s2 = peg$parsemoveTextSection();\n      s0 = peg$f0(s1, s2);\n      return s0;\n    }\n    function peg$parsetagPairSection() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsetagPair();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsetagPair();\n      }\n      s2 = peg$parse_();\n      s0 = peg$f1(s1);\n      return s0;\n    }\n    function peg$parsetagPair() {\n      var s0, s2, s4, s6, s7, s8, s10;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      peg$parse_();\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s2 = peg$c0;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e1);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$parse_();\n        s4 = peg$parsetagName();\n        if (s4 !== peg$FAILED) {\n          peg$parse_();\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s6 = peg$c1;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e2);\n            }\n          }\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsetagValue();\n            if (input.charCodeAt(peg$currPos) === 34) {\n              s8 = peg$c1;\n              peg$currPos++;\n            } else {\n              s8 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$e2);\n              }\n            }\n            if (s8 !== peg$FAILED) {\n              peg$parse_();\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s10 = peg$c2;\n                peg$currPos++;\n              } else {\n                s10 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$e3);\n                }\n              }\n              if (s10 !== peg$FAILED) {\n                s0 = peg$f2(s4, s7);\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e0);\n        }\n      }\n      return s0;\n    }\n    function peg$parsetagName() {\n      var s0, s1, s2;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = input.charAt(peg$currPos);\n      if (peg$r0.test(s2)) {\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e5);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = input.charAt(peg$currPos);\n          if (peg$r0.test(s2)) {\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e5);\n            }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e4);\n        }\n      }\n      return s0;\n    }\n    function peg$parsetagValue() {\n      var s0, s1, s2;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = input.charAt(peg$currPos);\n      if (peg$r1.test(s2)) {\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e7);\n        }\n      }\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = input.charAt(peg$currPos);\n        if (peg$r1.test(s2)) {\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e7);\n          }\n        }\n      }\n      s0 = input.substring(s0, peg$currPos);\n      peg$silentFails--;\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e6);\n      }\n      return s0;\n    }\n    function peg$parsemoveTextSection() {\n      var s0, s1, s3;\n      s0 = peg$currPos;\n      s1 = peg$parseline();\n      peg$parse_();\n      s3 = peg$parsegameTerminationMarker();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$parse_();\n      s0 = peg$f3(s1, s3);\n      return s0;\n    }\n    function peg$parseline() {\n      var s0, s1, s2, s3;\n      s0 = peg$currPos;\n      s1 = peg$parsecomment();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      s2 = [];\n      s3 = peg$parsemove();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsemove();\n      }\n      s0 = peg$f4(s1, s2);\n      return s0;\n    }\n    function peg$parsemove() {\n      var s0, s4, s5, s6, s7, s8, s9, s10;\n      s0 = peg$currPos;\n      peg$parse_();\n      peg$parsemoveNumber();\n      peg$parse_();\n      s4 = peg$parsesan();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsesuffixAnnotation();\n        if (s5 === peg$FAILED) {\n          s5 = null;\n        }\n        s6 = [];\n        s7 = peg$parsenag();\n        while (s7 !== peg$FAILED) {\n          s6.push(s7);\n          s7 = peg$parsenag();\n        }\n        s7 = peg$parse_();\n        s8 = peg$parsecomment();\n        if (s8 === peg$FAILED) {\n          s8 = null;\n        }\n        s9 = [];\n        s10 = peg$parsevariation();\n        while (s10 !== peg$FAILED) {\n          s9.push(s10);\n          s10 = peg$parsevariation();\n        }\n        s0 = peg$f5(s4, s5, s6, s8, s9);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      return s0;\n    }\n    function peg$parsemoveNumber() {\n      var s0, s1, s2, s3, s4, s5;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = input.charAt(peg$currPos);\n      if (peg$r2.test(s2)) {\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e9);\n        }\n      }\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = input.charAt(peg$currPos);\n        if (peg$r2.test(s2)) {\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e9);\n          }\n        }\n      }\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s2 = peg$c3;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e10);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        s4 = [];\n        s5 = input.charAt(peg$currPos);\n        if (peg$r3.test(s5)) {\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e11);\n          }\n        }\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = input.charAt(peg$currPos);\n          if (peg$r3.test(s5)) {\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e11);\n            }\n          }\n        }\n        s1 = [s1, s2, s3, s4];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e8);\n        }\n      }\n      return s0;\n    }\n    function peg$parsesan() {\n      var s0, s1, s2, s3, s4, s5;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c4) {\n        s2 = peg$c4;\n        peg$currPos += 5;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e13);\n        }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.substr(peg$currPos, 3) === peg$c5) {\n          s2 = peg$c5;\n          peg$currPos += 3;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e14);\n          }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 5) === peg$c6) {\n            s2 = peg$c6;\n            peg$currPos += 5;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e15);\n            }\n          }\n          if (s2 === peg$FAILED) {\n            if (input.substr(peg$currPos, 3) === peg$c7) {\n              s2 = peg$c7;\n              peg$currPos += 3;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$e16);\n              }\n            }\n            if (s2 === peg$FAILED) {\n              s2 = peg$currPos;\n              s3 = input.charAt(peg$currPos);\n              if (peg$r0.test(s3)) {\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$e5);\n                }\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = [];\n                s5 = input.charAt(peg$currPos);\n                if (peg$r4.test(s5)) {\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$e17);\n                  }\n                }\n                if (s5 !== peg$FAILED) {\n                  while (s5 !== peg$FAILED) {\n                    s4.push(s5);\n                    s5 = input.charAt(peg$currPos);\n                    if (peg$r4.test(s5)) {\n                      peg$currPos++;\n                    } else {\n                      s5 = peg$FAILED;\n                      if (peg$silentFails === 0) {\n                        peg$fail(peg$e17);\n                      }\n                    }\n                  }\n                } else {\n                  s4 = peg$FAILED;\n                }\n                if (s4 !== peg$FAILED) {\n                  s3 = [s3, s4];\n                  s2 = s3;\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            }\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = input.charAt(peg$currPos);\n        if (peg$r5.test(s3)) {\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e18);\n          }\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e12);\n        }\n      }\n      return s0;\n    }\n    function peg$parsesuffixAnnotation() {\n      var s0, s1, s2;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = input.charAt(peg$currPos);\n      if (peg$r6.test(s2)) {\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e20);\n        }\n      }\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (s1.length >= 2) {\n          s2 = peg$FAILED;\n        } else {\n          s2 = input.charAt(peg$currPos);\n          if (peg$r6.test(s2)) {\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e20);\n            }\n          }\n        }\n      }\n      if (s1.length < 1) {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      } else {\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e19);\n        }\n      }\n      return s0;\n    }\n    function peg$parsenag() {\n      var s0, s2, s3, s4, s5;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      peg$parse_();\n      if (input.charCodeAt(peg$currPos) === 36) {\n        s2 = peg$c8;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e22);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = [];\n        s5 = input.charAt(peg$currPos);\n        if (peg$r2.test(s5)) {\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e9);\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = input.charAt(peg$currPos);\n            if (peg$r2.test(s5)) {\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$e9);\n              }\n            }\n          }\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s3 = input.substring(s3, peg$currPos);\n        } else {\n          s3 = s4;\n        }\n        if (s3 !== peg$FAILED) {\n          s0 = peg$f6(s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e21);\n        }\n      }\n      return s0;\n    }\n    function peg$parsecomment() {\n      var s0;\n      s0 = peg$parsebraceComment();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parserestOfLineComment();\n      }\n      return s0;\n    }\n    function peg$parsebraceComment() {\n      var s0, s1, s2, s3, s4;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c9;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e24);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = [];\n        s4 = input.charAt(peg$currPos);\n        if (peg$r7.test(s4)) {\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e25);\n          }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = input.charAt(peg$currPos);\n          if (peg$r7.test(s4)) {\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e25);\n            }\n          }\n        }\n        s2 = input.substring(s2, peg$currPos);\n        if (input.charCodeAt(peg$currPos) === 125) {\n          s3 = peg$c10;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e26);\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s0 = peg$f7(s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e23);\n        }\n      }\n      return s0;\n    }\n    function peg$parserestOfLineComment() {\n      var s0, s1, s2, s3, s4;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 59) {\n        s1 = peg$c11;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e28);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = [];\n        s4 = input.charAt(peg$currPos);\n        if (peg$r8.test(s4)) {\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e29);\n          }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = input.charAt(peg$currPos);\n          if (peg$r8.test(s4)) {\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e29);\n            }\n          }\n        }\n        s2 = input.substring(s2, peg$currPos);\n        s0 = peg$f8(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e27);\n        }\n      }\n      return s0;\n    }\n    function peg$parsevariation() {\n      var s0, s2, s3, s5;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      peg$parse_();\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c12;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e31);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseline();\n        if (s3 !== peg$FAILED) {\n          peg$parse_();\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s5 = peg$c13;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e32);\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s0 = peg$f9(s3);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e30);\n        }\n      }\n      return s0;\n    }\n    function peg$parsegameTerminationMarker() {\n      var s0, s1, s3;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c14) {\n        s1 = peg$c14;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e34);\n        }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 3) === peg$c15) {\n          s1 = peg$c15;\n          peg$currPos += 3;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e35);\n          }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 7) === peg$c16) {\n            s1 = peg$c16;\n            peg$currPos += 7;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e36);\n            }\n          }\n          if (s1 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 42) {\n              s1 = peg$c17;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$e37);\n              }\n            }\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$parse_();\n        s3 = peg$parsecomment();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        s0 = peg$f10(s1, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e33);\n        }\n      }\n      return s0;\n    }\n    function peg$parse_() {\n      var s0, s1;\n      peg$silentFails++;\n      s0 = [];\n      s1 = input.charAt(peg$currPos);\n      if (peg$r9.test(s1)) {\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e39);\n        }\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = input.charAt(peg$currPos);\n        if (peg$r9.test(s1)) {\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e39);\n          }\n        }\n      }\n      peg$silentFails--;\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e38);\n      }\n      return s0;\n    }\n    peg$result = peg$startRuleFunction();\n    if (options.peg$library) {\n      return /** @type {any} */{\n        peg$result,\n        peg$currPos,\n        peg$FAILED,\n        peg$maxFailExpected,\n        peg$maxFailPos\n      };\n    }\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail(peg$endExpectation());\n      }\n      throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n    }\n  }\n\n  /**\n   * @license\n   * Copyright (c) 2025, Jeff Hlywa (jhlywa@gmail.com)\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are met:\n   *\n   * 1. Redistributions of source code must retain the above copyright notice,\n   *    this list of conditions and the following disclaimer.\n   * 2. Redistributions in binary form must reproduce the above copyright notice,\n   *    this list of conditions and the following disclaimer in the documentation\n   *    and/or other materials provided with the distribution.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n   * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n   * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n   * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n   * POSSIBILITY OF SUCH DAMAGE.\n   */\n  const MASK64 = 0xffffffffffffffffn;\n  function rotl(x, k) {\n    return (x << k | x >> 64n - k) & 0xffffffffffffffffn;\n  }\n  function wrappingMul(x, y) {\n    return x * y & MASK64;\n  }\n  // xoroshiro128**\n  function xoroshiro128(state) {\n    return function () {\n      let s0 = BigInt(state & MASK64);\n      let s1 = BigInt(state >> 64n & MASK64);\n      const result = wrappingMul(rotl(wrappingMul(s0, 5n), 7n), 9n);\n      s1 ^= s0;\n      s0 = (rotl(s0, 24n) ^ s1 ^ s1 << 16n) & MASK64;\n      s1 = rotl(s1, 37n);\n      state = s1 << 64n | s0;\n      return result;\n    };\n  }\n  const rand = xoroshiro128(0xa187eb39cdcaed8f31c4b365b102e01en);\n  const PIECE_KEYS = Array.from({\n    length: 2\n  }, () => Array.from({\n    length: 6\n  }, () => Array.from({\n    length: 128\n  }, () => rand())));\n  const EP_KEYS = Array.from({\n    length: 8\n  }, () => rand());\n  const CASTLING_KEYS = Array.from({\n    length: 16\n  }, () => rand());\n  const SIDE_KEY = rand();\n  const WHITE = 'w';\n  const BLACK = 'b';\n  const PAWN = 'p';\n  const KNIGHT = 'n';\n  const BISHOP = 'b';\n  const ROOK = 'r';\n  const QUEEN = 'q';\n  const KING = 'k';\n  const DEFAULT_POSITION = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\n  class Move {\n    /**\n     * @deprecated This field is deprecated and will be removed in version 2.0.0.\n     * Please use move descriptor functions instead: `isCapture`, `isPromotion`,\n     * `isEnPassant`, `isKingsideCastle`, `isQueensideCastle`, `isCastle`, and\n     * `isBigPawn`\n     */\n\n    constructor(chess, internal) {\n      const {\n        color,\n        piece,\n        from,\n        to,\n        flags,\n        captured,\n        promotion\n      } = internal;\n      const fromAlgebraic = algebraic(from);\n      const toAlgebraic = algebraic(to);\n      this.color = color;\n      this.piece = piece;\n      this.from = fromAlgebraic;\n      this.to = toAlgebraic;\n      /*\n       * HACK: The chess['_method']() calls below invoke private methods in the\n       * Chess class to generate SAN and FEN. It's a bit of a hack, but makes the\n       * code cleaner elsewhere.\n       */\n      this.san = chess['_moveToSan'](internal, chess['_moves']({\n        legal: true\n      }));\n      this.lan = fromAlgebraic + toAlgebraic;\n      this.before = chess.fen();\n      // Generate the FEN for the 'after' key\n      chess['_makeMove'](internal);\n      this.after = chess.fen();\n      chess['_undoMove']();\n      // Build the text representation of the move flags\n      this.flags = '';\n      for (const flag in BITS) {\n        if (BITS[flag] & flags) {\n          this.flags += FLAGS[flag];\n        }\n      }\n      if (captured) {\n        this.captured = captured;\n      }\n      if (promotion) {\n        this.promotion = promotion;\n        this.lan += promotion;\n      }\n    }\n    isCapture() {\n      return this.flags.indexOf(FLAGS['CAPTURE']) > -1;\n    }\n    isPromotion() {\n      return this.flags.indexOf(FLAGS['PROMOTION']) > -1;\n    }\n    isEnPassant() {\n      return this.flags.indexOf(FLAGS['EP_CAPTURE']) > -1;\n    }\n    isKingsideCastle() {\n      return this.flags.indexOf(FLAGS['KSIDE_CASTLE']) > -1;\n    }\n    isQueensideCastle() {\n      return this.flags.indexOf(FLAGS['QSIDE_CASTLE']) > -1;\n    }\n    isBigPawn() {\n      return this.flags.indexOf(FLAGS['BIG_PAWN']) > -1;\n    }\n  }\n  const EMPTY = -1;\n  const FLAGS = {\n    NORMAL: 'n',\n    CAPTURE: 'c',\n    BIG_PAWN: 'b',\n    EP_CAPTURE: 'e',\n    PROMOTION: 'p',\n    KSIDE_CASTLE: 'k',\n    QSIDE_CASTLE: 'q',\n    NULL_MOVE: '-'\n  };\n  // prettier-ignore\n  const SQUARES = ['a8', 'b8', 'c8', 'd8', 'e8', 'f8', 'g8', 'h8', 'a7', 'b7', 'c7', 'd7', 'e7', 'f7', 'g7', 'h7', 'a6', 'b6', 'c6', 'd6', 'e6', 'f6', 'g6', 'h6', 'a5', 'b5', 'c5', 'd5', 'e5', 'f5', 'g5', 'h5', 'a4', 'b4', 'c4', 'd4', 'e4', 'f4', 'g4', 'h4', 'a3', 'b3', 'c3', 'd3', 'e3', 'f3', 'g3', 'h3', 'a2', 'b2', 'c2', 'd2', 'e2', 'f2', 'g2', 'h2', 'a1', 'b1', 'c1', 'd1', 'e1', 'f1', 'g1', 'h1'];\n  const BITS = {\n    NORMAL: 1,\n    CAPTURE: 2,\n    BIG_PAWN: 4,\n    EP_CAPTURE: 8,\n    PROMOTION: 16,\n    KSIDE_CASTLE: 32,\n    QSIDE_CASTLE: 64,\n    NULL_MOVE: 128\n  };\n  /* eslint-disable @typescript-eslint/naming-convention */\n  // these are required, according to spec\n  const SEVEN_TAG_ROSTER = {\n    Event: '?',\n    Site: '?',\n    Date: '????.??.??',\n    Round: '?',\n    White: '?',\n    Black: '?',\n    Result: '*'\n  };\n  /**\n   * These nulls are placeholders to fix the order of tags (as they appear in PGN spec); null values will be\n   * eliminated in getHeaders()\n   */\n  const SUPLEMENTAL_TAGS = {\n    WhiteTitle: null,\n    BlackTitle: null,\n    WhiteElo: null,\n    BlackElo: null,\n    WhiteUSCF: null,\n    BlackUSCF: null,\n    WhiteNA: null,\n    BlackNA: null,\n    WhiteType: null,\n    BlackType: null,\n    EventDate: null,\n    EventSponsor: null,\n    Section: null,\n    Stage: null,\n    Board: null,\n    Opening: null,\n    Variation: null,\n    SubVariation: null,\n    ECO: null,\n    NIC: null,\n    Time: null,\n    UTCTime: null,\n    UTCDate: null,\n    TimeControl: null,\n    SetUp: null,\n    FEN: null,\n    Termination: null,\n    Annotator: null,\n    Mode: null,\n    PlyCount: null\n  };\n  const HEADER_TEMPLATE = {\n    ...SEVEN_TAG_ROSTER,\n    ...SUPLEMENTAL_TAGS\n  };\n  /* eslint-enable @typescript-eslint/naming-convention */\n  /*\n   * NOTES ABOUT 0x88 MOVE GENERATION ALGORITHM\n   * ----------------------------------------------------------------------------\n   * From https://github.com/jhlywa/chess.js/issues/230\n   *\n   * A lot of people are confused when they first see the internal representation\n   * of chess.js. It uses the 0x88 Move Generation Algorithm which internally\n   * stores the board as an 8x16 array. This is purely for efficiency but has a\n   * couple of interesting benefits:\n   *\n   * 1. 0x88 offers a very inexpensive \"off the board\" check. Bitwise AND (&) any\n   *    square with 0x88, if the result is non-zero then the square is off the\n   *    board. For example, assuming a knight square A8 (0 in 0x88 notation),\n   *    there are 8 possible directions in which the knight can move. These\n   *    directions are relative to the 8x16 board and are stored in the\n   *    PIECE_OFFSETS map. One possible move is A8 - 18 (up one square, and two\n   *    squares to the left - which is off the board). 0 - 18 = -18 & 0x88 = 0x88\n   *    (because of two-complement representation of -18). The non-zero result\n   *    means the square is off the board and the move is illegal. Take the\n   *    opposite move (from A8 to C7), 0 + 18 = 18 & 0x88 = 0. A result of zero\n   *    means the square is on the board.\n   *\n   * 2. The relative distance (or difference) between two squares on a 8x16 board\n   *    is unique and can be used to inexpensively determine if a piece on a\n   *    square can attack any other arbitrary square. For example, let's see if a\n   *    pawn on E7 can attack E2. The difference between E7 (20) - E2 (100) is\n   *    -80. We add 119 to make the ATTACKS array index non-negative (because the\n   *    worst case difference is A8 - H1 = -119). The ATTACKS array contains a\n   *    bitmask of pieces that can attack from that distance and direction.\n   *    ATTACKS[-80 + 119=39] gives us 24 or 0b11000 in binary. Look at the\n   *    PIECE_MASKS map to determine the mask for a given piece type. In our pawn\n   *    example, we would check to see if 24 & 0x1 is non-zero, which it is\n   *    not. So, naturally, a pawn on E7 can't attack a piece on E2. However, a\n   *    rook can since 24 & 0x8 is non-zero. The only thing left to check is that\n   *    there are no blocking pieces between E7 and E2. That's where the RAYS\n   *    array comes in. It provides an offset (in this case 16) to add to E7 (20)\n   *    to check for blocking pieces. E7 (20) + 16 = E6 (36) + 16 = E5 (52) etc.\n   */\n  // prettier-ignore\n  // eslint-disable-next-line\n  const Ox88 = {\n    a8: 0,\n    b8: 1,\n    c8: 2,\n    d8: 3,\n    e8: 4,\n    f8: 5,\n    g8: 6,\n    h8: 7,\n    a7: 16,\n    b7: 17,\n    c7: 18,\n    d7: 19,\n    e7: 20,\n    f7: 21,\n    g7: 22,\n    h7: 23,\n    a6: 32,\n    b6: 33,\n    c6: 34,\n    d6: 35,\n    e6: 36,\n    f6: 37,\n    g6: 38,\n    h6: 39,\n    a5: 48,\n    b5: 49,\n    c5: 50,\n    d5: 51,\n    e5: 52,\n    f5: 53,\n    g5: 54,\n    h5: 55,\n    a4: 64,\n    b4: 65,\n    c4: 66,\n    d4: 67,\n    e4: 68,\n    f4: 69,\n    g4: 70,\n    h4: 71,\n    a3: 80,\n    b3: 81,\n    c3: 82,\n    d3: 83,\n    e3: 84,\n    f3: 85,\n    g3: 86,\n    h3: 87,\n    a2: 96,\n    b2: 97,\n    c2: 98,\n    d2: 99,\n    e2: 100,\n    f2: 101,\n    g2: 102,\n    h2: 103,\n    a1: 112,\n    b1: 113,\n    c1: 114,\n    d1: 115,\n    e1: 116,\n    f1: 117,\n    g1: 118,\n    h1: 119\n  };\n  const PAWN_OFFSETS = {\n    b: [16, 32, 17, 15],\n    w: [-16, -32, -17, -15]\n  };\n  const PIECE_OFFSETS = {\n    n: [-18, -33, -31, -14, 18, 33, 31, 14],\n    b: [-17, -15, 17, 15],\n    r: [-16, 1, 16, -1],\n    q: [-17, -16, -15, 1, 17, 16, 15, -1],\n    k: [-17, -16, -15, 1, 17, 16, 15, -1]\n  };\n  // prettier-ignore\n  const ATTACKS = [20, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 20, 0, 0, 20, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 20, 0, 0, 0, 0, 24, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 24, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 24, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 2, 24, 2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 53, 56, 53, 2, 0, 0, 0, 0, 0, 0, 24, 24, 24, 24, 24, 24, 56, 0, 56, 24, 24, 24, 24, 24, 24, 0, 0, 0, 0, 0, 0, 2, 53, 56, 53, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 2, 24, 2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 24, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 24, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 24, 0, 0, 0, 0, 20, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 20, 0, 0, 20, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 20];\n  // prettier-ignore\n  const RAYS = [17, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 15, 0, 0, 17, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 17, 0, 0, 0, 0, 16, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 16, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 16, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 16, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 16, 15, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, -15, -16, -17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -15, 0, -16, 0, -17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -15, 0, 0, -16, 0, 0, -17, 0, 0, 0, 0, 0, 0, 0, 0, -15, 0, 0, 0, -16, 0, 0, 0, -17, 0, 0, 0, 0, 0, 0, -15, 0, 0, 0, 0, -16, 0, 0, 0, 0, -17, 0, 0, 0, 0, -15, 0, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, -17, 0, 0, -15, 0, 0, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, 0, -17];\n  const PIECE_MASKS = {\n    p: 0x1,\n    n: 0x2,\n    b: 0x4,\n    r: 0x8,\n    q: 0x10,\n    k: 0x20\n  };\n  const SYMBOLS = 'pnbrqkPNBRQK';\n  const PROMOTIONS = [KNIGHT, BISHOP, ROOK, QUEEN];\n  const RANK_1 = 7;\n  const RANK_2 = 6;\n  /*\n   * const RANK_3 = 5\n   * const RANK_4 = 4\n   * const RANK_5 = 3\n   * const RANK_6 = 2\n   */\n  const RANK_7 = 1;\n  const RANK_8 = 0;\n  const SIDES = {\n    [KING]: BITS.KSIDE_CASTLE,\n    [QUEEN]: BITS.QSIDE_CASTLE\n  };\n  const ROOKS = {\n    w: [{\n      square: Ox88.a1,\n      flag: BITS.QSIDE_CASTLE\n    }, {\n      square: Ox88.h1,\n      flag: BITS.KSIDE_CASTLE\n    }],\n    b: [{\n      square: Ox88.a8,\n      flag: BITS.QSIDE_CASTLE\n    }, {\n      square: Ox88.h8,\n      flag: BITS.KSIDE_CASTLE\n    }]\n  };\n  const SECOND_RANK = {\n    b: RANK_7,\n    w: RANK_2\n  };\n  const SAN_NULLMOVE = '--';\n  // Extracts the zero-based rank of an 0x88 square.\n  function rank(square) {\n    return square >> 4;\n  }\n  // Extracts the zero-based file of an 0x88 square.\n  function file(square) {\n    return square & 0xf;\n  }\n  function isDigit(c) {\n    return '0123456789'.indexOf(c) !== -1;\n  }\n  // Converts a 0x88 square to algebraic notation.\n  function algebraic(square) {\n    const f = file(square);\n    const r = rank(square);\n    return 'abcdefgh'.substring(f, f + 1) + '87654321'.substring(r, r + 1);\n  }\n  function swapColor(color) {\n    return color === WHITE ? BLACK : WHITE;\n  }\n  function validateFen(fen) {\n    // 1st criterion: 6 space-seperated fields?\n    const tokens = fen.split(/\\s+/);\n    if (tokens.length !== 6) {\n      return {\n        ok: false,\n        error: 'Invalid FEN: must contain six space-delimited fields'\n      };\n    }\n    // 2nd criterion: move number field is a integer value > 0?\n    const moveNumber = parseInt(tokens[5], 10);\n    if (isNaN(moveNumber) || moveNumber <= 0) {\n      return {\n        ok: false,\n        error: 'Invalid FEN: move number must be a positive integer'\n      };\n    }\n    // 3rd criterion: half move counter is an integer >= 0?\n    const halfMoves = parseInt(tokens[4], 10);\n    if (isNaN(halfMoves) || halfMoves < 0) {\n      return {\n        ok: false,\n        error: 'Invalid FEN: half move counter number must be a non-negative integer'\n      };\n    }\n    // 4th criterion: 4th field is a valid e.p.-string?\n    if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) {\n      return {\n        ok: false,\n        error: 'Invalid FEN: en-passant square is invalid'\n      };\n    }\n    // 5th criterion: 3th field is a valid castle-string?\n    if (/[^kKqQ-]/.test(tokens[2])) {\n      return {\n        ok: false,\n        error: 'Invalid FEN: castling availability is invalid'\n      };\n    }\n    // 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)?\n    if (!/^(w|b)$/.test(tokens[1])) {\n      return {\n        ok: false,\n        error: 'Invalid FEN: side-to-move is invalid'\n      };\n    }\n    // 7th criterion: 1st field contains 8 rows?\n    const rows = tokens[0].split('/');\n    if (rows.length !== 8) {\n      return {\n        ok: false,\n        error: \"Invalid FEN: piece data does not contain 8 '/'-delimited rows\"\n      };\n    }\n    // 8th criterion: every row is valid?\n    for (let i = 0; i < rows.length; i++) {\n      // check for right sum of fields AND not two numbers in succession\n      let sumFields = 0;\n      let previousWasNumber = false;\n      for (let k = 0; k < rows[i].length; k++) {\n        if (isDigit(rows[i][k])) {\n          if (previousWasNumber) {\n            return {\n              ok: false,\n              error: 'Invalid FEN: piece data is invalid (consecutive number)'\n            };\n          }\n          sumFields += parseInt(rows[i][k], 10);\n          previousWasNumber = true;\n        } else {\n          if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) {\n            return {\n              ok: false,\n              error: 'Invalid FEN: piece data is invalid (invalid piece)'\n            };\n          }\n          sumFields += 1;\n          previousWasNumber = false;\n        }\n      }\n      if (sumFields !== 8) {\n        return {\n          ok: false,\n          error: 'Invalid FEN: piece data is invalid (too many squares in rank)'\n        };\n      }\n    }\n    // 9th criterion: is en-passant square legal?\n    if (tokens[3][1] == '3' && tokens[1] == 'w' || tokens[3][1] == '6' && tokens[1] == 'b') {\n      return {\n        ok: false,\n        error: 'Invalid FEN: illegal en-passant square'\n      };\n    }\n    // 10th criterion: does chess position contain exact two kings?\n    const kings = [{\n      color: 'white',\n      regex: /K/g\n    }, {\n      color: 'black',\n      regex: /k/g\n    }];\n    for (const {\n      color,\n      regex\n    } of kings) {\n      if (!regex.test(tokens[0])) {\n        return {\n          ok: false,\n          error: `Invalid FEN: missing ${color} king`\n        };\n      }\n      if ((tokens[0].match(regex) || []).length > 1) {\n        return {\n          ok: false,\n          error: `Invalid FEN: too many ${color} kings`\n        };\n      }\n    }\n    // 11th criterion: are any pawns on the first or eighth rows?\n    if (Array.from(rows[0] + rows[7]).some(char => char.toUpperCase() === 'P')) {\n      return {\n        ok: false,\n        error: 'Invalid FEN: some pawns are on the edge rows'\n      };\n    }\n    return {\n      ok: true\n    };\n  }\n  // this function is used to uniquely identify ambiguous moves\n  function getDisambiguator(move, moves) {\n    const from = move.from;\n    const to = move.to;\n    const piece = move.piece;\n    let ambiguities = 0;\n    let sameRank = 0;\n    let sameFile = 0;\n    for (let i = 0, len = moves.length; i < len; i++) {\n      const ambigFrom = moves[i].from;\n      const ambigTo = moves[i].to;\n      const ambigPiece = moves[i].piece;\n      /*\n       * if a move of the same piece type ends on the same to square, we'll need\n       * to add a disambiguator to the algebraic notation\n       */\n      if (piece === ambigPiece && from !== ambigFrom && to === ambigTo) {\n        ambiguities++;\n        if (rank(from) === rank(ambigFrom)) {\n          sameRank++;\n        }\n        if (file(from) === file(ambigFrom)) {\n          sameFile++;\n        }\n      }\n    }\n    if (ambiguities > 0) {\n      if (sameRank > 0 && sameFile > 0) {\n        /*\n         * if there exists a similar moving piece on the same rank and file as\n         * the move in question, use the square as the disambiguator\n         */\n        return algebraic(from);\n      } else if (sameFile > 0) {\n        /*\n         * if the moving piece rests on the same file, use the rank symbol as the\n         * disambiguator\n         */\n        return algebraic(from).charAt(1);\n      } else {\n        // else use the file symbol\n        return algebraic(from).charAt(0);\n      }\n    }\n    return '';\n  }\n  function addMove(moves, color, from, to, piece, captured = undefined, flags = BITS.NORMAL) {\n    const r = rank(to);\n    if (piece === PAWN && (r === RANK_1 || r === RANK_8)) {\n      for (let i = 0; i < PROMOTIONS.length; i++) {\n        const promotion = PROMOTIONS[i];\n        moves.push({\n          color,\n          from,\n          to,\n          piece,\n          captured,\n          promotion,\n          flags: flags | BITS.PROMOTION\n        });\n      }\n    } else {\n      moves.push({\n        color,\n        from,\n        to,\n        piece,\n        captured,\n        flags\n      });\n    }\n  }\n  function inferPieceType(san) {\n    let pieceType = san.charAt(0);\n    if (pieceType >= 'a' && pieceType <= 'h') {\n      const matches = san.match(/[a-h]\\d.*[a-h]\\d/);\n      if (matches) {\n        return undefined;\n      }\n      return PAWN;\n    }\n    pieceType = pieceType.toLowerCase();\n    if (pieceType === 'o') {\n      return KING;\n    }\n    return pieceType;\n  }\n  // parses all of the decorators out of a SAN string\n  function strippedSan(move) {\n    return move.replace(/=/, '').replace(/[+#]?[?!]*$/, '');\n  }\n  class Chess {\n    _board = new Array(128);\n    _turn = WHITE;\n    _header = {};\n    _kings = {\n      w: EMPTY,\n      b: EMPTY\n    };\n    _epSquare = -1;\n    _halfMoves = 0;\n    _moveNumber = 0;\n    _history = [];\n    _comments = {};\n    _castling = {\n      w: 0,\n      b: 0\n    };\n    _hash = 0n;\n    // tracks number of times a position has been seen for repetition checking\n    _positionCount = new Map();\n    constructor(fen = DEFAULT_POSITION, {\n      skipValidation = false\n    } = {}) {\n      this.load(fen, {\n        skipValidation\n      });\n    }\n    clear({\n      preserveHeaders = false\n    } = {}) {\n      this._board = new Array(128);\n      this._kings = {\n        w: EMPTY,\n        b: EMPTY\n      };\n      this._turn = WHITE;\n      this._castling = {\n        w: 0,\n        b: 0\n      };\n      this._epSquare = EMPTY;\n      this._halfMoves = 0;\n      this._moveNumber = 1;\n      this._history = [];\n      this._comments = {};\n      this._header = preserveHeaders ? this._header : {\n        ...HEADER_TEMPLATE\n      };\n      this._hash = this._computeHash();\n      this._positionCount = new Map();\n      /*\n       * Delete the SetUp and FEN headers (if preserved), the board is empty and\n       * these headers don't make sense in this state. They'll get added later\n       * via .load() or .put()\n       */\n      this._header['SetUp'] = null;\n      this._header['FEN'] = null;\n    }\n    load(fen, {\n      skipValidation = false,\n      preserveHeaders = false\n    } = {}) {\n      let tokens = fen.split(/\\s+/);\n      // append commonly omitted fen tokens\n      if (tokens.length >= 2 && tokens.length < 6) {\n        const adjustments = ['-', '-', '0', '1'];\n        fen = tokens.concat(adjustments.slice(-(6 - tokens.length))).join(' ');\n      }\n      tokens = fen.split(/\\s+/);\n      if (!skipValidation) {\n        const {\n          ok,\n          error\n        } = validateFen(fen);\n        if (!ok) {\n          throw new Error(error);\n        }\n      }\n      const position = tokens[0];\n      let square = 0;\n      this.clear({\n        preserveHeaders\n      });\n      for (let i = 0; i < position.length; i++) {\n        const piece = position.charAt(i);\n        if (piece === '/') {\n          square += 8;\n        } else if (isDigit(piece)) {\n          square += parseInt(piece, 10);\n        } else {\n          const color = piece < 'a' ? WHITE : BLACK;\n          this._put({\n            type: piece.toLowerCase(),\n            color\n          }, algebraic(square));\n          square++;\n        }\n      }\n      this._turn = tokens[1];\n      if (tokens[2].indexOf('K') > -1) {\n        this._castling.w |= BITS.KSIDE_CASTLE;\n      }\n      if (tokens[2].indexOf('Q') > -1) {\n        this._castling.w |= BITS.QSIDE_CASTLE;\n      }\n      if (tokens[2].indexOf('k') > -1) {\n        this._castling.b |= BITS.KSIDE_CASTLE;\n      }\n      if (tokens[2].indexOf('q') > -1) {\n        this._castling.b |= BITS.QSIDE_CASTLE;\n      }\n      this._epSquare = tokens[3] === '-' ? EMPTY : Ox88[tokens[3]];\n      this._halfMoves = parseInt(tokens[4], 10);\n      this._moveNumber = parseInt(tokens[5], 10);\n      this._hash = this._computeHash();\n      this._updateSetup(fen);\n      this._incPositionCount();\n    }\n    fen({\n      forceEnpassantSquare = false\n    } = {}) {\n      let empty = 0;\n      let fen = '';\n      for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n        if (this._board[i]) {\n          if (empty > 0) {\n            fen += empty;\n            empty = 0;\n          }\n          const {\n            color,\n            type: piece\n          } = this._board[i];\n          fen += color === WHITE ? piece.toUpperCase() : piece.toLowerCase();\n        } else {\n          empty++;\n        }\n        if (i + 1 & 0x88) {\n          if (empty > 0) {\n            fen += empty;\n          }\n          if (i !== Ox88.h1) {\n            fen += '/';\n          }\n          empty = 0;\n          i += 8;\n        }\n      }\n      let castling = '';\n      if (this._castling[WHITE] & BITS.KSIDE_CASTLE) {\n        castling += 'K';\n      }\n      if (this._castling[WHITE] & BITS.QSIDE_CASTLE) {\n        castling += 'Q';\n      }\n      if (this._castling[BLACK] & BITS.KSIDE_CASTLE) {\n        castling += 'k';\n      }\n      if (this._castling[BLACK] & BITS.QSIDE_CASTLE) {\n        castling += 'q';\n      }\n      // do we have an empty castling flag?\n      castling = castling || '-';\n      let epSquare = '-';\n      /*\n       * only print the ep square if en passant is a valid move (pawn is present\n       * and ep capture is not pinned)\n       */\n      if (this._epSquare !== EMPTY) {\n        if (forceEnpassantSquare) {\n          epSquare = algebraic(this._epSquare);\n        } else {\n          const bigPawnSquare = this._epSquare + (this._turn === WHITE ? 16 : -16);\n          const squares = [bigPawnSquare + 1, bigPawnSquare - 1];\n          for (const square of squares) {\n            // is the square off the board?\n            if (square & 0x88) {\n              continue;\n            }\n            const color = this._turn;\n            // is there a pawn that can capture the epSquare?\n            if (this._board[square]?.color === color && this._board[square]?.type === PAWN) {\n              // if the pawn makes an ep capture, does it leave its king in check?\n              this._makeMove({\n                color,\n                from: square,\n                to: this._epSquare,\n                piece: PAWN,\n                captured: PAWN,\n                flags: BITS.EP_CAPTURE\n              });\n              const isLegal = !this._isKingAttacked(color);\n              this._undoMove();\n              // if ep is legal, break and set the ep square in the FEN output\n              if (isLegal) {\n                epSquare = algebraic(this._epSquare);\n                break;\n              }\n            }\n          }\n        }\n      }\n      return [fen, this._turn, castling, epSquare, this._halfMoves, this._moveNumber].join(' ');\n    }\n    _pieceKey(i) {\n      if (!this._board[i]) {\n        return 0n;\n      }\n      const {\n        color,\n        type\n      } = this._board[i];\n      const colorIndex = {\n        w: 0,\n        b: 1\n      }[color];\n      const typeIndex = {\n        p: 0,\n        n: 1,\n        b: 2,\n        r: 3,\n        q: 4,\n        k: 5\n      }[type];\n      return PIECE_KEYS[colorIndex][typeIndex][i];\n    }\n    _epKey() {\n      return this._epSquare === EMPTY ? 0n : EP_KEYS[this._epSquare & 7];\n    }\n    _castlingKey() {\n      const index = this._castling.w >> 5 | this._castling.b >> 3;\n      return CASTLING_KEYS[index];\n    }\n    _computeHash() {\n      let hash = 0n;\n      for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n        // did we run off the end of the board\n        if (i & 0x88) {\n          i += 7;\n          continue;\n        }\n        if (this._board[i]) {\n          hash ^= this._pieceKey(i);\n        }\n      }\n      hash ^= this._epKey();\n      hash ^= this._castlingKey();\n      if (this._turn === 'b') {\n        hash ^= SIDE_KEY;\n      }\n      return hash;\n    }\n    /*\n     * Called when the initial board setup is changed with put() or remove().\n     * modifies the SetUp and FEN properties of the header object. If the FEN\n     * is equal to the default position, the SetUp and FEN are deleted the setup\n     * is only updated if history.length is zero, ie moves haven't been made.\n     */\n    _updateSetup(fen) {\n      if (this._history.length > 0) return;\n      if (fen !== DEFAULT_POSITION) {\n        this._header['SetUp'] = '1';\n        this._header['FEN'] = fen;\n      } else {\n        this._header['SetUp'] = null;\n        this._header['FEN'] = null;\n      }\n    }\n    reset() {\n      this.load(DEFAULT_POSITION);\n    }\n    get(square) {\n      return this._board[Ox88[square]];\n    }\n    findPiece(piece) {\n      const squares = [];\n      for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n        // did we run off the end of the board\n        if (i & 0x88) {\n          i += 7;\n          continue;\n        }\n        // if empty square or wrong color\n        if (!this._board[i] || this._board[i]?.color !== piece.color) {\n          continue;\n        }\n        // check if square contains the requested piece\n        if (this._board[i].color === piece.color && this._board[i].type === piece.type) {\n          squares.push(algebraic(i));\n        }\n      }\n      return squares;\n    }\n    put({\n      type,\n      color\n    }, square) {\n      if (this._put({\n        type,\n        color\n      }, square)) {\n        this._updateCastlingRights();\n        this._updateEnPassantSquare();\n        this._updateSetup(this.fen());\n        return true;\n      }\n      return false;\n    }\n    _set(sq, piece) {\n      this._hash ^= this._pieceKey(sq);\n      this._board[sq] = piece;\n      this._hash ^= this._pieceKey(sq);\n    }\n    _put({\n      type,\n      color\n    }, square) {\n      // check for piece\n      if (SYMBOLS.indexOf(type.toLowerCase()) === -1) {\n        return false;\n      }\n      // check for valid square\n      if (!(square in Ox88)) {\n        return false;\n      }\n      const sq = Ox88[square];\n      // don't let the user place more than one king\n      if (type == KING && !(this._kings[color] == EMPTY || this._kings[color] == sq)) {\n        return false;\n      }\n      const currentPieceOnSquare = this._board[sq];\n      // if one of the kings will be replaced by the piece from args, set the `_kings` respective entry to `EMPTY`\n      if (currentPieceOnSquare && currentPieceOnSquare.type === KING) {\n        this._kings[currentPieceOnSquare.color] = EMPTY;\n      }\n      this._set(sq, {\n        type: type,\n        color: color\n      });\n      if (type === KING) {\n        this._kings[color] = sq;\n      }\n      return true;\n    }\n    _clear(sq) {\n      this._hash ^= this._pieceKey(sq);\n      delete this._board[sq];\n    }\n    remove(square) {\n      const piece = this.get(square);\n      this._clear(Ox88[square]);\n      if (piece && piece.type === KING) {\n        this._kings[piece.color] = EMPTY;\n      }\n      this._updateCastlingRights();\n      this._updateEnPassantSquare();\n      this._updateSetup(this.fen());\n      return piece;\n    }\n    _updateCastlingRights() {\n      this._hash ^= this._castlingKey();\n      const whiteKingInPlace = this._board[Ox88.e1]?.type === KING && this._board[Ox88.e1]?.color === WHITE;\n      const blackKingInPlace = this._board[Ox88.e8]?.type === KING && this._board[Ox88.e8]?.color === BLACK;\n      if (!whiteKingInPlace || this._board[Ox88.a1]?.type !== ROOK || this._board[Ox88.a1]?.color !== WHITE) {\n        this._castling.w &= -65;\n      }\n      if (!whiteKingInPlace || this._board[Ox88.h1]?.type !== ROOK || this._board[Ox88.h1]?.color !== WHITE) {\n        this._castling.w &= -33;\n      }\n      if (!blackKingInPlace || this._board[Ox88.a8]?.type !== ROOK || this._board[Ox88.a8]?.color !== BLACK) {\n        this._castling.b &= -65;\n      }\n      if (!blackKingInPlace || this._board[Ox88.h8]?.type !== ROOK || this._board[Ox88.h8]?.color !== BLACK) {\n        this._castling.b &= -33;\n      }\n      this._hash ^= this._castlingKey();\n    }\n    _updateEnPassantSquare() {\n      if (this._epSquare === EMPTY) {\n        return;\n      }\n      const startSquare = this._epSquare + (this._turn === WHITE ? -16 : 16);\n      const currentSquare = this._epSquare + (this._turn === WHITE ? 16 : -16);\n      const attackers = [currentSquare + 1, currentSquare - 1];\n      if (this._board[startSquare] !== null || this._board[this._epSquare] !== null || this._board[currentSquare]?.color !== swapColor(this._turn) || this._board[currentSquare]?.type !== PAWN) {\n        this._hash ^= this._epKey();\n        this._epSquare = EMPTY;\n        return;\n      }\n      const canCapture = square => !(square & 0x88) && this._board[square]?.color === this._turn && this._board[square]?.type === PAWN;\n      if (!attackers.some(canCapture)) {\n        this._hash ^= this._epKey();\n        this._epSquare = EMPTY;\n      }\n    }\n    _attacked(color, square, verbose) {\n      const attackers = [];\n      for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n        // did we run off the end of the board\n        if (i & 0x88) {\n          i += 7;\n          continue;\n        }\n        // if empty square or wrong color\n        if (this._board[i] === undefined || this._board[i].color !== color) {\n          continue;\n        }\n        const piece = this._board[i];\n        const difference = i - square;\n        // skip - to/from square are the same\n        if (difference === 0) {\n          continue;\n        }\n        const index = difference + 119;\n        if (ATTACKS[index] & PIECE_MASKS[piece.type]) {\n          if (piece.type === PAWN) {\n            if (difference > 0 && piece.color === WHITE || difference <= 0 && piece.color === BLACK) {\n              if (!verbose) {\n                return true;\n              } else {\n                attackers.push(algebraic(i));\n              }\n            }\n            continue;\n          }\n          // if the piece is a knight or a king\n          if (piece.type === 'n' || piece.type === 'k') {\n            if (!verbose) {\n              return true;\n            } else {\n              attackers.push(algebraic(i));\n              continue;\n            }\n          }\n          const offset = RAYS[index];\n          let j = i + offset;\n          let blocked = false;\n          while (j !== square) {\n            if (this._board[j] != null) {\n              blocked = true;\n              break;\n            }\n            j += offset;\n          }\n          if (!blocked) {\n            if (!verbose) {\n              return true;\n            } else {\n              attackers.push(algebraic(i));\n              continue;\n            }\n          }\n        }\n      }\n      if (verbose) {\n        return attackers;\n      } else {\n        return false;\n      }\n    }\n    attackers(square, attackedBy) {\n      if (!attackedBy) {\n        return this._attacked(this._turn, Ox88[square], true);\n      } else {\n        return this._attacked(attackedBy, Ox88[square], true);\n      }\n    }\n    _isKingAttacked(color) {\n      const square = this._kings[color];\n      return square === -1 ? false : this._attacked(swapColor(color), square);\n    }\n    hash() {\n      return this._hash.toString(16);\n    }\n    isAttacked(square, attackedBy) {\n      return this._attacked(attackedBy, Ox88[square]);\n    }\n    isCheck() {\n      return this._isKingAttacked(this._turn);\n    }\n    inCheck() {\n      return this.isCheck();\n    }\n    isCheckmate() {\n      return this.isCheck() && this._moves().length === 0;\n    }\n    isStalemate() {\n      return !this.isCheck() && this._moves().length === 0;\n    }\n    isInsufficientMaterial() {\n      /*\n       * k.b. vs k.b. (of opposite colors) with mate in 1:\n       * 8/8/8/8/1b6/8/B1k5/K7 b - - 0 1\n       *\n       * k.b. vs k.n. with mate in 1:\n       * 8/8/8/8/1n6/8/B7/K1k5 b - - 2 1\n       */\n      const pieces = {\n        b: 0,\n        n: 0,\n        r: 0,\n        q: 0,\n        k: 0,\n        p: 0\n      };\n      const bishops = [];\n      let numPieces = 0;\n      let squareColor = 0;\n      for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n        squareColor = (squareColor + 1) % 2;\n        if (i & 0x88) {\n          i += 7;\n          continue;\n        }\n        const piece = this._board[i];\n        if (piece) {\n          pieces[piece.type] = piece.type in pieces ? pieces[piece.type] + 1 : 1;\n          if (piece.type === BISHOP) {\n            bishops.push(squareColor);\n          }\n          numPieces++;\n        }\n      }\n      // k vs. k\n      if (numPieces === 2) {\n        return true;\n      } else if (\n      // k vs. kn .... or .... k vs. kb\n      numPieces === 3 && (pieces[BISHOP] === 1 || pieces[KNIGHT] === 1)) {\n        return true;\n      } else if (numPieces === pieces[BISHOP] + 2) {\n        // kb vs. kb where any number of bishops are all on the same color\n        let sum = 0;\n        const len = bishops.length;\n        for (let i = 0; i < len; i++) {\n          sum += bishops[i];\n        }\n        if (sum === 0 || sum === len) {\n          return true;\n        }\n      }\n      return false;\n    }\n    isThreefoldRepetition() {\n      return this._getPositionCount(this._hash) >= 3;\n    }\n    isDrawByFiftyMoves() {\n      return this._halfMoves >= 100; // 50 moves per side = 100 half moves\n    }\n    isDraw() {\n      return this.isDrawByFiftyMoves() || this.isStalemate() || this.isInsufficientMaterial() || this.isThreefoldRepetition();\n    }\n    isGameOver() {\n      return this.isCheckmate() || this.isDraw();\n    }\n    moves({\n      verbose = false,\n      square = undefined,\n      piece = undefined\n    } = {}) {\n      const moves = this._moves({\n        square,\n        piece\n      });\n      if (verbose) {\n        return moves.map(move => new Move(this, move));\n      } else {\n        return moves.map(move => this._moveToSan(move, moves));\n      }\n    }\n    _moves({\n      legal = true,\n      piece = undefined,\n      square = undefined\n    } = {}) {\n      const forSquare = square ? square.toLowerCase() : undefined;\n      const forPiece = piece?.toLowerCase();\n      const moves = [];\n      const us = this._turn;\n      const them = swapColor(us);\n      let firstSquare = Ox88.a8;\n      let lastSquare = Ox88.h1;\n      let singleSquare = false;\n      // are we generating moves for a single square?\n      if (forSquare) {\n        // illegal square, return empty moves\n        if (!(forSquare in Ox88)) {\n          return [];\n        } else {\n          firstSquare = lastSquare = Ox88[forSquare];\n          singleSquare = true;\n        }\n      }\n      for (let from = firstSquare; from <= lastSquare; from++) {\n        // did we run off the end of the board\n        if (from & 0x88) {\n          from += 7;\n          continue;\n        }\n        // empty square or opponent, skip\n        if (!this._board[from] || this._board[from].color === them) {\n          continue;\n        }\n        const {\n          type\n        } = this._board[from];\n        let to;\n        if (type === PAWN) {\n          if (forPiece && forPiece !== type) continue;\n          // single square, non-capturing\n          to = from + PAWN_OFFSETS[us][0];\n          if (!this._board[to]) {\n            addMove(moves, us, from, to, PAWN);\n            // double square\n            to = from + PAWN_OFFSETS[us][1];\n            if (SECOND_RANK[us] === rank(from) && !this._board[to]) {\n              addMove(moves, us, from, to, PAWN, undefined, BITS.BIG_PAWN);\n            }\n          }\n          // pawn captures\n          for (let j = 2; j < 4; j++) {\n            to = from + PAWN_OFFSETS[us][j];\n            if (to & 0x88) continue;\n            if (this._board[to]?.color === them) {\n              addMove(moves, us, from, to, PAWN, this._board[to].type, BITS.CAPTURE);\n            } else if (to === this._epSquare) {\n              addMove(moves, us, from, to, PAWN, PAWN, BITS.EP_CAPTURE);\n            }\n          }\n        } else {\n          if (forPiece && forPiece !== type) continue;\n          for (let j = 0, len = PIECE_OFFSETS[type].length; j < len; j++) {\n            const offset = PIECE_OFFSETS[type][j];\n            to = from;\n            while (true) {\n              to += offset;\n              if (to & 0x88) break;\n              if (!this._board[to]) {\n                addMove(moves, us, from, to, type);\n              } else {\n                // own color, stop loop\n                if (this._board[to].color === us) break;\n                addMove(moves, us, from, to, type, this._board[to].type, BITS.CAPTURE);\n                break;\n              }\n              /* break, if knight or king */\n              if (type === KNIGHT || type === KING) break;\n            }\n          }\n        }\n      }\n      /*\n       * check for castling if we're:\n       *   a) generating all moves, or\n       *   b) doing single square move generation on the king's square\n       */\n      if (forPiece === undefined || forPiece === KING) {\n        if (!singleSquare || lastSquare === this._kings[us]) {\n          // king-side castling\n          if (this._castling[us] & BITS.KSIDE_CASTLE) {\n            const castlingFrom = this._kings[us];\n            const castlingTo = castlingFrom + 2;\n            if (!this._board[castlingFrom + 1] && !this._board[castlingTo] && !this._attacked(them, this._kings[us]) && !this._attacked(them, castlingFrom + 1) && !this._attacked(them, castlingTo)) {\n              addMove(moves, us, this._kings[us], castlingTo, KING, undefined, BITS.KSIDE_CASTLE);\n            }\n          }\n          // queen-side castling\n          if (this._castling[us] & BITS.QSIDE_CASTLE) {\n            const castlingFrom = this._kings[us];\n            const castlingTo = castlingFrom - 2;\n            if (!this._board[castlingFrom - 1] && !this._board[castlingFrom - 2] && !this._board[castlingFrom - 3] && !this._attacked(them, this._kings[us]) && !this._attacked(them, castlingFrom - 1) && !this._attacked(them, castlingTo)) {\n              addMove(moves, us, this._kings[us], castlingTo, KING, undefined, BITS.QSIDE_CASTLE);\n            }\n          }\n        }\n      }\n      /*\n       * return all pseudo-legal moves (this includes moves that allow the king\n       * to be captured)\n       */\n      if (!legal || this._kings[us] === -1) {\n        return moves;\n      }\n      // filter out illegal moves\n      const legalMoves = [];\n      for (let i = 0, len = moves.length; i < len; i++) {\n        this._makeMove(moves[i]);\n        if (!this._isKingAttacked(us)) {\n          legalMoves.push(moves[i]);\n        }\n        this._undoMove();\n      }\n      return legalMoves;\n    }\n    move(move, {\n      strict = false\n    } = {}) {\n      /*\n       * The move function can be called with in the following parameters:\n       *\n       * .move('Nxb7')       <- argument is a case-sensitive SAN string\n       *\n       * .move({ from: 'h7', <- argument is a move object\n       *         to :'h8',\n       *         promotion: 'q' })\n       *\n       *\n       * An optional strict argument may be supplied to tell chess.js to\n       * strictly follow the SAN specification.\n       */\n      let moveObj = null;\n      if (typeof move === 'string') {\n        moveObj = this._moveFromSan(move, strict);\n      } else if (move === null) {\n        moveObj = this._moveFromSan(SAN_NULLMOVE, strict);\n      } else if (typeof move === 'object') {\n        const moves = this._moves();\n        // convert the pretty move object to an ugly move object\n        for (let i = 0, len = moves.length; i < len; i++) {\n          if (move.from === algebraic(moves[i].from) && move.to === algebraic(moves[i].to) && (!('promotion' in moves[i]) || move.promotion === moves[i].promotion)) {\n            moveObj = moves[i];\n            break;\n          }\n        }\n      }\n      // failed to find move\n      if (!moveObj) {\n        if (typeof move === 'string') {\n          throw new Error(`Invalid move: ${move}`);\n        } else {\n          throw new Error(`Invalid move: ${JSON.stringify(move)}`);\n        }\n      }\n      //disallow null moves when in check\n      if (this.isCheck() && moveObj.flags & BITS.NULL_MOVE) {\n        throw new Error('Null move not allowed when in check');\n      }\n      /*\n       * need to make a copy of move because we can't generate SAN after the move\n       * is made\n       */\n      const prettyMove = new Move(this, moveObj);\n      this._makeMove(moveObj);\n      this._incPositionCount();\n      return prettyMove;\n    }\n    _push(move) {\n      this._history.push({\n        move,\n        kings: {\n          b: this._kings.b,\n          w: this._kings.w\n        },\n        turn: this._turn,\n        castling: {\n          b: this._castling.b,\n          w: this._castling.w\n        },\n        epSquare: this._epSquare,\n        halfMoves: this._halfMoves,\n        moveNumber: this._moveNumber\n      });\n    }\n    _movePiece(from, to) {\n      this._hash ^= this._pieceKey(from);\n      this._board[to] = this._board[from];\n      delete this._board[from];\n      this._hash ^= this._pieceKey(to);\n    }\n    _makeMove(move) {\n      const us = this._turn;\n      const them = swapColor(us);\n      this._push(move);\n      if (move.flags & BITS.NULL_MOVE) {\n        if (us === BLACK) {\n          this._moveNumber++;\n        }\n        this._halfMoves++;\n        this._turn = them;\n        this._epSquare = EMPTY;\n        return;\n      }\n      this._hash ^= this._epKey();\n      this._hash ^= this._castlingKey();\n      if (move.captured) {\n        this._hash ^= this._pieceKey(move.to);\n      }\n      this._movePiece(move.from, move.to);\n      // if ep capture, remove the captured pawn\n      if (move.flags & BITS.EP_CAPTURE) {\n        if (this._turn === BLACK) {\n          this._clear(move.to - 16);\n        } else {\n          this._clear(move.to + 16);\n        }\n      }\n      // if pawn promotion, replace with new piece\n      if (move.promotion) {\n        this._clear(move.to);\n        this._set(move.to, {\n          type: move.promotion,\n          color: us\n        });\n      }\n      // if we moved the king\n      if (this._board[move.to].type === KING) {\n        this._kings[us] = move.to;\n        // if we castled, move the rook next to the king\n        if (move.flags & BITS.KSIDE_CASTLE) {\n          const castlingTo = move.to - 1;\n          const castlingFrom = move.to + 1;\n          this._movePiece(castlingFrom, castlingTo);\n        } else if (move.flags & BITS.QSIDE_CASTLE) {\n          const castlingTo = move.to + 1;\n          const castlingFrom = move.to - 2;\n          this._movePiece(castlingFrom, castlingTo);\n        }\n        // turn off castling\n        this._castling[us] = 0;\n      }\n      // turn off castling if we move a rook\n      if (this._castling[us]) {\n        for (let i = 0, len = ROOKS[us].length; i < len; i++) {\n          if (move.from === ROOKS[us][i].square && this._castling[us] & ROOKS[us][i].flag) {\n            this._castling[us] ^= ROOKS[us][i].flag;\n            break;\n          }\n        }\n      }\n      // turn off castling if we capture a rook\n      if (this._castling[them]) {\n        for (let i = 0, len = ROOKS[them].length; i < len; i++) {\n          if (move.to === ROOKS[them][i].square && this._castling[them] & ROOKS[them][i].flag) {\n            this._castling[them] ^= ROOKS[them][i].flag;\n            break;\n          }\n        }\n      }\n      this._hash ^= this._castlingKey();\n      // if big pawn move, update the en passant square\n      if (move.flags & BITS.BIG_PAWN) {\n        let epSquare;\n        if (us === BLACK) {\n          epSquare = move.to - 16;\n        } else {\n          epSquare = move.to + 16;\n        }\n        if (!(move.to - 1 & 0x88) && this._board[move.to - 1]?.type === PAWN && this._board[move.to - 1]?.color === them || !(move.to + 1 & 0x88) && this._board[move.to + 1]?.type === PAWN && this._board[move.to + 1]?.color === them) {\n          this._epSquare = epSquare;\n          this._hash ^= this._epKey();\n        } else {\n          this._epSquare = EMPTY;\n        }\n      } else {\n        this._epSquare = EMPTY;\n      }\n      // reset the 50 move counter if a pawn is moved or a piece is captured\n      if (move.piece === PAWN) {\n        this._halfMoves = 0;\n      } else if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n        this._halfMoves = 0;\n      } else {\n        this._halfMoves++;\n      }\n      if (us === BLACK) {\n        this._moveNumber++;\n      }\n      this._turn = them;\n      this._hash ^= SIDE_KEY;\n    }\n    undo() {\n      const hash = this._hash;\n      const move = this._undoMove();\n      if (move) {\n        const prettyMove = new Move(this, move);\n        this._decPositionCount(hash);\n        return prettyMove;\n      }\n      return null;\n    }\n    _undoMove() {\n      const old = this._history.pop();\n      if (old === undefined) {\n        return null;\n      }\n      this._hash ^= this._epKey();\n      this._hash ^= this._castlingKey();\n      const move = old.move;\n      this._kings = old.kings;\n      this._turn = old.turn;\n      this._castling = old.castling;\n      this._epSquare = old.epSquare;\n      this._halfMoves = old.halfMoves;\n      this._moveNumber = old.moveNumber;\n      this._hash ^= this._epKey();\n      this._hash ^= this._castlingKey();\n      this._hash ^= SIDE_KEY;\n      const us = this._turn;\n      const them = swapColor(us);\n      if (move.flags & BITS.NULL_MOVE) {\n        return move;\n      }\n      this._movePiece(move.to, move.from);\n      // to undo any promotions\n      if (move.piece) {\n        this._clear(move.from);\n        this._set(move.from, {\n          type: move.piece,\n          color: us\n        });\n      }\n      if (move.captured) {\n        if (move.flags & BITS.EP_CAPTURE) {\n          // en passant capture\n          let index;\n          if (us === BLACK) {\n            index = move.to - 16;\n          } else {\n            index = move.to + 16;\n          }\n          this._set(index, {\n            type: PAWN,\n            color: them\n          });\n        } else {\n          // regular capture\n          this._set(move.to, {\n            type: move.captured,\n            color: them\n          });\n        }\n      }\n      if (move.flags & (BITS.KSIDE_CASTLE | BITS.QSIDE_CASTLE)) {\n        let castlingTo, castlingFrom;\n        if (move.flags & BITS.KSIDE_CASTLE) {\n          castlingTo = move.to + 1;\n          castlingFrom = move.to - 1;\n        } else {\n          castlingTo = move.to - 2;\n          castlingFrom = move.to + 1;\n        }\n        this._movePiece(castlingFrom, castlingTo);\n      }\n      return move;\n    }\n    pgn({\n      newline = '\\n',\n      maxWidth = 0\n    } = {}) {\n      /*\n       * using the specification from http://www.chessclub.com/help/PGN-spec\n       * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\n       */\n      const result = [];\n      let headerExists = false;\n      /* add the PGN header information */\n      for (const i in this._header) {\n        /*\n         * TODO: order of enumerated properties in header object is not\n         * guaranteed, see ECMA-262 spec (section 12.6.4)\n         *\n         * By using HEADER_TEMPLATE, the order of tags should be preserved; we\n         * do have to check for null placeholders, though, and omit them\n         */\n        const headerTag = this._header[i];\n        if (headerTag) result.push(`[${i} \"${this._header[i]}\"]` + newline);\n        headerExists = true;\n      }\n      if (headerExists && this._history.length) {\n        result.push(newline);\n      }\n      const appendComment = moveString => {\n        const comment = this._comments[this.fen()];\n        if (typeof comment !== 'undefined') {\n          const delimiter = moveString.length > 0 ? ' ' : '';\n          moveString = `${moveString}${delimiter}{${comment}}`;\n        }\n        return moveString;\n      };\n      // pop all of history onto reversed_history\n      const reversedHistory = [];\n      while (this._history.length > 0) {\n        reversedHistory.push(this._undoMove());\n      }\n      const moves = [];\n      let moveString = '';\n      // special case of a commented starting position with no moves\n      if (reversedHistory.length === 0) {\n        moves.push(appendComment(''));\n      }\n      // build the list of moves.  a move_string looks like: \"3. e3 e6\"\n      while (reversedHistory.length > 0) {\n        moveString = appendComment(moveString);\n        const move = reversedHistory.pop();\n        // make TypeScript stop complaining about move being undefined\n        if (!move) {\n          break;\n        }\n        // if the position started with black to move, start PGN with #. ...\n        if (!this._history.length && move.color === 'b') {\n          const prefix = `${this._moveNumber}. ...`;\n          // is there a comment preceding the first move?\n          moveString = moveString ? `${moveString} ${prefix}` : prefix;\n        } else if (move.color === 'w') {\n          // store the previous generated move_string if we have one\n          if (moveString.length) {\n            moves.push(moveString);\n          }\n          moveString = this._moveNumber + '.';\n        }\n        moveString = moveString + ' ' + this._moveToSan(move, this._moves({\n          legal: true\n        }));\n        this._makeMove(move);\n      }\n      // are there any other leftover moves?\n      if (moveString.length) {\n        moves.push(appendComment(moveString));\n      }\n      // is there a result? (there ALWAYS has to be a result according to spec; see Seven Tag Roster)\n      moves.push(this._header.Result || '*');\n      /*\n       * history should be back to what it was before we started generating PGN,\n       * so join together moves\n       */\n      if (maxWidth === 0) {\n        return result.join('') + moves.join(' ');\n      }\n      // TODO (jah): huh?\n      const strip = function () {\n        if (result.length > 0 && result[result.length - 1] === ' ') {\n          result.pop();\n          return true;\n        }\n        return false;\n      };\n      // NB: this does not preserve comment whitespace.\n      const wrapComment = function (width, move) {\n        for (const token of move.split(' ')) {\n          if (!token) {\n            continue;\n          }\n          if (width + token.length > maxWidth) {\n            while (strip()) {\n              width--;\n            }\n            result.push(newline);\n            width = 0;\n          }\n          result.push(token);\n          width += token.length;\n          result.push(' ');\n          width++;\n        }\n        if (strip()) {\n          width--;\n        }\n        return width;\n      };\n      // wrap the PGN output at max_width\n      let currentWidth = 0;\n      for (let i = 0; i < moves.length; i++) {\n        if (currentWidth + moves[i].length > maxWidth) {\n          if (moves[i].includes('{')) {\n            currentWidth = wrapComment(currentWidth, moves[i]);\n            continue;\n          }\n        }\n        // if the current move will push past max_width\n        if (currentWidth + moves[i].length > maxWidth && i !== 0) {\n          // don't end the line with whitespace\n          if (result[result.length - 1] === ' ') {\n            result.pop();\n          }\n          result.push(newline);\n          currentWidth = 0;\n        } else if (i !== 0) {\n          result.push(' ');\n          currentWidth++;\n        }\n        result.push(moves[i]);\n        currentWidth += moves[i].length;\n      }\n      return result.join('');\n    }\n    /**\n     * @deprecated Use `setHeader` and `getHeaders` instead. This method will return null header tags (which is not what you want)\n     */\n    header(...args) {\n      for (let i = 0; i < args.length; i += 2) {\n        if (typeof args[i] === 'string' && typeof args[i + 1] === 'string') {\n          this._header[args[i]] = args[i + 1];\n        }\n      }\n      return this._header;\n    }\n    // TODO: value validation per spec\n    setHeader(key, value) {\n      this._header[key] = value ?? SEVEN_TAG_ROSTER[key] ?? null;\n      return this.getHeaders();\n    }\n    removeHeader(key) {\n      if (key in this._header) {\n        this._header[key] = SEVEN_TAG_ROSTER[key] || null;\n        return true;\n      }\n      return false;\n    }\n    // return only non-null headers (omit placemarker nulls)\n    getHeaders() {\n      const nonNullHeaders = {};\n      for (const [key, value] of Object.entries(this._header)) {\n        if (value !== null) {\n          nonNullHeaders[key] = value;\n        }\n      }\n      return nonNullHeaders;\n    }\n    loadPgn(pgn, {\n      strict = false,\n      newlineChar = '\\r?\\n'\n    } = {}) {\n      // If newlineChar is not the default, replace all instances with \\n\n      if (newlineChar !== '\\r?\\n') {\n        pgn = pgn.replace(new RegExp(newlineChar, 'g'), '\\n');\n      }\n      const parsedPgn = peg$parse(pgn);\n      // Put the board in the starting position\n      this.reset();\n      // parse PGN header\n      const headers = parsedPgn.headers;\n      let fen = '';\n      for (const key in headers) {\n        // check to see user is including fen (possibly with wrong tag case)\n        if (key.toLowerCase() === 'fen') {\n          fen = headers[key];\n        }\n        this.header(key, headers[key]);\n      }\n      /*\n       * the permissive parser should attempt to load a fen tag, even if it's the\n       * wrong case and doesn't include a corresponding [SetUp \"1\"] tag\n       */\n      if (!strict) {\n        if (fen) {\n          this.load(fen, {\n            preserveHeaders: true\n          });\n        }\n      } else {\n        /*\n         * strict parser - load the starting position indicated by [Setup '1']\n         * and [FEN position]\n         */\n        if (headers['SetUp'] === '1') {\n          if (!('FEN' in headers)) {\n            throw new Error('Invalid PGN: FEN tag must be supplied with SetUp tag');\n          }\n          // don't clear the headers when loading\n          this.load(headers['FEN'], {\n            preserveHeaders: true\n          });\n        }\n      }\n      let node = parsedPgn.root;\n      while (node) {\n        if (node.move) {\n          const move = this._moveFromSan(node.move, strict);\n          if (move == null) {\n            throw new Error(`Invalid move in PGN: ${node.move}`);\n          } else {\n            this._makeMove(move);\n            this._incPositionCount();\n          }\n        }\n        if (node.comment !== undefined) {\n          this._comments[this.fen()] = node.comment;\n        }\n        node = node.variations[0];\n      }\n      /*\n       * Per section 8.2.6 of the PGN spec, the Result tag pair must match match\n       * the termination marker. Only do this when headers are present, but the\n       * result tag is missing\n       */\n      const result = parsedPgn.result;\n      if (result && Object.keys(this._header).length && this._header['Result'] !== result) {\n        this.setHeader('Result', result);\n      }\n    }\n    /*\n     * Convert a move from 0x88 coordinates to Standard Algebraic Notation\n     * (SAN)\n     *\n     * @param {boolean} strict Use the strict SAN parser. It will throw errors\n     * on overly disambiguated moves (see below):\n     *\n     * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\n     * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\n     * 4. ... Ne7 is technically the valid SAN\n     */\n    _moveToSan(move, moves) {\n      let output = '';\n      if (move.flags & BITS.KSIDE_CASTLE) {\n        output = 'O-O';\n      } else if (move.flags & BITS.QSIDE_CASTLE) {\n        output = 'O-O-O';\n      } else if (move.flags & BITS.NULL_MOVE) {\n        return SAN_NULLMOVE;\n      } else {\n        if (move.piece !== PAWN) {\n          const disambiguator = getDisambiguator(move, moves);\n          output += move.piece.toUpperCase() + disambiguator;\n        }\n        if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n          if (move.piece === PAWN) {\n            output += algebraic(move.from)[0];\n          }\n          output += 'x';\n        }\n        output += algebraic(move.to);\n        if (move.promotion) {\n          output += '=' + move.promotion.toUpperCase();\n        }\n      }\n      this._makeMove(move);\n      if (this.isCheck()) {\n        if (this.isCheckmate()) {\n          output += '#';\n        } else {\n          output += '+';\n        }\n      }\n      this._undoMove();\n      return output;\n    }\n    // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\n    _moveFromSan(move, strict = false) {\n      // strip off any move decorations: e.g Nf3+?! becomes Nf3\n      let cleanMove = strippedSan(move);\n      if (!strict) {\n        if (cleanMove === '0-0') {\n          cleanMove = 'O-O';\n        } else if (cleanMove === '0-0-0') {\n          cleanMove = 'O-O-O';\n        }\n      }\n      //first implementation of null with a dummy move (black king moves from a8 to a8), maybe this can be implemented better\n      if (cleanMove == SAN_NULLMOVE) {\n        const res = {\n          color: this._turn,\n          from: 0,\n          to: 0,\n          piece: 'k',\n          flags: BITS.NULL_MOVE\n        };\n        return res;\n      }\n      let pieceType = inferPieceType(cleanMove);\n      let moves = this._moves({\n        legal: true,\n        piece: pieceType\n      });\n      // strict parser\n      for (let i = 0, len = moves.length; i < len; i++) {\n        if (cleanMove === strippedSan(this._moveToSan(moves[i], moves))) {\n          return moves[i];\n        }\n      }\n      // the strict parser failed\n      if (strict) {\n        return null;\n      }\n      let piece = undefined;\n      let matches = undefined;\n      let from = undefined;\n      let to = undefined;\n      let promotion = undefined;\n      /*\n       * The default permissive (non-strict) parser allows the user to parse\n       * non-standard chess notations. This parser is only run after the strict\n       * Standard Algebraic Notation (SAN) parser has failed.\n       *\n       * When running the permissive parser, we'll run a regex to grab the piece, the\n       * to/from square, and an optional promotion piece. This regex will\n       * parse common non-standard notation like: Pe2-e4, Rc1c4, Qf3xf7,\n       * f7f8q, b1c3\n       *\n       * NOTE: Some positions and moves may be ambiguous when using the permissive\n       * parser. For example, in this position: 6k1/8/8/B7/8/8/8/BN4K1 w - - 0 1,\n       * the move b1c3 may be interpreted as Nc3 or B1c3 (a disambiguated bishop\n       * move). In these cases, the permissive parser will default to the most\n       * basic interpretation (which is b1c3 parsing to Nc3).\n       */\n      let overlyDisambiguated = false;\n      matches = cleanMove.match(/([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/);\n      if (matches) {\n        piece = matches[1];\n        from = matches[2];\n        to = matches[3];\n        promotion = matches[4];\n        if (from.length == 1) {\n          overlyDisambiguated = true;\n        }\n      } else {\n        /*\n         * The [a-h]?[1-8]? portion of the regex below handles moves that may be\n         * overly disambiguated (e.g. Nge7 is unnecessary and non-standard when\n         * there is one legal knight move to e7). In this case, the value of\n         * 'from' variable will be a rank or file, not a square.\n         */\n        matches = cleanMove.match(/([pnbrqkPNBRQK])?([a-h]?[1-8]?)x?-?([a-h][1-8])([qrbnQRBN])?/);\n        if (matches) {\n          piece = matches[1];\n          from = matches[2];\n          to = matches[3];\n          promotion = matches[4];\n          if (from.length == 1) {\n            overlyDisambiguated = true;\n          }\n        }\n      }\n      pieceType = inferPieceType(cleanMove);\n      moves = this._moves({\n        legal: true,\n        piece: piece ? piece : pieceType\n      });\n      if (!to) {\n        return null;\n      }\n      for (let i = 0, len = moves.length; i < len; i++) {\n        if (!from) {\n          // if there is no from square, it could be just 'x' missing from a capture\n          if (cleanMove === strippedSan(this._moveToSan(moves[i], moves)).replace('x', '')) {\n            return moves[i];\n          }\n          // hand-compare move properties with the results from our permissive regex\n        } else if ((!piece || piece.toLowerCase() == moves[i].piece) && Ox88[from] == moves[i].from && Ox88[to] == moves[i].to && (!promotion || promotion.toLowerCase() == moves[i].promotion)) {\n          return moves[i];\n        } else if (overlyDisambiguated) {\n          /*\n           * SPECIAL CASE: we parsed a move string that may have an unneeded\n           * rank/file disambiguator (e.g. Nge7).  The 'from' variable will\n           */\n          const square = algebraic(moves[i].from);\n          if ((!piece || piece.toLowerCase() == moves[i].piece) && Ox88[to] == moves[i].to && (from == square[0] || from == square[1]) && (!promotion || promotion.toLowerCase() == moves[i].promotion)) {\n            return moves[i];\n          }\n        }\n      }\n      return null;\n    }\n    ascii() {\n      let s = '   +------------------------+\\n';\n      for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n        // display the rank\n        if (file(i) === 0) {\n          s += ' ' + '87654321'[rank(i)] + ' |';\n        }\n        if (this._board[i]) {\n          const piece = this._board[i].type;\n          const color = this._board[i].color;\n          const symbol = color === WHITE ? piece.toUpperCase() : piece.toLowerCase();\n          s += ' ' + symbol + ' ';\n        } else {\n          s += ' . ';\n        }\n        if (i + 1 & 0x88) {\n          s += '|\\n';\n          i += 8;\n        }\n      }\n      s += '   +------------------------+\\n';\n      s += '     a  b  c  d  e  f  g  h';\n      return s;\n    }\n    perft(depth) {\n      const moves = this._moves({\n        legal: false\n      });\n      let nodes = 0;\n      const color = this._turn;\n      for (let i = 0, len = moves.length; i < len; i++) {\n        this._makeMove(moves[i]);\n        if (!this._isKingAttacked(color)) {\n          if (depth - 1 > 0) {\n            nodes += this.perft(depth - 1);\n          } else {\n            nodes++;\n          }\n        }\n        this._undoMove();\n      }\n      return nodes;\n    }\n    setTurn(color) {\n      if (this._turn == color) {\n        return false;\n      }\n      this.move('--');\n      return true;\n    }\n    turn() {\n      return this._turn;\n    }\n    board() {\n      const output = [];\n      let row = [];\n      for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n        if (this._board[i] == null) {\n          row.push(null);\n        } else {\n          row.push({\n            square: algebraic(i),\n            type: this._board[i].type,\n            color: this._board[i].color\n          });\n        }\n        if (i + 1 & 0x88) {\n          output.push(row);\n          row = [];\n          i += 8;\n        }\n      }\n      return output;\n    }\n    squareColor(square) {\n      if (square in Ox88) {\n        const sq = Ox88[square];\n        return (rank(sq) + file(sq)) % 2 === 0 ? 'light' : 'dark';\n      }\n      return null;\n    }\n    history({\n      verbose = false\n    } = {}) {\n      const reversedHistory = [];\n      const moveHistory = [];\n      while (this._history.length > 0) {\n        reversedHistory.push(this._undoMove());\n      }\n      while (true) {\n        const move = reversedHistory.pop();\n        if (!move) {\n          break;\n        }\n        if (verbose) {\n          moveHistory.push(new Move(this, move));\n        } else {\n          moveHistory.push(this._moveToSan(move, this._moves()));\n        }\n        this._makeMove(move);\n      }\n      return moveHistory;\n    }\n    /*\n     * Keeps track of position occurrence counts for the purpose of repetition\n     * checking. Old positions are removed from the map if their counts are reduced to 0.\n     */\n    _getPositionCount(hash) {\n      return this._positionCount.get(hash) ?? 0;\n    }\n    _incPositionCount() {\n      this._positionCount.set(this._hash, (this._positionCount.get(this._hash) ?? 0) + 1);\n    }\n    _decPositionCount(hash) {\n      const currentCount = this._positionCount.get(hash) ?? 0;\n      if (currentCount === 1) {\n        this._positionCount.delete(hash);\n      } else {\n        this._positionCount.set(hash, currentCount - 1);\n      }\n    }\n    _pruneComments() {\n      const reversedHistory = [];\n      const currentComments = {};\n      const copyComment = fen => {\n        if (fen in this._comments) {\n          currentComments[fen] = this._comments[fen];\n        }\n      };\n      while (this._history.length > 0) {\n        reversedHistory.push(this._undoMove());\n      }\n      copyComment(this.fen());\n      while (true) {\n        const move = reversedHistory.pop();\n        if (!move) {\n          break;\n        }\n        this._makeMove(move);\n        copyComment(this.fen());\n      }\n      this._comments = currentComments;\n    }\n    getComment() {\n      return this._comments[this.fen()];\n    }\n    setComment(comment) {\n      this._comments[this.fen()] = comment.replace('{', '[').replace('}', ']');\n    }\n    /**\n     * @deprecated Renamed to `removeComment` for consistency\n     */\n    deleteComment() {\n      return this.removeComment();\n    }\n    removeComment() {\n      const comment = this._comments[this.fen()];\n      delete this._comments[this.fen()];\n      return comment;\n    }\n    getComments() {\n      this._pruneComments();\n      return Object.keys(this._comments).map(fen => {\n        return {\n          fen: fen,\n          comment: this._comments[fen]\n        };\n      });\n    }\n    /**\n     * @deprecated Renamed to `removeComments` for consistency\n     */\n    deleteComments() {\n      return this.removeComments();\n    }\n    removeComments() {\n      this._pruneComments();\n      return Object.keys(this._comments).map(fen => {\n        const comment = this._comments[fen];\n        delete this._comments[fen];\n        return {\n          fen: fen,\n          comment: comment\n        };\n      });\n    }\n    setCastlingRights(color, rights) {\n      for (const side of [KING, QUEEN]) {\n        if (rights[side] !== undefined) {\n          if (rights[side]) {\n            this._castling[color] |= SIDES[side];\n          } else {\n            this._castling[color] &= ~SIDES[side];\n          }\n        }\n      }\n      this._updateCastlingRights();\n      const result = this.getCastlingRights(color);\n      return (rights[KING] === undefined || rights[KING] === result[KING]) && (rights[QUEEN] === undefined || rights[QUEEN] === result[QUEEN]);\n    }\n    getCastlingRights(color) {\n      return {\n        [KING]: (this._castling[color] & SIDES[KING]) !== 0,\n        [QUEEN]: (this._castling[color] & SIDES[QUEEN]) !== 0\n      };\n    }\n    moveNumber() {\n      return this._moveNumber;\n    }\n  }\n  exports.BISHOP = BISHOP;\n  exports.BLACK = BLACK;\n  exports.Chess = Chess;\n  exports.DEFAULT_POSITION = DEFAULT_POSITION;\n  exports.KING = KING;\n  exports.KNIGHT = KNIGHT;\n  exports.Move = Move;\n  exports.PAWN = PAWN;\n  exports.QUEEN = QUEEN;\n  exports.ROOK = ROOK;\n  exports.SEVEN_TAG_ROSTER = SEVEN_TAG_ROSTER;\n  exports.SQUARES = SQUARES;\n  exports.WHITE = WHITE;\n  exports.validateFen = validateFen;\n  exports.xoroshiro128 = xoroshiro128;\n});","lineCount":3454,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,4,0],[6,2,5,0],[7,2,9,2],[7,11,9,11,"rootNode"],[7,19,9,19,"rootNode"],[7,20,9,20,"comment"],[7,27,9,27],[7,29,9,29],[8,4,10,3],[8,11,10,10,"comment"],[8,18,10,17],[8,23,10,22],[8,27,10,26],[8,30,10,29],[9,6,10,31,"comment"],[9,13,10,38],[10,6,10,40,"variations"],[10,16,10,50],[10,18,10,52],[11,4,10,55],[11,5,10,56],[11,8,10,59],[12,6,10,61,"variations"],[12,16,10,71],[12,18,10,73],[13,4,10,75],[13,5,10,76],[14,2,11,2],[15,2,13,2],[15,11,13,11,"node"],[15,15,13,15,"node"],[15,16,13,16,"move"],[15,20,13,20],[15,22,13,22,"suffix"],[15,28,13,28],[15,30,13,30,"nag"],[15,33,13,33],[15,35,13,35,"comment"],[15,42,13,42],[15,44,13,44,"variations"],[15,54,13,54],[15,56,13,56],[16,4,14,3],[16,10,14,9,"node"],[16,14,14,13],[16,17,14,16],[17,6,14,18,"move"],[17,10,14,22],[18,6,14,24,"variations"],[19,4,14,35],[19,5,14,36],[20,4,16,4],[20,8,16,8,"suffix"],[20,14,16,14],[20,16,16,16],[21,6,17,5,"node"],[21,10,17,9],[21,11,17,10,"suffix"],[21,17,17,16],[21,20,17,19,"suffix"],[21,26,17,25],[22,4,18,4],[23,4,20,4],[23,8,20,8,"nag"],[23,11,20,11],[23,13,20,13],[24,6,21,5,"node"],[24,10,21,9],[24,11,21,10,"nag"],[24,14,21,13],[24,17,21,16,"nag"],[24,20,21,19],[25,4,22,4],[26,4,24,4],[26,8,24,8,"comment"],[26,15,24,15],[26,20,24,20],[26,24,24,24],[26,26,24,26],[27,6,25,5,"node"],[27,10,25,9],[27,11,25,10,"comment"],[27,18,25,17],[27,21,25,20,"comment"],[27,28,25,27],[28,4,26,4],[29,4,28,4],[29,11,28,11,"node"],[29,15,28,15],[30,2,29,2],[31,2,31,2],[31,11,31,11,"lineToTree"],[31,21,31,21,"lineToTree"],[31,22,31,22],[31,25,31,25,"nodes"],[31,30,31,30],[31,32,31,32],[32,4,32,3],[32,10,32,9],[32,11,32,10,"root"],[32,15,32,14],[32,17,32,16],[32,20,32,19,"rest"],[32,24,32,23],[32,25,32,24],[32,28,32,27,"nodes"],[32,33,32,32],[33,4,34,4],[33,8,34,8,"parent"],[33,14,34,14],[33,17,34,17,"root"],[33,21,34,21],[34,4,36,4],[34,9,36,9],[34,15,36,15,"child"],[34,20,36,20],[34,24,36,24,"rest"],[34,28,36,28],[34,30,36,30],[35,6,37,5],[35,10,37,9,"child"],[35,15,37,14],[35,20,37,19],[35,24,37,23],[35,26,37,25],[36,8,38,9,"parent"],[36,14,38,15],[36,15,38,16,"variations"],[36,25,38,26],[36,28,38,29],[36,29,38,30,"child"],[36,34,38,35],[36,36,38,37],[36,39,38,40,"child"],[36,44,38,45],[36,45,38,46,"variations"],[36,55,38,56],[36,56,38,57],[37,8,39,12,"child"],[37,13,39,17],[37,14,39,18,"variations"],[37,24,39,28],[37,27,39,31],[37,29,39,33],[38,8,40,12,"parent"],[38,14,40,18],[38,17,40,21,"child"],[38,22,40,26],[39,6,41,8],[40,4,42,4],[41,4,44,3],[41,11,44,10,"root"],[41,15,44,14],[42,2,45,2],[43,2,47,2],[43,11,47,11,"pgn"],[43,14,47,14,"pgn"],[43,15,47,15,"headers"],[43,22,47,22],[43,24,47,24,"game"],[43,28,47,28],[43,30,47,30],[44,4,48,3],[44,8,48,7,"game"],[44,12,48,11],[44,13,48,12,"marker"],[44,19,48,18],[44,23,48,22,"game"],[44,27,48,26],[44,28,48,27,"marker"],[44,34,48,33],[44,35,48,34,"comment"],[44,42,48,41],[44,44,48,43],[45,6,49,5],[45,10,49,9,"node"],[45,14,49,13],[45,17,49,16,"game"],[45,21,49,20],[45,22,49,21,"root"],[45,26,49,25],[46,6,50,8],[46,13,50,15],[46,17,50,19],[46,19,50,21],[47,8,51,9],[47,14,51,15,"next"],[47,18,51,19],[47,21,51,22,"node"],[47,25,51,26],[47,26,51,27,"variations"],[47,36,51,37],[47,37,51,38],[47,38,51,39],[47,39,51,40],[48,8,52,12],[48,12,52,16],[48,13,52,17,"next"],[48,17,52,21],[48,19,52,23],[49,10,53,13,"node"],[49,14,53,17],[49,15,53,18,"comment"],[49,22,53,25],[49,25,53,28,"game"],[49,29,53,32],[49,30,53,33,"marker"],[49,36,53,39],[49,37,53,40,"comment"],[49,44,53,47],[50,10,54,13],[51,8,55,12],[52,8,56,12,"node"],[52,12,56,16],[52,15,56,19,"next"],[52,19,56,23],[53,6,57,8],[54,4,58,4],[55,4,60,3],[55,11,60,10],[56,6,61,5,"headers"],[56,13,61,12],[57,6,62,8,"root"],[57,10,62,12],[57,12,62,14,"game"],[57,16,62,18],[57,17,62,19,"root"],[57,21,62,23],[58,6,63,8,"result"],[58,12,63,14],[58,14,63,16],[58,15,63,17,"game"],[58,19,63,21],[58,20,63,22,"marker"],[58,26,63,28],[58,30,63,32,"game"],[58,34,63,36],[58,35,63,37,"marker"],[58,41,63,43],[58,42,63,44,"result"],[58,48,63,50],[58,53,63,55,"undefined"],[59,4,64,4],[59,5,64,5],[60,2,65,2],[61,2,67,0],[61,11,67,9,"peg$subclass"],[61,23,67,21,"peg$subclass"],[61,24,67,22,"child"],[61,29,67,27],[61,31,67,29,"parent"],[61,37,67,35],[61,39,67,37],[62,4,68,2],[62,13,68,11,"C"],[62,14,68,12,"C"],[62,15,68,12],[62,17,68,15],[63,6,68,17],[63,10,68,21],[63,11,68,22,"constructor"],[63,22,68,33],[63,25,68,36,"child"],[63,30,68,41],[64,4,68,43],[65,4,69,2,"C"],[65,5,69,3],[65,6,69,4,"prototype"],[65,15,69,13],[65,18,69,16,"parent"],[65,24,69,22],[65,25,69,23,"prototype"],[65,34,69,32],[66,4,70,2,"child"],[66,9,70,7],[66,10,70,8,"prototype"],[66,19,70,17],[66,22,70,20],[66,26,70,24,"C"],[66,27,70,25],[66,28,70,26],[66,29,70,27],[67,2,71,0],[68,2,73,0],[68,11,73,9,"peg$SyntaxError"],[68,26,73,24,"peg$SyntaxError"],[68,27,73,25,"message"],[68,34,73,32],[68,36,73,34,"expected"],[68,44,73,42],[68,46,73,44,"found"],[68,51,73,49],[68,53,73,51,"location"],[68,61,73,59],[68,63,73,61],[69,4,74,2],[69,8,74,6,"self"],[69,12,74,10],[69,15,74,13,"Error"],[69,20,74,18],[69,21,74,19,"call"],[69,25,74,23],[69,26,74,24],[69,30,74,28],[69,32,74,30,"message"],[69,39,74,37],[69,40,74,38],[70,4,75,2],[71,4,76,2],[71,8,76,6,"Object"],[71,14,76,12],[71,15,76,13,"setPrototypeOf"],[71,29,76,27],[71,31,76,29],[72,6,77,4,"Object"],[72,12,77,10],[72,13,77,11,"setPrototypeOf"],[72,27,77,25],[72,28,77,26,"self"],[72,32,77,30],[72,34,77,32,"peg$SyntaxError"],[72,49,77,47],[72,50,77,48,"prototype"],[72,59,77,57],[72,60,77,58],[73,4,78,2],[74,4,79,2,"self"],[74,8,79,6],[74,9,79,7,"expected"],[74,17,79,15],[74,20,79,18,"expected"],[74,28,79,26],[75,4,80,2,"self"],[75,8,80,6],[75,9,80,7,"found"],[75,14,80,12],[75,17,80,15,"found"],[75,22,80,20],[76,4,81,2,"self"],[76,8,81,6],[76,9,81,7,"location"],[76,17,81,15],[76,20,81,18,"location"],[76,28,81,26],[77,4,82,2,"self"],[77,8,82,6],[77,9,82,7,"name"],[77,13,82,11],[77,16,82,14],[77,29,82,27],[78,4,83,2],[78,11,83,9,"self"],[78,15,83,13],[79,2,84,0],[80,2,86,0,"peg$subclass"],[80,14,86,12],[80,15,86,13,"peg$SyntaxError"],[80,30,86,28],[80,32,86,30,"Error"],[80,37,86,35],[80,38,86,36],[81,2,88,0],[81,11,88,9,"peg$padEnd"],[81,21,88,19,"peg$padEnd"],[81,22,88,20,"str"],[81,25,88,23],[81,27,88,25,"targetLength"],[81,39,88,37],[81,41,88,39,"padString"],[81,50,88,48],[81,52,88,50],[82,4,89,2,"padString"],[82,13,89,11],[82,16,89,14,"padString"],[82,25,89,23],[82,29,89,27],[82,32,89,30],[83,4,90,2],[83,8,90,6,"str"],[83,11,90,9],[83,12,90,10,"length"],[83,18,90,16],[83,21,90,19,"targetLength"],[83,33,90,31],[83,35,90,33],[84,6,90,35],[84,13,90,42,"str"],[84,16,90,45],[85,4,90,47],[86,4,91,2,"targetLength"],[86,16,91,14],[86,20,91,18,"str"],[86,23,91,21],[86,24,91,22,"length"],[86,30,91,28],[87,4,92,2,"padString"],[87,13,92,11],[87,17,92,15,"padString"],[87,26,92,24],[87,27,92,25,"repeat"],[87,33,92,31],[87,34,92,32,"targetLength"],[87,46,92,44],[87,47,92,45],[88,4,93,2],[88,11,93,9,"str"],[88,14,93,12],[88,17,93,15,"padString"],[88,26,93,24],[88,27,93,25,"slice"],[88,32,93,30],[88,33,93,31],[88,34,93,32],[88,36,93,34,"targetLength"],[88,48,93,46],[88,49,93,47],[89,2,94,0],[90,2,96,0,"peg$SyntaxError"],[90,17,96,15],[90,18,96,16,"prototype"],[90,27,96,25],[90,28,96,26,"format"],[90,34,96,32],[90,37,96,35],[90,47,96,44,"sources"],[90,54,96,51],[90,56,96,53],[91,4,97,2],[91,8,97,6,"str"],[91,11,97,9],[91,14,97,12],[91,23,97,21],[91,26,97,24],[91,30,97,28],[91,31,97,29,"message"],[91,38,97,36],[92,4,98,2],[92,8,98,6],[92,12,98,10],[92,13,98,11,"location"],[92,21,98,19],[92,23,98,21],[93,6,99,4],[93,10,99,8,"src"],[93,13,99,11],[93,16,99,14],[93,20,99,18],[94,6,100,4],[94,10,100,8,"k"],[94,11,100,9],[95,6,101,4],[95,11,101,9,"k"],[95,12,101,10],[95,15,101,13],[95,16,101,14],[95,18,101,16,"k"],[95,19,101,17],[95,22,101,20,"sources"],[95,29,101,27],[95,30,101,28,"length"],[95,36,101,34],[95,38,101,36,"k"],[95,39,101,37],[95,41,101,39],[95,43,101,41],[96,8,102,6],[96,12,102,10,"sources"],[96,19,102,17],[96,20,102,18,"k"],[96,21,102,19],[96,22,102,20],[96,23,102,21,"source"],[96,29,102,27],[96,34,102,32],[96,38,102,36],[96,39,102,37,"location"],[96,47,102,45],[96,48,102,46,"source"],[96,54,102,52],[96,56,102,54],[97,10,103,8,"src"],[97,13,103,11],[97,16,103,14,"sources"],[97,23,103,21],[97,24,103,22,"k"],[97,25,103,23],[97,26,103,24],[97,27,103,25,"text"],[97,31,103,29],[97,32,103,30,"split"],[97,37,103,35],[97,38,103,36],[97,51,103,49],[97,52,103,50],[98,10,104,8],[99,8,105,6],[100,6,106,4],[101,6,107,4],[101,10,107,8,"s"],[101,11,107,9],[101,14,107,12],[101,18,107,16],[101,19,107,17,"location"],[101,27,107,25],[101,28,107,26,"start"],[101,33,107,31],[102,6,108,4],[102,10,108,8,"offset_s"],[102,18,108,16],[102,21,108,20],[102,25,108,24],[102,26,108,25,"location"],[102,34,108,33],[102,35,108,34,"source"],[102,41,108,40],[102,45,108,45],[102,52,108,52],[102,56,108,56],[102,57,108,57,"location"],[102,65,108,65],[102,66,108,66,"source"],[102,72,108,72],[102,73,108,73,"offset"],[102,79,108,79],[102,84,108,84],[102,94,108,95],[102,97,109,8],[102,101,109,12],[102,102,109,13,"location"],[102,110,109,21],[102,111,109,22,"source"],[102,117,109,28],[102,118,109,29,"offset"],[102,124,109,35],[102,125,109,36,"s"],[102,126,109,37],[102,127,109,38],[102,130,110,8,"s"],[102,131,110,9],[103,6,111,4],[103,10,111,8,"loc"],[103,13,111,11],[103,16,111,14],[103,20,111,18],[103,21,111,19,"location"],[103,29,111,27],[103,30,111,28,"source"],[103,36,111,34],[103,39,111,37],[103,42,111,40],[103,45,111,43,"offset_s"],[103,53,111,51],[103,54,111,52,"line"],[103,58,111,56],[103,61,111,59],[103,64,111,62],[103,67,111,65,"offset_s"],[103,75,111,73],[103,76,111,74,"column"],[103,82,111,80],[104,6,112,4],[104,10,112,8,"src"],[104,13,112,11],[104,15,112,13],[105,8,113,6],[105,12,113,10,"e"],[105,13,113,11],[105,16,113,14],[105,20,113,18],[105,21,113,19,"location"],[105,29,113,27],[105,30,113,28,"end"],[105,33,113,31],[106,8,114,6],[106,12,114,10,"filler"],[106,18,114,16],[106,21,114,19,"peg$padEnd"],[106,31,114,29],[106,32,114,30],[106,34,114,32],[106,36,114,34,"offset_s"],[106,44,114,42],[106,45,114,43,"line"],[106,49,114,47],[106,50,114,48,"toString"],[106,58,114,56],[106,59,114,57],[106,60,114,58],[106,61,114,59,"length"],[106,67,114,65],[106,69,114,67],[106,72,114,70],[106,73,114,71],[107,8,115,6],[107,12,115,10,"line"],[107,16,115,14],[107,19,115,17,"src"],[107,22,115,20],[107,23,115,21,"s"],[107,24,115,22],[107,25,115,23,"line"],[107,29,115,27],[107,32,115,30],[107,33,115,31],[107,34,115,32],[108,8,116,6],[108,12,116,10,"last"],[108,16,116,14],[108,19,116,17,"s"],[108,20,116,18],[108,21,116,19,"line"],[108,25,116,23],[108,30,116,28,"e"],[108,31,116,29],[108,32,116,30,"line"],[108,36,116,34],[108,39,116,37,"e"],[108,40,116,38],[108,41,116,39,"column"],[108,47,116,45],[108,50,116,48,"line"],[108,54,116,52],[108,55,116,53,"length"],[108,61,116,59],[108,64,116,62],[108,65,116,63],[109,8,117,6],[109,12,117,10,"hatLen"],[109,18,117,16],[109,21,117,20,"last"],[109,25,117,24],[109,28,117,27,"s"],[109,29,117,28],[109,30,117,29,"column"],[109,36,117,35],[109,40,117,40],[109,41,117,41],[110,8,118,6,"str"],[110,11,118,9],[110,15,118,13],[110,24,118,22],[110,27,118,25,"loc"],[110,30,118,28],[110,33,118,31],[110,37,118,35],[110,40,119,12,"filler"],[110,46,119,18],[110,49,119,21],[110,55,119,27],[110,58,120,12,"offset_s"],[110,66,120,20],[110,67,120,21,"line"],[110,71,120,25],[110,74,120,28],[110,79,120,33],[110,82,120,36,"line"],[110,86,120,40],[110,89,120,43],[110,93,120,47],[110,96,121,12,"filler"],[110,102,121,18],[110,105,121,21],[110,110,121,26],[110,113,121,29,"peg$padEnd"],[110,123,121,39],[110,124,121,40],[110,126,121,42],[110,128,121,44,"s"],[110,129,121,45],[110,130,121,46,"column"],[110,136,121,52],[110,139,121,55],[110,140,121,56],[110,142,121,58],[110,145,121,61],[110,146,121,62],[110,149,122,12,"peg$padEnd"],[110,159,122,22],[110,160,122,23],[110,162,122,25],[110,164,122,27,"hatLen"],[110,170,122,33],[110,172,122,35],[110,175,122,38],[110,176,122,39],[111,6,123,4],[111,7,123,5],[111,13,123,11],[112,8,124,6,"str"],[112,11,124,9],[112,15,124,13],[112,23,124,21],[112,26,124,24,"loc"],[112,29,124,27],[113,6,125,4],[114,4,126,2],[115,4,127,2],[115,11,127,9,"str"],[115,14,127,12],[116,2,128,0],[116,3,128,1],[117,2,130,0,"peg$SyntaxError"],[117,17,130,15],[117,18,130,16,"buildMessage"],[117,30,130,28],[117,33,130,31],[117,43,130,40,"expected"],[117,51,130,48],[117,53,130,50,"found"],[117,58,130,55],[117,60,130,57],[118,4,131,2],[118,8,131,6,"DESCRIBE_EXPECTATION_FNS"],[118,32,131,30],[118,35,131,33],[119,6,132,4,"literal"],[119,13,132,11],[119,15,132,13],[119,24,132,13,"literal"],[119,25,132,22,"expectation"],[119,36,132,33],[119,38,132,35],[120,8,133,6],[120,15,133,13],[120,19,133,17],[120,22,133,20,"literalEscape"],[120,35,133,33],[120,36,133,34,"expectation"],[120,47,133,45],[120,48,133,46,"text"],[120,52,133,50],[120,53,133,51],[120,56,133,54],[120,60,133,58],[121,6,134,4],[121,7,134,5],[122,6,136,4,"class"],[122,11,136,9],[122,13,136,11],[122,22,136,11,"class"],[122,23,136,20,"expectation"],[122,34,136,31],[122,36,136,33],[123,8,137,6],[123,12,137,10,"escapedParts"],[123,24,137,22],[123,27,137,25,"expectation"],[123,38,137,36],[123,39,137,37,"parts"],[123,44,137,42],[123,45,137,43,"map"],[123,48,137,46],[123,49,137,47],[123,59,137,56,"part"],[123,63,137,60],[123,65,137,62],[124,10,138,8],[124,17,138,15,"Array"],[124,22,138,20],[124,23,138,21,"isArray"],[124,30,138,28],[124,31,138,29,"part"],[124,35,138,33],[124,36,138,34],[124,39,139,12,"classEscape"],[124,50,139,23],[124,51,139,24,"part"],[124,55,139,28],[124,56,139,29],[124,57,139,30],[124,58,139,31],[124,59,139,32],[124,62,139,35],[124,65,139,38],[124,68,139,41,"classEscape"],[124,79,139,52],[124,80,139,53,"part"],[124,84,139,57],[124,85,139,58],[124,86,139,59],[124,87,139,60],[124,88,139,61],[124,91,140,12,"classEscape"],[124,102,140,23],[124,103,140,24,"part"],[124,107,140,28],[124,108,140,29],[125,8,141,6],[125,9,141,7],[125,10,141,8],[126,8,143,6],[126,15,143,13],[126,18,143,16],[126,22,143,20,"expectation"],[126,33,143,31],[126,34,143,32,"inverted"],[126,42,143,40],[126,45,143,43],[126,48,143,46],[126,51,143,49],[126,53,143,51],[126,54,143,52],[126,57,143,55,"escapedParts"],[126,69,143,67],[126,70,143,68,"join"],[126,74,143,72],[126,75,143,73],[126,77,143,75],[126,78,143,76],[126,81,143,79],[126,84,143,82],[127,6,144,4],[127,7,144,5],[128,6,146,4,"any"],[128,9,146,7],[128,11,146,9],[128,20,146,9,"any"],[128,21,146,9],[128,23,146,20],[129,8,147,6],[129,15,147,13],[129,30,147,28],[130,6,148,4],[130,7,148,5],[131,6,150,4,"end"],[131,9,150,7],[131,11,150,9],[131,20,150,9,"end"],[131,21,150,9],[131,23,150,20],[132,8,151,6],[132,15,151,13],[132,29,151,27],[133,6,152,4],[133,7,152,5],[134,6,154,4,"other"],[134,11,154,9],[134,13,154,11],[134,22,154,11,"other"],[134,23,154,20,"expectation"],[134,34,154,31],[134,36,154,33],[135,8,155,6],[135,15,155,13,"expectation"],[135,26,155,24],[135,27,155,25,"description"],[135,38,155,36],[136,6,156,4],[137,4,157,2],[137,5,157,3],[138,4,159,2],[138,13,159,11,"hex"],[138,16,159,14,"hex"],[138,17,159,15,"ch"],[138,19,159,17],[138,21,159,19],[139,6,160,4],[139,13,160,11,"ch"],[139,15,160,13],[139,16,160,14,"charCodeAt"],[139,26,160,24],[139,27,160,25],[139,28,160,26],[139,29,160,27],[139,30,160,28,"toString"],[139,38,160,36],[139,39,160,37],[139,41,160,39],[139,42,160,40],[139,43,160,41,"toUpperCase"],[139,54,160,52],[139,55,160,53],[139,56,160,54],[140,4,161,2],[141,4,163,2],[141,13,163,11,"literalEscape"],[141,26,163,24,"literalEscape"],[141,27,163,25,"s"],[141,28,163,26],[141,30,163,28],[142,6,164,4],[142,13,164,11,"s"],[142,14,164,12],[142,15,165,7,"replace"],[142,22,165,14],[142,23,165,15],[142,28,165,20],[142,30,165,22],[142,36,165,28],[142,37,165,29],[142,38,166,7,"replace"],[142,45,166,14],[142,46,166,15],[142,50,166,19],[142,52,166,22],[142,58,166,28],[142,59,166,29],[142,60,167,7,"replace"],[142,67,167,14],[142,68,167,15],[142,73,167,20],[142,75,167,22],[142,80,167,27],[142,81,167,28],[142,82,168,7,"replace"],[142,89,168,14],[142,90,168,15],[142,95,168,20],[142,97,168,22],[142,102,168,27],[142,103,168,28],[142,104,169,7,"replace"],[142,111,169,14],[142,112,169,15],[142,117,169,20],[142,119,169,22],[142,124,169,27],[142,125,169,28],[142,126,170,7,"replace"],[142,133,170,14],[142,134,170,15],[142,139,170,20],[142,141,170,22],[142,146,170,27],[142,147,170,28],[142,148,171,7,"replace"],[142,155,171,14],[142,156,171,15],[142,170,171,29],[142,172,171,40],[142,182,171,49,"ch"],[142,184,171,51],[142,186,171,53],[143,8,171,55],[143,15,171,62],[143,21,171,68],[143,24,171,71,"hex"],[143,27,171,74],[143,28,171,75,"ch"],[143,30,171,77],[143,31,171,78],[144,6,171,80],[144,7,171,81],[144,8,171,82],[144,9,172,7,"replace"],[144,16,172,14],[144,17,172,15],[144,40,172,38],[144,42,172,40],[144,52,172,49,"ch"],[144,54,172,51],[144,56,172,53],[145,8,172,55],[145,15,172,62],[145,20,172,67],[145,23,172,71,"hex"],[145,26,172,74],[145,27,172,75,"ch"],[145,29,172,77],[145,30,172,78],[146,6,172,80],[146,7,172,81],[146,8,172,82],[147,4,173,2],[148,4,175,2],[148,13,175,11,"classEscape"],[148,24,175,22,"classEscape"],[148,25,175,23,"s"],[148,26,175,24],[148,28,175,26],[149,6,176,4],[149,13,176,11,"s"],[149,14,176,12],[149,15,177,7,"replace"],[149,22,177,14],[149,23,177,15],[149,28,177,20],[149,30,177,22],[149,36,177,28],[149,37,177,29],[149,38,178,7,"replace"],[149,45,178,14],[149,46,178,15],[149,51,178,20],[149,53,178,22],[149,58,178,27],[149,59,178,28],[149,60,179,7,"replace"],[149,67,179,14],[149,68,179,15],[149,73,179,20],[149,75,179,22],[149,80,179,27],[149,81,179,28],[149,82,180,7,"replace"],[149,89,180,14],[149,90,180,15],[149,94,180,19],[149,96,180,22],[149,101,180,27],[149,102,180,28],[149,103,181,7,"replace"],[149,110,181,14],[149,111,181,15],[149,116,181,20],[149,118,181,22],[149,123,181,27],[149,124,181,28],[149,125,182,7,"replace"],[149,132,182,14],[149,133,182,15],[149,138,182,20],[149,140,182,22],[149,145,182,27],[149,146,182,28],[149,147,183,7,"replace"],[149,154,183,14],[149,155,183,15],[149,160,183,20],[149,162,183,22],[149,167,183,27],[149,168,183,28],[149,169,184,7,"replace"],[149,176,184,14],[149,177,184,15],[149,182,184,20],[149,184,184,22],[149,189,184,27],[149,190,184,28],[149,191,185,7,"replace"],[149,198,185,14],[149,199,185,15],[149,213,185,29],[149,215,185,40],[149,225,185,49,"ch"],[149,227,185,51],[149,229,185,53],[150,8,185,55],[150,15,185,62],[150,21,185,68],[150,24,185,71,"hex"],[150,27,185,74],[150,28,185,75,"ch"],[150,30,185,77],[150,31,185,78],[151,6,185,80],[151,7,185,81],[151,8,185,82],[151,9,186,7,"replace"],[151,16,186,14],[151,17,186,15],[151,40,186,38],[151,42,186,40],[151,52,186,49,"ch"],[151,54,186,51],[151,56,186,53],[152,8,186,55],[152,15,186,62],[152,20,186,67],[152,23,186,71,"hex"],[152,26,186,74],[152,27,186,75,"ch"],[152,29,186,77],[152,30,186,78],[153,6,186,80],[153,7,186,81],[153,8,186,82],[154,4,187,2],[155,4,189,2],[155,13,189,11,"describeExpectation"],[155,32,189,30,"describeExpectation"],[155,33,189,31,"expectation"],[155,44,189,42],[155,46,189,44],[156,6,190,4],[156,13,190,11,"DESCRIBE_EXPECTATION_FNS"],[156,37,190,35],[156,38,190,36,"expectation"],[156,49,190,47],[156,50,190,48,"type"],[156,54,190,52],[156,55,190,53],[156,56,190,54,"expectation"],[156,67,190,65],[156,68,190,66],[157,4,191,2],[158,4,193,2],[158,13,193,11,"describeExpected"],[158,29,193,27,"describeExpected"],[158,30,193,28,"expected"],[158,38,193,36],[158,40,193,38],[159,6,194,4],[159,10,194,8,"descriptions"],[159,22,194,20],[159,25,194,23,"expected"],[159,33,194,31],[159,34,194,32,"map"],[159,37,194,35],[159,38,194,36,"describeExpectation"],[159,57,194,55],[159,58,194,56],[160,6,195,4],[160,10,195,8,"i"],[160,11,195,9],[160,13,195,11,"j"],[160,14,195,12],[161,6,197,4,"descriptions"],[161,18,197,16],[161,19,197,17,"sort"],[161,23,197,21],[161,24,197,22],[161,25,197,23],[162,6,199,4],[162,10,199,8,"descriptions"],[162,22,199,20],[162,23,199,21,"length"],[162,29,199,27],[162,32,199,30],[162,33,199,31],[162,35,199,33],[163,8,200,6],[163,13,200,11,"i"],[163,14,200,12],[163,17,200,15],[163,18,200,16],[163,20,200,18,"j"],[163,21,200,19],[163,24,200,22],[163,25,200,23],[163,27,200,25,"i"],[163,28,200,26],[163,31,200,29,"descriptions"],[163,43,200,41],[163,44,200,42,"length"],[163,50,200,48],[163,52,200,50,"i"],[163,53,200,51],[163,55,200,53],[163,57,200,55],[164,10,201,8],[164,14,201,12,"descriptions"],[164,26,201,24],[164,27,201,25,"i"],[164,28,201,26],[164,31,201,29],[164,32,201,30],[164,33,201,31],[164,38,201,36,"descriptions"],[164,50,201,48],[164,51,201,49,"i"],[164,52,201,50],[164,53,201,51],[164,55,201,53],[165,12,202,10,"descriptions"],[165,24,202,22],[165,25,202,23,"j"],[165,26,202,24],[165,27,202,25],[165,30,202,28,"descriptions"],[165,42,202,40],[165,43,202,41,"i"],[165,44,202,42],[165,45,202,43],[166,12,203,10,"j"],[166,13,203,11],[166,15,203,13],[167,10,204,8],[168,8,205,6],[169,8,206,6,"descriptions"],[169,20,206,18],[169,21,206,19,"length"],[169,27,206,25],[169,30,206,28,"j"],[169,31,206,29],[170,6,207,4],[171,6,209,4],[171,14,209,12,"descriptions"],[171,26,209,24],[171,27,209,25,"length"],[171,33,209,31],[172,8,210,6],[172,13,210,11],[172,14,210,12],[173,10,211,8],[173,17,211,15,"descriptions"],[173,29,211,27],[173,30,211,28],[173,31,211,29],[173,32,211,30],[174,8,213,6],[174,13,213,11],[174,14,213,12],[175,10,214,8],[175,17,214,15,"descriptions"],[175,29,214,27],[175,30,214,28],[175,31,214,29],[175,32,214,30],[175,35,214,33],[175,41,214,39],[175,44,214,42,"descriptions"],[175,56,214,54],[175,57,214,55],[175,58,214,56],[175,59,214,57],[176,8,216,6],[177,10,217,8],[177,17,217,15,"descriptions"],[177,29,217,27],[177,30,217,28,"slice"],[177,35,217,33],[177,36,217,34],[177,37,217,35],[177,39,217,37],[177,40,217,38],[177,41,217,39],[177,42,217,40],[177,43,217,41,"join"],[177,47,217,45],[177,48,217,46],[177,52,217,50],[177,53,217,51],[177,56,218,12],[177,63,218,19],[177,66,219,12,"descriptions"],[177,78,219,24],[177,79,219,25,"descriptions"],[177,91,219,37],[177,92,219,38,"length"],[177,98,219,44],[177,101,219,47],[177,102,219,48],[177,103,219,49],[178,6,220,4],[179,4,221,2],[180,4,223,2],[180,13,223,11,"describeFound"],[180,26,223,24,"describeFound"],[180,27,223,25,"found"],[180,32,223,30],[180,34,223,32],[181,6,224,4],[181,13,224,11,"found"],[181,18,224,16],[181,21,224,19],[181,25,224,23],[181,28,224,26,"literalEscape"],[181,41,224,39],[181,42,224,40,"found"],[181,47,224,45],[181,48,224,46],[181,51,224,49],[181,55,224,53],[181,58,224,56],[181,72,224,70],[182,4,225,2],[183,4,227,2],[183,11,227,9],[183,22,227,20],[183,25,227,23,"describeExpected"],[183,41,227,39],[183,42,227,40,"expected"],[183,50,227,48],[183,51,227,49],[183,54,227,52],[183,61,227,59],[183,64,227,62,"describeFound"],[183,77,227,75],[183,78,227,76,"found"],[183,83,227,81],[183,84,227,82],[183,87,227,85],[183,96,227,94],[184,2,228,0],[184,3,228,1],[185,2,230,0],[185,11,230,9,"peg$parse"],[185,20,230,18,"peg$parse"],[185,21,230,19,"input"],[185,26,230,24],[185,28,230,26,"options"],[185,35,230,33],[185,37,230,35],[186,4,231,2,"options"],[186,11,231,9],[186,14,231,12,"options"],[186,21,231,19],[186,26,231,24,"undefined"],[186,35,231,33],[186,38,231,36,"options"],[186,45,231,43],[186,48,231,46],[186,49,231,47],[186,50,231,48],[187,4,233,2],[187,8,233,6,"peg$FAILED"],[187,18,233,16],[187,21,233,19],[187,22,233,20],[187,23,233,21],[188,4,234,2],[188,8,234,6,"peg$source"],[188,18,234,16],[188,21,234,19,"options"],[188,28,234,26],[188,29,234,27,"grammarSource"],[188,42,234,40],[189,4,236,2],[189,8,236,6,"peg$startRuleFunctions"],[189,30,236,28],[189,33,236,31],[190,6,236,33,"pgn"],[190,9,236,36],[190,11,236,38,"peg$parsepgn"],[191,4,236,51],[191,5,236,52],[192,4,237,2],[192,8,237,6,"peg$startRuleFunction"],[192,29,237,27],[192,32,237,30,"peg$parsepgn"],[192,44,237,42],[193,4,239,2],[193,8,239,6,"peg$c0"],[193,14,239,12],[193,17,239,15],[193,20,239,18],[194,4,240,2],[194,8,240,6,"peg$c1"],[194,14,240,12],[194,17,240,15],[194,21,240,19],[195,4,241,2],[195,8,241,6,"peg$c2"],[195,14,241,12],[195,17,241,15],[195,20,241,18],[196,4,242,2],[196,8,242,6,"peg$c3"],[196,14,242,12],[196,17,242,15],[196,20,242,18],[197,4,243,2],[197,8,243,6,"peg$c4"],[197,14,243,12],[197,17,243,15],[197,24,243,22],[198,4,244,2],[198,8,244,6,"peg$c5"],[198,14,244,12],[198,17,244,15],[198,22,244,20],[199,4,245,2],[199,8,245,6,"peg$c6"],[199,14,245,12],[199,17,245,15],[199,24,245,22],[200,4,246,2],[200,8,246,6,"peg$c7"],[200,14,246,12],[200,17,246,15],[200,22,246,20],[201,4,247,2],[201,8,247,6,"peg$c8"],[201,14,247,12],[201,17,247,15],[201,20,247,18],[202,4,248,2],[202,8,248,6,"peg$c9"],[202,14,248,12],[202,17,248,15],[202,20,248,18],[203,4,249,2],[203,8,249,6,"peg$c10"],[203,15,249,13],[203,18,249,16],[203,21,249,19],[204,4,250,2],[204,8,250,6,"peg$c11"],[204,15,250,13],[204,18,250,16],[204,21,250,19],[205,4,251,2],[205,8,251,6,"peg$c12"],[205,15,251,13],[205,18,251,16],[205,21,251,19],[206,4,252,2],[206,8,252,6,"peg$c13"],[206,15,252,13],[206,18,252,16],[206,21,252,19],[207,4,253,2],[207,8,253,6,"peg$c14"],[207,15,253,13],[207,18,253,16],[207,23,253,21],[208,4,254,2],[208,8,254,6,"peg$c15"],[208,15,254,13],[208,18,254,16],[208,23,254,21],[209,4,255,2],[209,8,255,6,"peg$c16"],[209,15,255,13],[209,18,255,16],[209,27,255,25],[210,4,256,2],[210,8,256,6,"peg$c17"],[210,15,256,13],[210,18,256,16],[210,21,256,19],[211,4,258,2],[211,8,258,6,"peg$r0"],[211,14,258,12],[211,17,258,15],[211,28,258,26],[212,4,259,2],[212,8,259,6,"peg$r1"],[212,14,259,12],[212,17,259,15],[212,24,259,22],[213,4,260,2],[213,8,260,6,"peg$r2"],[213,14,260,12],[213,17,260,15],[213,25,260,23],[214,4,261,2],[214,8,261,6,"peg$r3"],[214,14,261,12],[214,17,261,15],[214,23,261,21],[215,4,262,2],[215,8,262,6,"peg$r4"],[215,14,262,12],[215,17,262,15],[215,34,262,32],[216,4,263,2],[216,8,263,6,"peg$r5"],[216,14,263,12],[216,17,263,15],[216,24,263,22],[217,4,264,2],[217,8,264,6,"peg$r6"],[217,14,264,12],[217,17,264,15],[217,24,264,22],[218,4,265,2],[218,8,265,6,"peg$r7"],[218,14,265,12],[218,17,265,15],[218,24,265,22],[219,4,266,2],[219,8,266,6,"peg$r8"],[219,14,266,12],[219,17,266,15],[219,27,266,25],[220,4,267,2],[220,8,267,6,"peg$r9"],[220,14,267,12],[220,17,267,15],[220,29,267,27],[221,4,269,2],[221,8,269,6,"peg$e0"],[221,14,269,12],[221,17,269,15,"peg$otherExpectation"],[221,37,269,35],[221,38,269,36],[221,48,269,46],[221,49,269,47],[222,4,270,2],[222,8,270,6,"peg$e1"],[222,14,270,12],[222,17,270,15,"peg$literalExpectation"],[222,39,270,37],[222,40,270,38],[222,43,270,41],[222,45,270,43],[222,50,270,48],[222,51,270,49],[223,4,271,2],[223,8,271,6,"peg$e2"],[223,14,271,12],[223,17,271,15,"peg$literalExpectation"],[223,39,271,37],[223,40,271,38],[223,44,271,42],[223,46,271,44],[223,51,271,49],[223,52,271,50],[224,4,272,2],[224,8,272,6,"peg$e3"],[224,14,272,12],[224,17,272,15,"peg$literalExpectation"],[224,39,272,37],[224,40,272,38],[224,43,272,41],[224,45,272,43],[224,50,272,48],[224,51,272,49],[225,4,273,2],[225,8,273,6,"peg$e4"],[225,14,273,12],[225,17,273,15,"peg$otherExpectation"],[225,37,273,35],[225,38,273,36],[225,48,273,46],[225,49,273,47],[226,4,274,2],[226,8,274,6,"peg$e5"],[226,14,274,12],[226,17,274,15,"peg$classExpectation"],[226,37,274,35],[226,38,274,36],[226,39,274,37],[226,40,274,38],[226,43,274,41],[226,45,274,43],[226,48,274,46],[226,49,274,47],[226,51,274,49],[226,52,274,50],[226,55,274,53],[226,57,274,55],[226,60,274,58],[226,61,274,59],[226,62,274,60],[226,64,274,62],[226,69,274,67],[226,71,274,69],[226,76,274,74],[226,77,274,75],[227,4,275,2],[227,8,275,6,"peg$e6"],[227,14,275,12],[227,17,275,15,"peg$otherExpectation"],[227,37,275,35],[227,38,275,36],[227,49,275,47],[227,50,275,48],[228,4,276,2],[228,8,276,6,"peg$e7"],[228,14,276,12],[228,17,276,15,"peg$classExpectation"],[228,37,276,35],[228,38,276,36],[228,39,276,37],[228,43,276,41],[228,44,276,42],[228,46,276,44],[228,50,276,48],[228,52,276,50],[228,57,276,55],[228,58,276,56],[229,4,277,2],[229,8,277,6,"peg$e8"],[229,14,277,12],[229,17,277,15,"peg$otherExpectation"],[229,37,277,35],[229,38,277,36],[229,51,277,49],[229,52,277,50],[230,4,278,2],[230,8,278,6,"peg$e9"],[230,14,278,12],[230,17,278,15,"peg$classExpectation"],[230,37,278,35],[230,38,278,36],[230,39,278,37],[230,40,278,38],[230,43,278,41],[230,45,278,43],[230,48,278,46],[230,49,278,47],[230,50,278,48],[230,52,278,50],[230,57,278,55],[230,59,278,57],[230,64,278,62],[230,65,278,63],[231,4,279,2],[231,8,279,6,"peg$e10"],[231,15,279,13],[231,18,279,16,"peg$literalExpectation"],[231,40,279,38],[231,41,279,39],[231,44,279,42],[231,46,279,44],[231,51,279,49],[231,52,279,50],[232,4,280,2],[232,8,280,6,"peg$e11"],[232,15,280,13],[232,18,280,16,"peg$classExpectation"],[232,38,280,36],[232,39,280,37],[232,40,280,38],[232,43,280,41],[232,44,280,42],[232,46,280,44],[232,51,280,49],[232,53,280,51],[232,58,280,56],[232,59,280,57],[233,4,281,2],[233,8,281,6,"peg$e12"],[233,15,281,13],[233,18,281,16,"peg$otherExpectation"],[233,38,281,36],[233,39,281,37],[233,68,281,66],[233,69,281,67],[234,4,282,2],[234,8,282,6,"peg$e13"],[234,15,282,13],[234,18,282,16,"peg$literalExpectation"],[234,40,282,38],[234,41,282,39],[234,48,282,46],[234,50,282,48],[234,55,282,53],[234,56,282,54],[235,4,283,2],[235,8,283,6,"peg$e14"],[235,15,283,13],[235,18,283,16,"peg$literalExpectation"],[235,40,283,38],[235,41,283,39],[235,46,283,44],[235,48,283,46],[235,53,283,51],[235,54,283,52],[236,4,284,2],[236,8,284,6,"peg$e15"],[236,15,284,13],[236,18,284,16,"peg$literalExpectation"],[236,40,284,38],[236,41,284,39],[236,48,284,46],[236,50,284,48],[236,55,284,53],[236,56,284,54],[237,4,285,2],[237,8,285,6,"peg$e16"],[237,15,285,13],[237,18,285,16,"peg$literalExpectation"],[237,40,285,38],[237,41,285,39],[237,46,285,44],[237,48,285,46],[237,53,285,51],[237,54,285,52],[238,4,286,2],[238,8,286,6,"peg$e17"],[238,15,286,13],[238,18,286,16,"peg$classExpectation"],[238,38,286,36],[238,39,286,37],[238,40,286,38],[238,41,286,39],[238,44,286,42],[238,46,286,44],[238,49,286,47],[238,50,286,48],[238,52,286,50],[238,53,286,51],[238,56,286,54],[238,58,286,56],[238,61,286,59],[238,62,286,60],[238,64,286,62],[238,65,286,63],[238,68,286,66],[238,70,286,68],[238,73,286,71],[238,74,286,72],[238,76,286,74],[238,79,286,77],[238,81,286,79],[238,84,286,82],[238,85,286,83],[238,87,286,85],[238,92,286,90],[238,94,286,92],[238,99,286,97],[238,100,286,98],[239,4,287,2],[239,8,287,6,"peg$e18"],[239,15,287,13],[239,18,287,16,"peg$classExpectation"],[239,38,287,36],[239,39,287,37],[239,40,287,38],[239,43,287,41],[239,45,287,43],[239,48,287,46],[239,49,287,47],[239,51,287,49],[239,56,287,54],[239,58,287,56],[239,63,287,61],[239,64,287,62],[240,4,288,2],[240,8,288,6,"peg$e19"],[240,15,288,13],[240,18,288,16,"peg$otherExpectation"],[240,38,288,36],[240,39,288,37],[240,58,288,56],[240,59,288,57],[241,4,289,2],[241,8,289,6,"peg$e20"],[241,15,289,13],[241,18,289,16,"peg$classExpectation"],[241,38,289,36],[241,39,289,37],[241,40,289,38],[241,43,289,41],[241,45,289,43],[241,48,289,46],[241,49,289,47],[241,51,289,49],[241,56,289,54],[241,58,289,56],[241,63,289,61],[241,64,289,62],[242,4,290,2],[242,8,290,6,"peg$e21"],[242,15,290,13],[242,18,290,16,"peg$otherExpectation"],[242,38,290,36],[242,39,290,37],[242,44,290,42],[242,45,290,43],[243,4,291,2],[243,8,291,6,"peg$e22"],[243,15,291,13],[243,18,291,16,"peg$literalExpectation"],[243,40,291,38],[243,41,291,39],[243,44,291,42],[243,46,291,44],[243,51,291,49],[243,52,291,50],[244,4,292,2],[244,8,292,6,"peg$e23"],[244,15,292,13],[244,18,292,16,"peg$otherExpectation"],[244,38,292,36],[244,39,292,37],[244,54,292,52],[244,55,292,53],[245,4,293,2],[245,8,293,6,"peg$e24"],[245,15,293,13],[245,18,293,16,"peg$literalExpectation"],[245,40,293,38],[245,41,293,39],[245,44,293,42],[245,46,293,44],[245,51,293,49],[245,52,293,50],[246,4,294,2],[246,8,294,6,"peg$e25"],[246,15,294,13],[246,18,294,16,"peg$classExpectation"],[246,38,294,36],[246,39,294,37],[246,40,294,38],[246,43,294,41],[246,44,294,42],[246,46,294,44],[246,50,294,48],[246,52,294,50],[246,57,294,55],[246,58,294,56],[247,4,295,2],[247,8,295,6,"peg$e26"],[247,15,295,13],[247,18,295,16,"peg$literalExpectation"],[247,40,295,38],[247,41,295,39],[247,44,295,42],[247,46,295,44],[247,51,295,49],[247,52,295,50],[248,4,296,2],[248,8,296,6,"peg$e27"],[248,15,296,13],[248,18,296,16,"peg$otherExpectation"],[248,38,296,36],[248,39,296,37],[248,61,296,59],[248,62,296,60],[249,4,297,2],[249,8,297,6,"peg$e28"],[249,15,297,13],[249,18,297,16,"peg$literalExpectation"],[249,40,297,38],[249,41,297,39],[249,44,297,42],[249,46,297,44],[249,51,297,49],[249,52,297,50],[250,4,298,2],[250,8,298,6,"peg$e29"],[250,15,298,13],[250,18,298,16,"peg$classExpectation"],[250,38,298,36],[250,39,298,37],[250,40,298,38],[250,44,298,42],[250,46,298,44],[250,50,298,48],[250,51,298,49],[250,53,298,51],[250,57,298,55],[250,59,298,57],[250,64,298,62],[250,65,298,63],[251,4,299,2],[251,8,299,6,"peg$e30"],[251,15,299,13],[251,18,299,16,"peg$otherExpectation"],[251,38,299,36],[251,39,299,37],[251,50,299,48],[251,51,299,49],[252,4,300,2],[252,8,300,6,"peg$e31"],[252,15,300,13],[252,18,300,16,"peg$literalExpectation"],[252,40,300,38],[252,41,300,39],[252,44,300,42],[252,46,300,44],[252,51,300,49],[252,52,300,50],[253,4,301,2],[253,8,301,6,"peg$e32"],[253,15,301,13],[253,18,301,16,"peg$literalExpectation"],[253,40,301,38],[253,41,301,39],[253,44,301,42],[253,46,301,44],[253,51,301,49],[253,52,301,50],[254,4,302,2],[254,8,302,6,"peg$e33"],[254,15,302,13],[254,18,302,16,"peg$otherExpectation"],[254,38,302,36],[254,39,302,37],[254,64,302,62],[254,65,302,63],[255,4,303,2],[255,8,303,6,"peg$e34"],[255,15,303,13],[255,18,303,16,"peg$literalExpectation"],[255,40,303,38],[255,41,303,39],[255,46,303,44],[255,48,303,46],[255,53,303,51],[255,54,303,52],[256,4,304,2],[256,8,304,6,"peg$e35"],[256,15,304,13],[256,18,304,16,"peg$literalExpectation"],[256,40,304,38],[256,41,304,39],[256,46,304,44],[256,48,304,46],[256,53,304,51],[256,54,304,52],[257,4,305,2],[257,8,305,6,"peg$e36"],[257,15,305,13],[257,18,305,16,"peg$literalExpectation"],[257,40,305,38],[257,41,305,39],[257,50,305,48],[257,52,305,50],[257,57,305,55],[257,58,305,56],[258,4,306,2],[258,8,306,6,"peg$e37"],[258,15,306,13],[258,18,306,16,"peg$literalExpectation"],[258,40,306,38],[258,41,306,39],[258,44,306,42],[258,46,306,44],[258,51,306,49],[258,52,306,50],[259,4,307,2],[259,8,307,6,"peg$e38"],[259,15,307,13],[259,18,307,16,"peg$otherExpectation"],[259,38,307,36],[259,39,307,37],[259,51,307,49],[259,52,307,50],[260,4,308,2],[260,8,308,6,"peg$e39"],[260,15,308,13],[260,18,308,16,"peg$classExpectation"],[260,38,308,36],[260,39,308,37],[260,40,308,38],[260,43,308,41],[260,45,308,43],[260,49,308,47],[260,51,308,49],[260,55,308,53],[260,57,308,55],[260,61,308,59],[260,62,308,60],[260,64,308,62],[260,69,308,67],[260,71,308,69],[260,76,308,74],[260,77,308,75],[261,4,310,2],[261,8,310,6,"peg$f0"],[261,14,310,12],[261,17,310,15],[261,26,310,15,"peg$f0"],[261,27,310,24,"headers"],[261,34,310,31],[261,36,310,33,"game"],[261,40,310,37],[261,42,310,39],[262,6,310,41],[262,13,310,48,"pgn"],[262,16,310,51],[262,17,310,52,"headers"],[262,24,310,59],[262,26,310,61,"game"],[262,30,310,65],[262,31,310,66],[263,4,310,67],[263,5,310,68],[264,4,311,2],[264,8,311,6,"peg$f1"],[264,14,311,12],[264,17,311,15],[264,26,311,15,"peg$f1"],[264,27,311,24,"tagPairs"],[264,35,311,32],[264,37,311,34],[265,6,311,36],[265,13,311,43,"Object"],[265,19,311,49],[265,20,311,50,"fromEntries"],[265,31,311,61],[265,32,311,62,"tagPairs"],[265,40,311,70],[265,41,311,71],[266,4,311,72],[266,5,311,73],[267,4,312,2],[267,8,312,6,"peg$f2"],[267,14,312,12],[267,17,312,15],[267,26,312,15,"peg$f2"],[267,27,312,24,"tagName"],[267,34,312,31],[267,36,312,33,"tagValue"],[267,44,312,41],[267,46,312,43],[268,6,312,45],[268,13,312,52],[268,14,312,53,"tagName"],[268,21,312,60],[268,23,312,62,"tagValue"],[268,31,312,70],[268,32,312,71],[269,4,312,72],[269,5,312,73],[270,4,313,2],[270,8,313,6,"peg$f3"],[270,14,313,12],[270,17,313,15],[270,26,313,15,"peg$f3"],[270,27,313,24,"root"],[270,31,313,28],[270,33,313,30,"marker"],[270,39,313,36],[270,41,313,38],[271,6,313,40],[271,13,313,47],[272,8,313,49,"root"],[272,12,313,53],[273,8,313,55,"marker"],[274,6,313,61],[274,7,313,62],[275,4,313,63],[275,5,313,64],[276,4,314,2],[276,8,314,6,"peg$f4"],[276,14,314,12],[276,17,314,15],[276,26,314,15,"peg$f4"],[276,27,314,24,"comment"],[276,34,314,31],[276,36,314,33,"moves"],[276,41,314,38],[276,43,314,40],[277,6,314,42],[277,13,314,49,"lineToTree"],[277,23,314,59],[277,24,314,60,"rootNode"],[277,32,314,68],[277,33,314,69,"comment"],[277,40,314,76],[277,41,314,77],[277,43,314,79],[277,46,314,82,"moves"],[277,51,314,87],[277,52,314,88,"flat"],[277,56,314,92],[277,57,314,93],[277,58,314,94],[277,59,314,95],[278,4,314,96],[278,5,314,97],[279,4,315,2],[279,8,315,6,"peg$f5"],[279,14,315,12],[279,17,315,15],[279,26,315,15,"peg$f5"],[279,27,315,24,"san"],[279,30,315,27],[279,32,315,29,"suffix"],[279,38,315,35],[279,40,315,37,"nag"],[279,43,315,40],[279,45,315,42,"comment"],[279,52,315,49],[279,54,315,51,"variations"],[279,64,315,61],[279,66,315,63],[280,6,315,65],[280,13,315,72,"node"],[280,17,315,76],[280,18,315,77,"san"],[280,21,315,80],[280,23,315,82,"suffix"],[280,29,315,88],[280,31,315,90,"nag"],[280,34,315,93],[280,36,315,95,"comment"],[280,43,315,102],[280,45,315,104,"variations"],[280,55,315,114],[280,56,315,115],[281,4,315,116],[281,5,315,117],[282,4,316,2],[282,8,316,6,"peg$f6"],[282,14,316,12],[282,17,316,15],[282,26,316,15,"peg$f6"],[282,27,316,24,"nag"],[282,30,316,27],[282,32,316,29],[283,6,316,31],[283,13,316,38,"nag"],[283,16,316,41],[284,4,316,42],[284,5,316,43],[285,4,317,2],[285,8,317,6,"peg$f7"],[285,14,317,12],[285,17,317,15],[285,26,317,15,"peg$f7"],[285,27,317,24,"comment"],[285,34,317,31],[285,36,317,33],[286,6,317,35],[286,13,317,42,"comment"],[286,20,317,49],[286,21,317,50,"replace"],[286,28,317,57],[286,29,317,58],[286,39,317,68],[286,41,317,70],[286,44,317,73],[286,45,317,74],[287,4,317,75],[287,5,317,76],[288,4,318,2],[288,8,318,6,"peg$f8"],[288,14,318,12],[288,17,318,15],[288,26,318,15,"peg$f8"],[288,27,318,24,"comment"],[288,34,318,31],[288,36,318,33],[289,6,318,35],[289,13,318,42,"comment"],[289,20,318,49],[289,21,318,50,"trim"],[289,25,318,54],[289,26,318,55],[289,27,318,56],[290,4,318,57],[290,5,318,58],[291,4,319,2],[291,8,319,6,"peg$f9"],[291,14,319,12],[291,17,319,15],[291,26,319,15,"peg$f9"],[291,27,319,24,"line"],[291,31,319,28],[291,33,319,30],[292,6,319,32],[292,13,319,39,"line"],[292,17,319,43],[293,4,319,44],[293,5,319,45],[294,4,320,2],[294,8,320,6,"peg$f10"],[294,15,320,13],[294,18,320,16],[294,27,320,16,"peg$f10"],[294,28,320,25,"result"],[294,34,320,31],[294,36,320,33,"comment"],[294,43,320,40],[294,45,320,42],[295,6,320,44],[295,13,320,51],[296,8,320,53,"result"],[296,14,320,59],[297,8,320,61,"comment"],[298,6,320,69],[298,7,320,70],[299,4,320,71],[299,5,320,72],[300,4,321,2],[300,8,321,6,"peg$currPos"],[300,19,321,17],[300,22,321,20,"options"],[300,29,321,27],[300,30,321,28,"peg$currPos"],[300,41,321,39],[300,44,321,42],[300,45,321,43],[301,4,322,2],[301,8,322,6,"peg$posDetailsCache"],[301,27,322,25],[301,30,322,28],[301,31,322,29],[302,6,322,31,"line"],[302,10,322,35],[302,12,322,37],[302,13,322,38],[303,6,322,40,"column"],[303,12,322,46],[303,14,322,48],[304,4,322,50],[304,5,322,51],[304,6,322,52],[305,4,323,2],[305,8,323,6,"peg$maxFailPos"],[305,22,323,20],[305,25,323,23,"peg$currPos"],[305,36,323,34],[306,4,324,2],[306,8,324,6,"peg$maxFailExpected"],[306,27,324,25],[306,30,324,28,"options"],[306,37,324,35],[306,38,324,36,"peg$maxFailExpected"],[306,57,324,55],[306,61,324,59],[306,63,324,61],[307,4,325,2],[307,8,325,6,"peg$silentFails"],[307,23,325,21],[307,26,325,24,"options"],[307,33,325,31],[307,34,325,32,"peg$silentFails"],[307,49,325,47],[307,52,325,50],[307,53,325,51],[308,4,327,2],[308,8,327,6,"peg$result"],[308,18,327,16],[309,4,329,2],[309,8,329,6,"options"],[309,15,329,13],[309,16,329,14,"startRule"],[309,25,329,23],[309,27,329,25],[310,6,330,4],[310,10,330,8],[310,12,330,10,"options"],[310,19,330,17],[310,20,330,18,"startRule"],[310,29,330,27],[310,33,330,31,"peg$startRuleFunctions"],[310,55,330,53],[310,56,330,54],[310,58,330,56],[311,8,331,6],[311,14,331,12],[311,18,331,16,"Error"],[311,23,331,21],[311,24,331,22],[311,58,331,56],[311,61,331,59,"options"],[311,68,331,66],[311,69,331,67,"startRule"],[311,78,331,76],[311,81,331,79],[311,86,331,84],[311,87,331,85],[312,6,332,4],[313,6,334,4,"peg$startRuleFunction"],[313,27,334,25],[313,30,334,28,"peg$startRuleFunctions"],[313,52,334,50],[313,53,334,51,"options"],[313,60,334,58],[313,61,334,59,"startRule"],[313,70,334,68],[313,71,334,69],[314,4,335,2],[315,4,337,2],[315,13,337,11,"peg$literalExpectation"],[315,35,337,33,"peg$literalExpectation"],[315,36,337,34,"text"],[315,40,337,38],[315,42,337,40,"ignoreCase"],[315,52,337,50],[315,54,337,52],[316,6,338,4],[316,13,338,11],[317,8,338,13,"type"],[317,12,338,17],[317,14,338,19],[317,23,338,28],[318,8,338,30,"text"],[318,12,338,34],[318,14,338,36,"text"],[318,18,338,40],[319,8,338,42,"ignoreCase"],[319,18,338,52],[319,20,338,54,"ignoreCase"],[320,6,338,65],[320,7,338,66],[321,4,339,2],[322,4,341,2],[322,13,341,11,"peg$classExpectation"],[322,33,341,31,"peg$classExpectation"],[322,34,341,32,"parts"],[322,39,341,37],[322,41,341,39,"inverted"],[322,49,341,47],[322,51,341,49,"ignoreCase"],[322,61,341,59],[322,63,341,61],[323,6,342,4],[323,13,342,11],[324,8,342,13,"type"],[324,12,342,17],[324,14,342,19],[324,21,342,26],[325,8,342,28,"parts"],[325,13,342,33],[325,15,342,35,"parts"],[325,20,342,40],[326,8,342,42,"inverted"],[326,16,342,50],[326,18,342,52,"inverted"],[326,26,342,60],[327,8,342,62,"ignoreCase"],[327,18,342,72],[327,20,342,74,"ignoreCase"],[328,6,342,85],[328,7,342,86],[329,4,343,2],[330,4,345,2],[330,13,345,11,"peg$endExpectation"],[330,31,345,29,"peg$endExpectation"],[330,32,345,29],[330,34,345,32],[331,6,346,4],[331,13,346,11],[332,8,346,13,"type"],[332,12,346,17],[332,14,346,19],[333,6,346,25],[333,7,346,26],[334,4,347,2],[335,4,349,2],[335,13,349,11,"peg$otherExpectation"],[335,33,349,31,"peg$otherExpectation"],[335,34,349,32,"description"],[335,45,349,43],[335,47,349,45],[336,6,350,4],[336,13,350,11],[337,8,350,13,"type"],[337,12,350,17],[337,14,350,19],[337,21,350,26],[338,8,350,28,"description"],[338,19,350,39],[338,21,350,41,"description"],[339,6,350,53],[339,7,350,54],[340,4,351,2],[341,4,353,2],[341,13,353,11,"peg$computePosDetails"],[341,34,353,32,"peg$computePosDetails"],[341,35,353,33,"pos"],[341,38,353,36],[341,40,353,38],[342,6,354,4],[342,10,354,8,"details"],[342,17,354,15],[342,20,354,18,"peg$posDetailsCache"],[342,39,354,37],[342,40,354,38,"pos"],[342,43,354,41],[342,44,354,42],[343,6,355,4],[343,10,355,8,"p"],[343,11,355,9],[344,6,357,4],[344,10,357,8,"details"],[344,17,357,15],[344,19,357,17],[345,8,358,6],[345,15,358,13,"details"],[345,22,358,20],[346,6,359,4],[346,7,359,5],[346,13,359,11],[347,8,360,6],[347,12,360,10,"pos"],[347,15,360,13],[347,19,360,17,"peg$posDetailsCache"],[347,38,360,36],[347,39,360,37,"length"],[347,45,360,43],[347,47,360,45],[348,10,361,8,"p"],[348,11,361,9],[348,14,361,12,"peg$posDetailsCache"],[348,33,361,31],[348,34,361,32,"length"],[348,40,361,38],[348,43,361,41],[348,44,361,42],[349,8,362,6],[349,9,362,7],[349,15,362,13],[350,10,363,8,"p"],[350,11,363,9],[350,14,363,12,"pos"],[350,17,363,15],[351,10,364,8],[351,17,364,15],[351,18,364,16,"peg$posDetailsCache"],[351,37,364,35],[351,38,364,36],[351,40,364,38,"p"],[351,41,364,39],[351,42,364,40],[351,44,364,42],[351,45,364,43],[352,8,365,6],[353,8,367,6,"details"],[353,15,367,13],[353,18,367,16,"peg$posDetailsCache"],[353,37,367,35],[353,38,367,36,"p"],[353,39,367,37],[353,40,367,38],[354,8,368,6,"details"],[354,15,368,13],[354,18,368,16],[355,10,369,8,"line"],[355,14,369,12],[355,16,369,14,"details"],[355,23,369,21],[355,24,369,22,"line"],[355,28,369,26],[356,10,370,8,"column"],[356,16,370,14],[356,18,370,16,"details"],[356,25,370,23],[356,26,370,24,"column"],[357,8,371,6],[357,9,371,7],[358,8,373,6],[358,15,373,13,"p"],[358,16,373,14],[358,19,373,17,"pos"],[358,22,373,20],[358,24,373,22],[359,10,374,8],[359,14,374,12,"input"],[359,19,374,17],[359,20,374,18,"charCodeAt"],[359,30,374,28],[359,31,374,29,"p"],[359,32,374,30],[359,33,374,31],[359,38,374,36],[359,40,374,38],[359,42,374,40],[360,12,375,10,"details"],[360,19,375,17],[360,20,375,18,"line"],[360,24,375,22],[360,26,375,24],[361,12,376,10,"details"],[361,19,376,17],[361,20,376,18,"column"],[361,26,376,24],[361,29,376,27],[361,30,376,28],[362,10,377,8],[362,11,377,9],[362,17,377,15],[363,12,378,10,"details"],[363,19,378,17],[363,20,378,18,"column"],[363,26,378,24],[363,28,378,26],[364,10,379,8],[365,10,381,8,"p"],[365,11,381,9],[365,13,381,11],[366,8,382,6],[367,8,384,6,"peg$posDetailsCache"],[367,27,384,25],[367,28,384,26,"pos"],[367,31,384,29],[367,32,384,30],[367,35,384,33,"details"],[367,42,384,40],[368,8,386,6],[368,15,386,13,"details"],[368,22,386,20],[369,6,387,4],[370,4,388,2],[371,4,390,2],[371,13,390,11,"peg$computeLocation"],[371,32,390,30,"peg$computeLocation"],[371,33,390,31,"startPos"],[371,41,390,39],[371,43,390,41,"endPos"],[371,49,390,47],[371,51,390,49,"offset"],[371,57,390,55],[371,59,390,57],[372,6,391,4],[372,10,391,8,"startPosDetails"],[372,25,391,23],[372,28,391,26,"peg$computePosDetails"],[372,49,391,47],[372,50,391,48,"startPos"],[372,58,391,56],[372,59,391,57],[373,6,392,4],[373,10,392,8,"endPosDetails"],[373,23,392,21],[373,26,392,24,"peg$computePosDetails"],[373,47,392,45],[373,48,392,46,"endPos"],[373,54,392,52],[373,55,392,53],[374,6,394,4],[374,10,394,8,"res"],[374,13,394,11],[374,16,394,14],[375,8,395,6,"source"],[375,14,395,12],[375,16,395,14,"peg$source"],[375,26,395,24],[376,8,396,6,"start"],[376,13,396,11],[376,15,396,13],[377,10,397,8,"offset"],[377,16,397,14],[377,18,397,16,"startPos"],[377,26,397,24],[378,10,398,8,"line"],[378,14,398,12],[378,16,398,14,"startPosDetails"],[378,31,398,29],[378,32,398,30,"line"],[378,36,398,34],[379,10,399,8,"column"],[379,16,399,14],[379,18,399,16,"startPosDetails"],[379,33,399,31],[379,34,399,32,"column"],[380,8,400,6],[380,9,400,7],[381,8,401,6,"end"],[381,11,401,9],[381,13,401,11],[382,10,402,8,"offset"],[382,16,402,14],[382,18,402,16,"endPos"],[382,24,402,22],[383,10,403,8,"line"],[383,14,403,12],[383,16,403,14,"endPosDetails"],[383,29,403,27],[383,30,403,28,"line"],[383,34,403,32],[384,10,404,8,"column"],[384,16,404,14],[384,18,404,16,"endPosDetails"],[384,31,404,29],[384,32,404,30,"column"],[385,8,405,6],[386,6,406,4],[386,7,406,5],[387,6,407,4],[387,13,407,11,"res"],[387,16,407,14],[388,4,408,2],[389,4,410,2],[389,13,410,11,"peg$fail"],[389,21,410,19,"peg$fail"],[389,22,410,20,"expected"],[389,30,410,28],[389,32,410,30],[390,6,411,4],[390,10,411,8,"peg$currPos"],[390,21,411,19],[390,24,411,22,"peg$maxFailPos"],[390,38,411,36],[390,40,411,38],[391,8,411,40],[392,6,411,48],[393,6,413,4],[393,10,413,8,"peg$currPos"],[393,21,413,19],[393,24,413,22,"peg$maxFailPos"],[393,38,413,36],[393,40,413,38],[394,8,414,6,"peg$maxFailPos"],[394,22,414,20],[394,25,414,23,"peg$currPos"],[394,36,414,34],[395,8,415,6,"peg$maxFailExpected"],[395,27,415,25],[395,30,415,28],[395,32,415,30],[396,6,416,4],[397,6,418,4,"peg$maxFailExpected"],[397,25,418,23],[397,26,418,24,"push"],[397,30,418,28],[397,31,418,29,"expected"],[397,39,418,37],[397,40,418,38],[398,4,419,2],[399,4,421,2],[399,13,421,11,"peg$buildStructuredError"],[399,37,421,35,"peg$buildStructuredError"],[399,38,421,36,"expected"],[399,46,421,44],[399,48,421,46,"found"],[399,53,421,51],[399,55,421,53,"location"],[399,63,421,61],[399,65,421,63],[400,6,422,4],[400,13,422,11],[400,17,422,15,"peg$SyntaxError"],[400,32,422,30],[400,33,423,6,"peg$SyntaxError"],[400,48,423,21],[400,49,423,22,"buildMessage"],[400,61,423,34],[400,62,423,35,"expected"],[400,70,423,43],[400,72,423,45,"found"],[400,77,423,50],[400,78,423,51],[400,80,424,6,"expected"],[400,88,424,14],[400,90,425,6,"found"],[400,95,425,11],[400,97,426,6,"location"],[400,105,427,4],[400,106,427,5],[401,4,428,2],[402,4,430,2],[402,13,430,11,"peg$parsepgn"],[402,25,430,23,"peg$parsepgn"],[402,26,430,23],[402,28,430,26],[403,6,431,4],[403,10,431,8,"s0"],[403,12,431,10],[403,14,431,12,"s1"],[403,16,431,14],[403,18,431,16,"s2"],[403,20,431,18],[404,6,433,4,"s0"],[404,8,433,6],[404,11,433,9,"peg$currPos"],[404,22,433,20],[405,6,434,4,"s1"],[405,8,434,6],[405,11,434,9,"peg$parsetagPairSection"],[405,34,434,32],[405,35,434,33],[405,36,434,34],[406,6,435,4,"s2"],[406,8,435,6],[406,11,435,9,"peg$parsemoveTextSection"],[406,35,435,33],[406,36,435,34],[406,37,435,35],[407,6,436,4,"s0"],[407,8,436,6],[407,11,436,9,"peg$f0"],[407,17,436,15],[407,18,436,16,"s1"],[407,20,436,18],[407,22,436,20,"s2"],[407,24,436,22],[407,25,436,23],[408,6,438,4],[408,13,438,11,"s0"],[408,15,438,13],[409,4,439,2],[410,4,441,2],[410,13,441,11,"peg$parsetagPairSection"],[410,36,441,34,"peg$parsetagPairSection"],[410,37,441,34],[410,39,441,37],[411,6,442,4],[411,10,442,8,"s0"],[411,12,442,10],[411,14,442,12,"s1"],[411,16,442,14],[411,18,442,16,"s2"],[411,20,442,18],[412,6,444,4,"s0"],[412,8,444,6],[412,11,444,9,"peg$currPos"],[412,22,444,20],[413,6,445,4,"s1"],[413,8,445,6],[413,11,445,9],[413,13,445,11],[414,6,446,4,"s2"],[414,8,446,6],[414,11,446,9,"peg$parsetagPair"],[414,27,446,25],[414,28,446,26],[414,29,446,27],[415,6,447,4],[415,13,447,11,"s2"],[415,15,447,13],[415,20,447,18,"peg$FAILED"],[415,30,447,28],[415,32,447,30],[416,8,448,6,"s1"],[416,10,448,8],[416,11,448,9,"push"],[416,15,448,13],[416,16,448,14,"s2"],[416,18,448,16],[416,19,448,17],[417,8,449,6,"s2"],[417,10,449,8],[417,13,449,11,"peg$parsetagPair"],[417,29,449,27],[417,30,449,28],[417,31,449,29],[418,6,450,4],[419,6,451,4,"s2"],[419,8,451,6],[419,11,451,9,"peg$parse_"],[419,21,451,19],[419,22,451,20],[419,23,451,21],[420,6,452,4,"s0"],[420,8,452,6],[420,11,452,9,"peg$f1"],[420,17,452,15],[420,18,452,16,"s1"],[420,20,452,18],[420,21,452,19],[421,6,454,4],[421,13,454,11,"s0"],[421,15,454,13],[422,4,455,2],[423,4,457,2],[423,13,457,11,"peg$parsetagPair"],[423,29,457,27,"peg$parsetagPair"],[423,30,457,27],[423,32,457,30],[424,6,458,4],[424,10,458,8,"s0"],[424,12,458,10],[424,14,458,12,"s2"],[424,16,458,14],[424,18,458,16,"s4"],[424,20,458,18],[424,22,458,20,"s6"],[424,24,458,22],[424,26,458,24,"s7"],[424,28,458,26],[424,30,458,28,"s8"],[424,32,458,30],[424,34,458,32,"s10"],[424,37,458,35],[425,6,460,4,"peg$silentFails"],[425,21,460,19],[425,23,460,21],[426,6,461,4,"s0"],[426,8,461,6],[426,11,461,9,"peg$currPos"],[426,22,461,20],[427,6,462,4,"peg$parse_"],[427,16,462,14],[427,17,462,15],[427,18,462,16],[428,6,463,4],[428,10,463,8,"input"],[428,15,463,13],[428,16,463,14,"charCodeAt"],[428,26,463,24],[428,27,463,25,"peg$currPos"],[428,38,463,36],[428,39,463,37],[428,44,463,42],[428,46,463,44],[428,48,463,46],[429,8,464,6,"s2"],[429,10,464,8],[429,13,464,11,"peg$c0"],[429,19,464,17],[430,8,465,6,"peg$currPos"],[430,19,465,17],[430,21,465,19],[431,6,466,4],[431,7,466,5],[431,13,466,11],[432,8,467,6,"s2"],[432,10,467,8],[432,13,467,11,"peg$FAILED"],[432,23,467,21],[433,8,468,6],[433,12,468,10,"peg$silentFails"],[433,27,468,25],[433,32,468,30],[433,33,468,31],[433,35,468,33],[434,10,468,35,"peg$fail"],[434,18,468,43],[434,19,468,44,"peg$e1"],[434,25,468,50],[434,26,468,51],[435,8,468,53],[436,6,469,4],[437,6,470,4],[437,10,470,8,"s2"],[437,12,470,10],[437,17,470,15,"peg$FAILED"],[437,27,470,25],[437,29,470,27],[438,8,471,6,"peg$parse_"],[438,18,471,16],[438,19,471,17],[438,20,471,18],[439,8,472,6,"s4"],[439,10,472,8],[439,13,472,11,"peg$parsetagName"],[439,29,472,27],[439,30,472,28],[439,31,472,29],[440,8,473,6],[440,12,473,10,"s4"],[440,14,473,12],[440,19,473,17,"peg$FAILED"],[440,29,473,27],[440,31,473,29],[441,10,474,8,"peg$parse_"],[441,20,474,18],[441,21,474,19],[441,22,474,20],[442,10,475,8],[442,14,475,12,"input"],[442,19,475,17],[442,20,475,18,"charCodeAt"],[442,30,475,28],[442,31,475,29,"peg$currPos"],[442,42,475,40],[442,43,475,41],[442,48,475,46],[442,50,475,48],[442,52,475,50],[443,12,476,10,"s6"],[443,14,476,12],[443,17,476,15,"peg$c1"],[443,23,476,21],[444,12,477,10,"peg$currPos"],[444,23,477,21],[444,25,477,23],[445,10,478,8],[445,11,478,9],[445,17,478,15],[446,12,479,10,"s6"],[446,14,479,12],[446,17,479,15,"peg$FAILED"],[446,27,479,25],[447,12,480,10],[447,16,480,14,"peg$silentFails"],[447,31,480,29],[447,36,480,34],[447,37,480,35],[447,39,480,37],[448,14,480,39,"peg$fail"],[448,22,480,47],[448,23,480,48,"peg$e2"],[448,29,480,54],[448,30,480,55],[449,12,480,57],[450,10,481,8],[451,10,482,8],[451,14,482,12,"s6"],[451,16,482,14],[451,21,482,19,"peg$FAILED"],[451,31,482,29],[451,33,482,31],[452,12,483,10,"s7"],[452,14,483,12],[452,17,483,15,"peg$parsetagValue"],[452,34,483,32],[452,35,483,33],[452,36,483,34],[453,12,484,10],[453,16,484,14,"input"],[453,21,484,19],[453,22,484,20,"charCodeAt"],[453,32,484,30],[453,33,484,31,"peg$currPos"],[453,44,484,42],[453,45,484,43],[453,50,484,48],[453,52,484,50],[453,54,484,52],[454,14,485,12,"s8"],[454,16,485,14],[454,19,485,17,"peg$c1"],[454,25,485,23],[455,14,486,12,"peg$currPos"],[455,25,486,23],[455,27,486,25],[456,12,487,10],[456,13,487,11],[456,19,487,17],[457,14,488,12,"s8"],[457,16,488,14],[457,19,488,17,"peg$FAILED"],[457,29,488,27],[458,14,489,12],[458,18,489,16,"peg$silentFails"],[458,33,489,31],[458,38,489,36],[458,39,489,37],[458,41,489,39],[459,16,489,41,"peg$fail"],[459,24,489,49],[459,25,489,50,"peg$e2"],[459,31,489,56],[459,32,489,57],[460,14,489,59],[461,12,490,10],[462,12,491,10],[462,16,491,14,"s8"],[462,18,491,16],[462,23,491,21,"peg$FAILED"],[462,33,491,31],[462,35,491,33],[463,14,492,12,"peg$parse_"],[463,24,492,22],[463,25,492,23],[463,26,492,24],[464,14,493,12],[464,18,493,16,"input"],[464,23,493,21],[464,24,493,22,"charCodeAt"],[464,34,493,32],[464,35,493,33,"peg$currPos"],[464,46,493,44],[464,47,493,45],[464,52,493,50],[464,54,493,52],[464,56,493,54],[465,16,494,14,"s10"],[465,19,494,17],[465,22,494,20,"peg$c2"],[465,28,494,26],[466,16,495,14,"peg$currPos"],[466,27,495,25],[466,29,495,27],[467,14,496,12],[467,15,496,13],[467,21,496,19],[468,16,497,14,"s10"],[468,19,497,17],[468,22,497,20,"peg$FAILED"],[468,32,497,30],[469,16,498,14],[469,20,498,18,"peg$silentFails"],[469,35,498,33],[469,40,498,38],[469,41,498,39],[469,43,498,41],[470,18,498,43,"peg$fail"],[470,26,498,51],[470,27,498,52,"peg$e3"],[470,33,498,58],[470,34,498,59],[471,16,498,61],[472,14,499,12],[473,14,500,12],[473,18,500,16,"s10"],[473,21,500,19],[473,26,500,24,"peg$FAILED"],[473,36,500,34],[473,38,500,36],[474,16,501,14,"s0"],[474,18,501,16],[474,21,501,19,"peg$f2"],[474,27,501,25],[474,28,501,26,"s4"],[474,30,501,28],[474,32,501,30,"s7"],[474,34,501,32],[474,35,501,33],[475,14,502,12],[475,15,502,13],[475,21,502,19],[476,16,503,14,"peg$currPos"],[476,27,503,25],[476,30,503,28,"s0"],[476,32,503,30],[477,16,504,14,"s0"],[477,18,504,16],[477,21,504,19,"peg$FAILED"],[477,31,504,29],[478,14,505,12],[479,12,506,10],[479,13,506,11],[479,19,506,17],[480,14,507,12,"peg$currPos"],[480,25,507,23],[480,28,507,26,"s0"],[480,30,507,28],[481,14,508,12,"s0"],[481,16,508,14],[481,19,508,17,"peg$FAILED"],[481,29,508,27],[482,12,509,10],[483,10,510,8],[483,11,510,9],[483,17,510,15],[484,12,511,10,"peg$currPos"],[484,23,511,21],[484,26,511,24,"s0"],[484,28,511,26],[485,12,512,10,"s0"],[485,14,512,12],[485,17,512,15,"peg$FAILED"],[485,27,512,25],[486,10,513,8],[487,8,514,6],[487,9,514,7],[487,15,514,13],[488,10,515,8,"peg$currPos"],[488,21,515,19],[488,24,515,22,"s0"],[488,26,515,24],[489,10,516,8,"s0"],[489,12,516,10],[489,15,516,13,"peg$FAILED"],[489,25,516,23],[490,8,517,6],[491,6,518,4],[491,7,518,5],[491,13,518,11],[492,8,519,6,"peg$currPos"],[492,19,519,17],[492,22,519,20,"s0"],[492,24,519,22],[493,8,520,6,"s0"],[493,10,520,8],[493,13,520,11,"peg$FAILED"],[493,23,520,21],[494,6,521,4],[495,6,522,4,"peg$silentFails"],[495,21,522,19],[495,23,522,21],[496,6,523,4],[496,10,523,8,"s0"],[496,12,523,10],[496,17,523,15,"peg$FAILED"],[496,27,523,25],[496,29,523,27],[497,8,524,6],[497,12,524,10,"peg$silentFails"],[497,27,524,25],[497,32,524,30],[497,33,524,31],[497,35,524,33],[498,10,524,35,"peg$fail"],[498,18,524,43],[498,19,524,44,"peg$e0"],[498,25,524,50],[498,26,524,51],[499,8,524,53],[500,6,525,4],[501,6,527,4],[501,13,527,11,"s0"],[501,15,527,13],[502,4,528,2],[503,4,530,2],[503,13,530,11,"peg$parsetagName"],[503,29,530,27,"peg$parsetagName"],[503,30,530,27],[503,32,530,30],[504,6,531,4],[504,10,531,8,"s0"],[504,12,531,10],[504,14,531,12,"s1"],[504,16,531,14],[504,18,531,16,"s2"],[504,20,531,18],[505,6,533,4,"peg$silentFails"],[505,21,533,19],[505,23,533,21],[506,6,534,4,"s0"],[506,8,534,6],[506,11,534,9,"peg$currPos"],[506,22,534,20],[507,6,535,4,"s1"],[507,8,535,6],[507,11,535,9],[507,13,535,11],[508,6,536,4,"s2"],[508,8,536,6],[508,11,536,9,"input"],[508,16,536,14],[508,17,536,15,"charAt"],[508,23,536,21],[508,24,536,22,"peg$currPos"],[508,35,536,33],[508,36,536,34],[509,6,537,4],[509,10,537,8,"peg$r0"],[509,16,537,14],[509,17,537,15,"test"],[509,21,537,19],[509,22,537,20,"s2"],[509,24,537,22],[509,25,537,23],[509,27,537,25],[510,8,538,6,"peg$currPos"],[510,19,538,17],[510,21,538,19],[511,6,539,4],[511,7,539,5],[511,13,539,11],[512,8,540,6,"s2"],[512,10,540,8],[512,13,540,11,"peg$FAILED"],[512,23,540,21],[513,8,541,6],[513,12,541,10,"peg$silentFails"],[513,27,541,25],[513,32,541,30],[513,33,541,31],[513,35,541,33],[514,10,541,35,"peg$fail"],[514,18,541,43],[514,19,541,44,"peg$e5"],[514,25,541,50],[514,26,541,51],[515,8,541,53],[516,6,542,4],[517,6,543,4],[517,10,543,8,"s2"],[517,12,543,10],[517,17,543,15,"peg$FAILED"],[517,27,543,25],[517,29,543,27],[518,8,544,6],[518,15,544,13,"s2"],[518,17,544,15],[518,22,544,20,"peg$FAILED"],[518,32,544,30],[518,34,544,32],[519,10,545,8,"s1"],[519,12,545,10],[519,13,545,11,"push"],[519,17,545,15],[519,18,545,16,"s2"],[519,20,545,18],[519,21,545,19],[520,10,546,8,"s2"],[520,12,546,10],[520,15,546,13,"input"],[520,20,546,18],[520,21,546,19,"charAt"],[520,27,546,25],[520,28,546,26,"peg$currPos"],[520,39,546,37],[520,40,546,38],[521,10,547,8],[521,14,547,12,"peg$r0"],[521,20,547,18],[521,21,547,19,"test"],[521,25,547,23],[521,26,547,24,"s2"],[521,28,547,26],[521,29,547,27],[521,31,547,29],[522,12,548,10,"peg$currPos"],[522,23,548,21],[522,25,548,23],[523,10,549,8],[523,11,549,9],[523,17,549,15],[524,12,550,10,"s2"],[524,14,550,12],[524,17,550,15,"peg$FAILED"],[524,27,550,25],[525,12,551,10],[525,16,551,14,"peg$silentFails"],[525,31,551,29],[525,36,551,34],[525,37,551,35],[525,39,551,37],[526,14,551,39,"peg$fail"],[526,22,551,47],[526,23,551,48,"peg$e5"],[526,29,551,54],[526,30,551,55],[527,12,551,57],[528,10,552,8],[529,8,553,6],[530,6,554,4],[530,7,554,5],[530,13,554,11],[531,8,555,6,"s1"],[531,10,555,8],[531,13,555,11,"peg$FAILED"],[531,23,555,21],[532,6,556,4],[533,6,557,4],[533,10,557,8,"s1"],[533,12,557,10],[533,17,557,15,"peg$FAILED"],[533,27,557,25],[533,29,557,27],[534,8,558,6,"s0"],[534,10,558,8],[534,13,558,11,"input"],[534,18,558,16],[534,19,558,17,"substring"],[534,28,558,26],[534,29,558,27,"s0"],[534,31,558,29],[534,33,558,31,"peg$currPos"],[534,44,558,42],[534,45,558,43],[535,6,559,4],[535,7,559,5],[535,13,559,11],[536,8,560,6,"s0"],[536,10,560,8],[536,13,560,11,"s1"],[536,15,560,13],[537,6,561,4],[538,6,562,4,"peg$silentFails"],[538,21,562,19],[538,23,562,21],[539,6,563,4],[539,10,563,8,"s0"],[539,12,563,10],[539,17,563,15,"peg$FAILED"],[539,27,563,25],[539,29,563,27],[540,8,564,6,"s1"],[540,10,564,8],[540,13,564,11,"peg$FAILED"],[540,23,564,21],[541,8,565,6],[541,12,565,10,"peg$silentFails"],[541,27,565,25],[541,32,565,30],[541,33,565,31],[541,35,565,33],[542,10,565,35,"peg$fail"],[542,18,565,43],[542,19,565,44,"peg$e4"],[542,25,565,50],[542,26,565,51],[543,8,565,53],[544,6,566,4],[545,6,568,4],[545,13,568,11,"s0"],[545,15,568,13],[546,4,569,2],[547,4,571,2],[547,13,571,11,"peg$parsetagValue"],[547,30,571,28,"peg$parsetagValue"],[547,31,571,28],[547,33,571,31],[548,6,572,4],[548,10,572,8,"s0"],[548,12,572,10],[548,14,572,12,"s1"],[548,16,572,14],[548,18,572,16,"s2"],[548,20,572,18],[549,6,574,4,"peg$silentFails"],[549,21,574,19],[549,23,574,21],[550,6,575,4,"s0"],[550,8,575,6],[550,11,575,9,"peg$currPos"],[550,22,575,20],[551,6,576,4,"s1"],[551,8,576,6],[551,11,576,9],[551,13,576,11],[552,6,577,4,"s2"],[552,8,577,6],[552,11,577,9,"input"],[552,16,577,14],[552,17,577,15,"charAt"],[552,23,577,21],[552,24,577,22,"peg$currPos"],[552,35,577,33],[552,36,577,34],[553,6,578,4],[553,10,578,8,"peg$r1"],[553,16,578,14],[553,17,578,15,"test"],[553,21,578,19],[553,22,578,20,"s2"],[553,24,578,22],[553,25,578,23],[553,27,578,25],[554,8,579,6,"peg$currPos"],[554,19,579,17],[554,21,579,19],[555,6,580,4],[555,7,580,5],[555,13,580,11],[556,8,581,6,"s2"],[556,10,581,8],[556,13,581,11,"peg$FAILED"],[556,23,581,21],[557,8,582,6],[557,12,582,10,"peg$silentFails"],[557,27,582,25],[557,32,582,30],[557,33,582,31],[557,35,582,33],[558,10,582,35,"peg$fail"],[558,18,582,43],[558,19,582,44,"peg$e7"],[558,25,582,50],[558,26,582,51],[559,8,582,53],[560,6,583,4],[561,6,584,4],[561,13,584,11,"s2"],[561,15,584,13],[561,20,584,18,"peg$FAILED"],[561,30,584,28],[561,32,584,30],[562,8,585,6,"s1"],[562,10,585,8],[562,11,585,9,"push"],[562,15,585,13],[562,16,585,14,"s2"],[562,18,585,16],[562,19,585,17],[563,8,586,6,"s2"],[563,10,586,8],[563,13,586,11,"input"],[563,18,586,16],[563,19,586,17,"charAt"],[563,25,586,23],[563,26,586,24,"peg$currPos"],[563,37,586,35],[563,38,586,36],[564,8,587,6],[564,12,587,10,"peg$r1"],[564,18,587,16],[564,19,587,17,"test"],[564,23,587,21],[564,24,587,22,"s2"],[564,26,587,24],[564,27,587,25],[564,29,587,27],[565,10,588,8,"peg$currPos"],[565,21,588,19],[565,23,588,21],[566,8,589,6],[566,9,589,7],[566,15,589,13],[567,10,590,8,"s2"],[567,12,590,10],[567,15,590,13,"peg$FAILED"],[567,25,590,23],[568,10,591,8],[568,14,591,12,"peg$silentFails"],[568,29,591,27],[568,34,591,32],[568,35,591,33],[568,37,591,35],[569,12,591,37,"peg$fail"],[569,20,591,45],[569,21,591,46,"peg$e7"],[569,27,591,52],[569,28,591,53],[570,10,591,55],[571,8,592,6],[572,6,593,4],[573,6,594,4,"s0"],[573,8,594,6],[573,11,594,9,"input"],[573,16,594,14],[573,17,594,15,"substring"],[573,26,594,24],[573,27,594,25,"s0"],[573,29,594,27],[573,31,594,29,"peg$currPos"],[573,42,594,40],[573,43,594,41],[574,6,595,4,"peg$silentFails"],[574,21,595,19],[574,23,595,21],[575,6,596,4,"s1"],[575,8,596,6],[575,11,596,9,"peg$FAILED"],[575,21,596,19],[576,6,597,4],[576,10,597,8,"peg$silentFails"],[576,25,597,23],[576,30,597,28],[576,31,597,29],[576,33,597,31],[577,8,597,33,"peg$fail"],[577,16,597,41],[577,17,597,42,"peg$e6"],[577,23,597,48],[577,24,597,49],[578,6,597,51],[579,6,599,4],[579,13,599,11,"s0"],[579,15,599,13],[580,4,600,2],[581,4,602,2],[581,13,602,11,"peg$parsemoveTextSection"],[581,37,602,35,"peg$parsemoveTextSection"],[581,38,602,35],[581,40,602,38],[582,6,603,4],[582,10,603,8,"s0"],[582,12,603,10],[582,14,603,12,"s1"],[582,16,603,14],[582,18,603,16,"s3"],[582,20,603,18],[583,6,605,4,"s0"],[583,8,605,6],[583,11,605,9,"peg$currPos"],[583,22,605,20],[584,6,606,4,"s1"],[584,8,606,6],[584,11,606,9,"peg$parseline"],[584,24,606,22],[584,25,606,23],[584,26,606,24],[585,6,607,4,"peg$parse_"],[585,16,607,14],[585,17,607,15],[585,18,607,16],[586,6,608,4,"s3"],[586,8,608,6],[586,11,608,9,"peg$parsegameTerminationMarker"],[586,41,608,39],[586,42,608,40],[586,43,608,41],[587,6,609,4],[587,10,609,8,"s3"],[587,12,609,10],[587,17,609,15,"peg$FAILED"],[587,27,609,25],[587,29,609,27],[588,8,610,6,"s3"],[588,10,610,8],[588,13,610,11],[588,17,610,15],[589,6,611,4],[590,6,612,4,"peg$parse_"],[590,16,612,14],[590,17,612,15],[590,18,612,16],[591,6,613,4,"s0"],[591,8,613,6],[591,11,613,9,"peg$f3"],[591,17,613,15],[591,18,613,16,"s1"],[591,20,613,18],[591,22,613,20,"s3"],[591,24,613,22],[591,25,613,23],[592,6,615,4],[592,13,615,11,"s0"],[592,15,615,13],[593,4,616,2],[594,4,618,2],[594,13,618,11,"peg$parseline"],[594,26,618,24,"peg$parseline"],[594,27,618,24],[594,29,618,27],[595,6,619,4],[595,10,619,8,"s0"],[595,12,619,10],[595,14,619,12,"s1"],[595,16,619,14],[595,18,619,16,"s2"],[595,20,619,18],[595,22,619,20,"s3"],[595,24,619,22],[596,6,621,4,"s0"],[596,8,621,6],[596,11,621,9,"peg$currPos"],[596,22,621,20],[597,6,622,4,"s1"],[597,8,622,6],[597,11,622,9,"peg$parsecomment"],[597,27,622,25],[597,28,622,26],[597,29,622,27],[598,6,623,4],[598,10,623,8,"s1"],[598,12,623,10],[598,17,623,15,"peg$FAILED"],[598,27,623,25],[598,29,623,27],[599,8,624,6,"s1"],[599,10,624,8],[599,13,624,11],[599,17,624,15],[600,6,625,4],[601,6,626,4,"s2"],[601,8,626,6],[601,11,626,9],[601,13,626,11],[602,6,627,4,"s3"],[602,8,627,6],[602,11,627,9,"peg$parsemove"],[602,24,627,22],[602,25,627,23],[602,26,627,24],[603,6,628,4],[603,13,628,11,"s3"],[603,15,628,13],[603,20,628,18,"peg$FAILED"],[603,30,628,28],[603,32,628,30],[604,8,629,6,"s2"],[604,10,629,8],[604,11,629,9,"push"],[604,15,629,13],[604,16,629,14,"s3"],[604,18,629,16],[604,19,629,17],[605,8,630,6,"s3"],[605,10,630,8],[605,13,630,11,"peg$parsemove"],[605,26,630,24],[605,27,630,25],[605,28,630,26],[606,6,631,4],[607,6,632,4,"s0"],[607,8,632,6],[607,11,632,9,"peg$f4"],[607,17,632,15],[607,18,632,16,"s1"],[607,20,632,18],[607,22,632,20,"s2"],[607,24,632,22],[607,25,632,23],[608,6,634,4],[608,13,634,11,"s0"],[608,15,634,13],[609,4,635,2],[610,4,637,2],[610,13,637,11,"peg$parsemove"],[610,26,637,24,"peg$parsemove"],[610,27,637,24],[610,29,637,27],[611,6,638,4],[611,10,638,8,"s0"],[611,12,638,10],[611,14,638,12,"s4"],[611,16,638,14],[611,18,638,16,"s5"],[611,20,638,18],[611,22,638,20,"s6"],[611,24,638,22],[611,26,638,24,"s7"],[611,28,638,26],[611,30,638,28,"s8"],[611,32,638,30],[611,34,638,32,"s9"],[611,36,638,34],[611,38,638,36,"s10"],[611,41,638,39],[612,6,640,4,"s0"],[612,8,640,6],[612,11,640,9,"peg$currPos"],[612,22,640,20],[613,6,641,4,"peg$parse_"],[613,16,641,14],[613,17,641,15],[613,18,641,16],[614,6,642,4,"peg$parsemoveNumber"],[614,25,642,23],[614,26,642,24],[614,27,642,25],[615,6,643,4,"peg$parse_"],[615,16,643,14],[615,17,643,15],[615,18,643,16],[616,6,644,4,"s4"],[616,8,644,6],[616,11,644,9,"peg$parsesan"],[616,23,644,21],[616,24,644,22],[616,25,644,23],[617,6,645,4],[617,10,645,8,"s4"],[617,12,645,10],[617,17,645,15,"peg$FAILED"],[617,27,645,25],[617,29,645,27],[618,8,646,6,"s5"],[618,10,646,8],[618,13,646,11,"peg$parsesuffixAnnotation"],[618,38,646,36],[618,39,646,37],[618,40,646,38],[619,8,647,6],[619,12,647,10,"s5"],[619,14,647,12],[619,19,647,17,"peg$FAILED"],[619,29,647,27],[619,31,647,29],[620,10,648,8,"s5"],[620,12,648,10],[620,15,648,13],[620,19,648,17],[621,8,649,6],[622,8,650,6,"s6"],[622,10,650,8],[622,13,650,11],[622,15,650,13],[623,8,651,6,"s7"],[623,10,651,8],[623,13,651,11,"peg$parsenag"],[623,25,651,23],[623,26,651,24],[623,27,651,25],[624,8,652,6],[624,15,652,13,"s7"],[624,17,652,15],[624,22,652,20,"peg$FAILED"],[624,32,652,30],[624,34,652,32],[625,10,653,8,"s6"],[625,12,653,10],[625,13,653,11,"push"],[625,17,653,15],[625,18,653,16,"s7"],[625,20,653,18],[625,21,653,19],[626,10,654,8,"s7"],[626,12,654,10],[626,15,654,13,"peg$parsenag"],[626,27,654,25],[626,28,654,26],[626,29,654,27],[627,8,655,6],[628,8,656,6,"s7"],[628,10,656,8],[628,13,656,11,"peg$parse_"],[628,23,656,21],[628,24,656,22],[628,25,656,23],[629,8,657,6,"s8"],[629,10,657,8],[629,13,657,11,"peg$parsecomment"],[629,29,657,27],[629,30,657,28],[629,31,657,29],[630,8,658,6],[630,12,658,10,"s8"],[630,14,658,12],[630,19,658,17,"peg$FAILED"],[630,29,658,27],[630,31,658,29],[631,10,659,8,"s8"],[631,12,659,10],[631,15,659,13],[631,19,659,17],[632,8,660,6],[633,8,661,6,"s9"],[633,10,661,8],[633,13,661,11],[633,15,661,13],[634,8,662,6,"s10"],[634,11,662,9],[634,14,662,12,"peg$parsevariation"],[634,32,662,30],[634,33,662,31],[634,34,662,32],[635,8,663,6],[635,15,663,13,"s10"],[635,18,663,16],[635,23,663,21,"peg$FAILED"],[635,33,663,31],[635,35,663,33],[636,10,664,8,"s9"],[636,12,664,10],[636,13,664,11,"push"],[636,17,664,15],[636,18,664,16,"s10"],[636,21,664,19],[636,22,664,20],[637,10,665,8,"s10"],[637,13,665,11],[637,16,665,14,"peg$parsevariation"],[637,34,665,32],[637,35,665,33],[637,36,665,34],[638,8,666,6],[639,8,667,6,"s0"],[639,10,667,8],[639,13,667,11,"peg$f5"],[639,19,667,17],[639,20,667,18,"s4"],[639,22,667,20],[639,24,667,22,"s5"],[639,26,667,24],[639,28,667,26,"s6"],[639,30,667,28],[639,32,667,30,"s8"],[639,34,667,32],[639,36,667,34,"s9"],[639,38,667,36],[639,39,667,37],[640,6,668,4],[640,7,668,5],[640,13,668,11],[641,8,669,6,"peg$currPos"],[641,19,669,17],[641,22,669,20,"s0"],[641,24,669,22],[642,8,670,6,"s0"],[642,10,670,8],[642,13,670,11,"peg$FAILED"],[642,23,670,21],[643,6,671,4],[644,6,673,4],[644,13,673,11,"s0"],[644,15,673,13],[645,4,674,2],[646,4,676,2],[646,13,676,11,"peg$parsemoveNumber"],[646,32,676,30,"peg$parsemoveNumber"],[646,33,676,30],[646,35,676,33],[647,6,677,4],[647,10,677,8,"s0"],[647,12,677,10],[647,14,677,12,"s1"],[647,16,677,14],[647,18,677,16,"s2"],[647,20,677,18],[647,22,677,20,"s3"],[647,24,677,22],[647,26,677,24,"s4"],[647,28,677,26],[647,30,677,28,"s5"],[647,32,677,30],[648,6,679,4,"peg$silentFails"],[648,21,679,19],[648,23,679,21],[649,6,680,4,"s0"],[649,8,680,6],[649,11,680,9,"peg$currPos"],[649,22,680,20],[650,6,681,4,"s1"],[650,8,681,6],[650,11,681,9],[650,13,681,11],[651,6,682,4,"s2"],[651,8,682,6],[651,11,682,9,"input"],[651,16,682,14],[651,17,682,15,"charAt"],[651,23,682,21],[651,24,682,22,"peg$currPos"],[651,35,682,33],[651,36,682,34],[652,6,683,4],[652,10,683,8,"peg$r2"],[652,16,683,14],[652,17,683,15,"test"],[652,21,683,19],[652,22,683,20,"s2"],[652,24,683,22],[652,25,683,23],[652,27,683,25],[653,8,684,6,"peg$currPos"],[653,19,684,17],[653,21,684,19],[654,6,685,4],[654,7,685,5],[654,13,685,11],[655,8,686,6,"s2"],[655,10,686,8],[655,13,686,11,"peg$FAILED"],[655,23,686,21],[656,8,687,6],[656,12,687,10,"peg$silentFails"],[656,27,687,25],[656,32,687,30],[656,33,687,31],[656,35,687,33],[657,10,687,35,"peg$fail"],[657,18,687,43],[657,19,687,44,"peg$e9"],[657,25,687,50],[657,26,687,51],[658,8,687,53],[659,6,688,4],[660,6,689,4],[660,13,689,11,"s2"],[660,15,689,13],[660,20,689,18,"peg$FAILED"],[660,30,689,28],[660,32,689,30],[661,8,690,6,"s1"],[661,10,690,8],[661,11,690,9,"push"],[661,15,690,13],[661,16,690,14,"s2"],[661,18,690,16],[661,19,690,17],[662,8,691,6,"s2"],[662,10,691,8],[662,13,691,11,"input"],[662,18,691,16],[662,19,691,17,"charAt"],[662,25,691,23],[662,26,691,24,"peg$currPos"],[662,37,691,35],[662,38,691,36],[663,8,692,6],[663,12,692,10,"peg$r2"],[663,18,692,16],[663,19,692,17,"test"],[663,23,692,21],[663,24,692,22,"s2"],[663,26,692,24],[663,27,692,25],[663,29,692,27],[664,10,693,8,"peg$currPos"],[664,21,693,19],[664,23,693,21],[665,8,694,6],[665,9,694,7],[665,15,694,13],[666,10,695,8,"s2"],[666,12,695,10],[666,15,695,13,"peg$FAILED"],[666,25,695,23],[667,10,696,8],[667,14,696,12,"peg$silentFails"],[667,29,696,27],[667,34,696,32],[667,35,696,33],[667,37,696,35],[668,12,696,37,"peg$fail"],[668,20,696,45],[668,21,696,46,"peg$e9"],[668,27,696,52],[668,28,696,53],[669,10,696,55],[670,8,697,6],[671,6,698,4],[672,6,699,4],[672,10,699,8,"input"],[672,15,699,13],[672,16,699,14,"charCodeAt"],[672,26,699,24],[672,27,699,25,"peg$currPos"],[672,38,699,36],[672,39,699,37],[672,44,699,42],[672,46,699,44],[672,48,699,46],[673,8,700,6,"s2"],[673,10,700,8],[673,13,700,11,"peg$c3"],[673,19,700,17],[674,8,701,6,"peg$currPos"],[674,19,701,17],[674,21,701,19],[675,6,702,4],[675,7,702,5],[675,13,702,11],[676,8,703,6,"s2"],[676,10,703,8],[676,13,703,11,"peg$FAILED"],[676,23,703,21],[677,8,704,6],[677,12,704,10,"peg$silentFails"],[677,27,704,25],[677,32,704,30],[677,33,704,31],[677,35,704,33],[678,10,704,35,"peg$fail"],[678,18,704,43],[678,19,704,44,"peg$e10"],[678,26,704,51],[678,27,704,52],[679,8,704,54],[680,6,705,4],[681,6,706,4],[681,10,706,8,"s2"],[681,12,706,10],[681,17,706,15,"peg$FAILED"],[681,27,706,25],[681,29,706,27],[682,8,707,6,"s3"],[682,10,707,8],[682,13,707,11,"peg$parse_"],[682,23,707,21],[682,24,707,22],[682,25,707,23],[683,8,708,6,"s4"],[683,10,708,8],[683,13,708,11],[683,15,708,13],[684,8,709,6,"s5"],[684,10,709,8],[684,13,709,11,"input"],[684,18,709,16],[684,19,709,17,"charAt"],[684,25,709,23],[684,26,709,24,"peg$currPos"],[684,37,709,35],[684,38,709,36],[685,8,710,6],[685,12,710,10,"peg$r3"],[685,18,710,16],[685,19,710,17,"test"],[685,23,710,21],[685,24,710,22,"s5"],[685,26,710,24],[685,27,710,25],[685,29,710,27],[686,10,711,8,"peg$currPos"],[686,21,711,19],[686,23,711,21],[687,8,712,6],[687,9,712,7],[687,15,712,13],[688,10,713,8,"s5"],[688,12,713,10],[688,15,713,13,"peg$FAILED"],[688,25,713,23],[689,10,714,8],[689,14,714,12,"peg$silentFails"],[689,29,714,27],[689,34,714,32],[689,35,714,33],[689,37,714,35],[690,12,714,37,"peg$fail"],[690,20,714,45],[690,21,714,46,"peg$e11"],[690,28,714,53],[690,29,714,54],[691,10,714,56],[692,8,715,6],[693,8,716,6],[693,15,716,13,"s5"],[693,17,716,15],[693,22,716,20,"peg$FAILED"],[693,32,716,30],[693,34,716,32],[694,10,717,8,"s4"],[694,12,717,10],[694,13,717,11,"push"],[694,17,717,15],[694,18,717,16,"s5"],[694,20,717,18],[694,21,717,19],[695,10,718,8,"s5"],[695,12,718,10],[695,15,718,13,"input"],[695,20,718,18],[695,21,718,19,"charAt"],[695,27,718,25],[695,28,718,26,"peg$currPos"],[695,39,718,37],[695,40,718,38],[696,10,719,8],[696,14,719,12,"peg$r3"],[696,20,719,18],[696,21,719,19,"test"],[696,25,719,23],[696,26,719,24,"s5"],[696,28,719,26],[696,29,719,27],[696,31,719,29],[697,12,720,10,"peg$currPos"],[697,23,720,21],[697,25,720,23],[698,10,721,8],[698,11,721,9],[698,17,721,15],[699,12,722,10,"s5"],[699,14,722,12],[699,17,722,15,"peg$FAILED"],[699,27,722,25],[700,12,723,10],[700,16,723,14,"peg$silentFails"],[700,31,723,29],[700,36,723,34],[700,37,723,35],[700,39,723,37],[701,14,723,39,"peg$fail"],[701,22,723,47],[701,23,723,48,"peg$e11"],[701,30,723,55],[701,31,723,56],[702,12,723,58],[703,10,724,8],[704,8,725,6],[705,8,726,6,"s1"],[705,10,726,8],[705,13,726,11],[705,14,726,12,"s1"],[705,16,726,14],[705,18,726,16,"s2"],[705,20,726,18],[705,22,726,20,"s3"],[705,24,726,22],[705,26,726,24,"s4"],[705,28,726,26],[705,29,726,27],[706,8,727,6,"s0"],[706,10,727,8],[706,13,727,11,"s1"],[706,15,727,13],[707,6,728,4],[707,7,728,5],[707,13,728,11],[708,8,729,6,"peg$currPos"],[708,19,729,17],[708,22,729,20,"s0"],[708,24,729,22],[709,8,730,6,"s0"],[709,10,730,8],[709,13,730,11,"peg$FAILED"],[709,23,730,21],[710,6,731,4],[711,6,732,4,"peg$silentFails"],[711,21,732,19],[711,23,732,21],[712,6,733,4],[712,10,733,8,"s0"],[712,12,733,10],[712,17,733,15,"peg$FAILED"],[712,27,733,25],[712,29,733,27],[713,8,734,6,"s1"],[713,10,734,8],[713,13,734,11,"peg$FAILED"],[713,23,734,21],[714,8,735,6],[714,12,735,10,"peg$silentFails"],[714,27,735,25],[714,32,735,30],[714,33,735,31],[714,35,735,33],[715,10,735,35,"peg$fail"],[715,18,735,43],[715,19,735,44,"peg$e8"],[715,25,735,50],[715,26,735,51],[716,8,735,53],[717,6,736,4],[718,6,738,4],[718,13,738,11,"s0"],[718,15,738,13],[719,4,739,2],[720,4,741,2],[720,13,741,11,"peg$parsesan"],[720,25,741,23,"peg$parsesan"],[720,26,741,23],[720,28,741,26],[721,6,742,4],[721,10,742,8,"s0"],[721,12,742,10],[721,14,742,12,"s1"],[721,16,742,14],[721,18,742,16,"s2"],[721,20,742,18],[721,22,742,20,"s3"],[721,24,742,22],[721,26,742,24,"s4"],[721,28,742,26],[721,30,742,28,"s5"],[721,32,742,30],[722,6,744,4,"peg$silentFails"],[722,21,744,19],[722,23,744,21],[723,6,745,4,"s0"],[723,8,745,6],[723,11,745,9,"peg$currPos"],[723,22,745,20],[724,6,746,4,"s1"],[724,8,746,6],[724,11,746,9,"peg$currPos"],[724,22,746,20],[725,6,747,4],[725,10,747,8,"input"],[725,15,747,13],[725,16,747,14,"substr"],[725,22,747,20],[725,23,747,21,"peg$currPos"],[725,34,747,32],[725,36,747,34],[725,37,747,35],[725,38,747,36],[725,43,747,41,"peg$c4"],[725,49,747,47],[725,51,747,49],[726,8,748,6,"s2"],[726,10,748,8],[726,13,748,11,"peg$c4"],[726,19,748,17],[727,8,749,6,"peg$currPos"],[727,19,749,17],[727,23,749,21],[727,24,749,22],[728,6,750,4],[728,7,750,5],[728,13,750,11],[729,8,751,6,"s2"],[729,10,751,8],[729,13,751,11,"peg$FAILED"],[729,23,751,21],[730,8,752,6],[730,12,752,10,"peg$silentFails"],[730,27,752,25],[730,32,752,30],[730,33,752,31],[730,35,752,33],[731,10,752,35,"peg$fail"],[731,18,752,43],[731,19,752,44,"peg$e13"],[731,26,752,51],[731,27,752,52],[732,8,752,54],[733,6,753,4],[734,6,754,4],[734,10,754,8,"s2"],[734,12,754,10],[734,17,754,15,"peg$FAILED"],[734,27,754,25],[734,29,754,27],[735,8,755,6],[735,12,755,10,"input"],[735,17,755,15],[735,18,755,16,"substr"],[735,24,755,22],[735,25,755,23,"peg$currPos"],[735,36,755,34],[735,38,755,36],[735,39,755,37],[735,40,755,38],[735,45,755,43,"peg$c5"],[735,51,755,49],[735,53,755,51],[736,10,756,8,"s2"],[736,12,756,10],[736,15,756,13,"peg$c5"],[736,21,756,19],[737,10,757,8,"peg$currPos"],[737,21,757,19],[737,25,757,23],[737,26,757,24],[738,8,758,6],[738,9,758,7],[738,15,758,13],[739,10,759,8,"s2"],[739,12,759,10],[739,15,759,13,"peg$FAILED"],[739,25,759,23],[740,10,760,8],[740,14,760,12,"peg$silentFails"],[740,29,760,27],[740,34,760,32],[740,35,760,33],[740,37,760,35],[741,12,760,37,"peg$fail"],[741,20,760,45],[741,21,760,46,"peg$e14"],[741,28,760,53],[741,29,760,54],[742,10,760,56],[743,8,761,6],[744,8,762,6],[744,12,762,10,"s2"],[744,14,762,12],[744,19,762,17,"peg$FAILED"],[744,29,762,27],[744,31,762,29],[745,10,763,8],[745,14,763,12,"input"],[745,19,763,17],[745,20,763,18,"substr"],[745,26,763,24],[745,27,763,25,"peg$currPos"],[745,38,763,36],[745,40,763,38],[745,41,763,39],[745,42,763,40],[745,47,763,45,"peg$c6"],[745,53,763,51],[745,55,763,53],[746,12,764,10,"s2"],[746,14,764,12],[746,17,764,15,"peg$c6"],[746,23,764,21],[747,12,765,10,"peg$currPos"],[747,23,765,21],[747,27,765,25],[747,28,765,26],[748,10,766,8],[748,11,766,9],[748,17,766,15],[749,12,767,10,"s2"],[749,14,767,12],[749,17,767,15,"peg$FAILED"],[749,27,767,25],[750,12,768,10],[750,16,768,14,"peg$silentFails"],[750,31,768,29],[750,36,768,34],[750,37,768,35],[750,39,768,37],[751,14,768,39,"peg$fail"],[751,22,768,47],[751,23,768,48,"peg$e15"],[751,30,768,55],[751,31,768,56],[752,12,768,58],[753,10,769,8],[754,10,770,8],[754,14,770,12,"s2"],[754,16,770,14],[754,21,770,19,"peg$FAILED"],[754,31,770,29],[754,33,770,31],[755,12,771,10],[755,16,771,14,"input"],[755,21,771,19],[755,22,771,20,"substr"],[755,28,771,26],[755,29,771,27,"peg$currPos"],[755,40,771,38],[755,42,771,40],[755,43,771,41],[755,44,771,42],[755,49,771,47,"peg$c7"],[755,55,771,53],[755,57,771,55],[756,14,772,12,"s2"],[756,16,772,14],[756,19,772,17,"peg$c7"],[756,25,772,23],[757,14,773,12,"peg$currPos"],[757,25,773,23],[757,29,773,27],[757,30,773,28],[758,12,774,10],[758,13,774,11],[758,19,774,17],[759,14,775,12,"s2"],[759,16,775,14],[759,19,775,17,"peg$FAILED"],[759,29,775,27],[760,14,776,12],[760,18,776,16,"peg$silentFails"],[760,33,776,31],[760,38,776,36],[760,39,776,37],[760,41,776,39],[761,16,776,41,"peg$fail"],[761,24,776,49],[761,25,776,50,"peg$e16"],[761,32,776,57],[761,33,776,58],[762,14,776,60],[763,12,777,10],[764,12,778,10],[764,16,778,14,"s2"],[764,18,778,16],[764,23,778,21,"peg$FAILED"],[764,33,778,31],[764,35,778,33],[765,14,779,12,"s2"],[765,16,779,14],[765,19,779,17,"peg$currPos"],[765,30,779,28],[766,14,780,12,"s3"],[766,16,780,14],[766,19,780,17,"input"],[766,24,780,22],[766,25,780,23,"charAt"],[766,31,780,29],[766,32,780,30,"peg$currPos"],[766,43,780,41],[766,44,780,42],[767,14,781,12],[767,18,781,16,"peg$r0"],[767,24,781,22],[767,25,781,23,"test"],[767,29,781,27],[767,30,781,28,"s3"],[767,32,781,30],[767,33,781,31],[767,35,781,33],[768,16,782,14,"peg$currPos"],[768,27,782,25],[768,29,782,27],[769,14,783,12],[769,15,783,13],[769,21,783,19],[770,16,784,14,"s3"],[770,18,784,16],[770,21,784,19,"peg$FAILED"],[770,31,784,29],[771,16,785,14],[771,20,785,18,"peg$silentFails"],[771,35,785,33],[771,40,785,38],[771,41,785,39],[771,43,785,41],[772,18,785,43,"peg$fail"],[772,26,785,51],[772,27,785,52,"peg$e5"],[772,33,785,58],[772,34,785,59],[773,16,785,61],[774,14,786,12],[775,14,787,12],[775,18,787,16,"s3"],[775,20,787,18],[775,25,787,23,"peg$FAILED"],[775,35,787,33],[775,37,787,35],[776,16,788,14,"s4"],[776,18,788,16],[776,21,788,19],[776,23,788,21],[777,16,789,14,"s5"],[777,18,789,16],[777,21,789,19,"input"],[777,26,789,24],[777,27,789,25,"charAt"],[777,33,789,31],[777,34,789,32,"peg$currPos"],[777,45,789,43],[777,46,789,44],[778,16,790,14],[778,20,790,18,"peg$r4"],[778,26,790,24],[778,27,790,25,"test"],[778,31,790,29],[778,32,790,30,"s5"],[778,34,790,32],[778,35,790,33],[778,37,790,35],[779,18,791,16,"peg$currPos"],[779,29,791,27],[779,31,791,29],[780,16,792,14],[780,17,792,15],[780,23,792,21],[781,18,793,16,"s5"],[781,20,793,18],[781,23,793,21,"peg$FAILED"],[781,33,793,31],[782,18,794,16],[782,22,794,20,"peg$silentFails"],[782,37,794,35],[782,42,794,40],[782,43,794,41],[782,45,794,43],[783,20,794,45,"peg$fail"],[783,28,794,53],[783,29,794,54,"peg$e17"],[783,36,794,61],[783,37,794,62],[784,18,794,64],[785,16,795,14],[786,16,796,14],[786,20,796,18,"s5"],[786,22,796,20],[786,27,796,25,"peg$FAILED"],[786,37,796,35],[786,39,796,37],[787,18,797,16],[787,25,797,23,"s5"],[787,27,797,25],[787,32,797,30,"peg$FAILED"],[787,42,797,40],[787,44,797,42],[788,20,798,18,"s4"],[788,22,798,20],[788,23,798,21,"push"],[788,27,798,25],[788,28,798,26,"s5"],[788,30,798,28],[788,31,798,29],[789,20,799,18,"s5"],[789,22,799,20],[789,25,799,23,"input"],[789,30,799,28],[789,31,799,29,"charAt"],[789,37,799,35],[789,38,799,36,"peg$currPos"],[789,49,799,47],[789,50,799,48],[790,20,800,18],[790,24,800,22,"peg$r4"],[790,30,800,28],[790,31,800,29,"test"],[790,35,800,33],[790,36,800,34,"s5"],[790,38,800,36],[790,39,800,37],[790,41,800,39],[791,22,801,20,"peg$currPos"],[791,33,801,31],[791,35,801,33],[792,20,802,18],[792,21,802,19],[792,27,802,25],[793,22,803,20,"s5"],[793,24,803,22],[793,27,803,25,"peg$FAILED"],[793,37,803,35],[794,22,804,20],[794,26,804,24,"peg$silentFails"],[794,41,804,39],[794,46,804,44],[794,47,804,45],[794,49,804,47],[795,24,804,49,"peg$fail"],[795,32,804,57],[795,33,804,58,"peg$e17"],[795,40,804,65],[795,41,804,66],[796,22,804,68],[797,20,805,18],[798,18,806,16],[799,16,807,14],[799,17,807,15],[799,23,807,21],[800,18,808,16,"s4"],[800,20,808,18],[800,23,808,21,"peg$FAILED"],[800,33,808,31],[801,16,809,14],[802,16,810,14],[802,20,810,18,"s4"],[802,22,810,20],[802,27,810,25,"peg$FAILED"],[802,37,810,35],[802,39,810,37],[803,18,811,16,"s3"],[803,20,811,18],[803,23,811,21],[803,24,811,22,"s3"],[803,26,811,24],[803,28,811,26,"s4"],[803,30,811,28],[803,31,811,29],[804,18,812,16,"s2"],[804,20,812,18],[804,23,812,21,"s3"],[804,25,812,23],[805,16,813,14],[805,17,813,15],[805,23,813,21],[806,18,814,16,"peg$currPos"],[806,29,814,27],[806,32,814,30,"s2"],[806,34,814,32],[807,18,815,16,"s2"],[807,20,815,18],[807,23,815,21,"peg$FAILED"],[807,33,815,31],[808,16,816,14],[809,14,817,12],[809,15,817,13],[809,21,817,19],[810,16,818,14,"peg$currPos"],[810,27,818,25],[810,30,818,28,"s2"],[810,32,818,30],[811,16,819,14,"s2"],[811,18,819,16],[811,21,819,19,"peg$FAILED"],[811,31,819,29],[812,14,820,12],[813,12,821,10],[814,10,822,8],[815,8,823,6],[816,6,824,4],[817,6,825,4],[817,10,825,8,"s2"],[817,12,825,10],[817,17,825,15,"peg$FAILED"],[817,27,825,25],[817,29,825,27],[818,8,826,6,"s3"],[818,10,826,8],[818,13,826,11,"input"],[818,18,826,16],[818,19,826,17,"charAt"],[818,25,826,23],[818,26,826,24,"peg$currPos"],[818,37,826,35],[818,38,826,36],[819,8,827,6],[819,12,827,10,"peg$r5"],[819,18,827,16],[819,19,827,17,"test"],[819,23,827,21],[819,24,827,22,"s3"],[819,26,827,24],[819,27,827,25],[819,29,827,27],[820,10,828,8,"peg$currPos"],[820,21,828,19],[820,23,828,21],[821,8,829,6],[821,9,829,7],[821,15,829,13],[822,10,830,8,"s3"],[822,12,830,10],[822,15,830,13,"peg$FAILED"],[822,25,830,23],[823,10,831,8],[823,14,831,12,"peg$silentFails"],[823,29,831,27],[823,34,831,32],[823,35,831,33],[823,37,831,35],[824,12,831,37,"peg$fail"],[824,20,831,45],[824,21,831,46,"peg$e18"],[824,28,831,53],[824,29,831,54],[825,10,831,56],[826,8,832,6],[827,8,833,6],[827,12,833,10,"s3"],[827,14,833,12],[827,19,833,17,"peg$FAILED"],[827,29,833,27],[827,31,833,29],[828,10,834,8,"s3"],[828,12,834,10],[828,15,834,13],[828,19,834,17],[829,8,835,6],[830,8,836,6,"s2"],[830,10,836,8],[830,13,836,11],[830,14,836,12,"s2"],[830,16,836,14],[830,18,836,16,"s3"],[830,20,836,18],[830,21,836,19],[831,8,837,6,"s1"],[831,10,837,8],[831,13,837,11,"s2"],[831,15,837,13],[832,6,838,4],[832,7,838,5],[832,13,838,11],[833,8,839,6,"peg$currPos"],[833,19,839,17],[833,22,839,20,"s1"],[833,24,839,22],[834,8,840,6,"s1"],[834,10,840,8],[834,13,840,11,"peg$FAILED"],[834,23,840,21],[835,6,841,4],[836,6,842,4],[836,10,842,8,"s1"],[836,12,842,10],[836,17,842,15,"peg$FAILED"],[836,27,842,25],[836,29,842,27],[837,8,843,6,"s0"],[837,10,843,8],[837,13,843,11,"input"],[837,18,843,16],[837,19,843,17,"substring"],[837,28,843,26],[837,29,843,27,"s0"],[837,31,843,29],[837,33,843,31,"peg$currPos"],[837,44,843,42],[837,45,843,43],[838,6,844,4],[838,7,844,5],[838,13,844,11],[839,8,845,6,"s0"],[839,10,845,8],[839,13,845,11,"s1"],[839,15,845,13],[840,6,846,4],[841,6,847,4,"peg$silentFails"],[841,21,847,19],[841,23,847,21],[842,6,848,4],[842,10,848,8,"s0"],[842,12,848,10],[842,17,848,15,"peg$FAILED"],[842,27,848,25],[842,29,848,27],[843,8,849,6,"s1"],[843,10,849,8],[843,13,849,11,"peg$FAILED"],[843,23,849,21],[844,8,850,6],[844,12,850,10,"peg$silentFails"],[844,27,850,25],[844,32,850,30],[844,33,850,31],[844,35,850,33],[845,10,850,35,"peg$fail"],[845,18,850,43],[845,19,850,44,"peg$e12"],[845,26,850,51],[845,27,850,52],[846,8,850,54],[847,6,851,4],[848,6,853,4],[848,13,853,11,"s0"],[848,15,853,13],[849,4,854,2],[850,4,856,2],[850,13,856,11,"peg$parsesuffixAnnotation"],[850,38,856,36,"peg$parsesuffixAnnotation"],[850,39,856,36],[850,41,856,39],[851,6,857,4],[851,10,857,8,"s0"],[851,12,857,10],[851,14,857,12,"s1"],[851,16,857,14],[851,18,857,16,"s2"],[851,20,857,18],[852,6,859,4,"peg$silentFails"],[852,21,859,19],[852,23,859,21],[853,6,860,4,"s0"],[853,8,860,6],[853,11,860,9,"peg$currPos"],[853,22,860,20],[854,6,861,4,"s1"],[854,8,861,6],[854,11,861,9],[854,13,861,11],[855,6,862,4,"s2"],[855,8,862,6],[855,11,862,9,"input"],[855,16,862,14],[855,17,862,15,"charAt"],[855,23,862,21],[855,24,862,22,"peg$currPos"],[855,35,862,33],[855,36,862,34],[856,6,863,4],[856,10,863,8,"peg$r6"],[856,16,863,14],[856,17,863,15,"test"],[856,21,863,19],[856,22,863,20,"s2"],[856,24,863,22],[856,25,863,23],[856,27,863,25],[857,8,864,6,"peg$currPos"],[857,19,864,17],[857,21,864,19],[858,6,865,4],[858,7,865,5],[858,13,865,11],[859,8,866,6,"s2"],[859,10,866,8],[859,13,866,11,"peg$FAILED"],[859,23,866,21],[860,8,867,6],[860,12,867,10,"peg$silentFails"],[860,27,867,25],[860,32,867,30],[860,33,867,31],[860,35,867,33],[861,10,867,35,"peg$fail"],[861,18,867,43],[861,19,867,44,"peg$e20"],[861,26,867,51],[861,27,867,52],[862,8,867,54],[863,6,868,4],[864,6,869,4],[864,13,869,11,"s2"],[864,15,869,13],[864,20,869,18,"peg$FAILED"],[864,30,869,28],[864,32,869,30],[865,8,870,6,"s1"],[865,10,870,8],[865,11,870,9,"push"],[865,15,870,13],[865,16,870,14,"s2"],[865,18,870,16],[865,19,870,17],[866,8,871,6],[866,12,871,10,"s1"],[866,14,871,12],[866,15,871,13,"length"],[866,21,871,19],[866,25,871,23],[866,26,871,24],[866,28,871,26],[867,10,872,8,"s2"],[867,12,872,10],[867,15,872,13,"peg$FAILED"],[867,25,872,23],[868,8,873,6],[868,9,873,7],[868,15,873,13],[869,10,874,8,"s2"],[869,12,874,10],[869,15,874,13,"input"],[869,20,874,18],[869,21,874,19,"charAt"],[869,27,874,25],[869,28,874,26,"peg$currPos"],[869,39,874,37],[869,40,874,38],[870,10,875,8],[870,14,875,12,"peg$r6"],[870,20,875,18],[870,21,875,19,"test"],[870,25,875,23],[870,26,875,24,"s2"],[870,28,875,26],[870,29,875,27],[870,31,875,29],[871,12,876,10,"peg$currPos"],[871,23,876,21],[871,25,876,23],[872,10,877,8],[872,11,877,9],[872,17,877,15],[873,12,878,10,"s2"],[873,14,878,12],[873,17,878,15,"peg$FAILED"],[873,27,878,25],[874,12,879,10],[874,16,879,14,"peg$silentFails"],[874,31,879,29],[874,36,879,34],[874,37,879,35],[874,39,879,37],[875,14,879,39,"peg$fail"],[875,22,879,47],[875,23,879,48,"peg$e20"],[875,30,879,55],[875,31,879,56],[876,12,879,58],[877,10,880,8],[878,8,881,6],[879,6,882,4],[880,6,883,4],[880,10,883,8,"s1"],[880,12,883,10],[880,13,883,11,"length"],[880,19,883,17],[880,22,883,20],[880,23,883,21],[880,25,883,23],[881,8,884,6,"peg$currPos"],[881,19,884,17],[881,22,884,20,"s0"],[881,24,884,22],[882,8,885,6,"s0"],[882,10,885,8],[882,13,885,11,"peg$FAILED"],[882,23,885,21],[883,6,886,4],[883,7,886,5],[883,13,886,11],[884,8,887,6,"s0"],[884,10,887,8],[884,13,887,11,"s1"],[884,15,887,13],[885,6,888,4],[886,6,889,4,"peg$silentFails"],[886,21,889,19],[886,23,889,21],[887,6,890,4],[887,10,890,8,"s0"],[887,12,890,10],[887,17,890,15,"peg$FAILED"],[887,27,890,25],[887,29,890,27],[888,8,891,6,"s1"],[888,10,891,8],[888,13,891,11,"peg$FAILED"],[888,23,891,21],[889,8,892,6],[889,12,892,10,"peg$silentFails"],[889,27,892,25],[889,32,892,30],[889,33,892,31],[889,35,892,33],[890,10,892,35,"peg$fail"],[890,18,892,43],[890,19,892,44,"peg$e19"],[890,26,892,51],[890,27,892,52],[891,8,892,54],[892,6,893,4],[893,6,895,4],[893,13,895,11,"s0"],[893,15,895,13],[894,4,896,2],[895,4,898,2],[895,13,898,11,"peg$parsenag"],[895,25,898,23,"peg$parsenag"],[895,26,898,23],[895,28,898,26],[896,6,899,4],[896,10,899,8,"s0"],[896,12,899,10],[896,14,899,12,"s2"],[896,16,899,14],[896,18,899,16,"s3"],[896,20,899,18],[896,22,899,20,"s4"],[896,24,899,22],[896,26,899,24,"s5"],[896,28,899,26],[897,6,901,4,"peg$silentFails"],[897,21,901,19],[897,23,901,21],[898,6,902,4,"s0"],[898,8,902,6],[898,11,902,9,"peg$currPos"],[898,22,902,20],[899,6,903,4,"peg$parse_"],[899,16,903,14],[899,17,903,15],[899,18,903,16],[900,6,904,4],[900,10,904,8,"input"],[900,15,904,13],[900,16,904,14,"charCodeAt"],[900,26,904,24],[900,27,904,25,"peg$currPos"],[900,38,904,36],[900,39,904,37],[900,44,904,42],[900,46,904,44],[900,48,904,46],[901,8,905,6,"s2"],[901,10,905,8],[901,13,905,11,"peg$c8"],[901,19,905,17],[902,8,906,6,"peg$currPos"],[902,19,906,17],[902,21,906,19],[903,6,907,4],[903,7,907,5],[903,13,907,11],[904,8,908,6,"s2"],[904,10,908,8],[904,13,908,11,"peg$FAILED"],[904,23,908,21],[905,8,909,6],[905,12,909,10,"peg$silentFails"],[905,27,909,25],[905,32,909,30],[905,33,909,31],[905,35,909,33],[906,10,909,35,"peg$fail"],[906,18,909,43],[906,19,909,44,"peg$e22"],[906,26,909,51],[906,27,909,52],[907,8,909,54],[908,6,910,4],[909,6,911,4],[909,10,911,8,"s2"],[909,12,911,10],[909,17,911,15,"peg$FAILED"],[909,27,911,25],[909,29,911,27],[910,8,912,6,"s3"],[910,10,912,8],[910,13,912,11,"peg$currPos"],[910,24,912,22],[911,8,913,6,"s4"],[911,10,913,8],[911,13,913,11],[911,15,913,13],[912,8,914,6,"s5"],[912,10,914,8],[912,13,914,11,"input"],[912,18,914,16],[912,19,914,17,"charAt"],[912,25,914,23],[912,26,914,24,"peg$currPos"],[912,37,914,35],[912,38,914,36],[913,8,915,6],[913,12,915,10,"peg$r2"],[913,18,915,16],[913,19,915,17,"test"],[913,23,915,21],[913,24,915,22,"s5"],[913,26,915,24],[913,27,915,25],[913,29,915,27],[914,10,916,8,"peg$currPos"],[914,21,916,19],[914,23,916,21],[915,8,917,6],[915,9,917,7],[915,15,917,13],[916,10,918,8,"s5"],[916,12,918,10],[916,15,918,13,"peg$FAILED"],[916,25,918,23],[917,10,919,8],[917,14,919,12,"peg$silentFails"],[917,29,919,27],[917,34,919,32],[917,35,919,33],[917,37,919,35],[918,12,919,37,"peg$fail"],[918,20,919,45],[918,21,919,46,"peg$e9"],[918,27,919,52],[918,28,919,53],[919,10,919,55],[920,8,920,6],[921,8,921,6],[921,12,921,10,"s5"],[921,14,921,12],[921,19,921,17,"peg$FAILED"],[921,29,921,27],[921,31,921,29],[922,10,922,8],[922,17,922,15,"s5"],[922,19,922,17],[922,24,922,22,"peg$FAILED"],[922,34,922,32],[922,36,922,34],[923,12,923,10,"s4"],[923,14,923,12],[923,15,923,13,"push"],[923,19,923,17],[923,20,923,18,"s5"],[923,22,923,20],[923,23,923,21],[924,12,924,10,"s5"],[924,14,924,12],[924,17,924,15,"input"],[924,22,924,20],[924,23,924,21,"charAt"],[924,29,924,27],[924,30,924,28,"peg$currPos"],[924,41,924,39],[924,42,924,40],[925,12,925,10],[925,16,925,14,"peg$r2"],[925,22,925,20],[925,23,925,21,"test"],[925,27,925,25],[925,28,925,26,"s5"],[925,30,925,28],[925,31,925,29],[925,33,925,31],[926,14,926,12,"peg$currPos"],[926,25,926,23],[926,27,926,25],[927,12,927,10],[927,13,927,11],[927,19,927,17],[928,14,928,12,"s5"],[928,16,928,14],[928,19,928,17,"peg$FAILED"],[928,29,928,27],[929,14,929,12],[929,18,929,16,"peg$silentFails"],[929,33,929,31],[929,38,929,36],[929,39,929,37],[929,41,929,39],[930,16,929,41,"peg$fail"],[930,24,929,49],[930,25,929,50,"peg$e9"],[930,31,929,56],[930,32,929,57],[931,14,929,59],[932,12,930,10],[933,10,931,8],[934,8,932,6],[934,9,932,7],[934,15,932,13],[935,10,933,8,"s4"],[935,12,933,10],[935,15,933,13,"peg$FAILED"],[935,25,933,23],[936,8,934,6],[937,8,935,6],[937,12,935,10,"s4"],[937,14,935,12],[937,19,935,17,"peg$FAILED"],[937,29,935,27],[937,31,935,29],[938,10,936,8,"s3"],[938,12,936,10],[938,15,936,13,"input"],[938,20,936,18],[938,21,936,19,"substring"],[938,30,936,28],[938,31,936,29,"s3"],[938,33,936,31],[938,35,936,33,"peg$currPos"],[938,46,936,44],[938,47,936,45],[939,8,937,6],[939,9,937,7],[939,15,937,13],[940,10,938,8,"s3"],[940,12,938,10],[940,15,938,13,"s4"],[940,17,938,15],[941,8,939,6],[942,8,940,6],[942,12,940,10,"s3"],[942,14,940,12],[942,19,940,17,"peg$FAILED"],[942,29,940,27],[942,31,940,29],[943,10,941,8,"s0"],[943,12,941,10],[943,15,941,13,"peg$f6"],[943,21,941,19],[943,22,941,20,"s3"],[943,24,941,22],[943,25,941,23],[944,8,942,6],[944,9,942,7],[944,15,942,13],[945,10,943,8,"peg$currPos"],[945,21,943,19],[945,24,943,22,"s0"],[945,26,943,24],[946,10,944,8,"s0"],[946,12,944,10],[946,15,944,13,"peg$FAILED"],[946,25,944,23],[947,8,945,6],[948,6,946,4],[948,7,946,5],[948,13,946,11],[949,8,947,6,"peg$currPos"],[949,19,947,17],[949,22,947,20,"s0"],[949,24,947,22],[950,8,948,6,"s0"],[950,10,948,8],[950,13,948,11,"peg$FAILED"],[950,23,948,21],[951,6,949,4],[952,6,950,4,"peg$silentFails"],[952,21,950,19],[952,23,950,21],[953,6,951,4],[953,10,951,8,"s0"],[953,12,951,10],[953,17,951,15,"peg$FAILED"],[953,27,951,25],[953,29,951,27],[954,8,952,6],[954,12,952,10,"peg$silentFails"],[954,27,952,25],[954,32,952,30],[954,33,952,31],[954,35,952,33],[955,10,952,35,"peg$fail"],[955,18,952,43],[955,19,952,44,"peg$e21"],[955,26,952,51],[955,27,952,52],[956,8,952,54],[957,6,953,4],[958,6,955,4],[958,13,955,11,"s0"],[958,15,955,13],[959,4,956,2],[960,4,958,2],[960,13,958,11,"peg$parsecomment"],[960,29,958,27,"peg$parsecomment"],[960,30,958,27],[960,32,958,30],[961,6,959,4],[961,10,959,8,"s0"],[961,12,959,10],[962,6,961,4,"s0"],[962,8,961,6],[962,11,961,9,"peg$parsebraceComment"],[962,32,961,30],[962,33,961,31],[962,34,961,32],[963,6,962,4],[963,10,962,8,"s0"],[963,12,962,10],[963,17,962,15,"peg$FAILED"],[963,27,962,25],[963,29,962,27],[964,8,963,6,"s0"],[964,10,963,8],[964,13,963,11,"peg$parserestOfLineComment"],[964,39,963,37],[964,40,963,38],[964,41,963,39],[965,6,964,4],[966,6,966,4],[966,13,966,11,"s0"],[966,15,966,13],[967,4,967,2],[968,4,969,2],[968,13,969,11,"peg$parsebraceComment"],[968,34,969,32,"peg$parsebraceComment"],[968,35,969,32],[968,37,969,35],[969,6,970,4],[969,10,970,8,"s0"],[969,12,970,10],[969,14,970,12,"s1"],[969,16,970,14],[969,18,970,16,"s2"],[969,20,970,18],[969,22,970,20,"s3"],[969,24,970,22],[969,26,970,24,"s4"],[969,28,970,26],[970,6,972,4,"peg$silentFails"],[970,21,972,19],[970,23,972,21],[971,6,973,4,"s0"],[971,8,973,6],[971,11,973,9,"peg$currPos"],[971,22,973,20],[972,6,974,4],[972,10,974,8,"input"],[972,15,974,13],[972,16,974,14,"charCodeAt"],[972,26,974,24],[972,27,974,25,"peg$currPos"],[972,38,974,36],[972,39,974,37],[972,44,974,42],[972,47,974,45],[972,49,974,47],[973,8,975,6,"s1"],[973,10,975,8],[973,13,975,11,"peg$c9"],[973,19,975,17],[974,8,976,6,"peg$currPos"],[974,19,976,17],[974,21,976,19],[975,6,977,4],[975,7,977,5],[975,13,977,11],[976,8,978,6,"s1"],[976,10,978,8],[976,13,978,11,"peg$FAILED"],[976,23,978,21],[977,8,979,6],[977,12,979,10,"peg$silentFails"],[977,27,979,25],[977,32,979,30],[977,33,979,31],[977,35,979,33],[978,10,979,35,"peg$fail"],[978,18,979,43],[978,19,979,44,"peg$e24"],[978,26,979,51],[978,27,979,52],[979,8,979,54],[980,6,980,4],[981,6,981,4],[981,10,981,8,"s1"],[981,12,981,10],[981,17,981,15,"peg$FAILED"],[981,27,981,25],[981,29,981,27],[982,8,982,6,"s2"],[982,10,982,8],[982,13,982,11,"peg$currPos"],[982,24,982,22],[983,8,983,6,"s3"],[983,10,983,8],[983,13,983,11],[983,15,983,13],[984,8,984,6,"s4"],[984,10,984,8],[984,13,984,11,"input"],[984,18,984,16],[984,19,984,17,"charAt"],[984,25,984,23],[984,26,984,24,"peg$currPos"],[984,37,984,35],[984,38,984,36],[985,8,985,6],[985,12,985,10,"peg$r7"],[985,18,985,16],[985,19,985,17,"test"],[985,23,985,21],[985,24,985,22,"s4"],[985,26,985,24],[985,27,985,25],[985,29,985,27],[986,10,986,8,"peg$currPos"],[986,21,986,19],[986,23,986,21],[987,8,987,6],[987,9,987,7],[987,15,987,13],[988,10,988,8,"s4"],[988,12,988,10],[988,15,988,13,"peg$FAILED"],[988,25,988,23],[989,10,989,8],[989,14,989,12,"peg$silentFails"],[989,29,989,27],[989,34,989,32],[989,35,989,33],[989,37,989,35],[990,12,989,37,"peg$fail"],[990,20,989,45],[990,21,989,46,"peg$e25"],[990,28,989,53],[990,29,989,54],[991,10,989,56],[992,8,990,6],[993,8,991,6],[993,15,991,13,"s4"],[993,17,991,15],[993,22,991,20,"peg$FAILED"],[993,32,991,30],[993,34,991,32],[994,10,992,8,"s3"],[994,12,992,10],[994,13,992,11,"push"],[994,17,992,15],[994,18,992,16,"s4"],[994,20,992,18],[994,21,992,19],[995,10,993,8,"s4"],[995,12,993,10],[995,15,993,13,"input"],[995,20,993,18],[995,21,993,19,"charAt"],[995,27,993,25],[995,28,993,26,"peg$currPos"],[995,39,993,37],[995,40,993,38],[996,10,994,8],[996,14,994,12,"peg$r7"],[996,20,994,18],[996,21,994,19,"test"],[996,25,994,23],[996,26,994,24,"s4"],[996,28,994,26],[996,29,994,27],[996,31,994,29],[997,12,995,10,"peg$currPos"],[997,23,995,21],[997,25,995,23],[998,10,996,8],[998,11,996,9],[998,17,996,15],[999,12,997,10,"s4"],[999,14,997,12],[999,17,997,15,"peg$FAILED"],[999,27,997,25],[1000,12,998,10],[1000,16,998,14,"peg$silentFails"],[1000,31,998,29],[1000,36,998,34],[1000,37,998,35],[1000,39,998,37],[1001,14,998,39,"peg$fail"],[1001,22,998,47],[1001,23,998,48,"peg$e25"],[1001,30,998,55],[1001,31,998,56],[1002,12,998,58],[1003,10,999,8],[1004,8,1000,6],[1005,8,1001,6,"s2"],[1005,10,1001,8],[1005,13,1001,11,"input"],[1005,18,1001,16],[1005,19,1001,17,"substring"],[1005,28,1001,26],[1005,29,1001,27,"s2"],[1005,31,1001,29],[1005,33,1001,31,"peg$currPos"],[1005,44,1001,42],[1005,45,1001,43],[1006,8,1002,6],[1006,12,1002,10,"input"],[1006,17,1002,15],[1006,18,1002,16,"charCodeAt"],[1006,28,1002,26],[1006,29,1002,27,"peg$currPos"],[1006,40,1002,38],[1006,41,1002,39],[1006,46,1002,44],[1006,49,1002,47],[1006,51,1002,49],[1007,10,1003,8,"s3"],[1007,12,1003,10],[1007,15,1003,13,"peg$c10"],[1007,22,1003,20],[1008,10,1004,8,"peg$currPos"],[1008,21,1004,19],[1008,23,1004,21],[1009,8,1005,6],[1009,9,1005,7],[1009,15,1005,13],[1010,10,1006,8,"s3"],[1010,12,1006,10],[1010,15,1006,13,"peg$FAILED"],[1010,25,1006,23],[1011,10,1007,8],[1011,14,1007,12,"peg$silentFails"],[1011,29,1007,27],[1011,34,1007,32],[1011,35,1007,33],[1011,37,1007,35],[1012,12,1007,37,"peg$fail"],[1012,20,1007,45],[1012,21,1007,46,"peg$e26"],[1012,28,1007,53],[1012,29,1007,54],[1013,10,1007,56],[1014,8,1008,6],[1015,8,1009,6],[1015,12,1009,10,"s3"],[1015,14,1009,12],[1015,19,1009,17,"peg$FAILED"],[1015,29,1009,27],[1015,31,1009,29],[1016,10,1010,8,"s0"],[1016,12,1010,10],[1016,15,1010,13,"peg$f7"],[1016,21,1010,19],[1016,22,1010,20,"s2"],[1016,24,1010,22],[1016,25,1010,23],[1017,8,1011,6],[1017,9,1011,7],[1017,15,1011,13],[1018,10,1012,8,"peg$currPos"],[1018,21,1012,19],[1018,24,1012,22,"s0"],[1018,26,1012,24],[1019,10,1013,8,"s0"],[1019,12,1013,10],[1019,15,1013,13,"peg$FAILED"],[1019,25,1013,23],[1020,8,1014,6],[1021,6,1015,4],[1021,7,1015,5],[1021,13,1015,11],[1022,8,1016,6,"peg$currPos"],[1022,19,1016,17],[1022,22,1016,20,"s0"],[1022,24,1016,22],[1023,8,1017,6,"s0"],[1023,10,1017,8],[1023,13,1017,11,"peg$FAILED"],[1023,23,1017,21],[1024,6,1018,4],[1025,6,1019,4,"peg$silentFails"],[1025,21,1019,19],[1025,23,1019,21],[1026,6,1020,4],[1026,10,1020,8,"s0"],[1026,12,1020,10],[1026,17,1020,15,"peg$FAILED"],[1026,27,1020,25],[1026,29,1020,27],[1027,8,1021,6,"s1"],[1027,10,1021,8],[1027,13,1021,11,"peg$FAILED"],[1027,23,1021,21],[1028,8,1022,6],[1028,12,1022,10,"peg$silentFails"],[1028,27,1022,25],[1028,32,1022,30],[1028,33,1022,31],[1028,35,1022,33],[1029,10,1022,35,"peg$fail"],[1029,18,1022,43],[1029,19,1022,44,"peg$e23"],[1029,26,1022,51],[1029,27,1022,52],[1030,8,1022,54],[1031,6,1023,4],[1032,6,1025,4],[1032,13,1025,11,"s0"],[1032,15,1025,13],[1033,4,1026,2],[1034,4,1028,2],[1034,13,1028,11,"peg$parserestOfLineComment"],[1034,39,1028,37,"peg$parserestOfLineComment"],[1034,40,1028,37],[1034,42,1028,40],[1035,6,1029,4],[1035,10,1029,8,"s0"],[1035,12,1029,10],[1035,14,1029,12,"s1"],[1035,16,1029,14],[1035,18,1029,16,"s2"],[1035,20,1029,18],[1035,22,1029,20,"s3"],[1035,24,1029,22],[1035,26,1029,24,"s4"],[1035,28,1029,26],[1036,6,1031,4,"peg$silentFails"],[1036,21,1031,19],[1036,23,1031,21],[1037,6,1032,4,"s0"],[1037,8,1032,6],[1037,11,1032,9,"peg$currPos"],[1037,22,1032,20],[1038,6,1033,4],[1038,10,1033,8,"input"],[1038,15,1033,13],[1038,16,1033,14,"charCodeAt"],[1038,26,1033,24],[1038,27,1033,25,"peg$currPos"],[1038,38,1033,36],[1038,39,1033,37],[1038,44,1033,42],[1038,46,1033,44],[1038,48,1033,46],[1039,8,1034,6,"s1"],[1039,10,1034,8],[1039,13,1034,11,"peg$c11"],[1039,20,1034,18],[1040,8,1035,6,"peg$currPos"],[1040,19,1035,17],[1040,21,1035,19],[1041,6,1036,4],[1041,7,1036,5],[1041,13,1036,11],[1042,8,1037,6,"s1"],[1042,10,1037,8],[1042,13,1037,11,"peg$FAILED"],[1042,23,1037,21],[1043,8,1038,6],[1043,12,1038,10,"peg$silentFails"],[1043,27,1038,25],[1043,32,1038,30],[1043,33,1038,31],[1043,35,1038,33],[1044,10,1038,35,"peg$fail"],[1044,18,1038,43],[1044,19,1038,44,"peg$e28"],[1044,26,1038,51],[1044,27,1038,52],[1045,8,1038,54],[1046,6,1039,4],[1047,6,1040,4],[1047,10,1040,8,"s1"],[1047,12,1040,10],[1047,17,1040,15,"peg$FAILED"],[1047,27,1040,25],[1047,29,1040,27],[1048,8,1041,6,"s2"],[1048,10,1041,8],[1048,13,1041,11,"peg$currPos"],[1048,24,1041,22],[1049,8,1042,6,"s3"],[1049,10,1042,8],[1049,13,1042,11],[1049,15,1042,13],[1050,8,1043,6,"s4"],[1050,10,1043,8],[1050,13,1043,11,"input"],[1050,18,1043,16],[1050,19,1043,17,"charAt"],[1050,25,1043,23],[1050,26,1043,24,"peg$currPos"],[1050,37,1043,35],[1050,38,1043,36],[1051,8,1044,6],[1051,12,1044,10,"peg$r8"],[1051,18,1044,16],[1051,19,1044,17,"test"],[1051,23,1044,21],[1051,24,1044,22,"s4"],[1051,26,1044,24],[1051,27,1044,25],[1051,29,1044,27],[1052,10,1045,8,"peg$currPos"],[1052,21,1045,19],[1052,23,1045,21],[1053,8,1046,6],[1053,9,1046,7],[1053,15,1046,13],[1054,10,1047,8,"s4"],[1054,12,1047,10],[1054,15,1047,13,"peg$FAILED"],[1054,25,1047,23],[1055,10,1048,8],[1055,14,1048,12,"peg$silentFails"],[1055,29,1048,27],[1055,34,1048,32],[1055,35,1048,33],[1055,37,1048,35],[1056,12,1048,37,"peg$fail"],[1056,20,1048,45],[1056,21,1048,46,"peg$e29"],[1056,28,1048,53],[1056,29,1048,54],[1057,10,1048,56],[1058,8,1049,6],[1059,8,1050,6],[1059,15,1050,13,"s4"],[1059,17,1050,15],[1059,22,1050,20,"peg$FAILED"],[1059,32,1050,30],[1059,34,1050,32],[1060,10,1051,8,"s3"],[1060,12,1051,10],[1060,13,1051,11,"push"],[1060,17,1051,15],[1060,18,1051,16,"s4"],[1060,20,1051,18],[1060,21,1051,19],[1061,10,1052,8,"s4"],[1061,12,1052,10],[1061,15,1052,13,"input"],[1061,20,1052,18],[1061,21,1052,19,"charAt"],[1061,27,1052,25],[1061,28,1052,26,"peg$currPos"],[1061,39,1052,37],[1061,40,1052,38],[1062,10,1053,8],[1062,14,1053,12,"peg$r8"],[1062,20,1053,18],[1062,21,1053,19,"test"],[1062,25,1053,23],[1062,26,1053,24,"s4"],[1062,28,1053,26],[1062,29,1053,27],[1062,31,1053,29],[1063,12,1054,10,"peg$currPos"],[1063,23,1054,21],[1063,25,1054,23],[1064,10,1055,8],[1064,11,1055,9],[1064,17,1055,15],[1065,12,1056,10,"s4"],[1065,14,1056,12],[1065,17,1056,15,"peg$FAILED"],[1065,27,1056,25],[1066,12,1057,10],[1066,16,1057,14,"peg$silentFails"],[1066,31,1057,29],[1066,36,1057,34],[1066,37,1057,35],[1066,39,1057,37],[1067,14,1057,39,"peg$fail"],[1067,22,1057,47],[1067,23,1057,48,"peg$e29"],[1067,30,1057,55],[1067,31,1057,56],[1068,12,1057,58],[1069,10,1058,8],[1070,8,1059,6],[1071,8,1060,6,"s2"],[1071,10,1060,8],[1071,13,1060,11,"input"],[1071,18,1060,16],[1071,19,1060,17,"substring"],[1071,28,1060,26],[1071,29,1060,27,"s2"],[1071,31,1060,29],[1071,33,1060,31,"peg$currPos"],[1071,44,1060,42],[1071,45,1060,43],[1072,8,1061,6,"s0"],[1072,10,1061,8],[1072,13,1061,11,"peg$f8"],[1072,19,1061,17],[1072,20,1061,18,"s2"],[1072,22,1061,20],[1072,23,1061,21],[1073,6,1062,4],[1073,7,1062,5],[1073,13,1062,11],[1074,8,1063,6,"peg$currPos"],[1074,19,1063,17],[1074,22,1063,20,"s0"],[1074,24,1063,22],[1075,8,1064,6,"s0"],[1075,10,1064,8],[1075,13,1064,11,"peg$FAILED"],[1075,23,1064,21],[1076,6,1065,4],[1077,6,1066,4,"peg$silentFails"],[1077,21,1066,19],[1077,23,1066,21],[1078,6,1067,4],[1078,10,1067,8,"s0"],[1078,12,1067,10],[1078,17,1067,15,"peg$FAILED"],[1078,27,1067,25],[1078,29,1067,27],[1079,8,1068,6,"s1"],[1079,10,1068,8],[1079,13,1068,11,"peg$FAILED"],[1079,23,1068,21],[1080,8,1069,6],[1080,12,1069,10,"peg$silentFails"],[1080,27,1069,25],[1080,32,1069,30],[1080,33,1069,31],[1080,35,1069,33],[1081,10,1069,35,"peg$fail"],[1081,18,1069,43],[1081,19,1069,44,"peg$e27"],[1081,26,1069,51],[1081,27,1069,52],[1082,8,1069,54],[1083,6,1070,4],[1084,6,1072,4],[1084,13,1072,11,"s0"],[1084,15,1072,13],[1085,4,1073,2],[1086,4,1075,2],[1086,13,1075,11,"peg$parsevariation"],[1086,31,1075,29,"peg$parsevariation"],[1086,32,1075,29],[1086,34,1075,32],[1087,6,1076,4],[1087,10,1076,8,"s0"],[1087,12,1076,10],[1087,14,1076,12,"s2"],[1087,16,1076,14],[1087,18,1076,16,"s3"],[1087,20,1076,18],[1087,22,1076,20,"s5"],[1087,24,1076,22],[1088,6,1078,4,"peg$silentFails"],[1088,21,1078,19],[1088,23,1078,21],[1089,6,1079,4,"s0"],[1089,8,1079,6],[1089,11,1079,9,"peg$currPos"],[1089,22,1079,20],[1090,6,1080,4,"peg$parse_"],[1090,16,1080,14],[1090,17,1080,15],[1090,18,1080,16],[1091,6,1081,4],[1091,10,1081,8,"input"],[1091,15,1081,13],[1091,16,1081,14,"charCodeAt"],[1091,26,1081,24],[1091,27,1081,25,"peg$currPos"],[1091,38,1081,36],[1091,39,1081,37],[1091,44,1081,42],[1091,46,1081,44],[1091,48,1081,46],[1092,8,1082,6,"s2"],[1092,10,1082,8],[1092,13,1082,11,"peg$c12"],[1092,20,1082,18],[1093,8,1083,6,"peg$currPos"],[1093,19,1083,17],[1093,21,1083,19],[1094,6,1084,4],[1094,7,1084,5],[1094,13,1084,11],[1095,8,1085,6,"s2"],[1095,10,1085,8],[1095,13,1085,11,"peg$FAILED"],[1095,23,1085,21],[1096,8,1086,6],[1096,12,1086,10,"peg$silentFails"],[1096,27,1086,25],[1096,32,1086,30],[1096,33,1086,31],[1096,35,1086,33],[1097,10,1086,35,"peg$fail"],[1097,18,1086,43],[1097,19,1086,44,"peg$e31"],[1097,26,1086,51],[1097,27,1086,52],[1098,8,1086,54],[1099,6,1087,4],[1100,6,1088,4],[1100,10,1088,8,"s2"],[1100,12,1088,10],[1100,17,1088,15,"peg$FAILED"],[1100,27,1088,25],[1100,29,1088,27],[1101,8,1089,6,"s3"],[1101,10,1089,8],[1101,13,1089,11,"peg$parseline"],[1101,26,1089,24],[1101,27,1089,25],[1101,28,1089,26],[1102,8,1090,6],[1102,12,1090,10,"s3"],[1102,14,1090,12],[1102,19,1090,17,"peg$FAILED"],[1102,29,1090,27],[1102,31,1090,29],[1103,10,1091,8,"peg$parse_"],[1103,20,1091,18],[1103,21,1091,19],[1103,22,1091,20],[1104,10,1092,8],[1104,14,1092,12,"input"],[1104,19,1092,17],[1104,20,1092,18,"charCodeAt"],[1104,30,1092,28],[1104,31,1092,29,"peg$currPos"],[1104,42,1092,40],[1104,43,1092,41],[1104,48,1092,46],[1104,50,1092,48],[1104,52,1092,50],[1105,12,1093,10,"s5"],[1105,14,1093,12],[1105,17,1093,15,"peg$c13"],[1105,24,1093,22],[1106,12,1094,10,"peg$currPos"],[1106,23,1094,21],[1106,25,1094,23],[1107,10,1095,8],[1107,11,1095,9],[1107,17,1095,15],[1108,12,1096,10,"s5"],[1108,14,1096,12],[1108,17,1096,15,"peg$FAILED"],[1108,27,1096,25],[1109,12,1097,10],[1109,16,1097,14,"peg$silentFails"],[1109,31,1097,29],[1109,36,1097,34],[1109,37,1097,35],[1109,39,1097,37],[1110,14,1097,39,"peg$fail"],[1110,22,1097,47],[1110,23,1097,48,"peg$e32"],[1110,30,1097,55],[1110,31,1097,56],[1111,12,1097,58],[1112,10,1098,8],[1113,10,1099,8],[1113,14,1099,12,"s5"],[1113,16,1099,14],[1113,21,1099,19,"peg$FAILED"],[1113,31,1099,29],[1113,33,1099,31],[1114,12,1100,10,"s0"],[1114,14,1100,12],[1114,17,1100,15,"peg$f9"],[1114,23,1100,21],[1114,24,1100,22,"s3"],[1114,26,1100,24],[1114,27,1100,25],[1115,10,1101,8],[1115,11,1101,9],[1115,17,1101,15],[1116,12,1102,10,"peg$currPos"],[1116,23,1102,21],[1116,26,1102,24,"s0"],[1116,28,1102,26],[1117,12,1103,10,"s0"],[1117,14,1103,12],[1117,17,1103,15,"peg$FAILED"],[1117,27,1103,25],[1118,10,1104,8],[1119,8,1105,6],[1119,9,1105,7],[1119,15,1105,13],[1120,10,1106,8,"peg$currPos"],[1120,21,1106,19],[1120,24,1106,22,"s0"],[1120,26,1106,24],[1121,10,1107,8,"s0"],[1121,12,1107,10],[1121,15,1107,13,"peg$FAILED"],[1121,25,1107,23],[1122,8,1108,6],[1123,6,1109,4],[1123,7,1109,5],[1123,13,1109,11],[1124,8,1110,6,"peg$currPos"],[1124,19,1110,17],[1124,22,1110,20,"s0"],[1124,24,1110,22],[1125,8,1111,6,"s0"],[1125,10,1111,8],[1125,13,1111,11,"peg$FAILED"],[1125,23,1111,21],[1126,6,1112,4],[1127,6,1113,4,"peg$silentFails"],[1127,21,1113,19],[1127,23,1113,21],[1128,6,1114,4],[1128,10,1114,8,"s0"],[1128,12,1114,10],[1128,17,1114,15,"peg$FAILED"],[1128,27,1114,25],[1128,29,1114,27],[1129,8,1115,6],[1129,12,1115,10,"peg$silentFails"],[1129,27,1115,25],[1129,32,1115,30],[1129,33,1115,31],[1129,35,1115,33],[1130,10,1115,35,"peg$fail"],[1130,18,1115,43],[1130,19,1115,44,"peg$e30"],[1130,26,1115,51],[1130,27,1115,52],[1131,8,1115,54],[1132,6,1116,4],[1133,6,1118,4],[1133,13,1118,11,"s0"],[1133,15,1118,13],[1134,4,1119,2],[1135,4,1121,2],[1135,13,1121,11,"peg$parsegameTerminationMarker"],[1135,43,1121,41,"peg$parsegameTerminationMarker"],[1135,44,1121,41],[1135,46,1121,44],[1136,6,1122,4],[1136,10,1122,8,"s0"],[1136,12,1122,10],[1136,14,1122,12,"s1"],[1136,16,1122,14],[1136,18,1122,16,"s3"],[1136,20,1122,18],[1137,6,1124,4,"peg$silentFails"],[1137,21,1124,19],[1137,23,1124,21],[1138,6,1125,4,"s0"],[1138,8,1125,6],[1138,11,1125,9,"peg$currPos"],[1138,22,1125,20],[1139,6,1126,4],[1139,10,1126,8,"input"],[1139,15,1126,13],[1139,16,1126,14,"substr"],[1139,22,1126,20],[1139,23,1126,21,"peg$currPos"],[1139,34,1126,32],[1139,36,1126,34],[1139,37,1126,35],[1139,38,1126,36],[1139,43,1126,41,"peg$c14"],[1139,50,1126,48],[1139,52,1126,50],[1140,8,1127,6,"s1"],[1140,10,1127,8],[1140,13,1127,11,"peg$c14"],[1140,20,1127,18],[1141,8,1128,6,"peg$currPos"],[1141,19,1128,17],[1141,23,1128,21],[1141,24,1128,22],[1142,6,1129,4],[1142,7,1129,5],[1142,13,1129,11],[1143,8,1130,6,"s1"],[1143,10,1130,8],[1143,13,1130,11,"peg$FAILED"],[1143,23,1130,21],[1144,8,1131,6],[1144,12,1131,10,"peg$silentFails"],[1144,27,1131,25],[1144,32,1131,30],[1144,33,1131,31],[1144,35,1131,33],[1145,10,1131,35,"peg$fail"],[1145,18,1131,43],[1145,19,1131,44,"peg$e34"],[1145,26,1131,51],[1145,27,1131,52],[1146,8,1131,54],[1147,6,1132,4],[1148,6,1133,4],[1148,10,1133,8,"s1"],[1148,12,1133,10],[1148,17,1133,15,"peg$FAILED"],[1148,27,1133,25],[1148,29,1133,27],[1149,8,1134,6],[1149,12,1134,10,"input"],[1149,17,1134,15],[1149,18,1134,16,"substr"],[1149,24,1134,22],[1149,25,1134,23,"peg$currPos"],[1149,36,1134,34],[1149,38,1134,36],[1149,39,1134,37],[1149,40,1134,38],[1149,45,1134,43,"peg$c15"],[1149,52,1134,50],[1149,54,1134,52],[1150,10,1135,8,"s1"],[1150,12,1135,10],[1150,15,1135,13,"peg$c15"],[1150,22,1135,20],[1151,10,1136,8,"peg$currPos"],[1151,21,1136,19],[1151,25,1136,23],[1151,26,1136,24],[1152,8,1137,6],[1152,9,1137,7],[1152,15,1137,13],[1153,10,1138,8,"s1"],[1153,12,1138,10],[1153,15,1138,13,"peg$FAILED"],[1153,25,1138,23],[1154,10,1139,8],[1154,14,1139,12,"peg$silentFails"],[1154,29,1139,27],[1154,34,1139,32],[1154,35,1139,33],[1154,37,1139,35],[1155,12,1139,37,"peg$fail"],[1155,20,1139,45],[1155,21,1139,46,"peg$e35"],[1155,28,1139,53],[1155,29,1139,54],[1156,10,1139,56],[1157,8,1140,6],[1158,8,1141,6],[1158,12,1141,10,"s1"],[1158,14,1141,12],[1158,19,1141,17,"peg$FAILED"],[1158,29,1141,27],[1158,31,1141,29],[1159,10,1142,8],[1159,14,1142,12,"input"],[1159,19,1142,17],[1159,20,1142,18,"substr"],[1159,26,1142,24],[1159,27,1142,25,"peg$currPos"],[1159,38,1142,36],[1159,40,1142,38],[1159,41,1142,39],[1159,42,1142,40],[1159,47,1142,45,"peg$c16"],[1159,54,1142,52],[1159,56,1142,54],[1160,12,1143,10,"s1"],[1160,14,1143,12],[1160,17,1143,15,"peg$c16"],[1160,24,1143,22],[1161,12,1144,10,"peg$currPos"],[1161,23,1144,21],[1161,27,1144,25],[1161,28,1144,26],[1162,10,1145,8],[1162,11,1145,9],[1162,17,1145,15],[1163,12,1146,10,"s1"],[1163,14,1146,12],[1163,17,1146,15,"peg$FAILED"],[1163,27,1146,25],[1164,12,1147,10],[1164,16,1147,14,"peg$silentFails"],[1164,31,1147,29],[1164,36,1147,34],[1164,37,1147,35],[1164,39,1147,37],[1165,14,1147,39,"peg$fail"],[1165,22,1147,47],[1165,23,1147,48,"peg$e36"],[1165,30,1147,55],[1165,31,1147,56],[1166,12,1147,58],[1167,10,1148,8],[1168,10,1149,8],[1168,14,1149,12,"s1"],[1168,16,1149,14],[1168,21,1149,19,"peg$FAILED"],[1168,31,1149,29],[1168,33,1149,31],[1169,12,1150,10],[1169,16,1150,14,"input"],[1169,21,1150,19],[1169,22,1150,20,"charCodeAt"],[1169,32,1150,30],[1169,33,1150,31,"peg$currPos"],[1169,44,1150,42],[1169,45,1150,43],[1169,50,1150,48],[1169,52,1150,50],[1169,54,1150,52],[1170,14,1151,12,"s1"],[1170,16,1151,14],[1170,19,1151,17,"peg$c17"],[1170,26,1151,24],[1171,14,1152,12,"peg$currPos"],[1171,25,1152,23],[1171,27,1152,25],[1172,12,1153,10],[1172,13,1153,11],[1172,19,1153,17],[1173,14,1154,12,"s1"],[1173,16,1154,14],[1173,19,1154,17,"peg$FAILED"],[1173,29,1154,27],[1174,14,1155,12],[1174,18,1155,16,"peg$silentFails"],[1174,33,1155,31],[1174,38,1155,36],[1174,39,1155,37],[1174,41,1155,39],[1175,16,1155,41,"peg$fail"],[1175,24,1155,49],[1175,25,1155,50,"peg$e37"],[1175,32,1155,57],[1175,33,1155,58],[1176,14,1155,60],[1177,12,1156,10],[1178,10,1157,8],[1179,8,1158,6],[1180,6,1159,4],[1181,6,1160,4],[1181,10,1160,8,"s1"],[1181,12,1160,10],[1181,17,1160,15,"peg$FAILED"],[1181,27,1160,25],[1181,29,1160,27],[1182,8,1161,6,"peg$parse_"],[1182,18,1161,16],[1182,19,1161,17],[1182,20,1161,18],[1183,8,1162,6,"s3"],[1183,10,1162,8],[1183,13,1162,11,"peg$parsecomment"],[1183,29,1162,27],[1183,30,1162,28],[1183,31,1162,29],[1184,8,1163,6],[1184,12,1163,10,"s3"],[1184,14,1163,12],[1184,19,1163,17,"peg$FAILED"],[1184,29,1163,27],[1184,31,1163,29],[1185,10,1164,8,"s3"],[1185,12,1164,10],[1185,15,1164,13],[1185,19,1164,17],[1186,8,1165,6],[1187,8,1166,6,"s0"],[1187,10,1166,8],[1187,13,1166,11,"peg$f10"],[1187,20,1166,18],[1187,21,1166,19,"s1"],[1187,23,1166,21],[1187,25,1166,23,"s3"],[1187,27,1166,25],[1187,28,1166,26],[1188,6,1167,4],[1188,7,1167,5],[1188,13,1167,11],[1189,8,1168,6,"peg$currPos"],[1189,19,1168,17],[1189,22,1168,20,"s0"],[1189,24,1168,22],[1190,8,1169,6,"s0"],[1190,10,1169,8],[1190,13,1169,11,"peg$FAILED"],[1190,23,1169,21],[1191,6,1170,4],[1192,6,1171,4,"peg$silentFails"],[1192,21,1171,19],[1192,23,1171,21],[1193,6,1172,4],[1193,10,1172,8,"s0"],[1193,12,1172,10],[1193,17,1172,15,"peg$FAILED"],[1193,27,1172,25],[1193,29,1172,27],[1194,8,1173,6,"s1"],[1194,10,1173,8],[1194,13,1173,11,"peg$FAILED"],[1194,23,1173,21],[1195,8,1174,6],[1195,12,1174,10,"peg$silentFails"],[1195,27,1174,25],[1195,32,1174,30],[1195,33,1174,31],[1195,35,1174,33],[1196,10,1174,35,"peg$fail"],[1196,18,1174,43],[1196,19,1174,44,"peg$e33"],[1196,26,1174,51],[1196,27,1174,52],[1197,8,1174,54],[1198,6,1175,4],[1199,6,1177,4],[1199,13,1177,11,"s0"],[1199,15,1177,13],[1200,4,1178,2],[1201,4,1180,2],[1201,13,1180,11,"peg$parse_"],[1201,23,1180,21,"peg$parse_"],[1201,24,1180,21],[1201,26,1180,24],[1202,6,1181,4],[1202,10,1181,8,"s0"],[1202,12,1181,10],[1202,14,1181,12,"s1"],[1202,16,1181,14],[1203,6,1183,4,"peg$silentFails"],[1203,21,1183,19],[1203,23,1183,21],[1204,6,1184,4,"s0"],[1204,8,1184,6],[1204,11,1184,9],[1204,13,1184,11],[1205,6,1185,4,"s1"],[1205,8,1185,6],[1205,11,1185,9,"input"],[1205,16,1185,14],[1205,17,1185,15,"charAt"],[1205,23,1185,21],[1205,24,1185,22,"peg$currPos"],[1205,35,1185,33],[1205,36,1185,34],[1206,6,1186,4],[1206,10,1186,8,"peg$r9"],[1206,16,1186,14],[1206,17,1186,15,"test"],[1206,21,1186,19],[1206,22,1186,20,"s1"],[1206,24,1186,22],[1206,25,1186,23],[1206,27,1186,25],[1207,8,1187,6,"peg$currPos"],[1207,19,1187,17],[1207,21,1187,19],[1208,6,1188,4],[1208,7,1188,5],[1208,13,1188,11],[1209,8,1189,6,"s1"],[1209,10,1189,8],[1209,13,1189,11,"peg$FAILED"],[1209,23,1189,21],[1210,8,1190,6],[1210,12,1190,10,"peg$silentFails"],[1210,27,1190,25],[1210,32,1190,30],[1210,33,1190,31],[1210,35,1190,33],[1211,10,1190,35,"peg$fail"],[1211,18,1190,43],[1211,19,1190,44,"peg$e39"],[1211,26,1190,51],[1211,27,1190,52],[1212,8,1190,54],[1213,6,1191,4],[1214,6,1192,4],[1214,13,1192,11,"s1"],[1214,15,1192,13],[1214,20,1192,18,"peg$FAILED"],[1214,30,1192,28],[1214,32,1192,30],[1215,8,1193,6,"s0"],[1215,10,1193,8],[1215,11,1193,9,"push"],[1215,15,1193,13],[1215,16,1193,14,"s1"],[1215,18,1193,16],[1215,19,1193,17],[1216,8,1194,6,"s1"],[1216,10,1194,8],[1216,13,1194,11,"input"],[1216,18,1194,16],[1216,19,1194,17,"charAt"],[1216,25,1194,23],[1216,26,1194,24,"peg$currPos"],[1216,37,1194,35],[1216,38,1194,36],[1217,8,1195,6],[1217,12,1195,10,"peg$r9"],[1217,18,1195,16],[1217,19,1195,17,"test"],[1217,23,1195,21],[1217,24,1195,22,"s1"],[1217,26,1195,24],[1217,27,1195,25],[1217,29,1195,27],[1218,10,1196,8,"peg$currPos"],[1218,21,1196,19],[1218,23,1196,21],[1219,8,1197,6],[1219,9,1197,7],[1219,15,1197,13],[1220,10,1198,8,"s1"],[1220,12,1198,10],[1220,15,1198,13,"peg$FAILED"],[1220,25,1198,23],[1221,10,1199,8],[1221,14,1199,12,"peg$silentFails"],[1221,29,1199,27],[1221,34,1199,32],[1221,35,1199,33],[1221,37,1199,35],[1222,12,1199,37,"peg$fail"],[1222,20,1199,45],[1222,21,1199,46,"peg$e39"],[1222,28,1199,53],[1222,29,1199,54],[1223,10,1199,56],[1224,8,1200,6],[1225,6,1201,4],[1226,6,1202,4,"peg$silentFails"],[1226,21,1202,19],[1226,23,1202,21],[1227,6,1203,4,"s1"],[1227,8,1203,6],[1227,11,1203,9,"peg$FAILED"],[1227,21,1203,19],[1228,6,1204,4],[1228,10,1204,8,"peg$silentFails"],[1228,25,1204,23],[1228,30,1204,28],[1228,31,1204,29],[1228,33,1204,31],[1229,8,1204,33,"peg$fail"],[1229,16,1204,41],[1229,17,1204,42,"peg$e38"],[1229,24,1204,49],[1229,25,1204,50],[1230,6,1204,52],[1231,6,1206,4],[1231,13,1206,11,"s0"],[1231,15,1206,13],[1232,4,1207,2],[1233,4,1209,2,"peg$result"],[1233,14,1209,12],[1233,17,1209,15,"peg$startRuleFunction"],[1233,38,1209,36],[1233,39,1209,37],[1233,40,1209,38],[1234,4,1211,2],[1234,8,1211,6,"options"],[1234,15,1211,13],[1234,16,1211,14,"peg$library"],[1234,27,1211,25],[1234,29,1211,27],[1235,6,1212,4],[1235,13,1212,11],[1235,31,1212,31],[1236,8,1213,6,"peg$result"],[1236,18,1213,16],[1237,8,1214,6,"peg$currPos"],[1237,19,1214,17],[1238,8,1215,6,"peg$FAILED"],[1238,18,1215,16],[1239,8,1216,6,"peg$maxFailExpected"],[1239,27,1216,25],[1240,8,1217,6,"peg$maxFailPos"],[1241,6,1218,4],[1241,7,1218,5],[1242,4,1219,2],[1243,4,1220,2],[1243,8,1220,6,"peg$result"],[1243,18,1220,16],[1243,23,1220,21,"peg$FAILED"],[1243,33,1220,31],[1243,37,1220,35,"peg$currPos"],[1243,48,1220,46],[1243,53,1220,51,"input"],[1243,58,1220,56],[1243,59,1220,57,"length"],[1243,65,1220,63],[1243,67,1220,65],[1244,6,1221,4],[1244,13,1221,11,"peg$result"],[1244,23,1221,21],[1245,4,1222,2],[1245,5,1222,3],[1245,11,1222,9],[1246,6,1223,4],[1246,10,1223,8,"peg$result"],[1246,20,1223,18],[1246,25,1223,23,"peg$FAILED"],[1246,35,1223,33],[1246,39,1223,37,"peg$currPos"],[1246,50,1223,48],[1246,53,1223,51,"input"],[1246,58,1223,56],[1246,59,1223,57,"length"],[1246,65,1223,63],[1246,67,1223,65],[1247,8,1224,6,"peg$fail"],[1247,16,1224,14],[1247,17,1224,15,"peg$endExpectation"],[1247,35,1224,33],[1247,36,1224,34],[1247,37,1224,35],[1247,38,1224,36],[1248,6,1225,4],[1249,6,1227,4],[1249,12,1227,10,"peg$buildStructuredError"],[1249,36,1227,34],[1249,37,1228,6,"peg$maxFailExpected"],[1249,56,1228,25],[1249,58,1229,6,"peg$maxFailPos"],[1249,72,1229,20],[1249,75,1229,23,"input"],[1249,80,1229,28],[1249,81,1229,29,"length"],[1249,87,1229,35],[1249,90,1229,38,"input"],[1249,95,1229,43],[1249,96,1229,44,"charAt"],[1249,102,1229,50],[1249,103,1229,51,"peg$maxFailPos"],[1249,117,1229,65],[1249,118,1229,66],[1249,121,1229,69],[1249,125,1229,73],[1249,127,1230,6,"peg$maxFailPos"],[1249,141,1230,20],[1249,144,1230,23,"input"],[1249,149,1230,28],[1249,150,1230,29,"length"],[1249,156,1230,35],[1249,159,1231,10,"peg$computeLocation"],[1249,178,1231,29],[1249,179,1231,30,"peg$maxFailPos"],[1249,193,1231,44],[1249,195,1231,46,"peg$maxFailPos"],[1249,209,1231,60],[1249,212,1231,63],[1249,213,1231,64],[1249,214,1231,65],[1249,217,1232,10,"peg$computeLocation"],[1249,236,1232,29],[1249,237,1232,30,"peg$maxFailPos"],[1249,251,1232,44],[1249,253,1232,46,"peg$maxFailPos"],[1249,267,1232,60],[1249,268,1233,4],[1249,269,1233,5],[1250,4,1234,2],[1251,2,1235,0],[1253,2,1237,0],[1254,0,1238,0],[1255,0,1239,0],[1256,0,1240,0],[1257,0,1241,0],[1258,0,1242,0],[1259,0,1243,0],[1260,0,1244,0],[1261,0,1245,0],[1262,0,1246,0],[1263,0,1247,0],[1264,0,1248,0],[1265,0,1249,0],[1266,0,1250,0],[1267,0,1251,0],[1268,0,1252,0],[1269,0,1253,0],[1270,0,1254,0],[1271,0,1255,0],[1272,0,1256,0],[1273,0,1257,0],[1274,0,1258,0],[1275,0,1259,0],[1276,0,1260,0],[1277,0,1261,0],[1278,0,1262,0],[1279,2,1263,0],[1279,8,1263,6,"MASK64"],[1279,14,1263,12],[1279,17,1263,15],[1279,36,1263,34],[1280,2,1264,0],[1280,11,1264,9,"rotl"],[1280,15,1264,13,"rotl"],[1280,16,1264,14,"x"],[1280,17,1264,15],[1280,19,1264,17,"k"],[1280,20,1264,18],[1280,22,1264,20],[1281,4,1265,4],[1281,11,1265,11],[1281,12,1265,13,"x"],[1281,13,1265,14],[1281,17,1265,18,"k"],[1281,18,1265,19],[1281,21,1265,24,"x"],[1281,22,1265,25],[1281,26,1265,30],[1281,29,1265,33],[1281,32,1265,36,"k"],[1281,33,1265,39],[1281,37,1265,43],[1281,56,1265,62],[1282,2,1266,0],[1283,2,1267,0],[1283,11,1267,9,"wrappingMul"],[1283,22,1267,20,"wrappingMul"],[1283,23,1267,21,"x"],[1283,24,1267,22],[1283,26,1267,24,"y"],[1283,27,1267,25],[1283,29,1267,27],[1284,4,1268,4],[1284,11,1268,12,"x"],[1284,12,1268,13],[1284,15,1268,16,"y"],[1284,16,1268,17],[1284,19,1268,21,"MASK64"],[1284,25,1268,27],[1285,2,1269,0],[1286,2,1270,0],[1287,2,1271,0],[1287,11,1271,9,"xoroshiro128"],[1287,23,1271,21,"xoroshiro128"],[1287,24,1271,22,"state"],[1287,29,1271,27],[1287,31,1271,29],[1288,4,1272,4],[1288,11,1272,11],[1288,23,1272,23],[1289,6,1273,8],[1289,10,1273,12,"s0"],[1289,12,1273,14],[1289,15,1273,17,"BigInt"],[1289,21,1273,23],[1289,22,1273,24,"state"],[1289,27,1273,29],[1289,30,1273,32,"MASK64"],[1289,36,1273,38],[1289,37,1273,39],[1290,6,1274,8],[1290,10,1274,12,"s1"],[1290,12,1274,14],[1290,15,1274,17,"BigInt"],[1290,21,1274,23],[1290,22,1274,25,"state"],[1290,27,1274,30],[1290,31,1274,34],[1290,34,1274,37],[1290,37,1274,41,"MASK64"],[1290,43,1274,47],[1290,44,1274,48],[1291,6,1275,8],[1291,12,1275,14,"result"],[1291,18,1275,20],[1291,21,1275,23,"wrappingMul"],[1291,32,1275,34],[1291,33,1275,35,"rotl"],[1291,37,1275,39],[1291,38,1275,40,"wrappingMul"],[1291,49,1275,51],[1291,50,1275,52,"s0"],[1291,52,1275,54],[1291,54,1275,56],[1291,56,1275,58],[1291,57,1275,59],[1291,59,1275,61],[1291,61,1275,63],[1291,62,1275,64],[1291,64,1275,66],[1291,66,1275,68],[1291,67,1275,69],[1292,6,1276,8,"s1"],[1292,8,1276,10],[1292,12,1276,14,"s0"],[1292,14,1276,16],[1293,6,1277,8,"s0"],[1293,8,1277,10],[1293,11,1277,13],[1293,12,1277,14,"rotl"],[1293,16,1277,18],[1293,17,1277,19,"s0"],[1293,19,1277,21],[1293,21,1277,23],[1293,24,1277,26],[1293,25,1277,27],[1293,28,1277,30,"s1"],[1293,30,1277,32],[1293,33,1277,36,"s1"],[1293,35,1277,38],[1293,39,1277,42],[1293,42,1277,46],[1293,46,1277,50,"MASK64"],[1293,52,1277,56],[1294,6,1278,8,"s1"],[1294,8,1278,10],[1294,11,1278,13,"rotl"],[1294,15,1278,17],[1294,16,1278,18,"s1"],[1294,18,1278,20],[1294,20,1278,22],[1294,23,1278,25],[1294,24,1278,26],[1295,6,1279,8,"state"],[1295,11,1279,13],[1295,14,1279,17,"s1"],[1295,16,1279,19],[1295,20,1279,23],[1295,23,1279,26],[1295,26,1279,30,"s0"],[1295,28,1279,32],[1296,6,1280,8],[1296,13,1280,15,"result"],[1296,19,1280,21],[1297,4,1281,4],[1297,5,1281,5],[1298,2,1282,0],[1299,2,1283,0],[1299,8,1283,6,"rand"],[1299,12,1283,10],[1299,15,1283,13,"xoroshiro128"],[1299,27,1283,25],[1299,28,1283,26],[1299,63,1283,61],[1299,64,1283,62],[1300,2,1284,0],[1300,8,1284,6,"PIECE_KEYS"],[1300,18,1284,16],[1300,21,1284,19,"Array"],[1300,26,1284,24],[1300,27,1284,25,"from"],[1300,31,1284,29],[1300,32,1284,30],[1301,4,1284,32,"length"],[1301,10,1284,38],[1301,12,1284,40],[1302,2,1284,42],[1302,3,1284,43],[1302,5,1284,45],[1302,11,1284,51,"Array"],[1302,16,1284,56],[1302,17,1284,57,"from"],[1302,21,1284,61],[1302,22,1284,62],[1303,4,1284,64,"length"],[1303,10,1284,70],[1303,12,1284,72],[1304,2,1284,74],[1304,3,1284,75],[1304,5,1284,77],[1304,11,1284,83,"Array"],[1304,16,1284,88],[1304,17,1284,89,"from"],[1304,21,1284,93],[1304,22,1284,94],[1305,4,1284,96,"length"],[1305,10,1284,102],[1305,12,1284,104],[1306,2,1284,108],[1306,3,1284,109],[1306,5,1284,111],[1306,11,1284,117,"rand"],[1306,15,1284,121],[1306,16,1284,122],[1306,17,1284,123],[1306,18,1284,124],[1306,19,1284,125],[1306,20,1284,126],[1307,2,1285,0],[1307,8,1285,6,"EP_KEYS"],[1307,15,1285,13],[1307,18,1285,16,"Array"],[1307,23,1285,21],[1307,24,1285,22,"from"],[1307,28,1285,26],[1307,29,1285,27],[1308,4,1285,29,"length"],[1308,10,1285,35],[1308,12,1285,37],[1309,2,1285,39],[1309,3,1285,40],[1309,5,1285,42],[1309,11,1285,48,"rand"],[1309,15,1285,52],[1309,16,1285,53],[1309,17,1285,54],[1309,18,1285,55],[1310,2,1286,0],[1310,8,1286,6,"CASTLING_KEYS"],[1310,21,1286,19],[1310,24,1286,22,"Array"],[1310,29,1286,27],[1310,30,1286,28,"from"],[1310,34,1286,32],[1310,35,1286,33],[1311,4,1286,35,"length"],[1311,10,1286,41],[1311,12,1286,43],[1312,2,1286,46],[1312,3,1286,47],[1312,5,1286,49],[1312,11,1286,55,"rand"],[1312,15,1286,59],[1312,16,1286,60],[1312,17,1286,61],[1312,18,1286,62],[1313,2,1287,0],[1313,8,1287,6,"SIDE_KEY"],[1313,16,1287,14],[1313,19,1287,17,"rand"],[1313,23,1287,21],[1313,24,1287,22],[1313,25,1287,23],[1314,2,1288,0],[1314,8,1288,6,"WHITE"],[1314,13,1288,11],[1314,16,1288,14],[1314,19,1288,17],[1315,2,1289,0],[1315,8,1289,6,"BLACK"],[1315,13,1289,11],[1315,16,1289,14],[1315,19,1289,17],[1316,2,1290,0],[1316,8,1290,6,"PAWN"],[1316,12,1290,10],[1316,15,1290,13],[1316,18,1290,16],[1317,2,1291,0],[1317,8,1291,6,"KNIGHT"],[1317,14,1291,12],[1317,17,1291,15],[1317,20,1291,18],[1318,2,1292,0],[1318,8,1292,6,"BISHOP"],[1318,14,1292,12],[1318,17,1292,15],[1318,20,1292,18],[1319,2,1293,0],[1319,8,1293,6,"ROOK"],[1319,12,1293,10],[1319,15,1293,13],[1319,18,1293,16],[1320,2,1294,0],[1320,8,1294,6,"QUEEN"],[1320,13,1294,11],[1320,16,1294,14],[1320,19,1294,17],[1321,2,1295,0],[1321,8,1295,6,"KING"],[1321,12,1295,10],[1321,15,1295,13],[1321,18,1295,16],[1322,2,1296,0],[1322,8,1296,6,"DEFAULT_POSITION"],[1322,24,1296,22],[1322,27,1296,25],[1322,85,1296,83],[1323,2,1297,0],[1323,8,1297,6,"Move"],[1323,12,1297,10],[1323,13,1297,11],[1324,4,1304,4],[1325,0,1305,0],[1326,0,1306,0],[1327,0,1307,0],[1328,0,1308,0],[1329,0,1309,0],[1331,4,1315,4,"constructor"],[1331,15,1315,15,"constructor"],[1331,16,1315,16,"chess"],[1331,21,1315,21],[1331,23,1315,23,"internal"],[1331,31,1315,31],[1331,33,1315,33],[1332,6,1316,8],[1332,12,1316,14],[1333,8,1316,16,"color"],[1333,13,1316,21],[1334,8,1316,23,"piece"],[1334,13,1316,28],[1335,8,1316,30,"from"],[1335,12,1316,34],[1336,8,1316,36,"to"],[1336,10,1316,38],[1337,8,1316,40,"flags"],[1337,13,1316,45],[1338,8,1316,47,"captured"],[1338,16,1316,55],[1339,8,1316,57,"promotion"],[1340,6,1316,67],[1340,7,1316,68],[1340,10,1316,71,"internal"],[1340,18,1316,79],[1341,6,1317,8],[1341,12,1317,14,"fromAlgebraic"],[1341,25,1317,27],[1341,28,1317,30,"algebraic"],[1341,37,1317,39],[1341,38,1317,40,"from"],[1341,42,1317,44],[1341,43,1317,45],[1342,6,1318,8],[1342,12,1318,14,"toAlgebraic"],[1342,23,1318,25],[1342,26,1318,28,"algebraic"],[1342,35,1318,37],[1342,36,1318,38,"to"],[1342,38,1318,40],[1342,39,1318,41],[1343,6,1319,8],[1343,10,1319,12],[1343,11,1319,13,"color"],[1343,16,1319,18],[1343,19,1319,21,"color"],[1343,24,1319,26],[1344,6,1320,8],[1344,10,1320,12],[1344,11,1320,13,"piece"],[1344,16,1320,18],[1344,19,1320,21,"piece"],[1344,24,1320,26],[1345,6,1321,8],[1345,10,1321,12],[1345,11,1321,13,"from"],[1345,15,1321,17],[1345,18,1321,20,"fromAlgebraic"],[1345,31,1321,33],[1346,6,1322,8],[1346,10,1322,12],[1346,11,1322,13,"to"],[1346,13,1322,15],[1346,16,1322,18,"toAlgebraic"],[1346,27,1322,29],[1347,6,1323,8],[1348,0,1324,0],[1349,0,1325,0],[1350,0,1326,0],[1351,0,1327,0],[1352,6,1328,8],[1352,10,1328,12],[1352,11,1328,13,"san"],[1352,14,1328,16],[1352,17,1328,19,"chess"],[1352,22,1328,24],[1352,23,1328,25],[1352,35,1328,37],[1352,36,1328,38],[1352,37,1328,39,"internal"],[1352,45,1328,47],[1352,47,1328,49,"chess"],[1352,52,1328,54],[1352,53,1328,55],[1352,61,1328,63],[1352,62,1328,64],[1352,63,1328,65],[1353,8,1328,67,"legal"],[1353,13,1328,72],[1353,15,1328,74],[1354,6,1328,79],[1354,7,1328,80],[1354,8,1328,81],[1354,9,1328,82],[1355,6,1329,8],[1355,10,1329,12],[1355,11,1329,13,"lan"],[1355,14,1329,16],[1355,17,1329,19,"fromAlgebraic"],[1355,30,1329,32],[1355,33,1329,35,"toAlgebraic"],[1355,44,1329,46],[1356,6,1330,8],[1356,10,1330,12],[1356,11,1330,13,"before"],[1356,17,1330,19],[1356,20,1330,22,"chess"],[1356,25,1330,27],[1356,26,1330,28,"fen"],[1356,29,1330,31],[1356,30,1330,32],[1356,31,1330,33],[1357,6,1331,8],[1358,6,1332,8,"chess"],[1358,11,1332,13],[1358,12,1332,14],[1358,23,1332,25],[1358,24,1332,26],[1358,25,1332,27,"internal"],[1358,33,1332,35],[1358,34,1332,36],[1359,6,1333,8],[1359,10,1333,12],[1359,11,1333,13,"after"],[1359,16,1333,18],[1359,19,1333,21,"chess"],[1359,24,1333,26],[1359,25,1333,27,"fen"],[1359,28,1333,30],[1359,29,1333,31],[1359,30,1333,32],[1360,6,1334,8,"chess"],[1360,11,1334,13],[1360,12,1334,14],[1360,23,1334,25],[1360,24,1334,26],[1360,25,1334,27],[1360,26,1334,28],[1361,6,1335,8],[1362,6,1336,8],[1362,10,1336,12],[1362,11,1336,13,"flags"],[1362,16,1336,18],[1362,19,1336,21],[1362,21,1336,23],[1363,6,1337,8],[1363,11,1337,13],[1363,17,1337,19,"flag"],[1363,21,1337,23],[1363,25,1337,27,"BITS"],[1363,29,1337,31],[1363,31,1337,33],[1364,8,1338,12],[1364,12,1338,16,"BITS"],[1364,16,1338,20],[1364,17,1338,21,"flag"],[1364,21,1338,25],[1364,22,1338,26],[1364,25,1338,29,"flags"],[1364,30,1338,34],[1364,32,1338,36],[1365,10,1339,16],[1365,14,1339,20],[1365,15,1339,21,"flags"],[1365,20,1339,26],[1365,24,1339,30,"FLAGS"],[1365,29,1339,35],[1365,30,1339,36,"flag"],[1365,34,1339,40],[1365,35,1339,41],[1366,8,1340,12],[1367,6,1341,8],[1368,6,1342,8],[1368,10,1342,12,"captured"],[1368,18,1342,20],[1368,20,1342,22],[1369,8,1343,12],[1369,12,1343,16],[1369,13,1343,17,"captured"],[1369,21,1343,25],[1369,24,1343,28,"captured"],[1369,32,1343,36],[1370,6,1344,8],[1371,6,1345,8],[1371,10,1345,12,"promotion"],[1371,19,1345,21],[1371,21,1345,23],[1372,8,1346,12],[1372,12,1346,16],[1372,13,1346,17,"promotion"],[1372,22,1346,26],[1372,25,1346,29,"promotion"],[1372,34,1346,38],[1373,8,1347,12],[1373,12,1347,16],[1373,13,1347,17,"lan"],[1373,16,1347,20],[1373,20,1347,24,"promotion"],[1373,29,1347,33],[1374,6,1348,8],[1375,4,1349,4],[1376,4,1350,4,"isCapture"],[1376,13,1350,13,"isCapture"],[1376,14,1350,13],[1376,16,1350,16],[1377,6,1351,8],[1377,13,1351,15],[1377,17,1351,19],[1377,18,1351,20,"flags"],[1377,23,1351,25],[1377,24,1351,26,"indexOf"],[1377,31,1351,33],[1377,32,1351,34,"FLAGS"],[1377,37,1351,39],[1377,38,1351,40],[1377,47,1351,49],[1377,48,1351,50],[1377,49,1351,51],[1377,52,1351,54],[1377,53,1351,55],[1377,54,1351,56],[1378,4,1352,4],[1379,4,1353,4,"isPromotion"],[1379,15,1353,15,"isPromotion"],[1379,16,1353,15],[1379,18,1353,18],[1380,6,1354,8],[1380,13,1354,15],[1380,17,1354,19],[1380,18,1354,20,"flags"],[1380,23,1354,25],[1380,24,1354,26,"indexOf"],[1380,31,1354,33],[1380,32,1354,34,"FLAGS"],[1380,37,1354,39],[1380,38,1354,40],[1380,49,1354,51],[1380,50,1354,52],[1380,51,1354,53],[1380,54,1354,56],[1380,55,1354,57],[1380,56,1354,58],[1381,4,1355,4],[1382,4,1356,4,"isEnPassant"],[1382,15,1356,15,"isEnPassant"],[1382,16,1356,15],[1382,18,1356,18],[1383,6,1357,8],[1383,13,1357,15],[1383,17,1357,19],[1383,18,1357,20,"flags"],[1383,23,1357,25],[1383,24,1357,26,"indexOf"],[1383,31,1357,33],[1383,32,1357,34,"FLAGS"],[1383,37,1357,39],[1383,38,1357,40],[1383,50,1357,52],[1383,51,1357,53],[1383,52,1357,54],[1383,55,1357,57],[1383,56,1357,58],[1383,57,1357,59],[1384,4,1358,4],[1385,4,1359,4,"isKingsideCastle"],[1385,20,1359,20,"isKingsideCastle"],[1385,21,1359,20],[1385,23,1359,23],[1386,6,1360,8],[1386,13,1360,15],[1386,17,1360,19],[1386,18,1360,20,"flags"],[1386,23,1360,25],[1386,24,1360,26,"indexOf"],[1386,31,1360,33],[1386,32,1360,34,"FLAGS"],[1386,37,1360,39],[1386,38,1360,40],[1386,52,1360,54],[1386,53,1360,55],[1386,54,1360,56],[1386,57,1360,59],[1386,58,1360,60],[1386,59,1360,61],[1387,4,1361,4],[1388,4,1362,4,"isQueensideCastle"],[1388,21,1362,21,"isQueensideCastle"],[1388,22,1362,21],[1388,24,1362,24],[1389,6,1363,8],[1389,13,1363,15],[1389,17,1363,19],[1389,18,1363,20,"flags"],[1389,23,1363,25],[1389,24,1363,26,"indexOf"],[1389,31,1363,33],[1389,32,1363,34,"FLAGS"],[1389,37,1363,39],[1389,38,1363,40],[1389,52,1363,54],[1389,53,1363,55],[1389,54,1363,56],[1389,57,1363,59],[1389,58,1363,60],[1389,59,1363,61],[1390,4,1364,4],[1391,4,1365,4,"isBigPawn"],[1391,13,1365,13,"isBigPawn"],[1391,14,1365,13],[1391,16,1365,16],[1392,6,1366,8],[1392,13,1366,15],[1392,17,1366,19],[1392,18,1366,20,"flags"],[1392,23,1366,25],[1392,24,1366,26,"indexOf"],[1392,31,1366,33],[1392,32,1366,34,"FLAGS"],[1392,37,1366,39],[1392,38,1366,40],[1392,48,1366,50],[1392,49,1366,51],[1392,50,1366,52],[1392,53,1366,55],[1392,54,1366,56],[1392,55,1366,57],[1393,4,1367,4],[1394,2,1368,0],[1395,2,1369,0],[1395,8,1369,6,"EMPTY"],[1395,13,1369,11],[1395,16,1369,14],[1395,17,1369,15],[1395,18,1369,16],[1396,2,1370,0],[1396,8,1370,6,"FLAGS"],[1396,13,1370,11],[1396,16,1370,14],[1397,4,1371,4,"NORMAL"],[1397,10,1371,10],[1397,12,1371,12],[1397,15,1371,15],[1398,4,1372,4,"CAPTURE"],[1398,11,1372,11],[1398,13,1372,13],[1398,16,1372,16],[1399,4,1373,4,"BIG_PAWN"],[1399,12,1373,12],[1399,14,1373,14],[1399,17,1373,17],[1400,4,1374,4,"EP_CAPTURE"],[1400,14,1374,14],[1400,16,1374,16],[1400,19,1374,19],[1401,4,1375,4,"PROMOTION"],[1401,13,1375,13],[1401,15,1375,15],[1401,18,1375,18],[1402,4,1376,4,"KSIDE_CASTLE"],[1402,16,1376,16],[1402,18,1376,18],[1402,21,1376,21],[1403,4,1377,4,"QSIDE_CASTLE"],[1403,16,1377,16],[1403,18,1377,18],[1403,21,1377,21],[1404,4,1378,4,"NULL_MOVE"],[1404,13,1378,13],[1404,15,1378,15],[1405,2,1379,0],[1405,3,1379,1],[1406,2,1380,0],[1407,2,1381,0],[1407,8,1381,6,"SQUARES"],[1407,15,1381,13],[1407,18,1381,16],[1407,19,1382,4],[1407,23,1382,8],[1407,25,1382,10],[1407,29,1382,14],[1407,31,1382,16],[1407,35,1382,20],[1407,37,1382,22],[1407,41,1382,26],[1407,43,1382,28],[1407,47,1382,32],[1407,49,1382,34],[1407,53,1382,38],[1407,55,1382,40],[1407,59,1382,44],[1407,61,1382,46],[1407,65,1382,50],[1407,67,1383,4],[1407,71,1383,8],[1407,73,1383,10],[1407,77,1383,14],[1407,79,1383,16],[1407,83,1383,20],[1407,85,1383,22],[1407,89,1383,26],[1407,91,1383,28],[1407,95,1383,32],[1407,97,1383,34],[1407,101,1383,38],[1407,103,1383,40],[1407,107,1383,44],[1407,109,1383,46],[1407,113,1383,50],[1407,115,1384,4],[1407,119,1384,8],[1407,121,1384,10],[1407,125,1384,14],[1407,127,1384,16],[1407,131,1384,20],[1407,133,1384,22],[1407,137,1384,26],[1407,139,1384,28],[1407,143,1384,32],[1407,145,1384,34],[1407,149,1384,38],[1407,151,1384,40],[1407,155,1384,44],[1407,157,1384,46],[1407,161,1384,50],[1407,163,1385,4],[1407,167,1385,8],[1407,169,1385,10],[1407,173,1385,14],[1407,175,1385,16],[1407,179,1385,20],[1407,181,1385,22],[1407,185,1385,26],[1407,187,1385,28],[1407,191,1385,32],[1407,193,1385,34],[1407,197,1385,38],[1407,199,1385,40],[1407,203,1385,44],[1407,205,1385,46],[1407,209,1385,50],[1407,211,1386,4],[1407,215,1386,8],[1407,217,1386,10],[1407,221,1386,14],[1407,223,1386,16],[1407,227,1386,20],[1407,229,1386,22],[1407,233,1386,26],[1407,235,1386,28],[1407,239,1386,32],[1407,241,1386,34],[1407,245,1386,38],[1407,247,1386,40],[1407,251,1386,44],[1407,253,1386,46],[1407,257,1386,50],[1407,259,1387,4],[1407,263,1387,8],[1407,265,1387,10],[1407,269,1387,14],[1407,271,1387,16],[1407,275,1387,20],[1407,277,1387,22],[1407,281,1387,26],[1407,283,1387,28],[1407,287,1387,32],[1407,289,1387,34],[1407,293,1387,38],[1407,295,1387,40],[1407,299,1387,44],[1407,301,1387,46],[1407,305,1387,50],[1407,307,1388,4],[1407,311,1388,8],[1407,313,1388,10],[1407,317,1388,14],[1407,319,1388,16],[1407,323,1388,20],[1407,325,1388,22],[1407,329,1388,26],[1407,331,1388,28],[1407,335,1388,32],[1407,337,1388,34],[1407,341,1388,38],[1407,343,1388,40],[1407,347,1388,44],[1407,349,1388,46],[1407,353,1388,50],[1407,355,1389,4],[1407,359,1389,8],[1407,361,1389,10],[1407,365,1389,14],[1407,367,1389,16],[1407,371,1389,20],[1407,373,1389,22],[1407,377,1389,26],[1407,379,1389,28],[1407,383,1389,32],[1407,385,1389,34],[1407,389,1389,38],[1407,391,1389,40],[1407,395,1389,44],[1407,397,1389,46],[1407,401,1389,50],[1407,402,1390,1],[1408,2,1391,0],[1408,8,1391,6,"BITS"],[1408,12,1391,10],[1408,15,1391,13],[1409,4,1392,4,"NORMAL"],[1409,10,1392,10],[1409,12,1392,12],[1409,13,1392,13],[1410,4,1393,4,"CAPTURE"],[1410,11,1393,11],[1410,13,1393,13],[1410,14,1393,14],[1411,4,1394,4,"BIG_PAWN"],[1411,12,1394,12],[1411,14,1394,14],[1411,15,1394,15],[1412,4,1395,4,"EP_CAPTURE"],[1412,14,1395,14],[1412,16,1395,16],[1412,17,1395,17],[1413,4,1396,4,"PROMOTION"],[1413,13,1396,13],[1413,15,1396,15],[1413,17,1396,17],[1414,4,1397,4,"KSIDE_CASTLE"],[1414,16,1397,16],[1414,18,1397,18],[1414,20,1397,20],[1415,4,1398,4,"QSIDE_CASTLE"],[1415,16,1398,16],[1415,18,1398,18],[1415,20,1398,20],[1416,4,1399,4,"NULL_MOVE"],[1416,13,1399,13],[1416,15,1399,15],[1417,2,1400,0],[1417,3,1400,1],[1418,2,1401,0],[1419,2,1402,0],[1420,2,1403,0],[1420,8,1403,6,"SEVEN_TAG_ROSTER"],[1420,24,1403,22],[1420,27,1403,25],[1421,4,1404,4,"Event"],[1421,9,1404,9],[1421,11,1404,11],[1421,14,1404,14],[1422,4,1405,4,"Site"],[1422,8,1405,8],[1422,10,1405,10],[1422,13,1405,13],[1423,4,1406,4,"Date"],[1423,8,1406,8],[1423,10,1406,10],[1423,22,1406,22],[1424,4,1407,4,"Round"],[1424,9,1407,9],[1424,11,1407,11],[1424,14,1407,14],[1425,4,1408,4,"White"],[1425,9,1408,9],[1425,11,1408,11],[1425,14,1408,14],[1426,4,1409,4,"Black"],[1426,9,1409,9],[1426,11,1409,11],[1426,14,1409,14],[1427,4,1410,4,"Result"],[1427,10,1410,10],[1427,12,1410,12],[1428,2,1411,0],[1428,3,1411,1],[1429,2,1412,0],[1430,0,1413,0],[1431,0,1414,0],[1432,0,1415,0],[1433,2,1416,0],[1433,8,1416,6,"SUPLEMENTAL_TAGS"],[1433,24,1416,22],[1433,27,1416,25],[1434,4,1417,4,"WhiteTitle"],[1434,14,1417,14],[1434,16,1417,16],[1434,20,1417,20],[1435,4,1418,4,"BlackTitle"],[1435,14,1418,14],[1435,16,1418,16],[1435,20,1418,20],[1436,4,1419,4,"WhiteElo"],[1436,12,1419,12],[1436,14,1419,14],[1436,18,1419,18],[1437,4,1420,4,"BlackElo"],[1437,12,1420,12],[1437,14,1420,14],[1437,18,1420,18],[1438,4,1421,4,"WhiteUSCF"],[1438,13,1421,13],[1438,15,1421,15],[1438,19,1421,19],[1439,4,1422,4,"BlackUSCF"],[1439,13,1422,13],[1439,15,1422,15],[1439,19,1422,19],[1440,4,1423,4,"WhiteNA"],[1440,11,1423,11],[1440,13,1423,13],[1440,17,1423,17],[1441,4,1424,4,"BlackNA"],[1441,11,1424,11],[1441,13,1424,13],[1441,17,1424,17],[1442,4,1425,4,"WhiteType"],[1442,13,1425,13],[1442,15,1425,15],[1442,19,1425,19],[1443,4,1426,4,"BlackType"],[1443,13,1426,13],[1443,15,1426,15],[1443,19,1426,19],[1444,4,1427,4,"EventDate"],[1444,13,1427,13],[1444,15,1427,15],[1444,19,1427,19],[1445,4,1428,4,"EventSponsor"],[1445,16,1428,16],[1445,18,1428,18],[1445,22,1428,22],[1446,4,1429,4,"Section"],[1446,11,1429,11],[1446,13,1429,13],[1446,17,1429,17],[1447,4,1430,4,"Stage"],[1447,9,1430,9],[1447,11,1430,11],[1447,15,1430,15],[1448,4,1431,4,"Board"],[1448,9,1431,9],[1448,11,1431,11],[1448,15,1431,15],[1449,4,1432,4,"Opening"],[1449,11,1432,11],[1449,13,1432,13],[1449,17,1432,17],[1450,4,1433,4,"Variation"],[1450,13,1433,13],[1450,15,1433,15],[1450,19,1433,19],[1451,4,1434,4,"SubVariation"],[1451,16,1434,16],[1451,18,1434,18],[1451,22,1434,22],[1452,4,1435,4,"ECO"],[1452,7,1435,7],[1452,9,1435,9],[1452,13,1435,13],[1453,4,1436,4,"NIC"],[1453,7,1436,7],[1453,9,1436,9],[1453,13,1436,13],[1454,4,1437,4,"Time"],[1454,8,1437,8],[1454,10,1437,10],[1454,14,1437,14],[1455,4,1438,4,"UTCTime"],[1455,11,1438,11],[1455,13,1438,13],[1455,17,1438,17],[1456,4,1439,4,"UTCDate"],[1456,11,1439,11],[1456,13,1439,13],[1456,17,1439,17],[1457,4,1440,4,"TimeControl"],[1457,15,1440,15],[1457,17,1440,17],[1457,21,1440,21],[1458,4,1441,4,"SetUp"],[1458,9,1441,9],[1458,11,1441,11],[1458,15,1441,15],[1459,4,1442,4,"FEN"],[1459,7,1442,7],[1459,9,1442,9],[1459,13,1442,13],[1460,4,1443,4,"Termination"],[1460,15,1443,15],[1460,17,1443,17],[1460,21,1443,21],[1461,4,1444,4,"Annotator"],[1461,13,1444,13],[1461,15,1444,15],[1461,19,1444,19],[1462,4,1445,4,"Mode"],[1462,8,1445,8],[1462,10,1445,10],[1462,14,1445,14],[1463,4,1446,4,"PlyCount"],[1463,12,1446,12],[1463,14,1446,14],[1464,2,1447,0],[1464,3,1447,1],[1465,2,1448,0],[1465,8,1448,6,"HEADER_TEMPLATE"],[1465,23,1448,21],[1465,26,1448,24],[1466,4,1449,4],[1466,7,1449,7,"SEVEN_TAG_ROSTER"],[1466,23,1449,23],[1467,4,1450,4],[1467,7,1450,7,"SUPLEMENTAL_TAGS"],[1468,2,1451,0],[1468,3,1451,1],[1469,2,1452,0],[1470,2,1453,0],[1471,0,1454,0],[1472,0,1455,0],[1473,0,1456,0],[1474,0,1457,0],[1475,0,1458,0],[1476,0,1459,0],[1477,0,1460,0],[1478,0,1461,0],[1479,0,1462,0],[1480,0,1463,0],[1481,0,1464,0],[1482,0,1465,0],[1483,0,1466,0],[1484,0,1467,0],[1485,0,1468,0],[1486,0,1469,0],[1487,0,1470,0],[1488,0,1471,0],[1489,0,1472,0],[1490,0,1473,0],[1491,0,1474,0],[1492,0,1475,0],[1493,0,1476,0],[1494,0,1477,0],[1495,0,1478,0],[1496,0,1479,0],[1497,0,1480,0],[1498,0,1481,0],[1499,0,1482,0],[1500,0,1483,0],[1501,0,1484,0],[1502,0,1485,0],[1503,0,1486,0],[1504,0,1487,0],[1505,0,1488,0],[1506,0,1489,0],[1507,0,1490,0],[1508,2,1491,0],[1509,2,1492,0],[1510,2,1493,0],[1510,8,1493,6,"Ox88"],[1510,12,1493,10],[1510,15,1493,13],[1511,4,1494,4,"a8"],[1511,6,1494,6],[1511,8,1494,8],[1511,9,1494,9],[1512,4,1494,11,"b8"],[1512,6,1494,13],[1512,8,1494,15],[1512,9,1494,16],[1513,4,1494,18,"c8"],[1513,6,1494,20],[1513,8,1494,22],[1513,9,1494,23],[1514,4,1494,25,"d8"],[1514,6,1494,27],[1514,8,1494,29],[1514,9,1494,30],[1515,4,1494,32,"e8"],[1515,6,1494,34],[1515,8,1494,36],[1515,9,1494,37],[1516,4,1494,39,"f8"],[1516,6,1494,41],[1516,8,1494,43],[1516,9,1494,44],[1517,4,1494,46,"g8"],[1517,6,1494,48],[1517,8,1494,50],[1517,9,1494,51],[1518,4,1494,53,"h8"],[1518,6,1494,55],[1518,8,1494,57],[1518,9,1494,58],[1519,4,1495,4,"a7"],[1519,6,1495,6],[1519,8,1495,8],[1519,10,1495,10],[1520,4,1495,12,"b7"],[1520,6,1495,14],[1520,8,1495,16],[1520,10,1495,18],[1521,4,1495,20,"c7"],[1521,6,1495,22],[1521,8,1495,24],[1521,10,1495,26],[1522,4,1495,28,"d7"],[1522,6,1495,30],[1522,8,1495,32],[1522,10,1495,34],[1523,4,1495,36,"e7"],[1523,6,1495,38],[1523,8,1495,40],[1523,10,1495,42],[1524,4,1495,44,"f7"],[1524,6,1495,46],[1524,8,1495,48],[1524,10,1495,50],[1525,4,1495,52,"g7"],[1525,6,1495,54],[1525,8,1495,56],[1525,10,1495,58],[1526,4,1495,60,"h7"],[1526,6,1495,62],[1526,8,1495,64],[1526,10,1495,66],[1527,4,1496,4,"a6"],[1527,6,1496,6],[1527,8,1496,8],[1527,10,1496,10],[1528,4,1496,12,"b6"],[1528,6,1496,14],[1528,8,1496,16],[1528,10,1496,18],[1529,4,1496,20,"c6"],[1529,6,1496,22],[1529,8,1496,24],[1529,10,1496,26],[1530,4,1496,28,"d6"],[1530,6,1496,30],[1530,8,1496,32],[1530,10,1496,34],[1531,4,1496,36,"e6"],[1531,6,1496,38],[1531,8,1496,40],[1531,10,1496,42],[1532,4,1496,44,"f6"],[1532,6,1496,46],[1532,8,1496,48],[1532,10,1496,50],[1533,4,1496,52,"g6"],[1533,6,1496,54],[1533,8,1496,56],[1533,10,1496,58],[1534,4,1496,60,"h6"],[1534,6,1496,62],[1534,8,1496,64],[1534,10,1496,66],[1535,4,1497,4,"a5"],[1535,6,1497,6],[1535,8,1497,8],[1535,10,1497,10],[1536,4,1497,12,"b5"],[1536,6,1497,14],[1536,8,1497,16],[1536,10,1497,18],[1537,4,1497,20,"c5"],[1537,6,1497,22],[1537,8,1497,24],[1537,10,1497,26],[1538,4,1497,28,"d5"],[1538,6,1497,30],[1538,8,1497,32],[1538,10,1497,34],[1539,4,1497,36,"e5"],[1539,6,1497,38],[1539,8,1497,40],[1539,10,1497,42],[1540,4,1497,44,"f5"],[1540,6,1497,46],[1540,8,1497,48],[1540,10,1497,50],[1541,4,1497,52,"g5"],[1541,6,1497,54],[1541,8,1497,56],[1541,10,1497,58],[1542,4,1497,60,"h5"],[1542,6,1497,62],[1542,8,1497,64],[1542,10,1497,66],[1543,4,1498,4,"a4"],[1543,6,1498,6],[1543,8,1498,8],[1543,10,1498,10],[1544,4,1498,12,"b4"],[1544,6,1498,14],[1544,8,1498,16],[1544,10,1498,18],[1545,4,1498,20,"c4"],[1545,6,1498,22],[1545,8,1498,24],[1545,10,1498,26],[1546,4,1498,28,"d4"],[1546,6,1498,30],[1546,8,1498,32],[1546,10,1498,34],[1547,4,1498,36,"e4"],[1547,6,1498,38],[1547,8,1498,40],[1547,10,1498,42],[1548,4,1498,44,"f4"],[1548,6,1498,46],[1548,8,1498,48],[1548,10,1498,50],[1549,4,1498,52,"g4"],[1549,6,1498,54],[1549,8,1498,56],[1549,10,1498,58],[1550,4,1498,60,"h4"],[1550,6,1498,62],[1550,8,1498,64],[1550,10,1498,66],[1551,4,1499,4,"a3"],[1551,6,1499,6],[1551,8,1499,8],[1551,10,1499,10],[1552,4,1499,12,"b3"],[1552,6,1499,14],[1552,8,1499,16],[1552,10,1499,18],[1553,4,1499,20,"c3"],[1553,6,1499,22],[1553,8,1499,24],[1553,10,1499,26],[1554,4,1499,28,"d3"],[1554,6,1499,30],[1554,8,1499,32],[1554,10,1499,34],[1555,4,1499,36,"e3"],[1555,6,1499,38],[1555,8,1499,40],[1555,10,1499,42],[1556,4,1499,44,"f3"],[1556,6,1499,46],[1556,8,1499,48],[1556,10,1499,50],[1557,4,1499,52,"g3"],[1557,6,1499,54],[1557,8,1499,56],[1557,10,1499,58],[1558,4,1499,60,"h3"],[1558,6,1499,62],[1558,8,1499,64],[1558,10,1499,66],[1559,4,1500,4,"a2"],[1559,6,1500,6],[1559,8,1500,8],[1559,10,1500,10],[1560,4,1500,12,"b2"],[1560,6,1500,14],[1560,8,1500,16],[1560,10,1500,18],[1561,4,1500,20,"c2"],[1561,6,1500,22],[1561,8,1500,24],[1561,10,1500,26],[1562,4,1500,28,"d2"],[1562,6,1500,30],[1562,8,1500,32],[1562,10,1500,34],[1563,4,1500,36,"e2"],[1563,6,1500,38],[1563,8,1500,40],[1563,11,1500,43],[1564,4,1500,45,"f2"],[1564,6,1500,47],[1564,8,1500,49],[1564,11,1500,52],[1565,4,1500,54,"g2"],[1565,6,1500,56],[1565,8,1500,58],[1565,11,1500,61],[1566,4,1500,63,"h2"],[1566,6,1500,65],[1566,8,1500,67],[1566,11,1500,70],[1567,4,1501,4,"a1"],[1567,6,1501,6],[1567,8,1501,8],[1567,11,1501,11],[1568,4,1501,13,"b1"],[1568,6,1501,15],[1568,8,1501,17],[1568,11,1501,20],[1569,4,1501,22,"c1"],[1569,6,1501,24],[1569,8,1501,26],[1569,11,1501,29],[1570,4,1501,31,"d1"],[1570,6,1501,33],[1570,8,1501,35],[1570,11,1501,38],[1571,4,1501,40,"e1"],[1571,6,1501,42],[1571,8,1501,44],[1571,11,1501,47],[1572,4,1501,49,"f1"],[1572,6,1501,51],[1572,8,1501,53],[1572,11,1501,56],[1573,4,1501,58,"g1"],[1573,6,1501,60],[1573,8,1501,62],[1573,11,1501,65],[1574,4,1501,67,"h1"],[1574,6,1501,69],[1574,8,1501,71],[1575,2,1502,0],[1575,3,1502,1],[1576,2,1503,0],[1576,8,1503,6,"PAWN_OFFSETS"],[1576,20,1503,18],[1576,23,1503,21],[1577,4,1504,4,"b"],[1577,5,1504,5],[1577,7,1504,7],[1577,8,1504,8],[1577,10,1504,10],[1577,12,1504,12],[1577,14,1504,14],[1577,16,1504,16],[1577,18,1504,18],[1577,20,1504,20],[1577,22,1504,22],[1577,23,1504,23],[1578,4,1505,4,"w"],[1578,5,1505,5],[1578,7,1505,7],[1578,8,1505,8],[1578,9,1505,9],[1578,11,1505,11],[1578,13,1505,13],[1578,14,1505,14],[1578,16,1505,16],[1578,18,1505,18],[1578,19,1505,19],[1578,21,1505,21],[1578,23,1505,23],[1578,24,1505,24],[1578,26,1505,26],[1579,2,1506,0],[1579,3,1506,1],[1580,2,1507,0],[1580,8,1507,6,"PIECE_OFFSETS"],[1580,21,1507,19],[1580,24,1507,22],[1581,4,1508,4,"n"],[1581,5,1508,5],[1581,7,1508,7],[1581,8,1508,8],[1581,9,1508,9],[1581,11,1508,11],[1581,13,1508,13],[1581,14,1508,14],[1581,16,1508,16],[1581,18,1508,18],[1581,19,1508,19],[1581,21,1508,21],[1581,23,1508,23],[1581,24,1508,24],[1581,26,1508,26],[1581,28,1508,28],[1581,30,1508,30],[1581,32,1508,32],[1581,34,1508,34],[1581,36,1508,36],[1581,38,1508,38],[1581,40,1508,40],[1581,42,1508,42],[1581,43,1508,43],[1582,4,1509,4,"b"],[1582,5,1509,5],[1582,7,1509,7],[1582,8,1509,8],[1582,9,1509,9],[1582,11,1509,11],[1582,13,1509,13],[1582,14,1509,14],[1582,16,1509,16],[1582,18,1509,18],[1582,20,1509,20],[1582,22,1509,22],[1582,24,1509,24],[1582,25,1509,25],[1583,4,1510,4,"r"],[1583,5,1510,5],[1583,7,1510,7],[1583,8,1510,8],[1583,9,1510,9],[1583,11,1510,11],[1583,13,1510,13],[1583,14,1510,14],[1583,16,1510,16],[1583,18,1510,18],[1583,20,1510,20],[1583,21,1510,21],[1583,22,1510,22],[1583,23,1510,23],[1584,4,1511,4,"q"],[1584,5,1511,5],[1584,7,1511,7],[1584,8,1511,8],[1584,9,1511,9],[1584,11,1511,11],[1584,13,1511,13],[1584,14,1511,14],[1584,16,1511,16],[1584,18,1511,18],[1584,19,1511,19],[1584,21,1511,21],[1584,23,1511,23],[1584,24,1511,24],[1584,26,1511,26],[1584,28,1511,28],[1584,30,1511,30],[1584,32,1511,32],[1584,34,1511,34],[1584,36,1511,36],[1584,38,1511,38],[1584,39,1511,39],[1584,40,1511,40],[1584,41,1511,41],[1585,4,1512,4,"k"],[1585,5,1512,5],[1585,7,1512,7],[1585,8,1512,8],[1585,9,1512,9],[1585,11,1512,11],[1585,13,1512,13],[1585,14,1512,14],[1585,16,1512,16],[1585,18,1512,18],[1585,19,1512,19],[1585,21,1512,21],[1585,23,1512,23],[1585,24,1512,24],[1585,26,1512,26],[1585,28,1512,28],[1585,30,1512,30],[1585,32,1512,32],[1585,34,1512,34],[1585,36,1512,36],[1585,38,1512,38],[1585,39,1512,39],[1585,40,1512,40],[1586,2,1513,0],[1586,3,1513,1],[1587,2,1514,0],[1588,2,1515,0],[1588,8,1515,6,"ATTACKS"],[1588,15,1515,13],[1588,18,1515,16],[1588,19,1516,4],[1588,21,1516,6],[1588,23,1516,8],[1588,24,1516,9],[1588,26,1516,11],[1588,27,1516,12],[1588,29,1516,14],[1588,30,1516,15],[1588,32,1516,17],[1588,33,1516,18],[1588,35,1516,20],[1588,36,1516,21],[1588,38,1516,23],[1588,39,1516,24],[1588,41,1516,26],[1588,43,1516,28],[1588,45,1516,30],[1588,46,1516,31],[1588,48,1516,33],[1588,49,1516,34],[1588,51,1516,36],[1588,52,1516,37],[1588,54,1516,39],[1588,55,1516,40],[1588,57,1516,42],[1588,58,1516,43],[1588,60,1516,45],[1588,61,1516,46],[1588,63,1516,48],[1588,65,1516,50],[1588,67,1516,52],[1588,68,1516,53],[1588,70,1517,4],[1588,71,1517,5],[1588,73,1517,7],[1588,75,1517,9],[1588,77,1517,11],[1588,78,1517,12],[1588,80,1517,14],[1588,81,1517,15],[1588,83,1517,17],[1588,84,1517,18],[1588,86,1517,20],[1588,87,1517,21],[1588,89,1517,23],[1588,90,1517,24],[1588,92,1517,26],[1588,94,1517,28],[1588,96,1517,30],[1588,97,1517,31],[1588,99,1517,33],[1588,100,1517,34],[1588,102,1517,36],[1588,103,1517,37],[1588,105,1517,39],[1588,106,1517,40],[1588,108,1517,42],[1588,109,1517,43],[1588,111,1517,45],[1588,113,1517,47],[1588,115,1517,49],[1588,116,1517,50],[1588,118,1517,52],[1588,119,1517,53],[1588,121,1518,4],[1588,122,1518,5],[1588,124,1518,7],[1588,125,1518,8],[1588,127,1518,10],[1588,129,1518,12],[1588,131,1518,14],[1588,132,1518,15],[1588,134,1518,17],[1588,135,1518,18],[1588,137,1518,20],[1588,138,1518,21],[1588,140,1518,23],[1588,141,1518,24],[1588,143,1518,26],[1588,145,1518,28],[1588,147,1518,30],[1588,148,1518,31],[1588,150,1518,33],[1588,151,1518,34],[1588,153,1518,36],[1588,154,1518,37],[1588,156,1518,39],[1588,157,1518,40],[1588,159,1518,42],[1588,161,1518,44],[1588,163,1518,46],[1588,164,1518,47],[1588,166,1518,49],[1588,167,1518,50],[1588,169,1518,52],[1588,170,1518,53],[1588,172,1519,4],[1588,173,1519,5],[1588,175,1519,7],[1588,176,1519,8],[1588,178,1519,10],[1588,179,1519,11],[1588,181,1519,13],[1588,183,1519,15],[1588,185,1519,17],[1588,186,1519,18],[1588,188,1519,20],[1588,189,1519,21],[1588,191,1519,23],[1588,192,1519,24],[1588,194,1519,26],[1588,196,1519,28],[1588,198,1519,30],[1588,199,1519,31],[1588,201,1519,33],[1588,202,1519,34],[1588,204,1519,36],[1588,205,1519,37],[1588,207,1519,39],[1588,209,1519,41],[1588,211,1519,43],[1588,212,1519,44],[1588,214,1519,46],[1588,215,1519,47],[1588,217,1519,49],[1588,218,1519,50],[1588,220,1519,52],[1588,221,1519,53],[1588,223,1520,4],[1588,224,1520,5],[1588,226,1520,7],[1588,227,1520,8],[1588,229,1520,10],[1588,230,1520,11],[1588,232,1520,13],[1588,233,1520,14],[1588,235,1520,16],[1588,237,1520,18],[1588,239,1520,20],[1588,240,1520,21],[1588,242,1520,23],[1588,243,1520,24],[1588,245,1520,26],[1588,247,1520,28],[1588,249,1520,30],[1588,250,1520,31],[1588,252,1520,33],[1588,253,1520,34],[1588,255,1520,36],[1588,257,1520,38],[1588,259,1520,40],[1588,260,1520,41],[1588,262,1520,43],[1588,263,1520,44],[1588,265,1520,46],[1588,266,1520,47],[1588,268,1520,49],[1588,269,1520,50],[1588,271,1520,52],[1588,272,1520,53],[1588,274,1521,4],[1588,275,1521,5],[1588,277,1521,7],[1588,278,1521,8],[1588,280,1521,10],[1588,281,1521,11],[1588,283,1521,13],[1588,284,1521,14],[1588,286,1521,16],[1588,287,1521,17],[1588,289,1521,19],[1588,291,1521,21],[1588,293,1521,23],[1588,294,1521,24],[1588,296,1521,26],[1588,298,1521,28],[1588,300,1521,30],[1588,301,1521,31],[1588,303,1521,33],[1588,305,1521,35],[1588,307,1521,37],[1588,308,1521,38],[1588,310,1521,40],[1588,311,1521,41],[1588,313,1521,43],[1588,314,1521,44],[1588,316,1521,46],[1588,317,1521,47],[1588,319,1521,49],[1588,320,1521,50],[1588,322,1521,52],[1588,323,1521,53],[1588,325,1522,4],[1588,326,1522,5],[1588,328,1522,7],[1588,329,1522,8],[1588,331,1522,10],[1588,332,1522,11],[1588,334,1522,13],[1588,335,1522,14],[1588,337,1522,16],[1588,338,1522,17],[1588,340,1522,19],[1588,341,1522,20],[1588,343,1522,22],[1588,345,1522,24],[1588,347,1522,26],[1588,349,1522,28],[1588,351,1522,30],[1588,353,1522,32],[1588,355,1522,34],[1588,356,1522,35],[1588,358,1522,37],[1588,359,1522,38],[1588,361,1522,40],[1588,362,1522,41],[1588,364,1522,43],[1588,365,1522,44],[1588,367,1522,46],[1588,368,1522,47],[1588,370,1522,49],[1588,371,1522,50],[1588,373,1522,52],[1588,374,1522,53],[1588,376,1523,4],[1588,378,1523,6],[1588,380,1523,8],[1588,382,1523,10],[1588,384,1523,12],[1588,386,1523,14],[1588,388,1523,16],[1588,390,1523,18],[1588,392,1523,20],[1588,394,1523,22],[1588,396,1523,24],[1588,398,1523,26],[1588,400,1523,28],[1588,402,1523,30],[1588,404,1523,32],[1588,405,1523,33],[1588,407,1523,35],[1588,409,1523,37],[1588,411,1523,39],[1588,413,1523,41],[1588,415,1523,43],[1588,417,1523,45],[1588,419,1523,47],[1588,421,1523,49],[1588,423,1523,51],[1588,425,1523,53],[1588,427,1523,55],[1588,429,1523,57],[1588,431,1523,59],[1588,433,1523,61],[1588,435,1523,63],[1588,436,1523,64],[1588,438,1524,4],[1588,439,1524,5],[1588,441,1524,7],[1588,442,1524,8],[1588,444,1524,10],[1588,445,1524,11],[1588,447,1524,13],[1588,448,1524,14],[1588,450,1524,16],[1588,451,1524,17],[1588,453,1524,19],[1588,454,1524,20],[1588,456,1524,22],[1588,458,1524,24],[1588,460,1524,26],[1588,462,1524,28],[1588,464,1524,30],[1588,466,1524,32],[1588,468,1524,34],[1588,469,1524,35],[1588,471,1524,37],[1588,472,1524,38],[1588,474,1524,40],[1588,475,1524,41],[1588,477,1524,43],[1588,478,1524,44],[1588,480,1524,46],[1588,481,1524,47],[1588,483,1524,49],[1588,484,1524,50],[1588,486,1524,52],[1588,487,1524,53],[1588,489,1525,4],[1588,490,1525,5],[1588,492,1525,7],[1588,493,1525,8],[1588,495,1525,10],[1588,496,1525,11],[1588,498,1525,13],[1588,499,1525,14],[1588,501,1525,16],[1588,502,1525,17],[1588,504,1525,19],[1588,506,1525,21],[1588,508,1525,23],[1588,509,1525,24],[1588,511,1525,26],[1588,513,1525,28],[1588,515,1525,30],[1588,516,1525,31],[1588,518,1525,33],[1588,520,1525,35],[1588,522,1525,37],[1588,523,1525,38],[1588,525,1525,40],[1588,526,1525,41],[1588,528,1525,43],[1588,529,1525,44],[1588,531,1525,46],[1588,532,1525,47],[1588,534,1525,49],[1588,535,1525,50],[1588,537,1525,52],[1588,538,1525,53],[1588,540,1526,4],[1588,541,1526,5],[1588,543,1526,7],[1588,544,1526,8],[1588,546,1526,10],[1588,547,1526,11],[1588,549,1526,13],[1588,550,1526,14],[1588,552,1526,16],[1588,554,1526,18],[1588,556,1526,20],[1588,557,1526,21],[1588,559,1526,23],[1588,560,1526,24],[1588,562,1526,26],[1588,564,1526,28],[1588,566,1526,30],[1588,567,1526,31],[1588,569,1526,33],[1588,570,1526,34],[1588,572,1526,36],[1588,574,1526,38],[1588,576,1526,40],[1588,577,1526,41],[1588,579,1526,43],[1588,580,1526,44],[1588,582,1526,46],[1588,583,1526,47],[1588,585,1526,49],[1588,586,1526,50],[1588,588,1526,52],[1588,589,1526,53],[1588,591,1527,4],[1588,592,1527,5],[1588,594,1527,7],[1588,595,1527,8],[1588,597,1527,10],[1588,598,1527,11],[1588,600,1527,13],[1588,602,1527,15],[1588,604,1527,17],[1588,605,1527,18],[1588,607,1527,20],[1588,608,1527,21],[1588,610,1527,23],[1588,611,1527,24],[1588,613,1527,26],[1588,615,1527,28],[1588,617,1527,30],[1588,618,1527,31],[1588,620,1527,33],[1588,621,1527,34],[1588,623,1527,36],[1588,624,1527,37],[1588,626,1527,39],[1588,628,1527,41],[1588,630,1527,43],[1588,631,1527,44],[1588,633,1527,46],[1588,634,1527,47],[1588,636,1527,49],[1588,637,1527,50],[1588,639,1527,52],[1588,640,1527,53],[1588,642,1528,4],[1588,643,1528,5],[1588,645,1528,7],[1588,646,1528,8],[1588,648,1528,10],[1588,650,1528,12],[1588,652,1528,14],[1588,653,1528,15],[1588,655,1528,17],[1588,656,1528,18],[1588,658,1528,20],[1588,659,1528,21],[1588,661,1528,23],[1588,662,1528,24],[1588,664,1528,26],[1588,666,1528,28],[1588,668,1528,30],[1588,669,1528,31],[1588,671,1528,33],[1588,672,1528,34],[1588,674,1528,36],[1588,675,1528,37],[1588,677,1528,39],[1588,678,1528,40],[1588,680,1528,42],[1588,682,1528,44],[1588,684,1528,46],[1588,685,1528,47],[1588,687,1528,49],[1588,688,1528,50],[1588,690,1528,52],[1588,691,1528,53],[1588,693,1529,4],[1588,694,1529,5],[1588,696,1529,7],[1588,698,1529,9],[1588,700,1529,11],[1588,701,1529,12],[1588,703,1529,14],[1588,704,1529,15],[1588,706,1529,17],[1588,707,1529,18],[1588,709,1529,20],[1588,710,1529,21],[1588,712,1529,23],[1588,713,1529,24],[1588,715,1529,26],[1588,717,1529,28],[1588,719,1529,30],[1588,720,1529,31],[1588,722,1529,33],[1588,723,1529,34],[1588,725,1529,36],[1588,726,1529,37],[1588,728,1529,39],[1588,729,1529,40],[1588,731,1529,42],[1588,732,1529,43],[1588,734,1529,45],[1588,736,1529,47],[1588,738,1529,49],[1588,739,1529,50],[1588,741,1529,52],[1588,742,1529,53],[1588,744,1530,4],[1588,746,1530,6],[1588,748,1530,8],[1588,749,1530,9],[1588,751,1530,11],[1588,752,1530,12],[1588,754,1530,14],[1588,755,1530,15],[1588,757,1530,17],[1588,758,1530,18],[1588,760,1530,20],[1588,761,1530,21],[1588,763,1530,23],[1588,764,1530,24],[1588,766,1530,26],[1588,768,1530,28],[1588,770,1530,30],[1588,771,1530,31],[1588,773,1530,33],[1588,774,1530,34],[1588,776,1530,36],[1588,777,1530,37],[1588,779,1530,39],[1588,780,1530,40],[1588,782,1530,42],[1588,783,1530,43],[1588,785,1530,45],[1588,786,1530,46],[1588,788,1530,48],[1588,790,1530,50],[1588,791,1531,1],[1589,2,1532,0],[1590,2,1533,0],[1590,8,1533,6,"RAYS"],[1590,12,1533,10],[1590,15,1533,13],[1590,16,1534,4],[1590,18,1534,6],[1590,20,1534,8],[1590,21,1534,9],[1590,23,1534,11],[1590,24,1534,12],[1590,26,1534,14],[1590,27,1534,15],[1590,29,1534,17],[1590,30,1534,18],[1590,32,1534,20],[1590,33,1534,21],[1590,35,1534,23],[1590,36,1534,24],[1590,38,1534,26],[1590,40,1534,28],[1590,42,1534,30],[1590,43,1534,31],[1590,45,1534,33],[1590,46,1534,34],[1590,48,1534,36],[1590,49,1534,37],[1590,51,1534,39],[1590,52,1534,40],[1590,54,1534,42],[1590,55,1534,43],[1590,57,1534,45],[1590,58,1534,46],[1590,60,1534,48],[1590,62,1534,50],[1590,64,1534,52],[1590,65,1534,53],[1590,67,1535,4],[1590,68,1535,5],[1590,70,1535,7],[1590,72,1535,9],[1590,74,1535,11],[1590,75,1535,12],[1590,77,1535,14],[1590,78,1535,15],[1590,80,1535,17],[1590,81,1535,18],[1590,83,1535,20],[1590,84,1535,21],[1590,86,1535,23],[1590,87,1535,24],[1590,89,1535,26],[1590,91,1535,28],[1590,93,1535,30],[1590,94,1535,31],[1590,96,1535,33],[1590,97,1535,34],[1590,99,1535,36],[1590,100,1535,37],[1590,102,1535,39],[1590,103,1535,40],[1590,105,1535,42],[1590,106,1535,43],[1590,108,1535,45],[1590,110,1535,47],[1590,112,1535,49],[1590,113,1535,50],[1590,115,1535,52],[1590,116,1535,53],[1590,118,1536,4],[1590,119,1536,5],[1590,121,1536,7],[1590,122,1536,8],[1590,124,1536,10],[1590,126,1536,12],[1590,128,1536,14],[1590,129,1536,15],[1590,131,1536,17],[1590,132,1536,18],[1590,134,1536,20],[1590,135,1536,21],[1590,137,1536,23],[1590,138,1536,24],[1590,140,1536,26],[1590,142,1536,28],[1590,144,1536,30],[1590,145,1536,31],[1590,147,1536,33],[1590,148,1536,34],[1590,150,1536,36],[1590,151,1536,37],[1590,153,1536,39],[1590,154,1536,40],[1590,156,1536,42],[1590,158,1536,44],[1590,160,1536,46],[1590,161,1536,47],[1590,163,1536,49],[1590,164,1536,50],[1590,166,1536,52],[1590,167,1536,53],[1590,169,1537,4],[1590,170,1537,5],[1590,172,1537,7],[1590,173,1537,8],[1590,175,1537,10],[1590,176,1537,11],[1590,178,1537,13],[1590,180,1537,15],[1590,182,1537,17],[1590,183,1537,18],[1590,185,1537,20],[1590,186,1537,21],[1590,188,1537,23],[1590,189,1537,24],[1590,191,1537,26],[1590,193,1537,28],[1590,195,1537,30],[1590,196,1537,31],[1590,198,1537,33],[1590,199,1537,34],[1590,201,1537,36],[1590,202,1537,37],[1590,204,1537,39],[1590,206,1537,41],[1590,208,1537,43],[1590,209,1537,44],[1590,211,1537,46],[1590,212,1537,47],[1590,214,1537,49],[1590,215,1537,50],[1590,217,1537,52],[1590,218,1537,53],[1590,220,1538,4],[1590,221,1538,5],[1590,223,1538,7],[1590,224,1538,8],[1590,226,1538,10],[1590,227,1538,11],[1590,229,1538,13],[1590,230,1538,14],[1590,232,1538,16],[1590,234,1538,18],[1590,236,1538,20],[1590,237,1538,21],[1590,239,1538,23],[1590,240,1538,24],[1590,242,1538,26],[1590,244,1538,28],[1590,246,1538,30],[1590,247,1538,31],[1590,249,1538,33],[1590,250,1538,34],[1590,252,1538,36],[1590,254,1538,38],[1590,256,1538,40],[1590,257,1538,41],[1590,259,1538,43],[1590,260,1538,44],[1590,262,1538,46],[1590,263,1538,47],[1590,265,1538,49],[1590,266,1538,50],[1590,268,1538,52],[1590,269,1538,53],[1590,271,1539,4],[1590,272,1539,5],[1590,274,1539,7],[1590,275,1539,8],[1590,277,1539,10],[1590,278,1539,11],[1590,280,1539,13],[1590,281,1539,14],[1590,283,1539,16],[1590,284,1539,17],[1590,286,1539,19],[1590,288,1539,21],[1590,290,1539,23],[1590,291,1539,24],[1590,293,1539,26],[1590,295,1539,28],[1590,297,1539,30],[1590,298,1539,31],[1590,300,1539,33],[1590,302,1539,35],[1590,304,1539,37],[1590,305,1539,38],[1590,307,1539,40],[1590,308,1539,41],[1590,310,1539,43],[1590,311,1539,44],[1590,313,1539,46],[1590,314,1539,47],[1590,316,1539,49],[1590,317,1539,50],[1590,319,1539,52],[1590,320,1539,53],[1590,322,1540,4],[1590,323,1540,5],[1590,325,1540,7],[1590,326,1540,8],[1590,328,1540,10],[1590,329,1540,11],[1590,331,1540,13],[1590,332,1540,14],[1590,334,1540,16],[1590,335,1540,17],[1590,337,1540,19],[1590,338,1540,20],[1590,340,1540,22],[1590,342,1540,24],[1590,344,1540,26],[1590,346,1540,28],[1590,348,1540,30],[1590,350,1540,32],[1590,352,1540,34],[1590,353,1540,35],[1590,355,1540,37],[1590,356,1540,38],[1590,358,1540,40],[1590,359,1540,41],[1590,361,1540,43],[1590,362,1540,44],[1590,364,1540,46],[1590,365,1540,47],[1590,367,1540,49],[1590,368,1540,50],[1590,370,1540,52],[1590,371,1540,53],[1590,373,1541,4],[1590,374,1541,5],[1590,376,1541,7],[1590,377,1541,8],[1590,379,1541,10],[1590,380,1541,11],[1590,382,1541,13],[1590,383,1541,14],[1590,385,1541,16],[1590,386,1541,17],[1590,388,1541,19],[1590,389,1541,20],[1590,391,1541,22],[1590,392,1541,23],[1590,394,1541,25],[1590,395,1541,26],[1590,397,1541,28],[1590,398,1541,29],[1590,399,1541,30],[1590,401,1541,32],[1590,402,1541,33],[1590,403,1541,34],[1590,405,1541,36],[1590,406,1541,37],[1590,407,1541,38],[1590,409,1541,40],[1590,410,1541,41],[1590,411,1541,42],[1590,413,1541,44],[1590,414,1541,45],[1590,415,1541,46],[1590,417,1541,48],[1590,418,1541,49],[1590,419,1541,50],[1590,421,1541,52],[1590,422,1541,53],[1590,423,1541,54],[1590,425,1541,56],[1590,426,1541,57],[1590,428,1542,4],[1590,429,1542,5],[1590,431,1542,7],[1590,432,1542,8],[1590,434,1542,10],[1590,435,1542,11],[1590,437,1542,13],[1590,438,1542,14],[1590,440,1542,16],[1590,441,1542,17],[1590,443,1542,19],[1590,444,1542,20],[1590,446,1542,22],[1590,447,1542,23],[1590,449,1542,25],[1590,451,1542,27],[1590,452,1542,28],[1590,454,1542,30],[1590,456,1542,32],[1590,457,1542,33],[1590,459,1542,35],[1590,461,1542,37],[1590,462,1542,38],[1590,464,1542,40],[1590,465,1542,41],[1590,467,1542,43],[1590,468,1542,44],[1590,470,1542,46],[1590,471,1542,47],[1590,473,1542,49],[1590,474,1542,50],[1590,476,1542,52],[1590,477,1542,53],[1590,479,1542,55],[1590,480,1542,56],[1590,482,1543,4],[1590,483,1543,5],[1590,485,1543,7],[1590,486,1543,8],[1590,488,1543,10],[1590,489,1543,11],[1590,491,1543,13],[1590,492,1543,14],[1590,494,1543,16],[1590,495,1543,17],[1590,497,1543,19],[1590,498,1543,20],[1590,500,1543,22],[1590,502,1543,24],[1590,503,1543,25],[1590,505,1543,27],[1590,506,1543,28],[1590,508,1543,30],[1590,510,1543,32],[1590,511,1543,33],[1590,513,1543,35],[1590,514,1543,36],[1590,516,1543,38],[1590,518,1543,40],[1590,519,1543,41],[1590,521,1543,43],[1590,522,1543,44],[1590,524,1543,46],[1590,525,1543,47],[1590,527,1543,49],[1590,528,1543,50],[1590,530,1543,52],[1590,531,1543,53],[1590,533,1543,55],[1590,534,1543,56],[1590,536,1544,4],[1590,537,1544,5],[1590,539,1544,7],[1590,540,1544,8],[1590,542,1544,10],[1590,543,1544,11],[1590,545,1544,13],[1590,546,1544,14],[1590,548,1544,16],[1590,549,1544,17],[1590,551,1544,19],[1590,553,1544,21],[1590,554,1544,22],[1590,556,1544,24],[1590,557,1544,25],[1590,559,1544,27],[1590,560,1544,28],[1590,562,1544,30],[1590,564,1544,32],[1590,565,1544,33],[1590,567,1544,35],[1590,568,1544,36],[1590,570,1544,38],[1590,571,1544,39],[1590,573,1544,41],[1590,575,1544,43],[1590,576,1544,44],[1590,578,1544,46],[1590,579,1544,47],[1590,581,1544,49],[1590,582,1544,50],[1590,584,1544,52],[1590,585,1544,53],[1590,587,1544,55],[1590,588,1544,56],[1590,590,1545,4],[1590,591,1545,5],[1590,593,1545,7],[1590,594,1545,8],[1590,596,1545,10],[1590,597,1545,11],[1590,599,1545,13],[1590,600,1545,14],[1590,602,1545,16],[1590,604,1545,18],[1590,605,1545,19],[1590,607,1545,21],[1590,608,1545,22],[1590,610,1545,24],[1590,611,1545,25],[1590,613,1545,27],[1590,614,1545,28],[1590,616,1545,30],[1590,618,1545,32],[1590,619,1545,33],[1590,621,1545,35],[1590,622,1545,36],[1590,624,1545,38],[1590,625,1545,39],[1590,627,1545,41],[1590,628,1545,42],[1590,630,1545,44],[1590,632,1545,46],[1590,633,1545,47],[1590,635,1545,49],[1590,636,1545,50],[1590,638,1545,52],[1590,639,1545,53],[1590,641,1545,55],[1590,642,1545,56],[1590,644,1546,4],[1590,645,1546,5],[1590,647,1546,7],[1590,648,1546,8],[1590,650,1546,10],[1590,651,1546,11],[1590,653,1546,13],[1590,655,1546,15],[1590,656,1546,16],[1590,658,1546,18],[1590,659,1546,19],[1590,661,1546,21],[1590,662,1546,22],[1590,664,1546,24],[1590,665,1546,25],[1590,667,1546,27],[1590,668,1546,28],[1590,670,1546,30],[1590,672,1546,32],[1590,673,1546,33],[1590,675,1546,35],[1590,676,1546,36],[1590,678,1546,38],[1590,679,1546,39],[1590,681,1546,41],[1590,682,1546,42],[1590,684,1546,44],[1590,685,1546,45],[1590,687,1546,47],[1590,689,1546,49],[1590,690,1546,50],[1590,692,1546,52],[1590,693,1546,53],[1590,695,1546,55],[1590,696,1546,56],[1590,698,1547,4],[1590,699,1547,5],[1590,701,1547,7],[1590,702,1547,8],[1590,704,1547,10],[1590,706,1547,12],[1590,707,1547,13],[1590,709,1547,15],[1590,710,1547,16],[1590,712,1547,18],[1590,713,1547,19],[1590,715,1547,21],[1590,716,1547,22],[1590,718,1547,24],[1590,719,1547,25],[1590,721,1547,27],[1590,722,1547,28],[1590,724,1547,30],[1590,726,1547,32],[1590,727,1547,33],[1590,729,1547,35],[1590,730,1547,36],[1590,732,1547,38],[1590,733,1547,39],[1590,735,1547,41],[1590,736,1547,42],[1590,738,1547,44],[1590,739,1547,45],[1590,741,1547,47],[1590,742,1547,48],[1590,744,1547,50],[1590,746,1547,52],[1590,747,1547,53],[1590,749,1547,55],[1590,750,1547,56],[1590,752,1548,4],[1590,753,1548,5],[1590,755,1548,7],[1590,757,1548,9],[1590,758,1548,10],[1590,760,1548,12],[1590,761,1548,13],[1590,763,1548,15],[1590,764,1548,16],[1590,766,1548,18],[1590,767,1548,19],[1590,769,1548,21],[1590,770,1548,22],[1590,772,1548,24],[1590,773,1548,25],[1590,775,1548,27],[1590,776,1548,28],[1590,778,1548,30],[1590,780,1548,32],[1590,781,1548,33],[1590,783,1548,35],[1590,784,1548,36],[1590,786,1548,38],[1590,787,1548,39],[1590,789,1548,41],[1590,790,1548,42],[1590,792,1548,44],[1590,793,1548,45],[1590,795,1548,47],[1590,796,1548,48],[1590,798,1548,50],[1590,799,1548,51],[1590,801,1548,53],[1590,802,1549,1],[1591,2,1550,0],[1591,8,1550,6,"PIECE_MASKS"],[1591,19,1550,17],[1591,22,1550,20],[1592,4,1550,22,"p"],[1592,5,1550,23],[1592,7,1550,25],[1592,10,1550,28],[1593,4,1550,30,"n"],[1593,5,1550,31],[1593,7,1550,33],[1593,10,1550,36],[1594,4,1550,38,"b"],[1594,5,1550,39],[1594,7,1550,41],[1594,10,1550,44],[1595,4,1550,46,"r"],[1595,5,1550,47],[1595,7,1550,49],[1595,10,1550,52],[1596,4,1550,54,"q"],[1596,5,1550,55],[1596,7,1550,57],[1596,11,1550,61],[1597,4,1550,63,"k"],[1597,5,1550,64],[1597,7,1550,66],[1598,2,1550,71],[1598,3,1550,72],[1599,2,1551,0],[1599,8,1551,6,"SYMBOLS"],[1599,15,1551,13],[1599,18,1551,16],[1599,32,1551,30],[1600,2,1552,0],[1600,8,1552,6,"PROMOTIONS"],[1600,18,1552,16],[1600,21,1552,19],[1600,22,1552,20,"KNIGHT"],[1600,28,1552,26],[1600,30,1552,28,"BISHOP"],[1600,36,1552,34],[1600,38,1552,36,"ROOK"],[1600,42,1552,40],[1600,44,1552,42,"QUEEN"],[1600,49,1552,47],[1600,50,1552,48],[1601,2,1553,0],[1601,8,1553,6,"RANK_1"],[1601,14,1553,12],[1601,17,1553,15],[1601,18,1553,16],[1602,2,1554,0],[1602,8,1554,6,"RANK_2"],[1602,14,1554,12],[1602,17,1554,15],[1602,18,1554,16],[1603,2,1555,0],[1604,0,1556,0],[1605,0,1557,0],[1606,0,1558,0],[1607,0,1559,0],[1608,0,1560,0],[1609,2,1561,0],[1609,8,1561,6,"RANK_7"],[1609,14,1561,12],[1609,17,1561,15],[1609,18,1561,16],[1610,2,1562,0],[1610,8,1562,6,"RANK_8"],[1610,14,1562,12],[1610,17,1562,15],[1610,18,1562,16],[1611,2,1563,0],[1611,8,1563,6,"SIDES"],[1611,13,1563,11],[1611,16,1563,14],[1612,4,1564,4],[1612,5,1564,5,"KING"],[1612,9,1564,9],[1612,12,1564,12,"BITS"],[1612,16,1564,16],[1612,17,1564,17,"KSIDE_CASTLE"],[1612,29,1564,29],[1613,4,1565,4],[1613,5,1565,5,"QUEEN"],[1613,10,1565,10],[1613,13,1565,13,"BITS"],[1613,17,1565,17],[1613,18,1565,18,"QSIDE_CASTLE"],[1614,2,1566,0],[1614,3,1566,1],[1615,2,1567,0],[1615,8,1567,6,"ROOKS"],[1615,13,1567,11],[1615,16,1567,14],[1616,4,1568,4,"w"],[1616,5,1568,5],[1616,7,1568,7],[1616,8,1569,8],[1617,6,1569,10,"square"],[1617,12,1569,16],[1617,14,1569,18,"Ox88"],[1617,18,1569,22],[1617,19,1569,23,"a1"],[1617,21,1569,25],[1618,6,1569,27,"flag"],[1618,10,1569,31],[1618,12,1569,33,"BITS"],[1618,16,1569,37],[1618,17,1569,38,"QSIDE_CASTLE"],[1619,4,1569,51],[1619,5,1569,52],[1619,7,1570,8],[1620,6,1570,10,"square"],[1620,12,1570,16],[1620,14,1570,18,"Ox88"],[1620,18,1570,22],[1620,19,1570,23,"h1"],[1620,21,1570,25],[1621,6,1570,27,"flag"],[1621,10,1570,31],[1621,12,1570,33,"BITS"],[1621,16,1570,37],[1621,17,1570,38,"KSIDE_CASTLE"],[1622,4,1570,51],[1622,5,1570,52],[1622,6,1571,5],[1623,4,1572,4,"b"],[1623,5,1572,5],[1623,7,1572,7],[1623,8,1573,8],[1624,6,1573,10,"square"],[1624,12,1573,16],[1624,14,1573,18,"Ox88"],[1624,18,1573,22],[1624,19,1573,23,"a8"],[1624,21,1573,25],[1625,6,1573,27,"flag"],[1625,10,1573,31],[1625,12,1573,33,"BITS"],[1625,16,1573,37],[1625,17,1573,38,"QSIDE_CASTLE"],[1626,4,1573,51],[1626,5,1573,52],[1626,7,1574,8],[1627,6,1574,10,"square"],[1627,12,1574,16],[1627,14,1574,18,"Ox88"],[1627,18,1574,22],[1627,19,1574,23,"h8"],[1627,21,1574,25],[1628,6,1574,27,"flag"],[1628,10,1574,31],[1628,12,1574,33,"BITS"],[1628,16,1574,37],[1628,17,1574,38,"KSIDE_CASTLE"],[1629,4,1574,51],[1629,5,1574,52],[1630,2,1576,0],[1630,3,1576,1],[1631,2,1577,0],[1631,8,1577,6,"SECOND_RANK"],[1631,19,1577,17],[1631,22,1577,20],[1632,4,1577,22,"b"],[1632,5,1577,23],[1632,7,1577,25,"RANK_7"],[1632,13,1577,31],[1633,4,1577,33,"w"],[1633,5,1577,34],[1633,7,1577,36,"RANK_2"],[1634,2,1577,43],[1634,3,1577,44],[1635,2,1578,0],[1635,8,1578,6,"SAN_NULLMOVE"],[1635,20,1578,18],[1635,23,1578,21],[1635,27,1578,25],[1636,2,1579,0],[1637,2,1580,0],[1637,11,1580,9,"rank"],[1637,15,1580,13,"rank"],[1637,16,1580,14,"square"],[1637,22,1580,20],[1637,24,1580,22],[1638,4,1581,4],[1638,11,1581,11,"square"],[1638,17,1581,17],[1638,21,1581,21],[1638,22,1581,22],[1639,2,1582,0],[1640,2,1583,0],[1641,2,1584,0],[1641,11,1584,9,"file"],[1641,15,1584,13,"file"],[1641,16,1584,14,"square"],[1641,22,1584,20],[1641,24,1584,22],[1642,4,1585,4],[1642,11,1585,11,"square"],[1642,17,1585,17],[1642,20,1585,20],[1642,23,1585,23],[1643,2,1586,0],[1644,2,1587,0],[1644,11,1587,9,"isDigit"],[1644,18,1587,16,"isDigit"],[1644,19,1587,17,"c"],[1644,20,1587,18],[1644,22,1587,20],[1645,4,1588,4],[1645,11,1588,11],[1645,23,1588,23],[1645,24,1588,24,"indexOf"],[1645,31,1588,31],[1645,32,1588,32,"c"],[1645,33,1588,33],[1645,34,1588,34],[1645,39,1588,39],[1645,40,1588,40],[1645,41,1588,41],[1646,2,1589,0],[1647,2,1590,0],[1648,2,1591,0],[1648,11,1591,9,"algebraic"],[1648,20,1591,18,"algebraic"],[1648,21,1591,19,"square"],[1648,27,1591,25],[1648,29,1591,27],[1649,4,1592,4],[1649,10,1592,10,"f"],[1649,11,1592,11],[1649,14,1592,14,"file"],[1649,18,1592,18],[1649,19,1592,19,"square"],[1649,25,1592,25],[1649,26,1592,26],[1650,4,1593,4],[1650,10,1593,10,"r"],[1650,11,1593,11],[1650,14,1593,14,"rank"],[1650,18,1593,18],[1650,19,1593,19,"square"],[1650,25,1593,25],[1650,26,1593,26],[1651,4,1594,4],[1651,11,1594,12],[1651,21,1594,22],[1651,22,1594,23,"substring"],[1651,31,1594,32],[1651,32,1594,33,"f"],[1651,33,1594,34],[1651,35,1594,36,"f"],[1651,36,1594,37],[1651,39,1594,40],[1651,40,1594,41],[1651,41,1594,42],[1651,44,1595,8],[1651,54,1595,18],[1651,55,1595,19,"substring"],[1651,64,1595,28],[1651,65,1595,29,"r"],[1651,66,1595,30],[1651,68,1595,32,"r"],[1651,69,1595,33],[1651,72,1595,36],[1651,73,1595,37],[1651,74,1595,38],[1652,2,1596,0],[1653,2,1597,0],[1653,11,1597,9,"swapColor"],[1653,20,1597,18,"swapColor"],[1653,21,1597,19,"color"],[1653,26,1597,24],[1653,28,1597,26],[1654,4,1598,4],[1654,11,1598,11,"color"],[1654,16,1598,16],[1654,21,1598,21,"WHITE"],[1654,26,1598,26],[1654,29,1598,29,"BLACK"],[1654,34,1598,34],[1654,37,1598,37,"WHITE"],[1654,42,1598,42],[1655,2,1599,0],[1656,2,1600,0],[1656,11,1600,9,"validateFen"],[1656,22,1600,20,"validateFen"],[1656,23,1600,21,"fen"],[1656,26,1600,24],[1656,28,1600,26],[1657,4,1601,4],[1658,4,1602,4],[1658,10,1602,10,"tokens"],[1658,16,1602,16],[1658,19,1602,19,"fen"],[1658,22,1602,22],[1658,23,1602,23,"split"],[1658,28,1602,28],[1658,29,1602,29],[1658,34,1602,34],[1658,35,1602,35],[1659,4,1603,4],[1659,8,1603,8,"tokens"],[1659,14,1603,14],[1659,15,1603,15,"length"],[1659,21,1603,21],[1659,26,1603,26],[1659,27,1603,27],[1659,29,1603,29],[1660,6,1604,8],[1660,13,1604,15],[1661,8,1605,12,"ok"],[1661,10,1605,14],[1661,12,1605,16],[1661,17,1605,21],[1662,8,1606,12,"error"],[1662,13,1606,17],[1662,15,1606,19],[1663,6,1607,8],[1663,7,1607,9],[1664,4,1608,4],[1665,4,1609,4],[1666,4,1610,4],[1666,10,1610,10,"moveNumber"],[1666,20,1610,20],[1666,23,1610,23,"parseInt"],[1666,31,1610,31],[1666,32,1610,32,"tokens"],[1666,38,1610,38],[1666,39,1610,39],[1666,40,1610,40],[1666,41,1610,41],[1666,43,1610,43],[1666,45,1610,45],[1666,46,1610,46],[1667,4,1611,4],[1667,8,1611,8,"isNaN"],[1667,13,1611,13],[1667,14,1611,14,"moveNumber"],[1667,24,1611,24],[1667,25,1611,25],[1667,29,1611,29,"moveNumber"],[1667,39,1611,39],[1667,43,1611,43],[1667,44,1611,44],[1667,46,1611,46],[1668,6,1612,8],[1668,13,1612,15],[1669,8,1613,12,"ok"],[1669,10,1613,14],[1669,12,1613,16],[1669,17,1613,21],[1670,8,1614,12,"error"],[1670,13,1614,17],[1670,15,1614,19],[1671,6,1615,8],[1671,7,1615,9],[1672,4,1616,4],[1673,4,1617,4],[1674,4,1618,4],[1674,10,1618,10,"halfMoves"],[1674,19,1618,19],[1674,22,1618,22,"parseInt"],[1674,30,1618,30],[1674,31,1618,31,"tokens"],[1674,37,1618,37],[1674,38,1618,38],[1674,39,1618,39],[1674,40,1618,40],[1674,42,1618,42],[1674,44,1618,44],[1674,45,1618,45],[1675,4,1619,4],[1675,8,1619,8,"isNaN"],[1675,13,1619,13],[1675,14,1619,14,"halfMoves"],[1675,23,1619,23],[1675,24,1619,24],[1675,28,1619,28,"halfMoves"],[1675,37,1619,37],[1675,40,1619,40],[1675,41,1619,41],[1675,43,1619,43],[1676,6,1620,8],[1676,13,1620,15],[1677,8,1621,12,"ok"],[1677,10,1621,14],[1677,12,1621,16],[1677,17,1621,21],[1678,8,1622,12,"error"],[1678,13,1622,17],[1678,15,1622,19],[1679,6,1623,8],[1679,7,1623,9],[1680,4,1624,4],[1681,4,1625,4],[1682,4,1626,4],[1682,8,1626,8],[1682,9,1626,9],[1682,31,1626,31],[1682,32,1626,32,"test"],[1682,36,1626,36],[1682,37,1626,37,"tokens"],[1682,43,1626,43],[1682,44,1626,44],[1682,45,1626,45],[1682,46,1626,46],[1682,47,1626,47],[1682,49,1626,49],[1683,6,1627,8],[1683,13,1627,15],[1684,8,1627,17,"ok"],[1684,10,1627,19],[1684,12,1627,21],[1684,17,1627,26],[1685,8,1627,28,"error"],[1685,13,1627,33],[1685,15,1627,35],[1686,6,1627,79],[1686,7,1627,80],[1687,4,1628,4],[1688,4,1629,4],[1689,4,1630,4],[1689,8,1630,8],[1689,18,1630,18],[1689,19,1630,19,"test"],[1689,23,1630,23],[1689,24,1630,24,"tokens"],[1689,30,1630,30],[1689,31,1630,31],[1689,32,1630,32],[1689,33,1630,33],[1689,34,1630,34],[1689,36,1630,36],[1690,6,1631,8],[1690,13,1631,15],[1691,8,1631,17,"ok"],[1691,10,1631,19],[1691,12,1631,21],[1691,17,1631,26],[1692,8,1631,28,"error"],[1692,13,1631,33],[1692,15,1631,35],[1693,6,1631,83],[1693,7,1631,84],[1694,4,1632,4],[1695,4,1633,4],[1696,4,1634,4],[1696,8,1634,8],[1696,9,1634,9],[1696,18,1634,18],[1696,19,1634,19,"test"],[1696,23,1634,23],[1696,24,1634,24,"tokens"],[1696,30,1634,30],[1696,31,1634,31],[1696,32,1634,32],[1696,33,1634,33],[1696,34,1634,34],[1696,36,1634,36],[1697,6,1635,8],[1697,13,1635,15],[1698,8,1635,17,"ok"],[1698,10,1635,19],[1698,12,1635,21],[1698,17,1635,26],[1699,8,1635,28,"error"],[1699,13,1635,33],[1699,15,1635,35],[1700,6,1635,74],[1700,7,1635,75],[1701,4,1636,4],[1702,4,1637,4],[1703,4,1638,4],[1703,10,1638,10,"rows"],[1703,14,1638,14],[1703,17,1638,17,"tokens"],[1703,23,1638,23],[1703,24,1638,24],[1703,25,1638,25],[1703,26,1638,26],[1703,27,1638,27,"split"],[1703,32,1638,32],[1703,33,1638,33],[1703,36,1638,36],[1703,37,1638,37],[1704,4,1639,4],[1704,8,1639,8,"rows"],[1704,12,1639,12],[1704,13,1639,13,"length"],[1704,19,1639,19],[1704,24,1639,24],[1704,25,1639,25],[1704,27,1639,27],[1705,6,1640,8],[1705,13,1640,15],[1706,8,1641,12,"ok"],[1706,10,1641,14],[1706,12,1641,16],[1706,17,1641,21],[1707,8,1642,12,"error"],[1707,13,1642,17],[1707,15,1642,19],[1708,6,1643,8],[1708,7,1643,9],[1709,4,1644,4],[1710,4,1645,4],[1711,4,1646,4],[1711,9,1646,9],[1711,13,1646,13,"i"],[1711,14,1646,14],[1711,17,1646,17],[1711,18,1646,18],[1711,20,1646,20,"i"],[1711,21,1646,21],[1711,24,1646,24,"rows"],[1711,28,1646,28],[1711,29,1646,29,"length"],[1711,35,1646,35],[1711,37,1646,37,"i"],[1711,38,1646,38],[1711,40,1646,40],[1711,42,1646,42],[1712,6,1647,8],[1713,6,1648,8],[1713,10,1648,12,"sumFields"],[1713,19,1648,21],[1713,22,1648,24],[1713,23,1648,25],[1714,6,1649,8],[1714,10,1649,12,"previousWasNumber"],[1714,27,1649,29],[1714,30,1649,32],[1714,35,1649,37],[1715,6,1650,8],[1715,11,1650,13],[1715,15,1650,17,"k"],[1715,16,1650,18],[1715,19,1650,21],[1715,20,1650,22],[1715,22,1650,24,"k"],[1715,23,1650,25],[1715,26,1650,28,"rows"],[1715,30,1650,32],[1715,31,1650,33,"i"],[1715,32,1650,34],[1715,33,1650,35],[1715,34,1650,36,"length"],[1715,40,1650,42],[1715,42,1650,44,"k"],[1715,43,1650,45],[1715,45,1650,47],[1715,47,1650,49],[1716,8,1651,12],[1716,12,1651,16,"isDigit"],[1716,19,1651,23],[1716,20,1651,24,"rows"],[1716,24,1651,28],[1716,25,1651,29,"i"],[1716,26,1651,30],[1716,27,1651,31],[1716,28,1651,32,"k"],[1716,29,1651,33],[1716,30,1651,34],[1716,31,1651,35],[1716,33,1651,37],[1717,10,1652,16],[1717,14,1652,20,"previousWasNumber"],[1717,31,1652,37],[1717,33,1652,39],[1718,12,1653,20],[1718,19,1653,27],[1719,14,1654,24,"ok"],[1719,16,1654,26],[1719,18,1654,28],[1719,23,1654,33],[1720,14,1655,24,"error"],[1720,19,1655,29],[1720,21,1655,31],[1721,12,1656,20],[1721,13,1656,21],[1722,10,1657,16],[1723,10,1658,16,"sumFields"],[1723,19,1658,25],[1723,23,1658,29,"parseInt"],[1723,31,1658,37],[1723,32,1658,38,"rows"],[1723,36,1658,42],[1723,37,1658,43,"i"],[1723,38,1658,44],[1723,39,1658,45],[1723,40,1658,46,"k"],[1723,41,1658,47],[1723,42,1658,48],[1723,44,1658,50],[1723,46,1658,52],[1723,47,1658,53],[1724,10,1659,16,"previousWasNumber"],[1724,27,1659,33],[1724,30,1659,36],[1724,34,1659,40],[1725,8,1660,12],[1725,9,1660,13],[1725,15,1661,17],[1726,10,1662,16],[1726,14,1662,20],[1726,15,1662,21],[1726,33,1662,39],[1726,34,1662,40,"test"],[1726,38,1662,44],[1726,39,1662,45,"rows"],[1726,43,1662,49],[1726,44,1662,50,"i"],[1726,45,1662,51],[1726,46,1662,52],[1726,47,1662,53,"k"],[1726,48,1662,54],[1726,49,1662,55],[1726,50,1662,56],[1726,52,1662,58],[1727,12,1663,20],[1727,19,1663,27],[1728,14,1664,24,"ok"],[1728,16,1664,26],[1728,18,1664,28],[1728,23,1664,33],[1729,14,1665,24,"error"],[1729,19,1665,29],[1729,21,1665,31],[1730,12,1666,20],[1730,13,1666,21],[1731,10,1667,16],[1732,10,1668,16,"sumFields"],[1732,19,1668,25],[1732,23,1668,29],[1732,24,1668,30],[1733,10,1669,16,"previousWasNumber"],[1733,27,1669,33],[1733,30,1669,36],[1733,35,1669,41],[1734,8,1670,12],[1735,6,1671,8],[1736,6,1672,8],[1736,10,1672,12,"sumFields"],[1736,19,1672,21],[1736,24,1672,26],[1736,25,1672,27],[1736,27,1672,29],[1737,8,1673,12],[1737,15,1673,19],[1738,10,1674,16,"ok"],[1738,12,1674,18],[1738,14,1674,20],[1738,19,1674,25],[1739,10,1675,16,"error"],[1739,15,1675,21],[1739,17,1675,23],[1740,8,1676,12],[1740,9,1676,13],[1741,6,1677,8],[1742,4,1678,4],[1743,4,1679,4],[1744,4,1680,4],[1744,8,1680,9,"tokens"],[1744,14,1680,15],[1744,15,1680,16],[1744,16,1680,17],[1744,17,1680,18],[1744,18,1680,19],[1744,19,1680,20],[1744,20,1680,21],[1744,24,1680,25],[1744,27,1680,28],[1744,31,1680,32,"tokens"],[1744,37,1680,38],[1744,38,1680,39],[1744,39,1680,40],[1744,40,1680,41],[1744,44,1680,45],[1744,47,1680,48],[1744,51,1681,9,"tokens"],[1744,57,1681,15],[1744,58,1681,16],[1744,59,1681,17],[1744,60,1681,18],[1744,61,1681,19],[1744,62,1681,20],[1744,63,1681,21],[1744,67,1681,25],[1744,70,1681,28],[1744,74,1681,32,"tokens"],[1744,80,1681,38],[1744,81,1681,39],[1744,82,1681,40],[1744,83,1681,41],[1744,87,1681,45],[1744,90,1681,49],[1744,92,1681,51],[1745,6,1682,8],[1745,13,1682,15],[1746,8,1682,17,"ok"],[1746,10,1682,19],[1746,12,1682,21],[1746,17,1682,26],[1747,8,1682,28,"error"],[1747,13,1682,33],[1747,15,1682,35],[1748,6,1682,76],[1748,7,1682,77],[1749,4,1683,4],[1750,4,1684,4],[1751,4,1685,4],[1751,10,1685,10,"kings"],[1751,15,1685,15],[1751,18,1685,18],[1751,19,1686,8],[1752,6,1686,10,"color"],[1752,11,1686,15],[1752,13,1686,17],[1752,20,1686,24],[1753,6,1686,26,"regex"],[1753,11,1686,31],[1753,13,1686,33],[1754,4,1686,38],[1754,5,1686,39],[1754,7,1687,8],[1755,6,1687,10,"color"],[1755,11,1687,15],[1755,13,1687,17],[1755,20,1687,24],[1756,6,1687,26,"regex"],[1756,11,1687,31],[1756,13,1687,33],[1757,4,1687,38],[1757,5,1687,39],[1757,6,1688,5],[1758,4,1689,4],[1758,9,1689,9],[1758,15,1689,15],[1759,6,1689,17,"color"],[1759,11,1689,22],[1760,6,1689,24,"regex"],[1761,4,1689,30],[1761,5,1689,31],[1761,9,1689,35,"kings"],[1761,14,1689,40],[1761,16,1689,42],[1762,6,1690,8],[1762,10,1690,12],[1762,11,1690,13,"regex"],[1762,16,1690,18],[1762,17,1690,19,"test"],[1762,21,1690,23],[1762,22,1690,24,"tokens"],[1762,28,1690,30],[1762,29,1690,31],[1762,30,1690,32],[1762,31,1690,33],[1762,32,1690,34],[1762,34,1690,36],[1763,8,1691,12],[1763,15,1691,19],[1764,10,1691,21,"ok"],[1764,12,1691,23],[1764,14,1691,25],[1764,19,1691,30],[1765,10,1691,32,"error"],[1765,15,1691,37],[1765,17,1691,39],[1765,41,1691,63,"color"],[1765,46,1691,68],[1766,8,1691,76],[1766,9,1691,77],[1767,6,1692,8],[1768,6,1693,8],[1768,10,1693,12],[1768,11,1693,13,"tokens"],[1768,17,1693,19],[1768,18,1693,20],[1768,19,1693,21],[1768,20,1693,22],[1768,21,1693,23,"match"],[1768,26,1693,28],[1768,27,1693,29,"regex"],[1768,32,1693,34],[1768,33,1693,35],[1768,37,1693,39],[1768,39,1693,41],[1768,41,1693,43,"length"],[1768,47,1693,49],[1768,50,1693,52],[1768,51,1693,53],[1768,53,1693,55],[1769,8,1694,12],[1769,15,1694,19],[1770,10,1694,21,"ok"],[1770,12,1694,23],[1770,14,1694,25],[1770,19,1694,30],[1771,10,1694,32,"error"],[1771,15,1694,37],[1771,17,1694,39],[1771,42,1694,64,"color"],[1771,47,1694,69],[1772,8,1694,78],[1772,9,1694,79],[1773,6,1695,8],[1774,4,1696,4],[1775,4,1697,4],[1776,4,1698,4],[1776,8,1698,8,"Array"],[1776,13,1698,13],[1776,14,1698,14,"from"],[1776,18,1698,18],[1776,19,1698,19,"rows"],[1776,23,1698,23],[1776,24,1698,24],[1776,25,1698,25],[1776,26,1698,26],[1776,29,1698,29,"rows"],[1776,33,1698,33],[1776,34,1698,34],[1776,35,1698,35],[1776,36,1698,36],[1776,37,1698,37],[1776,38,1698,38,"some"],[1776,42,1698,42],[1776,43,1698,44,"char"],[1776,47,1698,48],[1776,51,1698,53,"char"],[1776,55,1698,57],[1776,56,1698,58,"toUpperCase"],[1776,67,1698,69],[1776,68,1698,70],[1776,69,1698,71],[1776,74,1698,76],[1776,77,1698,79],[1776,78,1698,80],[1776,80,1698,82],[1777,6,1699,8],[1777,13,1699,15],[1778,8,1700,12,"ok"],[1778,10,1700,14],[1778,12,1700,16],[1778,17,1700,21],[1779,8,1701,12,"error"],[1779,13,1701,17],[1779,15,1701,19],[1780,6,1702,8],[1780,7,1702,9],[1781,4,1703,4],[1782,4,1704,4],[1782,11,1704,11],[1783,6,1704,13,"ok"],[1783,8,1704,15],[1783,10,1704,17],[1784,4,1704,22],[1784,5,1704,23],[1785,2,1705,0],[1786,2,1706,0],[1787,2,1707,0],[1787,11,1707,9,"getDisambiguator"],[1787,27,1707,25,"getDisambiguator"],[1787,28,1707,26,"move"],[1787,32,1707,30],[1787,34,1707,32,"moves"],[1787,39,1707,37],[1787,41,1707,39],[1788,4,1708,4],[1788,10,1708,10,"from"],[1788,14,1708,14],[1788,17,1708,17,"move"],[1788,21,1708,21],[1788,22,1708,22,"from"],[1788,26,1708,26],[1789,4,1709,4],[1789,10,1709,10,"to"],[1789,12,1709,12],[1789,15,1709,15,"move"],[1789,19,1709,19],[1789,20,1709,20,"to"],[1789,22,1709,22],[1790,4,1710,4],[1790,10,1710,10,"piece"],[1790,15,1710,15],[1790,18,1710,18,"move"],[1790,22,1710,22],[1790,23,1710,23,"piece"],[1790,28,1710,28],[1791,4,1711,4],[1791,8,1711,8,"ambiguities"],[1791,19,1711,19],[1791,22,1711,22],[1791,23,1711,23],[1792,4,1712,4],[1792,8,1712,8,"sameRank"],[1792,16,1712,16],[1792,19,1712,19],[1792,20,1712,20],[1793,4,1713,4],[1793,8,1713,8,"sameFile"],[1793,16,1713,16],[1793,19,1713,19],[1793,20,1713,20],[1794,4,1714,4],[1794,9,1714,9],[1794,13,1714,13,"i"],[1794,14,1714,14],[1794,17,1714,17],[1794,18,1714,18],[1794,20,1714,20,"len"],[1794,23,1714,23],[1794,26,1714,26,"moves"],[1794,31,1714,31],[1794,32,1714,32,"length"],[1794,38,1714,38],[1794,40,1714,40,"i"],[1794,41,1714,41],[1794,44,1714,44,"len"],[1794,47,1714,47],[1794,49,1714,49,"i"],[1794,50,1714,50],[1794,52,1714,52],[1794,54,1714,54],[1795,6,1715,8],[1795,12,1715,14,"ambigFrom"],[1795,21,1715,23],[1795,24,1715,26,"moves"],[1795,29,1715,31],[1795,30,1715,32,"i"],[1795,31,1715,33],[1795,32,1715,34],[1795,33,1715,35,"from"],[1795,37,1715,39],[1796,6,1716,8],[1796,12,1716,14,"ambigTo"],[1796,19,1716,21],[1796,22,1716,24,"moves"],[1796,27,1716,29],[1796,28,1716,30,"i"],[1796,29,1716,31],[1796,30,1716,32],[1796,31,1716,33,"to"],[1796,33,1716,35],[1797,6,1717,8],[1797,12,1717,14,"ambigPiece"],[1797,22,1717,24],[1797,25,1717,27,"moves"],[1797,30,1717,32],[1797,31,1717,33,"i"],[1797,32,1717,34],[1797,33,1717,35],[1797,34,1717,36,"piece"],[1797,39,1717,41],[1798,6,1718,8],[1799,0,1719,0],[1800,0,1720,0],[1801,0,1721,0],[1802,6,1722,8],[1802,10,1722,12,"piece"],[1802,15,1722,17],[1802,20,1722,22,"ambigPiece"],[1802,30,1722,32],[1802,34,1722,36,"from"],[1802,38,1722,40],[1802,43,1722,45,"ambigFrom"],[1802,52,1722,54],[1802,56,1722,58,"to"],[1802,58,1722,60],[1802,63,1722,65,"ambigTo"],[1802,70,1722,72],[1802,72,1722,74],[1803,8,1723,12,"ambiguities"],[1803,19,1723,23],[1803,21,1723,25],[1804,8,1724,12],[1804,12,1724,16,"rank"],[1804,16,1724,20],[1804,17,1724,21,"from"],[1804,21,1724,25],[1804,22,1724,26],[1804,27,1724,31,"rank"],[1804,31,1724,35],[1804,32,1724,36,"ambigFrom"],[1804,41,1724,45],[1804,42,1724,46],[1804,44,1724,48],[1805,10,1725,16,"sameRank"],[1805,18,1725,24],[1805,20,1725,26],[1806,8,1726,12],[1807,8,1727,12],[1807,12,1727,16,"file"],[1807,16,1727,20],[1807,17,1727,21,"from"],[1807,21,1727,25],[1807,22,1727,26],[1807,27,1727,31,"file"],[1807,31,1727,35],[1807,32,1727,36,"ambigFrom"],[1807,41,1727,45],[1807,42,1727,46],[1807,44,1727,48],[1808,10,1728,16,"sameFile"],[1808,18,1728,24],[1808,20,1728,26],[1809,8,1729,12],[1810,6,1730,8],[1811,4,1731,4],[1812,4,1732,4],[1812,8,1732,8,"ambiguities"],[1812,19,1732,19],[1812,22,1732,22],[1812,23,1732,23],[1812,25,1732,25],[1813,6,1733,8],[1813,10,1733,12,"sameRank"],[1813,18,1733,20],[1813,21,1733,23],[1813,22,1733,24],[1813,26,1733,28,"sameFile"],[1813,34,1733,36],[1813,37,1733,39],[1813,38,1733,40],[1813,40,1733,42],[1814,8,1734,12],[1815,0,1735,0],[1816,0,1736,0],[1817,0,1737,0],[1818,8,1738,12],[1818,15,1738,19,"algebraic"],[1818,24,1738,28],[1818,25,1738,29,"from"],[1818,29,1738,33],[1818,30,1738,34],[1819,6,1739,8],[1819,7,1739,9],[1819,13,1740,13],[1819,17,1740,17,"sameFile"],[1819,25,1740,25],[1819,28,1740,28],[1819,29,1740,29],[1819,31,1740,31],[1820,8,1741,12],[1821,0,1742,0],[1822,0,1743,0],[1823,0,1744,0],[1824,8,1745,12],[1824,15,1745,19,"algebraic"],[1824,24,1745,28],[1824,25,1745,29,"from"],[1824,29,1745,33],[1824,30,1745,34],[1824,31,1745,35,"charAt"],[1824,37,1745,41],[1824,38,1745,42],[1824,39,1745,43],[1824,40,1745,44],[1825,6,1746,8],[1825,7,1746,9],[1825,13,1747,13],[1826,8,1748,12],[1827,8,1749,12],[1827,15,1749,19,"algebraic"],[1827,24,1749,28],[1827,25,1749,29,"from"],[1827,29,1749,33],[1827,30,1749,34],[1827,31,1749,35,"charAt"],[1827,37,1749,41],[1827,38,1749,42],[1827,39,1749,43],[1827,40,1749,44],[1828,6,1750,8],[1829,4,1751,4],[1830,4,1752,4],[1830,11,1752,11],[1830,13,1752,13],[1831,2,1753,0],[1832,2,1754,0],[1832,11,1754,9,"addMove"],[1832,18,1754,16,"addMove"],[1832,19,1754,17,"moves"],[1832,24,1754,22],[1832,26,1754,24,"color"],[1832,31,1754,29],[1832,33,1754,31,"from"],[1832,37,1754,35],[1832,39,1754,37,"to"],[1832,41,1754,39],[1832,43,1754,41,"piece"],[1832,48,1754,46],[1832,50,1754,48,"captured"],[1832,58,1754,56],[1832,61,1754,59,"undefined"],[1832,70,1754,68],[1832,72,1754,70,"flags"],[1832,77,1754,75],[1832,80,1754,78,"BITS"],[1832,84,1754,82],[1832,85,1754,83,"NORMAL"],[1832,91,1754,89],[1832,93,1754,91],[1833,4,1755,4],[1833,10,1755,10,"r"],[1833,11,1755,11],[1833,14,1755,14,"rank"],[1833,18,1755,18],[1833,19,1755,19,"to"],[1833,21,1755,21],[1833,22,1755,22],[1834,4,1756,4],[1834,8,1756,8,"piece"],[1834,13,1756,13],[1834,18,1756,18,"PAWN"],[1834,22,1756,22],[1834,27,1756,27,"r"],[1834,28,1756,28],[1834,33,1756,33,"RANK_1"],[1834,39,1756,39],[1834,43,1756,43,"r"],[1834,44,1756,44],[1834,49,1756,49,"RANK_8"],[1834,55,1756,55],[1834,56,1756,56],[1834,58,1756,58],[1835,6,1757,8],[1835,11,1757,13],[1835,15,1757,17,"i"],[1835,16,1757,18],[1835,19,1757,21],[1835,20,1757,22],[1835,22,1757,24,"i"],[1835,23,1757,25],[1835,26,1757,28,"PROMOTIONS"],[1835,36,1757,38],[1835,37,1757,39,"length"],[1835,43,1757,45],[1835,45,1757,47,"i"],[1835,46,1757,48],[1835,48,1757,50],[1835,50,1757,52],[1836,8,1758,12],[1836,14,1758,18,"promotion"],[1836,23,1758,27],[1836,26,1758,30,"PROMOTIONS"],[1836,36,1758,40],[1836,37,1758,41,"i"],[1836,38,1758,42],[1836,39,1758,43],[1837,8,1759,12,"moves"],[1837,13,1759,17],[1837,14,1759,18,"push"],[1837,18,1759,22],[1837,19,1759,23],[1838,10,1760,16,"color"],[1838,15,1760,21],[1839,10,1761,16,"from"],[1839,14,1761,20],[1840,10,1762,16,"to"],[1840,12,1762,18],[1841,10,1763,16,"piece"],[1841,15,1763,21],[1842,10,1764,16,"captured"],[1842,18,1764,24],[1843,10,1765,16,"promotion"],[1843,19,1765,25],[1844,10,1766,16,"flags"],[1844,15,1766,21],[1844,17,1766,23,"flags"],[1844,22,1766,28],[1844,25,1766,31,"BITS"],[1844,29,1766,35],[1844,30,1766,36,"PROMOTION"],[1845,8,1767,12],[1845,9,1767,13],[1845,10,1767,14],[1846,6,1768,8],[1847,4,1769,4],[1847,5,1769,5],[1847,11,1770,9],[1848,6,1771,8,"moves"],[1848,11,1771,13],[1848,12,1771,14,"push"],[1848,16,1771,18],[1848,17,1771,19],[1849,8,1772,12,"color"],[1849,13,1772,17],[1850,8,1773,12,"from"],[1850,12,1773,16],[1851,8,1774,12,"to"],[1851,10,1774,14],[1852,8,1775,12,"piece"],[1852,13,1775,17],[1853,8,1776,12,"captured"],[1853,16,1776,20],[1854,8,1777,12,"flags"],[1855,6,1778,8],[1855,7,1778,9],[1855,8,1778,10],[1856,4,1779,4],[1857,2,1780,0],[1858,2,1781,0],[1858,11,1781,9,"inferPieceType"],[1858,25,1781,23,"inferPieceType"],[1858,26,1781,24,"san"],[1858,29,1781,27],[1858,31,1781,29],[1859,4,1782,4],[1859,8,1782,8,"pieceType"],[1859,17,1782,17],[1859,20,1782,20,"san"],[1859,23,1782,23],[1859,24,1782,24,"charAt"],[1859,30,1782,30],[1859,31,1782,31],[1859,32,1782,32],[1859,33,1782,33],[1860,4,1783,4],[1860,8,1783,8,"pieceType"],[1860,17,1783,17],[1860,21,1783,21],[1860,24,1783,24],[1860,28,1783,28,"pieceType"],[1860,37,1783,37],[1860,41,1783,41],[1860,44,1783,44],[1860,46,1783,46],[1861,6,1784,8],[1861,12,1784,14,"matches"],[1861,19,1784,21],[1861,22,1784,24,"san"],[1861,25,1784,27],[1861,26,1784,28,"match"],[1861,31,1784,33],[1861,32,1784,34],[1861,50,1784,52],[1861,51,1784,53],[1862,6,1785,8],[1862,10,1785,12,"matches"],[1862,17,1785,19],[1862,19,1785,21],[1863,8,1786,12],[1863,15,1786,19,"undefined"],[1863,24,1786,28],[1864,6,1787,8],[1865,6,1788,8],[1865,13,1788,15,"PAWN"],[1865,17,1788,19],[1866,4,1789,4],[1867,4,1790,4,"pieceType"],[1867,13,1790,13],[1867,16,1790,16,"pieceType"],[1867,25,1790,25],[1867,26,1790,26,"toLowerCase"],[1867,37,1790,37],[1867,38,1790,38],[1867,39,1790,39],[1868,4,1791,4],[1868,8,1791,8,"pieceType"],[1868,17,1791,17],[1868,22,1791,22],[1868,25,1791,25],[1868,27,1791,27],[1869,6,1792,8],[1869,13,1792,15,"KING"],[1869,17,1792,19],[1870,4,1793,4],[1871,4,1794,4],[1871,11,1794,11,"pieceType"],[1871,20,1794,20],[1872,2,1795,0],[1873,2,1796,0],[1874,2,1797,0],[1874,11,1797,9,"strippedSan"],[1874,22,1797,20,"strippedSan"],[1874,23,1797,21,"move"],[1874,27,1797,25],[1874,29,1797,27],[1875,4,1798,4],[1875,11,1798,11,"move"],[1875,15,1798,15],[1875,16,1798,16,"replace"],[1875,23,1798,23],[1875,24,1798,24],[1875,27,1798,27],[1875,29,1798,29],[1875,31,1798,31],[1875,32,1798,32],[1875,33,1798,33,"replace"],[1875,40,1798,40],[1875,41,1798,41],[1875,54,1798,54],[1875,56,1798,56],[1875,58,1798,58],[1875,59,1798,59],[1876,2,1799,0],[1877,2,1800,0],[1877,8,1800,6,"Chess"],[1877,13,1800,11],[1877,14,1800,12],[1878,4,1801,4,"_board"],[1878,10,1801,10],[1878,13,1801,13],[1878,17,1801,17,"Array"],[1878,22,1801,22],[1878,23,1801,23],[1878,26,1801,26],[1878,27,1801,27],[1879,4,1802,4,"_turn"],[1879,9,1802,9],[1879,12,1802,12,"WHITE"],[1879,17,1802,17],[1880,4,1803,4,"_header"],[1880,11,1803,11],[1880,14,1803,14],[1880,15,1803,15],[1880,16,1803,16],[1881,4,1804,4,"_kings"],[1881,10,1804,10],[1881,13,1804,13],[1882,6,1804,15,"w"],[1882,7,1804,16],[1882,9,1804,18,"EMPTY"],[1882,14,1804,23],[1883,6,1804,25,"b"],[1883,7,1804,26],[1883,9,1804,28,"EMPTY"],[1884,4,1804,34],[1884,5,1804,35],[1885,4,1805,4,"_epSquare"],[1885,13,1805,13],[1885,16,1805,16],[1885,17,1805,17],[1885,18,1805,18],[1886,4,1806,4,"_halfMoves"],[1886,14,1806,14],[1886,17,1806,17],[1886,18,1806,18],[1887,4,1807,4,"_moveNumber"],[1887,15,1807,15],[1887,18,1807,18],[1887,19,1807,19],[1888,4,1808,4,"_history"],[1888,12,1808,12],[1888,15,1808,15],[1888,17,1808,17],[1889,4,1809,4,"_comments"],[1889,13,1809,13],[1889,16,1809,16],[1889,17,1809,17],[1889,18,1809,18],[1890,4,1810,4,"_castling"],[1890,13,1810,13],[1890,16,1810,16],[1891,6,1810,18,"w"],[1891,7,1810,19],[1891,9,1810,21],[1891,10,1810,22],[1892,6,1810,24,"b"],[1892,7,1810,25],[1892,9,1810,27],[1893,4,1810,29],[1893,5,1810,30],[1894,4,1811,4,"_hash"],[1894,9,1811,9],[1894,12,1811,12],[1894,14,1811,14],[1895,4,1812,4],[1896,4,1813,4,"_positionCount"],[1896,18,1813,18],[1896,21,1813,21],[1896,25,1813,25,"Map"],[1896,28,1813,28],[1896,29,1813,29],[1896,30,1813,30],[1897,4,1814,4,"constructor"],[1897,15,1814,15,"constructor"],[1897,16,1814,16,"fen"],[1897,19,1814,19],[1897,22,1814,22,"DEFAULT_POSITION"],[1897,38,1814,38],[1897,40,1814,40],[1898,6,1814,42,"skipValidation"],[1898,20,1814,56],[1898,23,1814,59],[1899,4,1814,65],[1899,5,1814,66],[1899,8,1814,69],[1899,9,1814,70],[1899,10,1814,71],[1899,12,1814,73],[1900,6,1815,8],[1900,10,1815,12],[1900,11,1815,13,"load"],[1900,15,1815,17],[1900,16,1815,18,"fen"],[1900,19,1815,21],[1900,21,1815,23],[1901,8,1815,25,"skipValidation"],[1902,6,1815,40],[1902,7,1815,41],[1902,8,1815,42],[1903,4,1816,4],[1904,4,1817,4,"clear"],[1904,9,1817,9,"clear"],[1904,10,1817,10],[1905,6,1817,12,"preserveHeaders"],[1905,21,1817,27],[1905,24,1817,30],[1906,4,1817,36],[1906,5,1817,37],[1906,8,1817,40],[1906,9,1817,41],[1906,10,1817,42],[1906,12,1817,44],[1907,6,1818,8],[1907,10,1818,12],[1907,11,1818,13,"_board"],[1907,17,1818,19],[1907,20,1818,22],[1907,24,1818,26,"Array"],[1907,29,1818,31],[1907,30,1818,32],[1907,33,1818,35],[1907,34,1818,36],[1908,6,1819,8],[1908,10,1819,12],[1908,11,1819,13,"_kings"],[1908,17,1819,19],[1908,20,1819,22],[1909,8,1819,24,"w"],[1909,9,1819,25],[1909,11,1819,27,"EMPTY"],[1909,16,1819,32],[1910,8,1819,34,"b"],[1910,9,1819,35],[1910,11,1819,37,"EMPTY"],[1911,6,1819,43],[1911,7,1819,44],[1912,6,1820,8],[1912,10,1820,12],[1912,11,1820,13,"_turn"],[1912,16,1820,18],[1912,19,1820,21,"WHITE"],[1912,24,1820,26],[1913,6,1821,8],[1913,10,1821,12],[1913,11,1821,13,"_castling"],[1913,20,1821,22],[1913,23,1821,25],[1914,8,1821,27,"w"],[1914,9,1821,28],[1914,11,1821,30],[1914,12,1821,31],[1915,8,1821,33,"b"],[1915,9,1821,34],[1915,11,1821,36],[1916,6,1821,38],[1916,7,1821,39],[1917,6,1822,8],[1917,10,1822,12],[1917,11,1822,13,"_epSquare"],[1917,20,1822,22],[1917,23,1822,25,"EMPTY"],[1917,28,1822,30],[1918,6,1823,8],[1918,10,1823,12],[1918,11,1823,13,"_halfMoves"],[1918,21,1823,23],[1918,24,1823,26],[1918,25,1823,27],[1919,6,1824,8],[1919,10,1824,12],[1919,11,1824,13,"_moveNumber"],[1919,22,1824,24],[1919,25,1824,27],[1919,26,1824,28],[1920,6,1825,8],[1920,10,1825,12],[1920,11,1825,13,"_history"],[1920,19,1825,21],[1920,22,1825,24],[1920,24,1825,26],[1921,6,1826,8],[1921,10,1826,12],[1921,11,1826,13,"_comments"],[1921,20,1826,22],[1921,23,1826,25],[1921,24,1826,26],[1921,25,1826,27],[1922,6,1827,8],[1922,10,1827,12],[1922,11,1827,13,"_header"],[1922,18,1827,20],[1922,21,1827,23,"preserveHeaders"],[1922,36,1827,38],[1922,39,1827,41],[1922,43,1827,45],[1922,44,1827,46,"_header"],[1922,51,1827,53],[1922,54,1827,56],[1923,8,1827,58],[1923,11,1827,61,"HEADER_TEMPLATE"],[1924,6,1827,77],[1924,7,1827,78],[1925,6,1828,8],[1925,10,1828,12],[1925,11,1828,13,"_hash"],[1925,16,1828,18],[1925,19,1828,21],[1925,23,1828,25],[1925,24,1828,26,"_computeHash"],[1925,36,1828,38],[1925,37,1828,39],[1925,38,1828,40],[1926,6,1829,8],[1926,10,1829,12],[1926,11,1829,13,"_positionCount"],[1926,25,1829,27],[1926,28,1829,30],[1926,32,1829,34,"Map"],[1926,35,1829,37],[1926,36,1829,38],[1926,37,1829,39],[1927,6,1830,8],[1928,0,1831,0],[1929,0,1832,0],[1930,0,1833,0],[1931,0,1834,0],[1932,6,1835,8],[1932,10,1835,12],[1932,11,1835,13,"_header"],[1932,18,1835,20],[1932,19,1835,21],[1932,26,1835,28],[1932,27,1835,29],[1932,30,1835,32],[1932,34,1835,36],[1933,6,1836,8],[1933,10,1836,12],[1933,11,1836,13,"_header"],[1933,18,1836,20],[1933,19,1836,21],[1933,24,1836,26],[1933,25,1836,27],[1933,28,1836,30],[1933,32,1836,34],[1934,4,1837,4],[1935,4,1838,4,"load"],[1935,8,1838,8,"load"],[1935,9,1838,9,"fen"],[1935,12,1838,12],[1935,14,1838,14],[1936,6,1838,16,"skipValidation"],[1936,20,1838,30],[1936,23,1838,33],[1936,28,1838,38],[1937,6,1838,40,"preserveHeaders"],[1937,21,1838,55],[1937,24,1838,58],[1938,4,1838,64],[1938,5,1838,65],[1938,8,1838,68],[1938,9,1838,69],[1938,10,1838,70],[1938,12,1838,72],[1939,6,1839,8],[1939,10,1839,12,"tokens"],[1939,16,1839,18],[1939,19,1839,21,"fen"],[1939,22,1839,24],[1939,23,1839,25,"split"],[1939,28,1839,30],[1939,29,1839,31],[1939,34,1839,36],[1939,35,1839,37],[1940,6,1840,8],[1941,6,1841,8],[1941,10,1841,12,"tokens"],[1941,16,1841,18],[1941,17,1841,19,"length"],[1941,23,1841,25],[1941,27,1841,29],[1941,28,1841,30],[1941,32,1841,34,"tokens"],[1941,38,1841,40],[1941,39,1841,41,"length"],[1941,45,1841,47],[1941,48,1841,50],[1941,49,1841,51],[1941,51,1841,53],[1942,8,1842,12],[1942,14,1842,18,"adjustments"],[1942,25,1842,29],[1942,28,1842,32],[1942,29,1842,33],[1942,32,1842,36],[1942,34,1842,38],[1942,37,1842,41],[1942,39,1842,43],[1942,42,1842,46],[1942,44,1842,48],[1942,47,1842,51],[1942,48,1842,52],[1943,8,1843,12,"fen"],[1943,11,1843,15],[1943,14,1843,18,"tokens"],[1943,20,1843,24],[1943,21,1843,25,"concat"],[1943,27,1843,31],[1943,28,1843,32,"adjustments"],[1943,39,1843,43],[1943,40,1843,44,"slice"],[1943,45,1843,49],[1943,46,1843,50],[1943,48,1843,52],[1943,49,1843,53],[1943,52,1843,56,"tokens"],[1943,58,1843,62],[1943,59,1843,63,"length"],[1943,65,1843,69],[1943,66,1843,70],[1943,67,1843,71],[1943,68,1843,72],[1943,69,1843,73,"join"],[1943,73,1843,77],[1943,74,1843,78],[1943,77,1843,81],[1943,78,1843,82],[1944,6,1844,8],[1945,6,1845,8,"tokens"],[1945,12,1845,14],[1945,15,1845,17,"fen"],[1945,18,1845,20],[1945,19,1845,21,"split"],[1945,24,1845,26],[1945,25,1845,27],[1945,30,1845,32],[1945,31,1845,33],[1946,6,1846,8],[1946,10,1846,12],[1946,11,1846,13,"skipValidation"],[1946,25,1846,27],[1946,27,1846,29],[1947,8,1847,12],[1947,14,1847,18],[1948,10,1847,20,"ok"],[1948,12,1847,22],[1949,10,1847,24,"error"],[1950,8,1847,30],[1950,9,1847,31],[1950,12,1847,34,"validateFen"],[1950,23,1847,45],[1950,24,1847,46,"fen"],[1950,27,1847,49],[1950,28,1847,50],[1951,8,1848,12],[1951,12,1848,16],[1951,13,1848,17,"ok"],[1951,15,1848,19],[1951,17,1848,21],[1952,10,1849,16],[1952,16,1849,22],[1952,20,1849,26,"Error"],[1952,25,1849,31],[1952,26,1849,32,"error"],[1952,31,1849,37],[1952,32,1849,38],[1953,8,1850,12],[1954,6,1851,8],[1955,6,1852,8],[1955,12,1852,14,"position"],[1955,20,1852,22],[1955,23,1852,25,"tokens"],[1955,29,1852,31],[1955,30,1852,32],[1955,31,1852,33],[1955,32,1852,34],[1956,6,1853,8],[1956,10,1853,12,"square"],[1956,16,1853,18],[1956,19,1853,21],[1956,20,1853,22],[1957,6,1854,8],[1957,10,1854,12],[1957,11,1854,13,"clear"],[1957,16,1854,18],[1957,17,1854,19],[1958,8,1854,21,"preserveHeaders"],[1959,6,1854,37],[1959,7,1854,38],[1959,8,1854,39],[1960,6,1855,8],[1960,11,1855,13],[1960,15,1855,17,"i"],[1960,16,1855,18],[1960,19,1855,21],[1960,20,1855,22],[1960,22,1855,24,"i"],[1960,23,1855,25],[1960,26,1855,28,"position"],[1960,34,1855,36],[1960,35,1855,37,"length"],[1960,41,1855,43],[1960,43,1855,45,"i"],[1960,44,1855,46],[1960,46,1855,48],[1960,48,1855,50],[1961,8,1856,12],[1961,14,1856,18,"piece"],[1961,19,1856,23],[1961,22,1856,26,"position"],[1961,30,1856,34],[1961,31,1856,35,"charAt"],[1961,37,1856,41],[1961,38,1856,42,"i"],[1961,39,1856,43],[1961,40,1856,44],[1962,8,1857,12],[1962,12,1857,16,"piece"],[1962,17,1857,21],[1962,22,1857,26],[1962,25,1857,29],[1962,27,1857,31],[1963,10,1858,16,"square"],[1963,16,1858,22],[1963,20,1858,26],[1963,21,1858,27],[1964,8,1859,12],[1964,9,1859,13],[1964,15,1860,17],[1964,19,1860,21,"isDigit"],[1964,26,1860,28],[1964,27,1860,29,"piece"],[1964,32,1860,34],[1964,33,1860,35],[1964,35,1860,37],[1965,10,1861,16,"square"],[1965,16,1861,22],[1965,20,1861,26,"parseInt"],[1965,28,1861,34],[1965,29,1861,35,"piece"],[1965,34,1861,40],[1965,36,1861,42],[1965,38,1861,44],[1965,39,1861,45],[1966,8,1862,12],[1966,9,1862,13],[1966,15,1863,17],[1967,10,1864,16],[1967,16,1864,22,"color"],[1967,21,1864,27],[1967,24,1864,30,"piece"],[1967,29,1864,35],[1967,32,1864,38],[1967,35,1864,41],[1967,38,1864,44,"WHITE"],[1967,43,1864,49],[1967,46,1864,52,"BLACK"],[1967,51,1864,57],[1968,10,1865,16],[1968,14,1865,20],[1968,15,1865,21,"_put"],[1968,19,1865,25],[1968,20,1865,26],[1969,12,1865,28,"type"],[1969,16,1865,32],[1969,18,1865,34,"piece"],[1969,23,1865,39],[1969,24,1865,40,"toLowerCase"],[1969,35,1865,51],[1969,36,1865,52],[1969,37,1865,53],[1970,12,1865,55,"color"],[1971,10,1865,61],[1971,11,1865,62],[1971,13,1865,64,"algebraic"],[1971,22,1865,73],[1971,23,1865,74,"square"],[1971,29,1865,80],[1971,30,1865,81],[1971,31,1865,82],[1972,10,1866,16,"square"],[1972,16,1866,22],[1972,18,1866,24],[1973,8,1867,12],[1974,6,1868,8],[1975,6,1869,8],[1975,10,1869,12],[1975,11,1869,13,"_turn"],[1975,16,1869,18],[1975,19,1869,21,"tokens"],[1975,25,1869,27],[1975,26,1869,28],[1975,27,1869,29],[1975,28,1869,30],[1976,6,1870,8],[1976,10,1870,12,"tokens"],[1976,16,1870,18],[1976,17,1870,19],[1976,18,1870,20],[1976,19,1870,21],[1976,20,1870,22,"indexOf"],[1976,27,1870,29],[1976,28,1870,30],[1976,31,1870,33],[1976,32,1870,34],[1976,35,1870,37],[1976,36,1870,38],[1976,37,1870,39],[1976,39,1870,41],[1977,8,1871,12],[1977,12,1871,16],[1977,13,1871,17,"_castling"],[1977,22,1871,26],[1977,23,1871,27,"w"],[1977,24,1871,28],[1977,28,1871,32,"BITS"],[1977,32,1871,36],[1977,33,1871,37,"KSIDE_CASTLE"],[1977,45,1871,49],[1978,6,1872,8],[1979,6,1873,8],[1979,10,1873,12,"tokens"],[1979,16,1873,18],[1979,17,1873,19],[1979,18,1873,20],[1979,19,1873,21],[1979,20,1873,22,"indexOf"],[1979,27,1873,29],[1979,28,1873,30],[1979,31,1873,33],[1979,32,1873,34],[1979,35,1873,37],[1979,36,1873,38],[1979,37,1873,39],[1979,39,1873,41],[1980,8,1874,12],[1980,12,1874,16],[1980,13,1874,17,"_castling"],[1980,22,1874,26],[1980,23,1874,27,"w"],[1980,24,1874,28],[1980,28,1874,32,"BITS"],[1980,32,1874,36],[1980,33,1874,37,"QSIDE_CASTLE"],[1980,45,1874,49],[1981,6,1875,8],[1982,6,1876,8],[1982,10,1876,12,"tokens"],[1982,16,1876,18],[1982,17,1876,19],[1982,18,1876,20],[1982,19,1876,21],[1982,20,1876,22,"indexOf"],[1982,27,1876,29],[1982,28,1876,30],[1982,31,1876,33],[1982,32,1876,34],[1982,35,1876,37],[1982,36,1876,38],[1982,37,1876,39],[1982,39,1876,41],[1983,8,1877,12],[1983,12,1877,16],[1983,13,1877,17,"_castling"],[1983,22,1877,26],[1983,23,1877,27,"b"],[1983,24,1877,28],[1983,28,1877,32,"BITS"],[1983,32,1877,36],[1983,33,1877,37,"KSIDE_CASTLE"],[1983,45,1877,49],[1984,6,1878,8],[1985,6,1879,8],[1985,10,1879,12,"tokens"],[1985,16,1879,18],[1985,17,1879,19],[1985,18,1879,20],[1985,19,1879,21],[1985,20,1879,22,"indexOf"],[1985,27,1879,29],[1985,28,1879,30],[1985,31,1879,33],[1985,32,1879,34],[1985,35,1879,37],[1985,36,1879,38],[1985,37,1879,39],[1985,39,1879,41],[1986,8,1880,12],[1986,12,1880,16],[1986,13,1880,17,"_castling"],[1986,22,1880,26],[1986,23,1880,27,"b"],[1986,24,1880,28],[1986,28,1880,32,"BITS"],[1986,32,1880,36],[1986,33,1880,37,"QSIDE_CASTLE"],[1986,45,1880,49],[1987,6,1881,8],[1988,6,1882,8],[1988,10,1882,12],[1988,11,1882,13,"_epSquare"],[1988,20,1882,22],[1988,23,1882,25,"tokens"],[1988,29,1882,31],[1988,30,1882,32],[1988,31,1882,33],[1988,32,1882,34],[1988,37,1882,39],[1988,40,1882,42],[1988,43,1882,45,"EMPTY"],[1988,48,1882,50],[1988,51,1882,53,"Ox88"],[1988,55,1882,57],[1988,56,1882,58,"tokens"],[1988,62,1882,64],[1988,63,1882,65],[1988,64,1882,66],[1988,65,1882,67],[1988,66,1882,68],[1989,6,1883,8],[1989,10,1883,12],[1989,11,1883,13,"_halfMoves"],[1989,21,1883,23],[1989,24,1883,26,"parseInt"],[1989,32,1883,34],[1989,33,1883,35,"tokens"],[1989,39,1883,41],[1989,40,1883,42],[1989,41,1883,43],[1989,42,1883,44],[1989,44,1883,46],[1989,46,1883,48],[1989,47,1883,49],[1990,6,1884,8],[1990,10,1884,12],[1990,11,1884,13,"_moveNumber"],[1990,22,1884,24],[1990,25,1884,27,"parseInt"],[1990,33,1884,35],[1990,34,1884,36,"tokens"],[1990,40,1884,42],[1990,41,1884,43],[1990,42,1884,44],[1990,43,1884,45],[1990,45,1884,47],[1990,47,1884,49],[1990,48,1884,50],[1991,6,1885,8],[1991,10,1885,12],[1991,11,1885,13,"_hash"],[1991,16,1885,18],[1991,19,1885,21],[1991,23,1885,25],[1991,24,1885,26,"_computeHash"],[1991,36,1885,38],[1991,37,1885,39],[1991,38,1885,40],[1992,6,1886,8],[1992,10,1886,12],[1992,11,1886,13,"_updateSetup"],[1992,23,1886,25],[1992,24,1886,26,"fen"],[1992,27,1886,29],[1992,28,1886,30],[1993,6,1887,8],[1993,10,1887,12],[1993,11,1887,13,"_incPositionCount"],[1993,28,1887,30],[1993,29,1887,31],[1993,30,1887,32],[1994,4,1888,4],[1995,4,1889,4,"fen"],[1995,7,1889,7,"fen"],[1995,8,1889,8],[1996,6,1889,10,"forceEnpassantSquare"],[1996,26,1889,30],[1996,29,1889,33],[1997,4,1889,40],[1997,5,1889,41],[1997,8,1889,44],[1997,9,1889,45],[1997,10,1889,46],[1997,12,1889,48],[1998,6,1890,8],[1998,10,1890,12,"empty"],[1998,15,1890,17],[1998,18,1890,20],[1998,19,1890,21],[1999,6,1891,8],[1999,10,1891,12,"fen"],[1999,13,1891,15],[1999,16,1891,18],[1999,18,1891,20],[2000,6,1892,8],[2000,11,1892,13],[2000,15,1892,17,"i"],[2000,16,1892,18],[2000,19,1892,21,"Ox88"],[2000,23,1892,25],[2000,24,1892,26,"a8"],[2000,26,1892,28],[2000,28,1892,30,"i"],[2000,29,1892,31],[2000,33,1892,35,"Ox88"],[2000,37,1892,39],[2000,38,1892,40,"h1"],[2000,40,1892,42],[2000,42,1892,44,"i"],[2000,43,1892,45],[2000,45,1892,47],[2000,47,1892,49],[2001,8,1893,12],[2001,12,1893,16],[2001,16,1893,20],[2001,17,1893,21,"_board"],[2001,23,1893,27],[2001,24,1893,28,"i"],[2001,25,1893,29],[2001,26,1893,30],[2001,28,1893,32],[2002,10,1894,16],[2002,14,1894,20,"empty"],[2002,19,1894,25],[2002,22,1894,28],[2002,23,1894,29],[2002,25,1894,31],[2003,12,1895,20,"fen"],[2003,15,1895,23],[2003,19,1895,27,"empty"],[2003,24,1895,32],[2004,12,1896,20,"empty"],[2004,17,1896,25],[2004,20,1896,28],[2004,21,1896,29],[2005,10,1897,16],[2006,10,1898,16],[2006,16,1898,22],[2007,12,1898,24,"color"],[2007,17,1898,29],[2008,12,1898,31,"type"],[2008,16,1898,35],[2008,18,1898,37,"piece"],[2009,10,1898,43],[2009,11,1898,44],[2009,14,1898,47],[2009,18,1898,51],[2009,19,1898,52,"_board"],[2009,25,1898,58],[2009,26,1898,59,"i"],[2009,27,1898,60],[2009,28,1898,61],[2010,10,1899,16,"fen"],[2010,13,1899,19],[2010,17,1899,23,"color"],[2010,22,1899,28],[2010,27,1899,33,"WHITE"],[2010,32,1899,38],[2010,35,1899,41,"piece"],[2010,40,1899,46],[2010,41,1899,47,"toUpperCase"],[2010,52,1899,58],[2010,53,1899,59],[2010,54,1899,60],[2010,57,1899,63,"piece"],[2010,62,1899,68],[2010,63,1899,69,"toLowerCase"],[2010,74,1899,80],[2010,75,1899,81],[2010,76,1899,82],[2011,8,1900,12],[2011,9,1900,13],[2011,15,1901,17],[2012,10,1902,16,"empty"],[2012,15,1902,21],[2012,17,1902,23],[2013,8,1903,12],[2014,8,1904,12],[2014,12,1904,17,"i"],[2014,13,1904,18],[2014,16,1904,21],[2014,17,1904,22],[2014,20,1904,26],[2014,24,1904,30],[2014,26,1904,32],[2015,10,1905,16],[2015,14,1905,20,"empty"],[2015,19,1905,25],[2015,22,1905,28],[2015,23,1905,29],[2015,25,1905,31],[2016,12,1906,20,"fen"],[2016,15,1906,23],[2016,19,1906,27,"empty"],[2016,24,1906,32],[2017,10,1907,16],[2018,10,1908,16],[2018,14,1908,20,"i"],[2018,15,1908,21],[2018,20,1908,26,"Ox88"],[2018,24,1908,30],[2018,25,1908,31,"h1"],[2018,27,1908,33],[2018,29,1908,35],[2019,12,1909,20,"fen"],[2019,15,1909,23],[2019,19,1909,27],[2019,22,1909,30],[2020,10,1910,16],[2021,10,1911,16,"empty"],[2021,15,1911,21],[2021,18,1911,24],[2021,19,1911,25],[2022,10,1912,16,"i"],[2022,11,1912,17],[2022,15,1912,21],[2022,16,1912,22],[2023,8,1913,12],[2024,6,1914,8],[2025,6,1915,8],[2025,10,1915,12,"castling"],[2025,18,1915,20],[2025,21,1915,23],[2025,23,1915,25],[2026,6,1916,8],[2026,10,1916,12],[2026,14,1916,16],[2026,15,1916,17,"_castling"],[2026,24,1916,26],[2026,25,1916,27,"WHITE"],[2026,30,1916,32],[2026,31,1916,33],[2026,34,1916,36,"BITS"],[2026,38,1916,40],[2026,39,1916,41,"KSIDE_CASTLE"],[2026,51,1916,53],[2026,53,1916,55],[2027,8,1917,12,"castling"],[2027,16,1917,20],[2027,20,1917,24],[2027,23,1917,27],[2028,6,1918,8],[2029,6,1919,8],[2029,10,1919,12],[2029,14,1919,16],[2029,15,1919,17,"_castling"],[2029,24,1919,26],[2029,25,1919,27,"WHITE"],[2029,30,1919,32],[2029,31,1919,33],[2029,34,1919,36,"BITS"],[2029,38,1919,40],[2029,39,1919,41,"QSIDE_CASTLE"],[2029,51,1919,53],[2029,53,1919,55],[2030,8,1920,12,"castling"],[2030,16,1920,20],[2030,20,1920,24],[2030,23,1920,27],[2031,6,1921,8],[2032,6,1922,8],[2032,10,1922,12],[2032,14,1922,16],[2032,15,1922,17,"_castling"],[2032,24,1922,26],[2032,25,1922,27,"BLACK"],[2032,30,1922,32],[2032,31,1922,33],[2032,34,1922,36,"BITS"],[2032,38,1922,40],[2032,39,1922,41,"KSIDE_CASTLE"],[2032,51,1922,53],[2032,53,1922,55],[2033,8,1923,12,"castling"],[2033,16,1923,20],[2033,20,1923,24],[2033,23,1923,27],[2034,6,1924,8],[2035,6,1925,8],[2035,10,1925,12],[2035,14,1925,16],[2035,15,1925,17,"_castling"],[2035,24,1925,26],[2035,25,1925,27,"BLACK"],[2035,30,1925,32],[2035,31,1925,33],[2035,34,1925,36,"BITS"],[2035,38,1925,40],[2035,39,1925,41,"QSIDE_CASTLE"],[2035,51,1925,53],[2035,53,1925,55],[2036,8,1926,12,"castling"],[2036,16,1926,20],[2036,20,1926,24],[2036,23,1926,27],[2037,6,1927,8],[2038,6,1928,8],[2039,6,1929,8,"castling"],[2039,14,1929,16],[2039,17,1929,19,"castling"],[2039,25,1929,27],[2039,29,1929,31],[2039,32,1929,34],[2040,6,1930,8],[2040,10,1930,12,"epSquare"],[2040,18,1930,20],[2040,21,1930,23],[2040,24,1930,26],[2041,6,1931,8],[2042,0,1932,0],[2043,0,1933,0],[2044,0,1934,0],[2045,6,1935,8],[2045,10,1935,12],[2045,14,1935,16],[2045,15,1935,17,"_epSquare"],[2045,24,1935,26],[2045,29,1935,31,"EMPTY"],[2045,34,1935,36],[2045,36,1935,38],[2046,8,1936,12],[2046,12,1936,16,"forceEnpassantSquare"],[2046,32,1936,36],[2046,34,1936,38],[2047,10,1937,16,"epSquare"],[2047,18,1937,24],[2047,21,1937,27,"algebraic"],[2047,30,1937,36],[2047,31,1937,37],[2047,35,1937,41],[2047,36,1937,42,"_epSquare"],[2047,45,1937,51],[2047,46,1937,52],[2048,8,1938,12],[2048,9,1938,13],[2048,15,1939,17],[2049,10,1940,16],[2049,16,1940,22,"bigPawnSquare"],[2049,29,1940,35],[2049,32,1940,38],[2049,36,1940,42],[2049,37,1940,43,"_epSquare"],[2049,46,1940,52],[2049,50,1940,56],[2049,54,1940,60],[2049,55,1940,61,"_turn"],[2049,60,1940,66],[2049,65,1940,71,"WHITE"],[2049,70,1940,76],[2049,73,1940,79],[2049,75,1940,81],[2049,78,1940,84],[2049,79,1940,85],[2049,81,1940,87],[2049,82,1940,88],[2050,10,1941,16],[2050,16,1941,22,"squares"],[2050,23,1941,29],[2050,26,1941,32],[2050,27,1941,33,"bigPawnSquare"],[2050,40,1941,46],[2050,43,1941,49],[2050,44,1941,50],[2050,46,1941,52,"bigPawnSquare"],[2050,59,1941,65],[2050,62,1941,68],[2050,63,1941,69],[2050,64,1941,70],[2051,10,1942,16],[2051,15,1942,21],[2051,21,1942,27,"square"],[2051,27,1942,33],[2051,31,1942,37,"squares"],[2051,38,1942,44],[2051,40,1942,46],[2052,12,1943,20],[2053,12,1944,20],[2053,16,1944,24,"square"],[2053,22,1944,30],[2053,25,1944,33],[2053,29,1944,37],[2053,31,1944,39],[2054,14,1945,24],[2055,12,1946,20],[2056,12,1947,20],[2056,18,1947,26,"color"],[2056,23,1947,31],[2056,26,1947,34],[2056,30,1947,38],[2056,31,1947,39,"_turn"],[2056,36,1947,44],[2057,12,1948,20],[2058,12,1949,20],[2058,16,1949,24],[2058,20,1949,28],[2058,21,1949,29,"_board"],[2058,27,1949,35],[2058,28,1949,36,"square"],[2058,34,1949,42],[2058,35,1949,43],[2058,37,1949,45,"color"],[2058,42,1949,50],[2058,47,1949,55,"color"],[2058,52,1949,60],[2058,56,1950,24],[2058,60,1950,28],[2058,61,1950,29,"_board"],[2058,67,1950,35],[2058,68,1950,36,"square"],[2058,74,1950,42],[2058,75,1950,43],[2058,77,1950,45,"type"],[2058,81,1950,49],[2058,86,1950,54,"PAWN"],[2058,90,1950,58],[2058,92,1950,60],[2059,14,1951,24],[2060,14,1952,24],[2060,18,1952,28],[2060,19,1952,29,"_makeMove"],[2060,28,1952,38],[2060,29,1952,39],[2061,16,1953,28,"color"],[2061,21,1953,33],[2062,16,1954,28,"from"],[2062,20,1954,32],[2062,22,1954,34,"square"],[2062,28,1954,40],[2063,16,1955,28,"to"],[2063,18,1955,30],[2063,20,1955,32],[2063,24,1955,36],[2063,25,1955,37,"_epSquare"],[2063,34,1955,46],[2064,16,1956,28,"piece"],[2064,21,1956,33],[2064,23,1956,35,"PAWN"],[2064,27,1956,39],[2065,16,1957,28,"captured"],[2065,24,1957,36],[2065,26,1957,38,"PAWN"],[2065,30,1957,42],[2066,16,1958,28,"flags"],[2066,21,1958,33],[2066,23,1958,35,"BITS"],[2066,27,1958,39],[2066,28,1958,40,"EP_CAPTURE"],[2067,14,1959,24],[2067,15,1959,25],[2067,16,1959,26],[2068,14,1960,24],[2068,20,1960,30,"isLegal"],[2068,27,1960,37],[2068,30,1960,40],[2068,31,1960,41],[2068,35,1960,45],[2068,36,1960,46,"_isKingAttacked"],[2068,51,1960,61],[2068,52,1960,62,"color"],[2068,57,1960,67],[2068,58,1960,68],[2069,14,1961,24],[2069,18,1961,28],[2069,19,1961,29,"_undoMove"],[2069,28,1961,38],[2069,29,1961,39],[2069,30,1961,40],[2070,14,1962,24],[2071,14,1963,24],[2071,18,1963,28,"isLegal"],[2071,25,1963,35],[2071,27,1963,37],[2072,16,1964,28,"epSquare"],[2072,24,1964,36],[2072,27,1964,39,"algebraic"],[2072,36,1964,48],[2072,37,1964,49],[2072,41,1964,53],[2072,42,1964,54,"_epSquare"],[2072,51,1964,63],[2072,52,1964,64],[2073,16,1965,28],[2074,14,1966,24],[2075,12,1967,20],[2076,10,1968,16],[2077,8,1969,12],[2078,6,1970,8],[2079,6,1971,8],[2079,13,1971,15],[2079,14,1972,12,"fen"],[2079,17,1972,15],[2079,19,1973,12],[2079,23,1973,16],[2079,24,1973,17,"_turn"],[2079,29,1973,22],[2079,31,1974,12,"castling"],[2079,39,1974,20],[2079,41,1975,12,"epSquare"],[2079,49,1975,20],[2079,51,1976,12],[2079,55,1976,16],[2079,56,1976,17,"_halfMoves"],[2079,66,1976,27],[2079,68,1977,12],[2079,72,1977,16],[2079,73,1977,17,"_moveNumber"],[2079,84,1977,28],[2079,85,1978,9],[2079,86,1978,10,"join"],[2079,90,1978,14],[2079,91,1978,15],[2079,94,1978,18],[2079,95,1978,19],[2080,4,1979,4],[2081,4,1980,4,"_pieceKey"],[2081,13,1980,13,"_pieceKey"],[2081,14,1980,14,"i"],[2081,15,1980,15],[2081,17,1980,17],[2082,6,1981,8],[2082,10,1981,12],[2082,11,1981,13],[2082,15,1981,17],[2082,16,1981,18,"_board"],[2082,22,1981,24],[2082,23,1981,25,"i"],[2082,24,1981,26],[2082,25,1981,27],[2082,27,1981,29],[2083,8,1982,12],[2083,15,1982,19],[2083,17,1982,21],[2084,6,1983,8],[2085,6,1984,8],[2085,12,1984,14],[2086,8,1984,16,"color"],[2086,13,1984,21],[2087,8,1984,23,"type"],[2088,6,1984,28],[2088,7,1984,29],[2088,10,1984,32],[2088,14,1984,36],[2088,15,1984,37,"_board"],[2088,21,1984,43],[2088,22,1984,44,"i"],[2088,23,1984,45],[2088,24,1984,46],[2089,6,1985,8],[2089,12,1985,14,"colorIndex"],[2089,22,1985,24],[2089,25,1985,27],[2090,8,1986,12,"w"],[2090,9,1986,13],[2090,11,1986,15],[2090,12,1986,16],[2091,8,1987,12,"b"],[2091,9,1987,13],[2091,11,1987,15],[2092,6,1988,8],[2092,7,1988,9],[2092,8,1988,10,"color"],[2092,13,1988,15],[2092,14,1988,16],[2093,6,1989,8],[2093,12,1989,14,"typeIndex"],[2093,21,1989,23],[2093,24,1989,26],[2094,8,1990,12,"p"],[2094,9,1990,13],[2094,11,1990,15],[2094,12,1990,16],[2095,8,1991,12,"n"],[2095,9,1991,13],[2095,11,1991,15],[2095,12,1991,16],[2096,8,1992,12,"b"],[2096,9,1992,13],[2096,11,1992,15],[2096,12,1992,16],[2097,8,1993,12,"r"],[2097,9,1993,13],[2097,11,1993,15],[2097,12,1993,16],[2098,8,1994,12,"q"],[2098,9,1994,13],[2098,11,1994,15],[2098,12,1994,16],[2099,8,1995,12,"k"],[2099,9,1995,13],[2099,11,1995,15],[2100,6,1996,8],[2100,7,1996,9],[2100,8,1996,10,"type"],[2100,12,1996,14],[2100,13,1996,15],[2101,6,1997,8],[2101,13,1997,15,"PIECE_KEYS"],[2101,23,1997,25],[2101,24,1997,26,"colorIndex"],[2101,34,1997,36],[2101,35,1997,37],[2101,36,1997,38,"typeIndex"],[2101,45,1997,47],[2101,46,1997,48],[2101,47,1997,49,"i"],[2101,48,1997,50],[2101,49,1997,51],[2102,4,1998,4],[2103,4,1999,4,"_epKey"],[2103,10,1999,10,"_epKey"],[2103,11,1999,10],[2103,13,1999,13],[2104,6,2000,8],[2104,13,2000,15],[2104,17,2000,19],[2104,18,2000,20,"_epSquare"],[2104,27,2000,29],[2104,32,2000,34,"EMPTY"],[2104,37,2000,39],[2104,40,2000,42],[2104,42,2000,44],[2104,45,2000,47,"EP_KEYS"],[2104,52,2000,54],[2104,53,2000,55],[2104,57,2000,59],[2104,58,2000,60,"_epSquare"],[2104,67,2000,69],[2104,70,2000,72],[2104,71,2000,73],[2104,72,2000,74],[2105,4,2001,4],[2106,4,2002,4,"_castlingKey"],[2106,16,2002,16,"_castlingKey"],[2106,17,2002,16],[2106,19,2002,19],[2107,6,2003,8],[2107,12,2003,14,"index"],[2107,17,2003,19],[2107,20,2003,23],[2107,24,2003,27],[2107,25,2003,28,"_castling"],[2107,34,2003,37],[2107,35,2003,38,"w"],[2107,36,2003,39],[2107,40,2003,43],[2107,41,2003,44],[2107,44,2003,49],[2107,48,2003,53],[2107,49,2003,54,"_castling"],[2107,58,2003,63],[2107,59,2003,64,"b"],[2107,60,2003,65],[2107,64,2003,69],[2107,65,2003,71],[2108,6,2004,8],[2108,13,2004,15,"CASTLING_KEYS"],[2108,26,2004,28],[2108,27,2004,29,"index"],[2108,32,2004,34],[2108,33,2004,35],[2109,4,2005,4],[2110,4,2006,4,"_computeHash"],[2110,16,2006,16,"_computeHash"],[2110,17,2006,16],[2110,19,2006,19],[2111,6,2007,8],[2111,10,2007,12,"hash"],[2111,14,2007,16],[2111,17,2007,19],[2111,19,2007,21],[2112,6,2008,8],[2112,11,2008,13],[2112,15,2008,17,"i"],[2112,16,2008,18],[2112,19,2008,21,"Ox88"],[2112,23,2008,25],[2112,24,2008,26,"a8"],[2112,26,2008,28],[2112,28,2008,30,"i"],[2112,29,2008,31],[2112,33,2008,35,"Ox88"],[2112,37,2008,39],[2112,38,2008,40,"h1"],[2112,40,2008,42],[2112,42,2008,44,"i"],[2112,43,2008,45],[2112,45,2008,47],[2112,47,2008,49],[2113,8,2009,12],[2114,8,2010,12],[2114,12,2010,16,"i"],[2114,13,2010,17],[2114,16,2010,20],[2114,20,2010,24],[2114,22,2010,26],[2115,10,2011,16,"i"],[2115,11,2011,17],[2115,15,2011,21],[2115,16,2011,22],[2116,10,2012,16],[2117,8,2013,12],[2118,8,2014,12],[2118,12,2014,16],[2118,16,2014,20],[2118,17,2014,21,"_board"],[2118,23,2014,27],[2118,24,2014,28,"i"],[2118,25,2014,29],[2118,26,2014,30],[2118,28,2014,32],[2119,10,2015,16,"hash"],[2119,14,2015,20],[2119,18,2015,24],[2119,22,2015,28],[2119,23,2015,29,"_pieceKey"],[2119,32,2015,38],[2119,33,2015,39,"i"],[2119,34,2015,40],[2119,35,2015,41],[2120,8,2016,12],[2121,6,2017,8],[2122,6,2018,8,"hash"],[2122,10,2018,12],[2122,14,2018,16],[2122,18,2018,20],[2122,19,2018,21,"_epKey"],[2122,25,2018,27],[2122,26,2018,28],[2122,27,2018,29],[2123,6,2019,8,"hash"],[2123,10,2019,12],[2123,14,2019,16],[2123,18,2019,20],[2123,19,2019,21,"_castlingKey"],[2123,31,2019,33],[2123,32,2019,34],[2123,33,2019,35],[2124,6,2020,8],[2124,10,2020,12],[2124,14,2020,16],[2124,15,2020,17,"_turn"],[2124,20,2020,22],[2124,25,2020,27],[2124,28,2020,30],[2124,30,2020,32],[2125,8,2021,12,"hash"],[2125,12,2021,16],[2125,16,2021,20,"SIDE_KEY"],[2125,24,2021,28],[2126,6,2022,8],[2127,6,2023,8],[2127,13,2023,15,"hash"],[2127,17,2023,19],[2128,4,2024,4],[2129,4,2025,4],[2130,0,2026,0],[2131,0,2027,0],[2132,0,2028,0],[2133,0,2029,0],[2134,0,2030,0],[2135,4,2031,4,"_updateSetup"],[2135,16,2031,16,"_updateSetup"],[2135,17,2031,17,"fen"],[2135,20,2031,20],[2135,22,2031,22],[2136,6,2032,8],[2136,10,2032,12],[2136,14,2032,16],[2136,15,2032,17,"_history"],[2136,23,2032,25],[2136,24,2032,26,"length"],[2136,30,2032,32],[2136,33,2032,35],[2136,34,2032,36],[2136,36,2033,12],[2137,6,2034,8],[2137,10,2034,12,"fen"],[2137,13,2034,15],[2137,18,2034,20,"DEFAULT_POSITION"],[2137,34,2034,36],[2137,36,2034,38],[2138,8,2035,12],[2138,12,2035,16],[2138,13,2035,17,"_header"],[2138,20,2035,24],[2138,21,2035,25],[2138,28,2035,32],[2138,29,2035,33],[2138,32,2035,36],[2138,35,2035,39],[2139,8,2036,12],[2139,12,2036,16],[2139,13,2036,17,"_header"],[2139,20,2036,24],[2139,21,2036,25],[2139,26,2036,30],[2139,27,2036,31],[2139,30,2036,34,"fen"],[2139,33,2036,37],[2140,6,2037,8],[2140,7,2037,9],[2140,13,2038,13],[2141,8,2039,12],[2141,12,2039,16],[2141,13,2039,17,"_header"],[2141,20,2039,24],[2141,21,2039,25],[2141,28,2039,32],[2141,29,2039,33],[2141,32,2039,36],[2141,36,2039,40],[2142,8,2040,12],[2142,12,2040,16],[2142,13,2040,17,"_header"],[2142,20,2040,24],[2142,21,2040,25],[2142,26,2040,30],[2142,27,2040,31],[2142,30,2040,34],[2142,34,2040,38],[2143,6,2041,8],[2144,4,2042,4],[2145,4,2043,4,"reset"],[2145,9,2043,9,"reset"],[2145,10,2043,9],[2145,12,2043,12],[2146,6,2044,8],[2146,10,2044,12],[2146,11,2044,13,"load"],[2146,15,2044,17],[2146,16,2044,18,"DEFAULT_POSITION"],[2146,32,2044,34],[2146,33,2044,35],[2147,4,2045,4],[2148,4,2046,4,"get"],[2148,7,2046,7,"get"],[2148,8,2046,8,"square"],[2148,14,2046,14],[2148,16,2046,16],[2149,6,2047,8],[2149,13,2047,15],[2149,17,2047,19],[2149,18,2047,20,"_board"],[2149,24,2047,26],[2149,25,2047,27,"Ox88"],[2149,29,2047,31],[2149,30,2047,32,"square"],[2149,36,2047,38],[2149,37,2047,39],[2149,38,2047,40],[2150,4,2048,4],[2151,4,2049,4,"findPiece"],[2151,13,2049,13,"findPiece"],[2151,14,2049,14,"piece"],[2151,19,2049,19],[2151,21,2049,21],[2152,6,2050,8],[2152,12,2050,14,"squares"],[2152,19,2050,21],[2152,22,2050,24],[2152,24,2050,26],[2153,6,2051,8],[2153,11,2051,13],[2153,15,2051,17,"i"],[2153,16,2051,18],[2153,19,2051,21,"Ox88"],[2153,23,2051,25],[2153,24,2051,26,"a8"],[2153,26,2051,28],[2153,28,2051,30,"i"],[2153,29,2051,31],[2153,33,2051,35,"Ox88"],[2153,37,2051,39],[2153,38,2051,40,"h1"],[2153,40,2051,42],[2153,42,2051,44,"i"],[2153,43,2051,45],[2153,45,2051,47],[2153,47,2051,49],[2154,8,2052,12],[2155,8,2053,12],[2155,12,2053,16,"i"],[2155,13,2053,17],[2155,16,2053,20],[2155,20,2053,24],[2155,22,2053,26],[2156,10,2054,16,"i"],[2156,11,2054,17],[2156,15,2054,21],[2156,16,2054,22],[2157,10,2055,16],[2158,8,2056,12],[2159,8,2057,12],[2160,8,2058,12],[2160,12,2058,16],[2160,13,2058,17],[2160,17,2058,21],[2160,18,2058,22,"_board"],[2160,24,2058,28],[2160,25,2058,29,"i"],[2160,26,2058,30],[2160,27,2058,31],[2160,31,2058,35],[2160,35,2058,39],[2160,36,2058,40,"_board"],[2160,42,2058,46],[2160,43,2058,47,"i"],[2160,44,2058,48],[2160,45,2058,49],[2160,47,2058,51,"color"],[2160,52,2058,56],[2160,57,2058,61,"piece"],[2160,62,2058,66],[2160,63,2058,67,"color"],[2160,68,2058,72],[2160,70,2058,74],[2161,10,2059,16],[2162,8,2060,12],[2163,8,2061,12],[2164,8,2062,12],[2164,12,2062,16],[2164,16,2062,20],[2164,17,2062,21,"_board"],[2164,23,2062,27],[2164,24,2062,28,"i"],[2164,25,2062,29],[2164,26,2062,30],[2164,27,2062,31,"color"],[2164,32,2062,36],[2164,37,2062,41,"piece"],[2164,42,2062,46],[2164,43,2062,47,"color"],[2164,48,2062,52],[2164,52,2063,16],[2164,56,2063,20],[2164,57,2063,21,"_board"],[2164,63,2063,27],[2164,64,2063,28,"i"],[2164,65,2063,29],[2164,66,2063,30],[2164,67,2063,31,"type"],[2164,71,2063,35],[2164,76,2063,40,"piece"],[2164,81,2063,45],[2164,82,2063,46,"type"],[2164,86,2063,50],[2164,88,2063,52],[2165,10,2064,16,"squares"],[2165,17,2064,23],[2165,18,2064,24,"push"],[2165,22,2064,28],[2165,23,2064,29,"algebraic"],[2165,32,2064,38],[2165,33,2064,39,"i"],[2165,34,2064,40],[2165,35,2064,41],[2165,36,2064,42],[2166,8,2065,12],[2167,6,2066,8],[2168,6,2067,8],[2168,13,2067,15,"squares"],[2168,20,2067,22],[2169,4,2068,4],[2170,4,2069,4,"put"],[2170,7,2069,7,"put"],[2170,8,2069,8],[2171,6,2069,10,"type"],[2171,10,2069,14],[2172,6,2069,16,"color"],[2173,4,2069,22],[2173,5,2069,23],[2173,7,2069,25,"square"],[2173,13,2069,31],[2173,15,2069,33],[2174,6,2070,8],[2174,10,2070,12],[2174,14,2070,16],[2174,15,2070,17,"_put"],[2174,19,2070,21],[2174,20,2070,22],[2175,8,2070,24,"type"],[2175,12,2070,28],[2176,8,2070,30,"color"],[2177,6,2070,36],[2177,7,2070,37],[2177,9,2070,39,"square"],[2177,15,2070,45],[2177,16,2070,46],[2177,18,2070,48],[2178,8,2071,12],[2178,12,2071,16],[2178,13,2071,17,"_updateCastlingRights"],[2178,34,2071,38],[2178,35,2071,39],[2178,36,2071,40],[2179,8,2072,12],[2179,12,2072,16],[2179,13,2072,17,"_updateEnPassantSquare"],[2179,35,2072,39],[2179,36,2072,40],[2179,37,2072,41],[2180,8,2073,12],[2180,12,2073,16],[2180,13,2073,17,"_updateSetup"],[2180,25,2073,29],[2180,26,2073,30],[2180,30,2073,34],[2180,31,2073,35,"fen"],[2180,34,2073,38],[2180,35,2073,39],[2180,36,2073,40],[2180,37,2073,41],[2181,8,2074,12],[2181,15,2074,19],[2181,19,2074,23],[2182,6,2075,8],[2183,6,2076,8],[2183,13,2076,15],[2183,18,2076,20],[2184,4,2077,4],[2185,4,2078,4,"_set"],[2185,8,2078,8,"_set"],[2185,9,2078,9,"sq"],[2185,11,2078,11],[2185,13,2078,13,"piece"],[2185,18,2078,18],[2185,20,2078,20],[2186,6,2079,8],[2186,10,2079,12],[2186,11,2079,13,"_hash"],[2186,16,2079,18],[2186,20,2079,22],[2186,24,2079,26],[2186,25,2079,27,"_pieceKey"],[2186,34,2079,36],[2186,35,2079,37,"sq"],[2186,37,2079,39],[2186,38,2079,40],[2187,6,2080,8],[2187,10,2080,12],[2187,11,2080,13,"_board"],[2187,17,2080,19],[2187,18,2080,20,"sq"],[2187,20,2080,22],[2187,21,2080,23],[2187,24,2080,26,"piece"],[2187,29,2080,31],[2188,6,2081,8],[2188,10,2081,12],[2188,11,2081,13,"_hash"],[2188,16,2081,18],[2188,20,2081,22],[2188,24,2081,26],[2188,25,2081,27,"_pieceKey"],[2188,34,2081,36],[2188,35,2081,37,"sq"],[2188,37,2081,39],[2188,38,2081,40],[2189,4,2082,4],[2190,4,2083,4,"_put"],[2190,8,2083,8,"_put"],[2190,9,2083,9],[2191,6,2083,11,"type"],[2191,10,2083,15],[2192,6,2083,17,"color"],[2193,4,2083,23],[2193,5,2083,24],[2193,7,2083,26,"square"],[2193,13,2083,32],[2193,15,2083,34],[2194,6,2084,8],[2195,6,2085,8],[2195,10,2085,12,"SYMBOLS"],[2195,17,2085,19],[2195,18,2085,20,"indexOf"],[2195,25,2085,27],[2195,26,2085,28,"type"],[2195,30,2085,32],[2195,31,2085,33,"toLowerCase"],[2195,42,2085,44],[2195,43,2085,45],[2195,44,2085,46],[2195,45,2085,47],[2195,50,2085,52],[2195,51,2085,53],[2195,52,2085,54],[2195,54,2085,56],[2196,8,2086,12],[2196,15,2086,19],[2196,20,2086,24],[2197,6,2087,8],[2198,6,2088,8],[2199,6,2089,8],[2199,10,2089,12],[2199,12,2089,14,"square"],[2199,18,2089,20],[2199,22,2089,24,"Ox88"],[2199,26,2089,28],[2199,27,2089,29],[2199,29,2089,31],[2200,8,2090,12],[2200,15,2090,19],[2200,20,2090,24],[2201,6,2091,8],[2202,6,2092,8],[2202,12,2092,14,"sq"],[2202,14,2092,16],[2202,17,2092,19,"Ox88"],[2202,21,2092,23],[2202,22,2092,24,"square"],[2202,28,2092,30],[2202,29,2092,31],[2203,6,2093,8],[2204,6,2094,8],[2204,10,2094,12,"type"],[2204,14,2094,16],[2204,18,2094,20,"KING"],[2204,22,2094,24],[2204,26,2095,12],[2204,28,2095,14],[2204,32,2095,18],[2204,33,2095,19,"_kings"],[2204,39,2095,25],[2204,40,2095,26,"color"],[2204,45,2095,31],[2204,46,2095,32],[2204,50,2095,36,"EMPTY"],[2204,55,2095,41],[2204,59,2095,45],[2204,63,2095,49],[2204,64,2095,50,"_kings"],[2204,70,2095,56],[2204,71,2095,57,"color"],[2204,76,2095,62],[2204,77,2095,63],[2204,81,2095,67,"sq"],[2204,83,2095,69],[2204,84,2095,70],[2204,86,2095,72],[2205,8,2096,12],[2205,15,2096,19],[2205,20,2096,24],[2206,6,2097,8],[2207,6,2098,8],[2207,12,2098,14,"currentPieceOnSquare"],[2207,32,2098,34],[2207,35,2098,37],[2207,39,2098,41],[2207,40,2098,42,"_board"],[2207,46,2098,48],[2207,47,2098,49,"sq"],[2207,49,2098,51],[2207,50,2098,52],[2208,6,2099,8],[2209,6,2100,8],[2209,10,2100,12,"currentPieceOnSquare"],[2209,30,2100,32],[2209,34,2100,36,"currentPieceOnSquare"],[2209,54,2100,56],[2209,55,2100,57,"type"],[2209,59,2100,61],[2209,64,2100,66,"KING"],[2209,68,2100,70],[2209,70,2100,72],[2210,8,2101,12],[2210,12,2101,16],[2210,13,2101,17,"_kings"],[2210,19,2101,23],[2210,20,2101,24,"currentPieceOnSquare"],[2210,40,2101,44],[2210,41,2101,45,"color"],[2210,46,2101,50],[2210,47,2101,51],[2210,50,2101,54,"EMPTY"],[2210,55,2101,59],[2211,6,2102,8],[2212,6,2103,8],[2212,10,2103,12],[2212,11,2103,13,"_set"],[2212,15,2103,17],[2212,16,2103,18,"sq"],[2212,18,2103,20],[2212,20,2103,22],[2213,8,2103,24,"type"],[2213,12,2103,28],[2213,14,2103,30,"type"],[2213,18,2103,34],[2214,8,2103,36,"color"],[2214,13,2103,41],[2214,15,2103,43,"color"],[2215,6,2103,49],[2215,7,2103,50],[2215,8,2103,51],[2216,6,2104,8],[2216,10,2104,12,"type"],[2216,14,2104,16],[2216,19,2104,21,"KING"],[2216,23,2104,25],[2216,25,2104,27],[2217,8,2105,12],[2217,12,2105,16],[2217,13,2105,17,"_kings"],[2217,19,2105,23],[2217,20,2105,24,"color"],[2217,25,2105,29],[2217,26,2105,30],[2217,29,2105,33,"sq"],[2217,31,2105,35],[2218,6,2106,8],[2219,6,2107,8],[2219,13,2107,15],[2219,17,2107,19],[2220,4,2108,4],[2221,4,2109,4,"_clear"],[2221,10,2109,10,"_clear"],[2221,11,2109,11,"sq"],[2221,13,2109,13],[2221,15,2109,15],[2222,6,2110,8],[2222,10,2110,12],[2222,11,2110,13,"_hash"],[2222,16,2110,18],[2222,20,2110,22],[2222,24,2110,26],[2222,25,2110,27,"_pieceKey"],[2222,34,2110,36],[2222,35,2110,37,"sq"],[2222,37,2110,39],[2222,38,2110,40],[2223,6,2111,8],[2223,13,2111,15],[2223,17,2111,19],[2223,18,2111,20,"_board"],[2223,24,2111,26],[2223,25,2111,27,"sq"],[2223,27,2111,29],[2223,28,2111,30],[2224,4,2112,4],[2225,4,2113,4,"remove"],[2225,10,2113,10,"remove"],[2225,11,2113,11,"square"],[2225,17,2113,17],[2225,19,2113,19],[2226,6,2114,8],[2226,12,2114,14,"piece"],[2226,17,2114,19],[2226,20,2114,22],[2226,24,2114,26],[2226,25,2114,27,"get"],[2226,28,2114,30],[2226,29,2114,31,"square"],[2226,35,2114,37],[2226,36,2114,38],[2227,6,2115,8],[2227,10,2115,12],[2227,11,2115,13,"_clear"],[2227,17,2115,19],[2227,18,2115,20,"Ox88"],[2227,22,2115,24],[2227,23,2115,25,"square"],[2227,29,2115,31],[2227,30,2115,32],[2227,31,2115,33],[2228,6,2116,8],[2228,10,2116,12,"piece"],[2228,15,2116,17],[2228,19,2116,21,"piece"],[2228,24,2116,26],[2228,25,2116,27,"type"],[2228,29,2116,31],[2228,34,2116,36,"KING"],[2228,38,2116,40],[2228,40,2116,42],[2229,8,2117,12],[2229,12,2117,16],[2229,13,2117,17,"_kings"],[2229,19,2117,23],[2229,20,2117,24,"piece"],[2229,25,2117,29],[2229,26,2117,30,"color"],[2229,31,2117,35],[2229,32,2117,36],[2229,35,2117,39,"EMPTY"],[2229,40,2117,44],[2230,6,2118,8],[2231,6,2119,8],[2231,10,2119,12],[2231,11,2119,13,"_updateCastlingRights"],[2231,32,2119,34],[2231,33,2119,35],[2231,34,2119,36],[2232,6,2120,8],[2232,10,2120,12],[2232,11,2120,13,"_updateEnPassantSquare"],[2232,33,2120,35],[2232,34,2120,36],[2232,35,2120,37],[2233,6,2121,8],[2233,10,2121,12],[2233,11,2121,13,"_updateSetup"],[2233,23,2121,25],[2233,24,2121,26],[2233,28,2121,30],[2233,29,2121,31,"fen"],[2233,32,2121,34],[2233,33,2121,35],[2233,34,2121,36],[2233,35,2121,37],[2234,6,2122,8],[2234,13,2122,15,"piece"],[2234,18,2122,20],[2235,4,2123,4],[2236,4,2124,4,"_updateCastlingRights"],[2236,25,2124,25,"_updateCastlingRights"],[2236,26,2124,25],[2236,28,2124,28],[2237,6,2125,8],[2237,10,2125,12],[2237,11,2125,13,"_hash"],[2237,16,2125,18],[2237,20,2125,22],[2237,24,2125,26],[2237,25,2125,27,"_castlingKey"],[2237,37,2125,39],[2237,38,2125,40],[2237,39,2125,41],[2238,6,2126,8],[2238,12,2126,14,"whiteKingInPlace"],[2238,28,2126,30],[2238,31,2126,33],[2238,35,2126,37],[2238,36,2126,38,"_board"],[2238,42,2126,44],[2238,43,2126,45,"Ox88"],[2238,47,2126,49],[2238,48,2126,50,"e1"],[2238,50,2126,52],[2238,51,2126,53],[2238,53,2126,55,"type"],[2238,57,2126,59],[2238,62,2126,64,"KING"],[2238,66,2126,68],[2238,70,2127,12],[2238,74,2127,16],[2238,75,2127,17,"_board"],[2238,81,2127,23],[2238,82,2127,24,"Ox88"],[2238,86,2127,28],[2238,87,2127,29,"e1"],[2238,89,2127,31],[2238,90,2127,32],[2238,92,2127,34,"color"],[2238,97,2127,39],[2238,102,2127,44,"WHITE"],[2238,107,2127,49],[2239,6,2128,8],[2239,12,2128,14,"blackKingInPlace"],[2239,28,2128,30],[2239,31,2128,33],[2239,35,2128,37],[2239,36,2128,38,"_board"],[2239,42,2128,44],[2239,43,2128,45,"Ox88"],[2239,47,2128,49],[2239,48,2128,50,"e8"],[2239,50,2128,52],[2239,51,2128,53],[2239,53,2128,55,"type"],[2239,57,2128,59],[2239,62,2128,64,"KING"],[2239,66,2128,68],[2239,70,2129,12],[2239,74,2129,16],[2239,75,2129,17,"_board"],[2239,81,2129,23],[2239,82,2129,24,"Ox88"],[2239,86,2129,28],[2239,87,2129,29,"e8"],[2239,89,2129,31],[2239,90,2129,32],[2239,92,2129,34,"color"],[2239,97,2129,39],[2239,102,2129,44,"BLACK"],[2239,107,2129,49],[2240,6,2130,8],[2240,10,2130,12],[2240,11,2130,13,"whiteKingInPlace"],[2240,27,2130,29],[2240,31,2131,12],[2240,35,2131,16],[2240,36,2131,17,"_board"],[2240,42,2131,23],[2240,43,2131,24,"Ox88"],[2240,47,2131,28],[2240,48,2131,29,"a1"],[2240,50,2131,31],[2240,51,2131,32],[2240,53,2131,34,"type"],[2240,57,2131,38],[2240,62,2131,43,"ROOK"],[2240,66,2131,47],[2240,70,2132,12],[2240,74,2132,16],[2240,75,2132,17,"_board"],[2240,81,2132,23],[2240,82,2132,24,"Ox88"],[2240,86,2132,28],[2240,87,2132,29,"a1"],[2240,89,2132,31],[2240,90,2132,32],[2240,92,2132,34,"color"],[2240,97,2132,39],[2240,102,2132,44,"WHITE"],[2240,107,2132,49],[2240,109,2132,51],[2241,8,2133,12],[2241,12,2133,16],[2241,13,2133,17,"_castling"],[2241,22,2133,26],[2241,23,2133,27,"w"],[2241,24,2133,28],[2241,28,2133,32],[2241,29,2133,33],[2241,31,2133,35],[2242,6,2134,8],[2243,6,2135,8],[2243,10,2135,12],[2243,11,2135,13,"whiteKingInPlace"],[2243,27,2135,29],[2243,31,2136,12],[2243,35,2136,16],[2243,36,2136,17,"_board"],[2243,42,2136,23],[2243,43,2136,24,"Ox88"],[2243,47,2136,28],[2243,48,2136,29,"h1"],[2243,50,2136,31],[2243,51,2136,32],[2243,53,2136,34,"type"],[2243,57,2136,38],[2243,62,2136,43,"ROOK"],[2243,66,2136,47],[2243,70,2137,12],[2243,74,2137,16],[2243,75,2137,17,"_board"],[2243,81,2137,23],[2243,82,2137,24,"Ox88"],[2243,86,2137,28],[2243,87,2137,29,"h1"],[2243,89,2137,31],[2243,90,2137,32],[2243,92,2137,34,"color"],[2243,97,2137,39],[2243,102,2137,44,"WHITE"],[2243,107,2137,49],[2243,109,2137,51],[2244,8,2138,12],[2244,12,2138,16],[2244,13,2138,17,"_castling"],[2244,22,2138,26],[2244,23,2138,27,"w"],[2244,24,2138,28],[2244,28,2138,32],[2244,29,2138,33],[2244,31,2138,35],[2245,6,2139,8],[2246,6,2140,8],[2246,10,2140,12],[2246,11,2140,13,"blackKingInPlace"],[2246,27,2140,29],[2246,31,2141,12],[2246,35,2141,16],[2246,36,2141,17,"_board"],[2246,42,2141,23],[2246,43,2141,24,"Ox88"],[2246,47,2141,28],[2246,48,2141,29,"a8"],[2246,50,2141,31],[2246,51,2141,32],[2246,53,2141,34,"type"],[2246,57,2141,38],[2246,62,2141,43,"ROOK"],[2246,66,2141,47],[2246,70,2142,12],[2246,74,2142,16],[2246,75,2142,17,"_board"],[2246,81,2142,23],[2246,82,2142,24,"Ox88"],[2246,86,2142,28],[2246,87,2142,29,"a8"],[2246,89,2142,31],[2246,90,2142,32],[2246,92,2142,34,"color"],[2246,97,2142,39],[2246,102,2142,44,"BLACK"],[2246,107,2142,49],[2246,109,2142,51],[2247,8,2143,12],[2247,12,2143,16],[2247,13,2143,17,"_castling"],[2247,22,2143,26],[2247,23,2143,27,"b"],[2247,24,2143,28],[2247,28,2143,32],[2247,29,2143,33],[2247,31,2143,35],[2248,6,2144,8],[2249,6,2145,8],[2249,10,2145,12],[2249,11,2145,13,"blackKingInPlace"],[2249,27,2145,29],[2249,31,2146,12],[2249,35,2146,16],[2249,36,2146,17,"_board"],[2249,42,2146,23],[2249,43,2146,24,"Ox88"],[2249,47,2146,28],[2249,48,2146,29,"h8"],[2249,50,2146,31],[2249,51,2146,32],[2249,53,2146,34,"type"],[2249,57,2146,38],[2249,62,2146,43,"ROOK"],[2249,66,2146,47],[2249,70,2147,12],[2249,74,2147,16],[2249,75,2147,17,"_board"],[2249,81,2147,23],[2249,82,2147,24,"Ox88"],[2249,86,2147,28],[2249,87,2147,29,"h8"],[2249,89,2147,31],[2249,90,2147,32],[2249,92,2147,34,"color"],[2249,97,2147,39],[2249,102,2147,44,"BLACK"],[2249,107,2147,49],[2249,109,2147,51],[2250,8,2148,12],[2250,12,2148,16],[2250,13,2148,17,"_castling"],[2250,22,2148,26],[2250,23,2148,27,"b"],[2250,24,2148,28],[2250,28,2148,32],[2250,29,2148,33],[2250,31,2148,35],[2251,6,2149,8],[2252,6,2150,8],[2252,10,2150,12],[2252,11,2150,13,"_hash"],[2252,16,2150,18],[2252,20,2150,22],[2252,24,2150,26],[2252,25,2150,27,"_castlingKey"],[2252,37,2150,39],[2252,38,2150,40],[2252,39,2150,41],[2253,4,2151,4],[2254,4,2152,4,"_updateEnPassantSquare"],[2254,26,2152,26,"_updateEnPassantSquare"],[2254,27,2152,26],[2254,29,2152,29],[2255,6,2153,8],[2255,10,2153,12],[2255,14,2153,16],[2255,15,2153,17,"_epSquare"],[2255,24,2153,26],[2255,29,2153,31,"EMPTY"],[2255,34,2153,36],[2255,36,2153,38],[2256,8,2154,12],[2257,6,2155,8],[2258,6,2156,8],[2258,12,2156,14,"startSquare"],[2258,23,2156,25],[2258,26,2156,28],[2258,30,2156,32],[2258,31,2156,33,"_epSquare"],[2258,40,2156,42],[2258,44,2156,46],[2258,48,2156,50],[2258,49,2156,51,"_turn"],[2258,54,2156,56],[2258,59,2156,61,"WHITE"],[2258,64,2156,66],[2258,67,2156,69],[2258,68,2156,70],[2258,70,2156,72],[2258,73,2156,75],[2258,75,2156,77],[2258,76,2156,78],[2259,6,2157,8],[2259,12,2157,14,"currentSquare"],[2259,25,2157,27],[2259,28,2157,30],[2259,32,2157,34],[2259,33,2157,35,"_epSquare"],[2259,42,2157,44],[2259,46,2157,48],[2259,50,2157,52],[2259,51,2157,53,"_turn"],[2259,56,2157,58],[2259,61,2157,63,"WHITE"],[2259,66,2157,68],[2259,69,2157,71],[2259,71,2157,73],[2259,74,2157,76],[2259,75,2157,77],[2259,77,2157,79],[2259,78,2157,80],[2260,6,2158,8],[2260,12,2158,14,"attackers"],[2260,21,2158,23],[2260,24,2158,26],[2260,25,2158,27,"currentSquare"],[2260,38,2158,40],[2260,41,2158,43],[2260,42,2158,44],[2260,44,2158,46,"currentSquare"],[2260,57,2158,59],[2260,60,2158,62],[2260,61,2158,63],[2260,62,2158,64],[2261,6,2159,8],[2261,10,2159,12],[2261,14,2159,16],[2261,15,2159,17,"_board"],[2261,21,2159,23],[2261,22,2159,24,"startSquare"],[2261,33,2159,35],[2261,34,2159,36],[2261,39,2159,41],[2261,43,2159,45],[2261,47,2160,12],[2261,51,2160,16],[2261,52,2160,17,"_board"],[2261,58,2160,23],[2261,59,2160,24],[2261,63,2160,28],[2261,64,2160,29,"_epSquare"],[2261,73,2160,38],[2261,74,2160,39],[2261,79,2160,44],[2261,83,2160,48],[2261,87,2161,12],[2261,91,2161,16],[2261,92,2161,17,"_board"],[2261,98,2161,23],[2261,99,2161,24,"currentSquare"],[2261,112,2161,37],[2261,113,2161,38],[2261,115,2161,40,"color"],[2261,120,2161,45],[2261,125,2161,50,"swapColor"],[2261,134,2161,59],[2261,135,2161,60],[2261,139,2161,64],[2261,140,2161,65,"_turn"],[2261,145,2161,70],[2261,146,2161,71],[2261,150,2162,12],[2261,154,2162,16],[2261,155,2162,17,"_board"],[2261,161,2162,23],[2261,162,2162,24,"currentSquare"],[2261,175,2162,37],[2261,176,2162,38],[2261,178,2162,40,"type"],[2261,182,2162,44],[2261,187,2162,49,"PAWN"],[2261,191,2162,53],[2261,193,2162,55],[2262,8,2163,12],[2262,12,2163,16],[2262,13,2163,17,"_hash"],[2262,18,2163,22],[2262,22,2163,26],[2262,26,2163,30],[2262,27,2163,31,"_epKey"],[2262,33,2163,37],[2262,34,2163,38],[2262,35,2163,39],[2263,8,2164,12],[2263,12,2164,16],[2263,13,2164,17,"_epSquare"],[2263,22,2164,26],[2263,25,2164,29,"EMPTY"],[2263,30,2164,34],[2264,8,2165,12],[2265,6,2166,8],[2266,6,2167,8],[2266,12,2167,14,"canCapture"],[2266,22,2167,24],[2266,25,2167,28,"square"],[2266,31,2167,34],[2266,35,2167,39],[2266,37,2167,41,"square"],[2266,43,2167,47],[2266,46,2167,50],[2266,50,2167,54],[2266,51,2167,55],[2266,55,2168,12],[2266,59,2168,16],[2266,60,2168,17,"_board"],[2266,66,2168,23],[2266,67,2168,24,"square"],[2266,73,2168,30],[2266,74,2168,31],[2266,76,2168,33,"color"],[2266,81,2168,38],[2266,86,2168,43],[2266,90,2168,47],[2266,91,2168,48,"_turn"],[2266,96,2168,53],[2266,100,2169,12],[2266,104,2169,16],[2266,105,2169,17,"_board"],[2266,111,2169,23],[2266,112,2169,24,"square"],[2266,118,2169,30],[2266,119,2169,31],[2266,121,2169,33,"type"],[2266,125,2169,37],[2266,130,2169,42,"PAWN"],[2266,134,2169,46],[2267,6,2170,8],[2267,10,2170,12],[2267,11,2170,13,"attackers"],[2267,20,2170,22],[2267,21,2170,23,"some"],[2267,25,2170,27],[2267,26,2170,28,"canCapture"],[2267,36,2170,38],[2267,37,2170,39],[2267,39,2170,41],[2268,8,2171,12],[2268,12,2171,16],[2268,13,2171,17,"_hash"],[2268,18,2171,22],[2268,22,2171,26],[2268,26,2171,30],[2268,27,2171,31,"_epKey"],[2268,33,2171,37],[2268,34,2171,38],[2268,35,2171,39],[2269,8,2172,12],[2269,12,2172,16],[2269,13,2172,17,"_epSquare"],[2269,22,2172,26],[2269,25,2172,29,"EMPTY"],[2269,30,2172,34],[2270,6,2173,8],[2271,4,2174,4],[2272,4,2175,4,"_attacked"],[2272,13,2175,13,"_attacked"],[2272,14,2175,14,"color"],[2272,19,2175,19],[2272,21,2175,21,"square"],[2272,27,2175,27],[2272,29,2175,29,"verbose"],[2272,36,2175,36],[2272,38,2175,38],[2273,6,2176,8],[2273,12,2176,14,"attackers"],[2273,21,2176,23],[2273,24,2176,26],[2273,26,2176,28],[2274,6,2177,8],[2274,11,2177,13],[2274,15,2177,17,"i"],[2274,16,2177,18],[2274,19,2177,21,"Ox88"],[2274,23,2177,25],[2274,24,2177,26,"a8"],[2274,26,2177,28],[2274,28,2177,30,"i"],[2274,29,2177,31],[2274,33,2177,35,"Ox88"],[2274,37,2177,39],[2274,38,2177,40,"h1"],[2274,40,2177,42],[2274,42,2177,44,"i"],[2274,43,2177,45],[2274,45,2177,47],[2274,47,2177,49],[2275,8,2178,12],[2276,8,2179,12],[2276,12,2179,16,"i"],[2276,13,2179,17],[2276,16,2179,20],[2276,20,2179,24],[2276,22,2179,26],[2277,10,2180,16,"i"],[2277,11,2180,17],[2277,15,2180,21],[2277,16,2180,22],[2278,10,2181,16],[2279,8,2182,12],[2280,8,2183,12],[2281,8,2184,12],[2281,12,2184,16],[2281,16,2184,20],[2281,17,2184,21,"_board"],[2281,23,2184,27],[2281,24,2184,28,"i"],[2281,25,2184,29],[2281,26,2184,30],[2281,31,2184,35,"undefined"],[2281,40,2184,44],[2281,44,2184,48],[2281,48,2184,52],[2281,49,2184,53,"_board"],[2281,55,2184,59],[2281,56,2184,60,"i"],[2281,57,2184,61],[2281,58,2184,62],[2281,59,2184,63,"color"],[2281,64,2184,68],[2281,69,2184,73,"color"],[2281,74,2184,78],[2281,76,2184,80],[2282,10,2185,16],[2283,8,2186,12],[2284,8,2187,12],[2284,14,2187,18,"piece"],[2284,19,2187,23],[2284,22,2187,26],[2284,26,2187,30],[2284,27,2187,31,"_board"],[2284,33,2187,37],[2284,34,2187,38,"i"],[2284,35,2187,39],[2284,36,2187,40],[2285,8,2188,12],[2285,14,2188,18,"difference"],[2285,24,2188,28],[2285,27,2188,31,"i"],[2285,28,2188,32],[2285,31,2188,35,"square"],[2285,37,2188,41],[2286,8,2189,12],[2287,8,2190,12],[2287,12,2190,16,"difference"],[2287,22,2190,26],[2287,27,2190,31],[2287,28,2190,32],[2287,30,2190,34],[2288,10,2191,16],[2289,8,2192,12],[2290,8,2193,12],[2290,14,2193,18,"index"],[2290,19,2193,23],[2290,22,2193,26,"difference"],[2290,32,2193,36],[2290,35,2193,39],[2290,38,2193,42],[2291,8,2194,12],[2291,12,2194,16,"ATTACKS"],[2291,19,2194,23],[2291,20,2194,24,"index"],[2291,25,2194,29],[2291,26,2194,30],[2291,29,2194,33,"PIECE_MASKS"],[2291,40,2194,44],[2291,41,2194,45,"piece"],[2291,46,2194,50],[2291,47,2194,51,"type"],[2291,51,2194,55],[2291,52,2194,56],[2291,54,2194,58],[2292,10,2195,16],[2292,14,2195,20,"piece"],[2292,19,2195,25],[2292,20,2195,26,"type"],[2292,24,2195,30],[2292,29,2195,35,"PAWN"],[2292,33,2195,39],[2292,35,2195,41],[2293,12,2196,20],[2293,16,2196,25,"difference"],[2293,26,2196,35],[2293,29,2196,38],[2293,30,2196,39],[2293,34,2196,43,"piece"],[2293,39,2196,48],[2293,40,2196,49,"color"],[2293,45,2196,54],[2293,50,2196,59,"WHITE"],[2293,55,2196,64],[2293,59,2197,25,"difference"],[2293,69,2197,35],[2293,73,2197,39],[2293,74,2197,40],[2293,78,2197,44,"piece"],[2293,83,2197,49],[2293,84,2197,50,"color"],[2293,89,2197,55],[2293,94,2197,60,"BLACK"],[2293,99,2197,66],[2293,101,2197,68],[2294,14,2198,24],[2294,18,2198,28],[2294,19,2198,29,"verbose"],[2294,26,2198,36],[2294,28,2198,38],[2295,16,2199,28],[2295,23,2199,35],[2295,27,2199,39],[2296,14,2200,24],[2296,15,2200,25],[2296,21,2201,29],[2297,16,2202,28,"attackers"],[2297,25,2202,37],[2297,26,2202,38,"push"],[2297,30,2202,42],[2297,31,2202,43,"algebraic"],[2297,40,2202,52],[2297,41,2202,53,"i"],[2297,42,2202,54],[2297,43,2202,55],[2297,44,2202,56],[2298,14,2203,24],[2299,12,2204,20],[2300,12,2205,20],[2301,10,2206,16],[2302,10,2207,16],[2303,10,2208,16],[2303,14,2208,20,"piece"],[2303,19,2208,25],[2303,20,2208,26,"type"],[2303,24,2208,30],[2303,29,2208,35],[2303,32,2208,38],[2303,36,2208,42,"piece"],[2303,41,2208,47],[2303,42,2208,48,"type"],[2303,46,2208,52],[2303,51,2208,57],[2303,54,2208,60],[2303,56,2208,62],[2304,12,2209,20],[2304,16,2209,24],[2304,17,2209,25,"verbose"],[2304,24,2209,32],[2304,26,2209,34],[2305,14,2210,24],[2305,21,2210,31],[2305,25,2210,35],[2306,12,2211,20],[2306,13,2211,21],[2306,19,2212,25],[2307,14,2213,24,"attackers"],[2307,23,2213,33],[2307,24,2213,34,"push"],[2307,28,2213,38],[2307,29,2213,39,"algebraic"],[2307,38,2213,48],[2307,39,2213,49,"i"],[2307,40,2213,50],[2307,41,2213,51],[2307,42,2213,52],[2308,14,2214,24],[2309,12,2215,20],[2310,10,2216,16],[2311,10,2217,16],[2311,16,2217,22,"offset"],[2311,22,2217,28],[2311,25,2217,31,"RAYS"],[2311,29,2217,35],[2311,30,2217,36,"index"],[2311,35,2217,41],[2311,36,2217,42],[2312,10,2218,16],[2312,14,2218,20,"j"],[2312,15,2218,21],[2312,18,2218,24,"i"],[2312,19,2218,25],[2312,22,2218,28,"offset"],[2312,28,2218,34],[2313,10,2219,16],[2313,14,2219,20,"blocked"],[2313,21,2219,27],[2313,24,2219,30],[2313,29,2219,35],[2314,10,2220,16],[2314,17,2220,23,"j"],[2314,18,2220,24],[2314,23,2220,29,"square"],[2314,29,2220,35],[2314,31,2220,37],[2315,12,2221,20],[2315,16,2221,24],[2315,20,2221,28],[2315,21,2221,29,"_board"],[2315,27,2221,35],[2315,28,2221,36,"j"],[2315,29,2221,37],[2315,30,2221,38],[2315,34,2221,42],[2315,38,2221,46],[2315,40,2221,48],[2316,14,2222,24,"blocked"],[2316,21,2222,31],[2316,24,2222,34],[2316,28,2222,38],[2317,14,2223,24],[2318,12,2224,20],[2319,12,2225,20,"j"],[2319,13,2225,21],[2319,17,2225,25,"offset"],[2319,23,2225,31],[2320,10,2226,16],[2321,10,2227,16],[2321,14,2227,20],[2321,15,2227,21,"blocked"],[2321,22,2227,28],[2321,24,2227,30],[2322,12,2228,20],[2322,16,2228,24],[2322,17,2228,25,"verbose"],[2322,24,2228,32],[2322,26,2228,34],[2323,14,2229,24],[2323,21,2229,31],[2323,25,2229,35],[2324,12,2230,20],[2324,13,2230,21],[2324,19,2231,25],[2325,14,2232,24,"attackers"],[2325,23,2232,33],[2325,24,2232,34,"push"],[2325,28,2232,38],[2325,29,2232,39,"algebraic"],[2325,38,2232,48],[2325,39,2232,49,"i"],[2325,40,2232,50],[2325,41,2232,51],[2325,42,2232,52],[2326,14,2233,24],[2327,12,2234,20],[2328,10,2235,16],[2329,8,2236,12],[2330,6,2237,8],[2331,6,2238,8],[2331,10,2238,12,"verbose"],[2331,17,2238,19],[2331,19,2238,21],[2332,8,2239,12],[2332,15,2239,19,"attackers"],[2332,24,2239,28],[2333,6,2240,8],[2333,7,2240,9],[2333,13,2241,13],[2334,8,2242,12],[2334,15,2242,19],[2334,20,2242,24],[2335,6,2243,8],[2336,4,2244,4],[2337,4,2245,4,"attackers"],[2337,13,2245,13,"attackers"],[2337,14,2245,14,"square"],[2337,20,2245,20],[2337,22,2245,22,"attackedBy"],[2337,32,2245,32],[2337,34,2245,34],[2338,6,2246,8],[2338,10,2246,12],[2338,11,2246,13,"attackedBy"],[2338,21,2246,23],[2338,23,2246,25],[2339,8,2247,12],[2339,15,2247,19],[2339,19,2247,23],[2339,20,2247,24,"_attacked"],[2339,29,2247,33],[2339,30,2247,34],[2339,34,2247,38],[2339,35,2247,39,"_turn"],[2339,40,2247,44],[2339,42,2247,46,"Ox88"],[2339,46,2247,50],[2339,47,2247,51,"square"],[2339,53,2247,57],[2339,54,2247,58],[2339,56,2247,60],[2339,60,2247,64],[2339,61,2247,65],[2340,6,2248,8],[2340,7,2248,9],[2340,13,2249,13],[2341,8,2250,12],[2341,15,2250,19],[2341,19,2250,23],[2341,20,2250,24,"_attacked"],[2341,29,2250,33],[2341,30,2250,34,"attackedBy"],[2341,40,2250,44],[2341,42,2250,46,"Ox88"],[2341,46,2250,50],[2341,47,2250,51,"square"],[2341,53,2250,57],[2341,54,2250,58],[2341,56,2250,60],[2341,60,2250,64],[2341,61,2250,65],[2342,6,2251,8],[2343,4,2252,4],[2344,4,2253,4,"_isKingAttacked"],[2344,19,2253,19,"_isKingAttacked"],[2344,20,2253,20,"color"],[2344,25,2253,25],[2344,27,2253,27],[2345,6,2254,8],[2345,12,2254,14,"square"],[2345,18,2254,20],[2345,21,2254,23],[2345,25,2254,27],[2345,26,2254,28,"_kings"],[2345,32,2254,34],[2345,33,2254,35,"color"],[2345,38,2254,40],[2345,39,2254,41],[2346,6,2255,8],[2346,13,2255,15,"square"],[2346,19,2255,21],[2346,24,2255,26],[2346,25,2255,27],[2346,26,2255,28],[2346,29,2255,31],[2346,34,2255,36],[2346,37,2255,39],[2346,41,2255,43],[2346,42,2255,44,"_attacked"],[2346,51,2255,53],[2346,52,2255,54,"swapColor"],[2346,61,2255,63],[2346,62,2255,64,"color"],[2346,67,2255,69],[2346,68,2255,70],[2346,70,2255,72,"square"],[2346,76,2255,78],[2346,77,2255,79],[2347,4,2256,4],[2348,4,2257,4,"hash"],[2348,8,2257,8,"hash"],[2348,9,2257,8],[2348,11,2257,11],[2349,6,2258,8],[2349,13,2258,15],[2349,17,2258,19],[2349,18,2258,20,"_hash"],[2349,23,2258,25],[2349,24,2258,26,"toString"],[2349,32,2258,34],[2349,33,2258,35],[2349,35,2258,37],[2349,36,2258,38],[2350,4,2259,4],[2351,4,2260,4,"isAttacked"],[2351,14,2260,14,"isAttacked"],[2351,15,2260,15,"square"],[2351,21,2260,21],[2351,23,2260,23,"attackedBy"],[2351,33,2260,33],[2351,35,2260,35],[2352,6,2261,8],[2352,13,2261,15],[2352,17,2261,19],[2352,18,2261,20,"_attacked"],[2352,27,2261,29],[2352,28,2261,30,"attackedBy"],[2352,38,2261,40],[2352,40,2261,42,"Ox88"],[2352,44,2261,46],[2352,45,2261,47,"square"],[2352,51,2261,53],[2352,52,2261,54],[2352,53,2261,55],[2353,4,2262,4],[2354,4,2263,4,"isCheck"],[2354,11,2263,11,"isCheck"],[2354,12,2263,11],[2354,14,2263,14],[2355,6,2264,8],[2355,13,2264,15],[2355,17,2264,19],[2355,18,2264,20,"_isKingAttacked"],[2355,33,2264,35],[2355,34,2264,36],[2355,38,2264,40],[2355,39,2264,41,"_turn"],[2355,44,2264,46],[2355,45,2264,47],[2356,4,2265,4],[2357,4,2266,4,"inCheck"],[2357,11,2266,11,"inCheck"],[2357,12,2266,11],[2357,14,2266,14],[2358,6,2267,8],[2358,13,2267,15],[2358,17,2267,19],[2358,18,2267,20,"isCheck"],[2358,25,2267,27],[2358,26,2267,28],[2358,27,2267,29],[2359,4,2268,4],[2360,4,2269,4,"isCheckmate"],[2360,15,2269,15,"isCheckmate"],[2360,16,2269,15],[2360,18,2269,18],[2361,6,2270,8],[2361,13,2270,15],[2361,17,2270,19],[2361,18,2270,20,"isCheck"],[2361,25,2270,27],[2361,26,2270,28],[2361,27,2270,29],[2361,31,2270,33],[2361,35,2270,37],[2361,36,2270,38,"_moves"],[2361,42,2270,44],[2361,43,2270,45],[2361,44,2270,46],[2361,45,2270,47,"length"],[2361,51,2270,53],[2361,56,2270,58],[2361,57,2270,59],[2362,4,2271,4],[2363,4,2272,4,"isStalemate"],[2363,15,2272,15,"isStalemate"],[2363,16,2272,15],[2363,18,2272,18],[2364,6,2273,8],[2364,13,2273,15],[2364,14,2273,16],[2364,18,2273,20],[2364,19,2273,21,"isCheck"],[2364,26,2273,28],[2364,27,2273,29],[2364,28,2273,30],[2364,32,2273,34],[2364,36,2273,38],[2364,37,2273,39,"_moves"],[2364,43,2273,45],[2364,44,2273,46],[2364,45,2273,47],[2364,46,2273,48,"length"],[2364,52,2273,54],[2364,57,2273,59],[2364,58,2273,60],[2365,4,2274,4],[2366,4,2275,4,"isInsufficientMaterial"],[2366,26,2275,26,"isInsufficientMaterial"],[2366,27,2275,26],[2366,29,2275,29],[2367,6,2276,8],[2368,0,2277,0],[2369,0,2278,0],[2370,0,2279,0],[2371,0,2280,0],[2372,0,2281,0],[2373,0,2282,0],[2374,6,2283,8],[2374,12,2283,14,"pieces"],[2374,18,2283,20],[2374,21,2283,23],[2375,8,2284,12,"b"],[2375,9,2284,13],[2375,11,2284,15],[2375,12,2284,16],[2376,8,2285,12,"n"],[2376,9,2285,13],[2376,11,2285,15],[2376,12,2285,16],[2377,8,2286,12,"r"],[2377,9,2286,13],[2377,11,2286,15],[2377,12,2286,16],[2378,8,2287,12,"q"],[2378,9,2287,13],[2378,11,2287,15],[2378,12,2287,16],[2379,8,2288,12,"k"],[2379,9,2288,13],[2379,11,2288,15],[2379,12,2288,16],[2380,8,2289,12,"p"],[2380,9,2289,13],[2380,11,2289,15],[2381,6,2290,8],[2381,7,2290,9],[2382,6,2291,8],[2382,12,2291,14,"bishops"],[2382,19,2291,21],[2382,22,2291,24],[2382,24,2291,26],[2383,6,2292,8],[2383,10,2292,12,"numPieces"],[2383,19,2292,21],[2383,22,2292,24],[2383,23,2292,25],[2384,6,2293,8],[2384,10,2293,12,"squareColor"],[2384,21,2293,23],[2384,24,2293,26],[2384,25,2293,27],[2385,6,2294,8],[2385,11,2294,13],[2385,15,2294,17,"i"],[2385,16,2294,18],[2385,19,2294,21,"Ox88"],[2385,23,2294,25],[2385,24,2294,26,"a8"],[2385,26,2294,28],[2385,28,2294,30,"i"],[2385,29,2294,31],[2385,33,2294,35,"Ox88"],[2385,37,2294,39],[2385,38,2294,40,"h1"],[2385,40,2294,42],[2385,42,2294,44,"i"],[2385,43,2294,45],[2385,45,2294,47],[2385,47,2294,49],[2386,8,2295,12,"squareColor"],[2386,19,2295,23],[2386,22,2295,26],[2386,23,2295,27,"squareColor"],[2386,34,2295,38],[2386,37,2295,41],[2386,38,2295,42],[2386,42,2295,46],[2386,43,2295,47],[2387,8,2296,12],[2387,12,2296,16,"i"],[2387,13,2296,17],[2387,16,2296,20],[2387,20,2296,24],[2387,22,2296,26],[2388,10,2297,16,"i"],[2388,11,2297,17],[2388,15,2297,21],[2388,16,2297,22],[2389,10,2298,16],[2390,8,2299,12],[2391,8,2300,12],[2391,14,2300,18,"piece"],[2391,19,2300,23],[2391,22,2300,26],[2391,26,2300,30],[2391,27,2300,31,"_board"],[2391,33,2300,37],[2391,34,2300,38,"i"],[2391,35,2300,39],[2391,36,2300,40],[2392,8,2301,12],[2392,12,2301,16,"piece"],[2392,17,2301,21],[2392,19,2301,23],[2393,10,2302,16,"pieces"],[2393,16,2302,22],[2393,17,2302,23,"piece"],[2393,22,2302,28],[2393,23,2302,29,"type"],[2393,27,2302,33],[2393,28,2302,34],[2393,31,2302,37,"piece"],[2393,36,2302,42],[2393,37,2302,43,"type"],[2393,41,2302,47],[2393,45,2302,51,"pieces"],[2393,51,2302,57],[2393,54,2302,60,"pieces"],[2393,60,2302,66],[2393,61,2302,67,"piece"],[2393,66,2302,72],[2393,67,2302,73,"type"],[2393,71,2302,77],[2393,72,2302,78],[2393,75,2302,81],[2393,76,2302,82],[2393,79,2302,85],[2393,80,2302,86],[2394,10,2303,16],[2394,14,2303,20,"piece"],[2394,19,2303,25],[2394,20,2303,26,"type"],[2394,24,2303,30],[2394,29,2303,35,"BISHOP"],[2394,35,2303,41],[2394,37,2303,43],[2395,12,2304,20,"bishops"],[2395,19,2304,27],[2395,20,2304,28,"push"],[2395,24,2304,32],[2395,25,2304,33,"squareColor"],[2395,36,2304,44],[2395,37,2304,45],[2396,10,2305,16],[2397,10,2306,16,"numPieces"],[2397,19,2306,25],[2397,21,2306,27],[2398,8,2307,12],[2399,6,2308,8],[2400,6,2309,8],[2401,6,2310,8],[2401,10,2310,12,"numPieces"],[2401,19,2310,21],[2401,24,2310,26],[2401,25,2310,27],[2401,27,2310,29],[2402,8,2311,12],[2402,15,2311,19],[2402,19,2311,23],[2403,6,2312,8],[2403,7,2312,9],[2403,13,2313,13],[2404,6,2314,8],[2405,6,2315,8,"numPieces"],[2405,15,2315,17],[2405,20,2315,22],[2405,21,2315,23],[2405,26,2316,13,"pieces"],[2405,32,2316,19],[2405,33,2316,20,"BISHOP"],[2405,39,2316,26],[2405,40,2316,27],[2405,45,2316,32],[2405,46,2316,33],[2405,50,2316,37,"pieces"],[2405,56,2316,43],[2405,57,2316,44,"KNIGHT"],[2405,63,2316,50],[2405,64,2316,51],[2405,69,2316,56],[2405,70,2316,57],[2405,71,2316,58],[2405,73,2316,60],[2406,8,2317,12],[2406,15,2317,19],[2406,19,2317,23],[2407,6,2318,8],[2407,7,2318,9],[2407,13,2319,13],[2407,17,2319,17,"numPieces"],[2407,26,2319,26],[2407,31,2319,31,"pieces"],[2407,37,2319,37],[2407,38,2319,38,"BISHOP"],[2407,44,2319,44],[2407,45,2319,45],[2407,48,2319,48],[2407,49,2319,49],[2407,51,2319,51],[2408,8,2320,12],[2409,8,2321,12],[2409,12,2321,16,"sum"],[2409,15,2321,19],[2409,18,2321,22],[2409,19,2321,23],[2410,8,2322,12],[2410,14,2322,18,"len"],[2410,17,2322,21],[2410,20,2322,24,"bishops"],[2410,27,2322,31],[2410,28,2322,32,"length"],[2410,34,2322,38],[2411,8,2323,12],[2411,13,2323,17],[2411,17,2323,21,"i"],[2411,18,2323,22],[2411,21,2323,25],[2411,22,2323,26],[2411,24,2323,28,"i"],[2411,25,2323,29],[2411,28,2323,32,"len"],[2411,31,2323,35],[2411,33,2323,37,"i"],[2411,34,2323,38],[2411,36,2323,40],[2411,38,2323,42],[2412,10,2324,16,"sum"],[2412,13,2324,19],[2412,17,2324,23,"bishops"],[2412,24,2324,30],[2412,25,2324,31,"i"],[2412,26,2324,32],[2412,27,2324,33],[2413,8,2325,12],[2414,8,2326,12],[2414,12,2326,16,"sum"],[2414,15,2326,19],[2414,20,2326,24],[2414,21,2326,25],[2414,25,2326,29,"sum"],[2414,28,2326,32],[2414,33,2326,37,"len"],[2414,36,2326,40],[2414,38,2326,42],[2415,10,2327,16],[2415,17,2327,23],[2415,21,2327,27],[2416,8,2328,12],[2417,6,2329,8],[2418,6,2330,8],[2418,13,2330,15],[2418,18,2330,20],[2419,4,2331,4],[2420,4,2332,4,"isThreefoldRepetition"],[2420,25,2332,25,"isThreefoldRepetition"],[2420,26,2332,25],[2420,28,2332,28],[2421,6,2333,8],[2421,13,2333,15],[2421,17,2333,19],[2421,18,2333,20,"_getPositionCount"],[2421,35,2333,37],[2421,36,2333,38],[2421,40,2333,42],[2421,41,2333,43,"_hash"],[2421,46,2333,48],[2421,47,2333,49],[2421,51,2333,53],[2421,52,2333,54],[2422,4,2334,4],[2423,4,2335,4,"isDrawByFiftyMoves"],[2423,22,2335,22,"isDrawByFiftyMoves"],[2423,23,2335,22],[2423,25,2335,25],[2424,6,2336,8],[2424,13,2336,15],[2424,17,2336,19],[2424,18,2336,20,"_halfMoves"],[2424,28,2336,30],[2424,32,2336,34],[2424,35,2336,37],[2424,36,2336,38],[2424,37,2336,39],[2425,4,2337,4],[2426,4,2338,4,"isDraw"],[2426,10,2338,10,"isDraw"],[2426,11,2338,10],[2426,13,2338,13],[2427,6,2339,8],[2427,13,2339,16],[2427,17,2339,20],[2427,18,2339,21,"isDrawByFiftyMoves"],[2427,36,2339,39],[2427,37,2339,40],[2427,38,2339,41],[2427,42,2340,12],[2427,46,2340,16],[2427,47,2340,17,"isStalemate"],[2427,58,2340,28],[2427,59,2340,29],[2427,60,2340,30],[2427,64,2341,12],[2427,68,2341,16],[2427,69,2341,17,"isInsufficientMaterial"],[2427,91,2341,39],[2427,92,2341,40],[2427,93,2341,41],[2427,97,2342,12],[2427,101,2342,16],[2427,102,2342,17,"isThreefoldRepetition"],[2427,123,2342,38],[2427,124,2342,39],[2427,125,2342,40],[2428,4,2343,4],[2429,4,2344,4,"isGameOver"],[2429,14,2344,14,"isGameOver"],[2429,15,2344,14],[2429,17,2344,17],[2430,6,2345,8],[2430,13,2345,15],[2430,17,2345,19],[2430,18,2345,20,"isCheckmate"],[2430,29,2345,31],[2430,30,2345,32],[2430,31,2345,33],[2430,35,2345,37],[2430,39,2345,41],[2430,40,2345,42,"isDraw"],[2430,46,2345,48],[2430,47,2345,49],[2430,48,2345,50],[2431,4,2346,4],[2432,4,2347,4,"moves"],[2432,9,2347,9,"moves"],[2432,10,2347,10],[2433,6,2347,12,"verbose"],[2433,13,2347,19],[2433,16,2347,22],[2433,21,2347,27],[2434,6,2347,29,"square"],[2434,12,2347,35],[2434,15,2347,38,"undefined"],[2434,24,2347,47],[2435,6,2347,49,"piece"],[2435,11,2347,54],[2435,14,2347,57,"undefined"],[2436,4,2347,68],[2436,5,2347,69],[2436,8,2347,72],[2436,9,2347,73],[2436,10,2347,74],[2436,12,2347,76],[2437,6,2348,8],[2437,12,2348,14,"moves"],[2437,17,2348,19],[2437,20,2348,22],[2437,24,2348,26],[2437,25,2348,27,"_moves"],[2437,31,2348,33],[2437,32,2348,34],[2438,8,2348,36,"square"],[2438,14,2348,42],[2439,8,2348,44,"piece"],[2440,6,2348,50],[2440,7,2348,51],[2440,8,2348,52],[2441,6,2349,8],[2441,10,2349,12,"verbose"],[2441,17,2349,19],[2441,19,2349,21],[2442,8,2350,12],[2442,15,2350,19,"moves"],[2442,20,2350,24],[2442,21,2350,25,"map"],[2442,24,2350,28],[2442,25,2350,30,"move"],[2442,29,2350,34],[2442,33,2350,39],[2442,37,2350,43,"Move"],[2442,41,2350,47],[2442,42,2350,48],[2442,46,2350,52],[2442,48,2350,54,"move"],[2442,52,2350,58],[2442,53,2350,59],[2442,54,2350,60],[2443,6,2351,8],[2443,7,2351,9],[2443,13,2352,13],[2444,8,2353,12],[2444,15,2353,19,"moves"],[2444,20,2353,24],[2444,21,2353,25,"map"],[2444,24,2353,28],[2444,25,2353,30,"move"],[2444,29,2353,34],[2444,33,2353,39],[2444,37,2353,43],[2444,38,2353,44,"_moveToSan"],[2444,48,2353,54],[2444,49,2353,55,"move"],[2444,53,2353,59],[2444,55,2353,61,"moves"],[2444,60,2353,66],[2444,61,2353,67],[2444,62,2353,68],[2445,6,2354,8],[2446,4,2355,4],[2447,4,2356,4,"_moves"],[2447,10,2356,10,"_moves"],[2447,11,2356,11],[2448,6,2356,13,"legal"],[2448,11,2356,18],[2448,14,2356,21],[2448,18,2356,25],[2449,6,2356,27,"piece"],[2449,11,2356,32],[2449,14,2356,35,"undefined"],[2449,23,2356,44],[2450,6,2356,46,"square"],[2450,12,2356,52],[2450,15,2356,55,"undefined"],[2451,4,2356,66],[2451,5,2356,67],[2451,8,2356,70],[2451,9,2356,71],[2451,10,2356,72],[2451,12,2356,74],[2452,6,2357,8],[2452,12,2357,14,"forSquare"],[2452,21,2357,23],[2452,24,2357,26,"square"],[2452,30,2357,32],[2452,33,2357,35,"square"],[2452,39,2357,41],[2452,40,2357,42,"toLowerCase"],[2452,51,2357,53],[2452,52,2357,54],[2452,53,2357,55],[2452,56,2357,58,"undefined"],[2452,65,2357,67],[2453,6,2358,8],[2453,12,2358,14,"forPiece"],[2453,20,2358,22],[2453,23,2358,25,"piece"],[2453,28,2358,30],[2453,30,2358,32,"toLowerCase"],[2453,41,2358,43],[2453,42,2358,44],[2453,43,2358,45],[2454,6,2359,8],[2454,12,2359,14,"moves"],[2454,17,2359,19],[2454,20,2359,22],[2454,22,2359,24],[2455,6,2360,8],[2455,12,2360,14,"us"],[2455,14,2360,16],[2455,17,2360,19],[2455,21,2360,23],[2455,22,2360,24,"_turn"],[2455,27,2360,29],[2456,6,2361,8],[2456,12,2361,14,"them"],[2456,16,2361,18],[2456,19,2361,21,"swapColor"],[2456,28,2361,30],[2456,29,2361,31,"us"],[2456,31,2361,33],[2456,32,2361,34],[2457,6,2362,8],[2457,10,2362,12,"firstSquare"],[2457,21,2362,23],[2457,24,2362,26,"Ox88"],[2457,28,2362,30],[2457,29,2362,31,"a8"],[2457,31,2362,33],[2458,6,2363,8],[2458,10,2363,12,"lastSquare"],[2458,20,2363,22],[2458,23,2363,25,"Ox88"],[2458,27,2363,29],[2458,28,2363,30,"h1"],[2458,30,2363,32],[2459,6,2364,8],[2459,10,2364,12,"singleSquare"],[2459,22,2364,24],[2459,25,2364,27],[2459,30,2364,32],[2460,6,2365,8],[2461,6,2366,8],[2461,10,2366,12,"forSquare"],[2461,19,2366,21],[2461,21,2366,23],[2462,8,2367,12],[2463,8,2368,12],[2463,12,2368,16],[2463,14,2368,18,"forSquare"],[2463,23,2368,27],[2463,27,2368,31,"Ox88"],[2463,31,2368,35],[2463,32,2368,36],[2463,34,2368,38],[2464,10,2369,16],[2464,17,2369,23],[2464,19,2369,25],[2465,8,2370,12],[2465,9,2370,13],[2465,15,2371,17],[2466,10,2372,16,"firstSquare"],[2466,21,2372,27],[2466,24,2372,30,"lastSquare"],[2466,34,2372,40],[2466,37,2372,43,"Ox88"],[2466,41,2372,47],[2466,42,2372,48,"forSquare"],[2466,51,2372,57],[2466,52,2372,58],[2467,10,2373,16,"singleSquare"],[2467,22,2373,28],[2467,25,2373,31],[2467,29,2373,35],[2468,8,2374,12],[2469,6,2375,8],[2470,6,2376,8],[2470,11,2376,13],[2470,15,2376,17,"from"],[2470,19,2376,21],[2470,22,2376,24,"firstSquare"],[2470,33,2376,35],[2470,35,2376,37,"from"],[2470,39,2376,41],[2470,43,2376,45,"lastSquare"],[2470,53,2376,55],[2470,55,2376,57,"from"],[2470,59,2376,61],[2470,61,2376,63],[2470,63,2376,65],[2471,8,2377,12],[2472,8,2378,12],[2472,12,2378,16,"from"],[2472,16,2378,20],[2472,19,2378,23],[2472,23,2378,27],[2472,25,2378,29],[2473,10,2379,16,"from"],[2473,14,2379,20],[2473,18,2379,24],[2473,19,2379,25],[2474,10,2380,16],[2475,8,2381,12],[2476,8,2382,12],[2477,8,2383,12],[2477,12,2383,16],[2477,13,2383,17],[2477,17,2383,21],[2477,18,2383,22,"_board"],[2477,24,2383,28],[2477,25,2383,29,"from"],[2477,29,2383,33],[2477,30,2383,34],[2477,34,2383,38],[2477,38,2383,42],[2477,39,2383,43,"_board"],[2477,45,2383,49],[2477,46,2383,50,"from"],[2477,50,2383,54],[2477,51,2383,55],[2477,52,2383,56,"color"],[2477,57,2383,61],[2477,62,2383,66,"them"],[2477,66,2383,70],[2477,68,2383,72],[2478,10,2384,16],[2479,8,2385,12],[2480,8,2386,12],[2480,14,2386,18],[2481,10,2386,20,"type"],[2482,8,2386,25],[2482,9,2386,26],[2482,12,2386,29],[2482,16,2386,33],[2482,17,2386,34,"_board"],[2482,23,2386,40],[2482,24,2386,41,"from"],[2482,28,2386,45],[2482,29,2386,46],[2483,8,2387,12],[2483,12,2387,16,"to"],[2483,14,2387,18],[2484,8,2388,12],[2484,12,2388,16,"type"],[2484,16,2388,20],[2484,21,2388,25,"PAWN"],[2484,25,2388,29],[2484,27,2388,31],[2485,10,2389,16],[2485,14,2389,20,"forPiece"],[2485,22,2389,28],[2485,26,2389,32,"forPiece"],[2485,34,2389,40],[2485,39,2389,45,"type"],[2485,43,2389,49],[2485,45,2390,20],[2486,10,2391,16],[2487,10,2392,16,"to"],[2487,12,2392,18],[2487,15,2392,21,"from"],[2487,19,2392,25],[2487,22,2392,28,"PAWN_OFFSETS"],[2487,34,2392,40],[2487,35,2392,41,"us"],[2487,37,2392,43],[2487,38,2392,44],[2487,39,2392,45],[2487,40,2392,46],[2487,41,2392,47],[2488,10,2393,16],[2488,14,2393,20],[2488,15,2393,21],[2488,19,2393,25],[2488,20,2393,26,"_board"],[2488,26,2393,32],[2488,27,2393,33,"to"],[2488,29,2393,35],[2488,30,2393,36],[2488,32,2393,38],[2489,12,2394,20,"addMove"],[2489,19,2394,27],[2489,20,2394,28,"moves"],[2489,25,2394,33],[2489,27,2394,35,"us"],[2489,29,2394,37],[2489,31,2394,39,"from"],[2489,35,2394,43],[2489,37,2394,45,"to"],[2489,39,2394,47],[2489,41,2394,49,"PAWN"],[2489,45,2394,53],[2489,46,2394,54],[2490,12,2395,20],[2491,12,2396,20,"to"],[2491,14,2396,22],[2491,17,2396,25,"from"],[2491,21,2396,29],[2491,24,2396,32,"PAWN_OFFSETS"],[2491,36,2396,44],[2491,37,2396,45,"us"],[2491,39,2396,47],[2491,40,2396,48],[2491,41,2396,49],[2491,42,2396,50],[2491,43,2396,51],[2492,12,2397,20],[2492,16,2397,24,"SECOND_RANK"],[2492,27,2397,35],[2492,28,2397,36,"us"],[2492,30,2397,38],[2492,31,2397,39],[2492,36,2397,44,"rank"],[2492,40,2397,48],[2492,41,2397,49,"from"],[2492,45,2397,53],[2492,46,2397,54],[2492,50,2397,58],[2492,51,2397,59],[2492,55,2397,63],[2492,56,2397,64,"_board"],[2492,62,2397,70],[2492,63,2397,71,"to"],[2492,65,2397,73],[2492,66,2397,74],[2492,68,2397,76],[2493,14,2398,24,"addMove"],[2493,21,2398,31],[2493,22,2398,32,"moves"],[2493,27,2398,37],[2493,29,2398,39,"us"],[2493,31,2398,41],[2493,33,2398,43,"from"],[2493,37,2398,47],[2493,39,2398,49,"to"],[2493,41,2398,51],[2493,43,2398,53,"PAWN"],[2493,47,2398,57],[2493,49,2398,59,"undefined"],[2493,58,2398,68],[2493,60,2398,70,"BITS"],[2493,64,2398,74],[2493,65,2398,75,"BIG_PAWN"],[2493,73,2398,83],[2493,74,2398,84],[2494,12,2399,20],[2495,10,2400,16],[2496,10,2401,16],[2497,10,2402,16],[2497,15,2402,21],[2497,19,2402,25,"j"],[2497,20,2402,26],[2497,23,2402,29],[2497,24,2402,30],[2497,26,2402,32,"j"],[2497,27,2402,33],[2497,30,2402,36],[2497,31,2402,37],[2497,33,2402,39,"j"],[2497,34,2402,40],[2497,36,2402,42],[2497,38,2402,44],[2498,12,2403,20,"to"],[2498,14,2403,22],[2498,17,2403,25,"from"],[2498,21,2403,29],[2498,24,2403,32,"PAWN_OFFSETS"],[2498,36,2403,44],[2498,37,2403,45,"us"],[2498,39,2403,47],[2498,40,2403,48],[2498,41,2403,49,"j"],[2498,42,2403,50],[2498,43,2403,51],[2499,12,2404,20],[2499,16,2404,24,"to"],[2499,18,2404,26],[2499,21,2404,29],[2499,25,2404,33],[2499,27,2405,24],[2500,12,2406,20],[2500,16,2406,24],[2500,20,2406,28],[2500,21,2406,29,"_board"],[2500,27,2406,35],[2500,28,2406,36,"to"],[2500,30,2406,38],[2500,31,2406,39],[2500,33,2406,41,"color"],[2500,38,2406,46],[2500,43,2406,51,"them"],[2500,47,2406,55],[2500,49,2406,57],[2501,14,2407,24,"addMove"],[2501,21,2407,31],[2501,22,2407,32,"moves"],[2501,27,2407,37],[2501,29,2407,39,"us"],[2501,31,2407,41],[2501,33,2407,43,"from"],[2501,37,2407,47],[2501,39,2407,49,"to"],[2501,41,2407,51],[2501,43,2407,53,"PAWN"],[2501,47,2407,57],[2501,49,2407,59],[2501,53,2407,63],[2501,54,2407,64,"_board"],[2501,60,2407,70],[2501,61,2407,71,"to"],[2501,63,2407,73],[2501,64,2407,74],[2501,65,2407,75,"type"],[2501,69,2407,79],[2501,71,2407,81,"BITS"],[2501,75,2407,85],[2501,76,2407,86,"CAPTURE"],[2501,83,2407,93],[2501,84,2407,94],[2502,12,2408,20],[2502,13,2408,21],[2502,19,2409,25],[2502,23,2409,29,"to"],[2502,25,2409,31],[2502,30,2409,36],[2502,34,2409,40],[2502,35,2409,41,"_epSquare"],[2502,44,2409,50],[2502,46,2409,52],[2503,14,2410,24,"addMove"],[2503,21,2410,31],[2503,22,2410,32,"moves"],[2503,27,2410,37],[2503,29,2410,39,"us"],[2503,31,2410,41],[2503,33,2410,43,"from"],[2503,37,2410,47],[2503,39,2410,49,"to"],[2503,41,2410,51],[2503,43,2410,53,"PAWN"],[2503,47,2410,57],[2503,49,2410,59,"PAWN"],[2503,53,2410,63],[2503,55,2410,65,"BITS"],[2503,59,2410,69],[2503,60,2410,70,"EP_CAPTURE"],[2503,70,2410,80],[2503,71,2410,81],[2504,12,2411,20],[2505,10,2412,16],[2506,8,2413,12],[2506,9,2413,13],[2506,15,2414,17],[2507,10,2415,16],[2507,14,2415,20,"forPiece"],[2507,22,2415,28],[2507,26,2415,32,"forPiece"],[2507,34,2415,40],[2507,39,2415,45,"type"],[2507,43,2415,49],[2507,45,2416,20],[2508,10,2417,16],[2508,15,2417,21],[2508,19,2417,25,"j"],[2508,20,2417,26],[2508,23,2417,29],[2508,24,2417,30],[2508,26,2417,32,"len"],[2508,29,2417,35],[2508,32,2417,38,"PIECE_OFFSETS"],[2508,45,2417,51],[2508,46,2417,52,"type"],[2508,50,2417,56],[2508,51,2417,57],[2508,52,2417,58,"length"],[2508,58,2417,64],[2508,60,2417,66,"j"],[2508,61,2417,67],[2508,64,2417,70,"len"],[2508,67,2417,73],[2508,69,2417,75,"j"],[2508,70,2417,76],[2508,72,2417,78],[2508,74,2417,80],[2509,12,2418,20],[2509,18,2418,26,"offset"],[2509,24,2418,32],[2509,27,2418,35,"PIECE_OFFSETS"],[2509,40,2418,48],[2509,41,2418,49,"type"],[2509,45,2418,53],[2509,46,2418,54],[2509,47,2418,55,"j"],[2509,48,2418,56],[2509,49,2418,57],[2510,12,2419,20,"to"],[2510,14,2419,22],[2510,17,2419,25,"from"],[2510,21,2419,29],[2511,12,2420,20],[2511,19,2420,27],[2511,23,2420,31],[2511,25,2420,33],[2512,14,2421,24,"to"],[2512,16,2421,26],[2512,20,2421,30,"offset"],[2512,26,2421,36],[2513,14,2422,24],[2513,18,2422,28,"to"],[2513,20,2422,30],[2513,23,2422,33],[2513,27,2422,37],[2513,29,2423,28],[2514,14,2424,24],[2514,18,2424,28],[2514,19,2424,29],[2514,23,2424,33],[2514,24,2424,34,"_board"],[2514,30,2424,40],[2514,31,2424,41,"to"],[2514,33,2424,43],[2514,34,2424,44],[2514,36,2424,46],[2515,16,2425,28,"addMove"],[2515,23,2425,35],[2515,24,2425,36,"moves"],[2515,29,2425,41],[2515,31,2425,43,"us"],[2515,33,2425,45],[2515,35,2425,47,"from"],[2515,39,2425,51],[2515,41,2425,53,"to"],[2515,43,2425,55],[2515,45,2425,57,"type"],[2515,49,2425,61],[2515,50,2425,62],[2516,14,2426,24],[2516,15,2426,25],[2516,21,2427,29],[2517,16,2428,28],[2518,16,2429,28],[2518,20,2429,32],[2518,24,2429,36],[2518,25,2429,37,"_board"],[2518,31,2429,43],[2518,32,2429,44,"to"],[2518,34,2429,46],[2518,35,2429,47],[2518,36,2429,48,"color"],[2518,41,2429,53],[2518,46,2429,58,"us"],[2518,48,2429,60],[2518,50,2430,32],[2519,16,2431,28,"addMove"],[2519,23,2431,35],[2519,24,2431,36,"moves"],[2519,29,2431,41],[2519,31,2431,43,"us"],[2519,33,2431,45],[2519,35,2431,47,"from"],[2519,39,2431,51],[2519,41,2431,53,"to"],[2519,43,2431,55],[2519,45,2431,57,"type"],[2519,49,2431,61],[2519,51,2431,63],[2519,55,2431,67],[2519,56,2431,68,"_board"],[2519,62,2431,74],[2519,63,2431,75,"to"],[2519,65,2431,77],[2519,66,2431,78],[2519,67,2431,79,"type"],[2519,71,2431,83],[2519,73,2431,85,"BITS"],[2519,77,2431,89],[2519,78,2431,90,"CAPTURE"],[2519,85,2431,97],[2519,86,2431,98],[2520,16,2432,28],[2521,14,2433,24],[2522,14,2434,24],[2523,14,2435,24],[2523,18,2435,28,"type"],[2523,22,2435,32],[2523,27,2435,37,"KNIGHT"],[2523,33,2435,43],[2523,37,2435,47,"type"],[2523,41,2435,51],[2523,46,2435,56,"KING"],[2523,50,2435,60],[2523,52,2436,28],[2524,12,2437,20],[2525,10,2438,16],[2526,8,2439,12],[2527,6,2440,8],[2528,6,2441,8],[2529,0,2442,0],[2530,0,2443,0],[2531,0,2444,0],[2532,0,2445,0],[2533,6,2446,8],[2533,10,2446,12,"forPiece"],[2533,18,2446,20],[2533,23,2446,25,"undefined"],[2533,32,2446,34],[2533,36,2446,38,"forPiece"],[2533,44,2446,46],[2533,49,2446,51,"KING"],[2533,53,2446,55],[2533,55,2446,57],[2534,8,2447,12],[2534,12,2447,16],[2534,13,2447,17,"singleSquare"],[2534,25,2447,29],[2534,29,2447,33,"lastSquare"],[2534,39,2447,43],[2534,44,2447,48],[2534,48,2447,52],[2534,49,2447,53,"_kings"],[2534,55,2447,59],[2534,56,2447,60,"us"],[2534,58,2447,62],[2534,59,2447,63],[2534,61,2447,65],[2535,10,2448,16],[2536,10,2449,16],[2536,14,2449,20],[2536,18,2449,24],[2536,19,2449,25,"_castling"],[2536,28,2449,34],[2536,29,2449,35,"us"],[2536,31,2449,37],[2536,32,2449,38],[2536,35,2449,41,"BITS"],[2536,39,2449,45],[2536,40,2449,46,"KSIDE_CASTLE"],[2536,52,2449,58],[2536,54,2449,60],[2537,12,2450,20],[2537,18,2450,26,"castlingFrom"],[2537,30,2450,38],[2537,33,2450,41],[2537,37,2450,45],[2537,38,2450,46,"_kings"],[2537,44,2450,52],[2537,45,2450,53,"us"],[2537,47,2450,55],[2537,48,2450,56],[2538,12,2451,20],[2538,18,2451,26,"castlingTo"],[2538,28,2451,36],[2538,31,2451,39,"castlingFrom"],[2538,43,2451,51],[2538,46,2451,54],[2538,47,2451,55],[2539,12,2452,20],[2539,16,2452,24],[2539,17,2452,25],[2539,21,2452,29],[2539,22,2452,30,"_board"],[2539,28,2452,36],[2539,29,2452,37,"castlingFrom"],[2539,41,2452,49],[2539,44,2452,52],[2539,45,2452,53],[2539,46,2452,54],[2539,50,2453,24],[2539,51,2453,25],[2539,55,2453,29],[2539,56,2453,30,"_board"],[2539,62,2453,36],[2539,63,2453,37,"castlingTo"],[2539,73,2453,47],[2539,74,2453,48],[2539,78,2454,24],[2539,79,2454,25],[2539,83,2454,29],[2539,84,2454,30,"_attacked"],[2539,93,2454,39],[2539,94,2454,40,"them"],[2539,98,2454,44],[2539,100,2454,46],[2539,104,2454,50],[2539,105,2454,51,"_kings"],[2539,111,2454,57],[2539,112,2454,58,"us"],[2539,114,2454,60],[2539,115,2454,61],[2539,116,2454,62],[2539,120,2455,24],[2539,121,2455,25],[2539,125,2455,29],[2539,126,2455,30,"_attacked"],[2539,135,2455,39],[2539,136,2455,40,"them"],[2539,140,2455,44],[2539,142,2455,46,"castlingFrom"],[2539,154,2455,58],[2539,157,2455,61],[2539,158,2455,62],[2539,159,2455,63],[2539,163,2456,24],[2539,164,2456,25],[2539,168,2456,29],[2539,169,2456,30,"_attacked"],[2539,178,2456,39],[2539,179,2456,40,"them"],[2539,183,2456,44],[2539,185,2456,46,"castlingTo"],[2539,195,2456,56],[2539,196,2456,57],[2539,198,2456,59],[2540,14,2457,24,"addMove"],[2540,21,2457,31],[2540,22,2457,32,"moves"],[2540,27,2457,37],[2540,29,2457,39,"us"],[2540,31,2457,41],[2540,33,2457,43],[2540,37,2457,47],[2540,38,2457,48,"_kings"],[2540,44,2457,54],[2540,45,2457,55,"us"],[2540,47,2457,57],[2540,48,2457,58],[2540,50,2457,60,"castlingTo"],[2540,60,2457,70],[2540,62,2457,72,"KING"],[2540,66,2457,76],[2540,68,2457,78,"undefined"],[2540,77,2457,87],[2540,79,2457,89,"BITS"],[2540,83,2457,93],[2540,84,2457,94,"KSIDE_CASTLE"],[2540,96,2457,106],[2540,97,2457,107],[2541,12,2458,20],[2542,10,2459,16],[2543,10,2460,16],[2544,10,2461,16],[2544,14,2461,20],[2544,18,2461,24],[2544,19,2461,25,"_castling"],[2544,28,2461,34],[2544,29,2461,35,"us"],[2544,31,2461,37],[2544,32,2461,38],[2544,35,2461,41,"BITS"],[2544,39,2461,45],[2544,40,2461,46,"QSIDE_CASTLE"],[2544,52,2461,58],[2544,54,2461,60],[2545,12,2462,20],[2545,18,2462,26,"castlingFrom"],[2545,30,2462,38],[2545,33,2462,41],[2545,37,2462,45],[2545,38,2462,46,"_kings"],[2545,44,2462,52],[2545,45,2462,53,"us"],[2545,47,2462,55],[2545,48,2462,56],[2546,12,2463,20],[2546,18,2463,26,"castlingTo"],[2546,28,2463,36],[2546,31,2463,39,"castlingFrom"],[2546,43,2463,51],[2546,46,2463,54],[2546,47,2463,55],[2547,12,2464,20],[2547,16,2464,24],[2547,17,2464,25],[2547,21,2464,29],[2547,22,2464,30,"_board"],[2547,28,2464,36],[2547,29,2464,37,"castlingFrom"],[2547,41,2464,49],[2547,44,2464,52],[2547,45,2464,53],[2547,46,2464,54],[2547,50,2465,24],[2547,51,2465,25],[2547,55,2465,29],[2547,56,2465,30,"_board"],[2547,62,2465,36],[2547,63,2465,37,"castlingFrom"],[2547,75,2465,49],[2547,78,2465,52],[2547,79,2465,53],[2547,80,2465,54],[2547,84,2466,24],[2547,85,2466,25],[2547,89,2466,29],[2547,90,2466,30,"_board"],[2547,96,2466,36],[2547,97,2466,37,"castlingFrom"],[2547,109,2466,49],[2547,112,2466,52],[2547,113,2466,53],[2547,114,2466,54],[2547,118,2467,24],[2547,119,2467,25],[2547,123,2467,29],[2547,124,2467,30,"_attacked"],[2547,133,2467,39],[2547,134,2467,40,"them"],[2547,138,2467,44],[2547,140,2467,46],[2547,144,2467,50],[2547,145,2467,51,"_kings"],[2547,151,2467,57],[2547,152,2467,58,"us"],[2547,154,2467,60],[2547,155,2467,61],[2547,156,2467,62],[2547,160,2468,24],[2547,161,2468,25],[2547,165,2468,29],[2547,166,2468,30,"_attacked"],[2547,175,2468,39],[2547,176,2468,40,"them"],[2547,180,2468,44],[2547,182,2468,46,"castlingFrom"],[2547,194,2468,58],[2547,197,2468,61],[2547,198,2468,62],[2547,199,2468,63],[2547,203,2469,24],[2547,204,2469,25],[2547,208,2469,29],[2547,209,2469,30,"_attacked"],[2547,218,2469,39],[2547,219,2469,40,"them"],[2547,223,2469,44],[2547,225,2469,46,"castlingTo"],[2547,235,2469,56],[2547,236,2469,57],[2547,238,2469,59],[2548,14,2470,24,"addMove"],[2548,21,2470,31],[2548,22,2470,32,"moves"],[2548,27,2470,37],[2548,29,2470,39,"us"],[2548,31,2470,41],[2548,33,2470,43],[2548,37,2470,47],[2548,38,2470,48,"_kings"],[2548,44,2470,54],[2548,45,2470,55,"us"],[2548,47,2470,57],[2548,48,2470,58],[2548,50,2470,60,"castlingTo"],[2548,60,2470,70],[2548,62,2470,72,"KING"],[2548,66,2470,76],[2548,68,2470,78,"undefined"],[2548,77,2470,87],[2548,79,2470,89,"BITS"],[2548,83,2470,93],[2548,84,2470,94,"QSIDE_CASTLE"],[2548,96,2470,106],[2548,97,2470,107],[2549,12,2471,20],[2550,10,2472,16],[2551,8,2473,12],[2552,6,2474,8],[2553,6,2475,8],[2554,0,2476,0],[2555,0,2477,0],[2556,0,2478,0],[2557,6,2479,8],[2557,10,2479,12],[2557,11,2479,13,"legal"],[2557,16,2479,18],[2557,20,2479,22],[2557,24,2479,26],[2557,25,2479,27,"_kings"],[2557,31,2479,33],[2557,32,2479,34,"us"],[2557,34,2479,36],[2557,35,2479,37],[2557,40,2479,42],[2557,41,2479,43],[2557,42,2479,44],[2557,44,2479,46],[2558,8,2480,12],[2558,15,2480,19,"moves"],[2558,20,2480,24],[2559,6,2481,8],[2560,6,2482,8],[2561,6,2483,8],[2561,12,2483,14,"legalMoves"],[2561,22,2483,24],[2561,25,2483,27],[2561,27,2483,29],[2562,6,2484,8],[2562,11,2484,13],[2562,15,2484,17,"i"],[2562,16,2484,18],[2562,19,2484,21],[2562,20,2484,22],[2562,22,2484,24,"len"],[2562,25,2484,27],[2562,28,2484,30,"moves"],[2562,33,2484,35],[2562,34,2484,36,"length"],[2562,40,2484,42],[2562,42,2484,44,"i"],[2562,43,2484,45],[2562,46,2484,48,"len"],[2562,49,2484,51],[2562,51,2484,53,"i"],[2562,52,2484,54],[2562,54,2484,56],[2562,56,2484,58],[2563,8,2485,12],[2563,12,2485,16],[2563,13,2485,17,"_makeMove"],[2563,22,2485,26],[2563,23,2485,27,"moves"],[2563,28,2485,32],[2563,29,2485,33,"i"],[2563,30,2485,34],[2563,31,2485,35],[2563,32,2485,36],[2564,8,2486,12],[2564,12,2486,16],[2564,13,2486,17],[2564,17,2486,21],[2564,18,2486,22,"_isKingAttacked"],[2564,33,2486,37],[2564,34,2486,38,"us"],[2564,36,2486,40],[2564,37,2486,41],[2564,39,2486,43],[2565,10,2487,16,"legalMoves"],[2565,20,2487,26],[2565,21,2487,27,"push"],[2565,25,2487,31],[2565,26,2487,32,"moves"],[2565,31,2487,37],[2565,32,2487,38,"i"],[2565,33,2487,39],[2565,34,2487,40],[2565,35,2487,41],[2566,8,2488,12],[2567,8,2489,12],[2567,12,2489,16],[2567,13,2489,17,"_undoMove"],[2567,22,2489,26],[2567,23,2489,27],[2567,24,2489,28],[2568,6,2490,8],[2569,6,2491,8],[2569,13,2491,15,"legalMoves"],[2569,23,2491,25],[2570,4,2492,4],[2571,4,2493,4,"move"],[2571,8,2493,8,"move"],[2571,9,2493,9,"move"],[2571,13,2493,13],[2571,15,2493,15],[2572,6,2493,17,"strict"],[2572,12,2493,23],[2572,15,2493,26],[2573,4,2493,32],[2573,5,2493,33],[2573,8,2493,36],[2573,9,2493,37],[2573,10,2493,38],[2573,12,2493,40],[2574,6,2494,8],[2575,0,2495,0],[2576,0,2496,0],[2577,0,2497,0],[2578,0,2498,0],[2579,0,2499,0],[2580,0,2500,0],[2581,0,2501,0],[2582,0,2502,0],[2583,0,2503,0],[2584,0,2504,0],[2585,0,2505,0],[2586,0,2506,0],[2587,6,2507,8],[2587,10,2507,12,"moveObj"],[2587,17,2507,19],[2587,20,2507,22],[2587,24,2507,26],[2588,6,2508,8],[2588,10,2508,12],[2588,17,2508,19,"move"],[2588,21,2508,23],[2588,26,2508,28],[2588,34,2508,36],[2588,36,2508,38],[2589,8,2509,12,"moveObj"],[2589,15,2509,19],[2589,18,2509,22],[2589,22,2509,26],[2589,23,2509,27,"_moveFromSan"],[2589,35,2509,39],[2589,36,2509,40,"move"],[2589,40,2509,44],[2589,42,2509,46,"strict"],[2589,48,2509,52],[2589,49,2509,53],[2590,6,2510,8],[2590,7,2510,9],[2590,13,2511,13],[2590,17,2511,17,"move"],[2590,21,2511,21],[2590,26,2511,26],[2590,30,2511,30],[2590,32,2511,32],[2591,8,2512,12,"moveObj"],[2591,15,2512,19],[2591,18,2512,22],[2591,22,2512,26],[2591,23,2512,27,"_moveFromSan"],[2591,35,2512,39],[2591,36,2512,40,"SAN_NULLMOVE"],[2591,48,2512,52],[2591,50,2512,54,"strict"],[2591,56,2512,60],[2591,57,2512,61],[2592,6,2513,8],[2592,7,2513,9],[2592,13,2514,13],[2592,17,2514,17],[2592,24,2514,24,"move"],[2592,28,2514,28],[2592,33,2514,33],[2592,41,2514,41],[2592,43,2514,43],[2593,8,2515,12],[2593,14,2515,18,"moves"],[2593,19,2515,23],[2593,22,2515,26],[2593,26,2515,30],[2593,27,2515,31,"_moves"],[2593,33,2515,37],[2593,34,2515,38],[2593,35,2515,39],[2594,8,2516,12],[2595,8,2517,12],[2595,13,2517,17],[2595,17,2517,21,"i"],[2595,18,2517,22],[2595,21,2517,25],[2595,22,2517,26],[2595,24,2517,28,"len"],[2595,27,2517,31],[2595,30,2517,34,"moves"],[2595,35,2517,39],[2595,36,2517,40,"length"],[2595,42,2517,46],[2595,44,2517,48,"i"],[2595,45,2517,49],[2595,48,2517,52,"len"],[2595,51,2517,55],[2595,53,2517,57,"i"],[2595,54,2517,58],[2595,56,2517,60],[2595,58,2517,62],[2596,10,2518,16],[2596,14,2518,20,"move"],[2596,18,2518,24],[2596,19,2518,25,"from"],[2596,23,2518,29],[2596,28,2518,34,"algebraic"],[2596,37,2518,43],[2596,38,2518,44,"moves"],[2596,43,2518,49],[2596,44,2518,50,"i"],[2596,45,2518,51],[2596,46,2518,52],[2596,47,2518,53,"from"],[2596,51,2518,57],[2596,52,2518,58],[2596,56,2519,20,"move"],[2596,60,2519,24],[2596,61,2519,25,"to"],[2596,63,2519,27],[2596,68,2519,32,"algebraic"],[2596,77,2519,41],[2596,78,2519,42,"moves"],[2596,83,2519,47],[2596,84,2519,48,"i"],[2596,85,2519,49],[2596,86,2519,50],[2596,87,2519,51,"to"],[2596,89,2519,53],[2596,90,2519,54],[2596,95,2520,21],[2596,97,2520,23],[2596,108,2520,34],[2596,112,2520,38,"moves"],[2596,117,2520,43],[2596,118,2520,44,"i"],[2596,119,2520,45],[2596,120,2520,46],[2596,121,2520,47],[2596,125,2520,51,"move"],[2596,129,2520,55],[2596,130,2520,56,"promotion"],[2596,139,2520,65],[2596,144,2520,70,"moves"],[2596,149,2520,75],[2596,150,2520,76,"i"],[2596,151,2520,77],[2596,152,2520,78],[2596,153,2520,79,"promotion"],[2596,162,2520,88],[2596,163,2520,89],[2596,165,2520,91],[2597,12,2521,20,"moveObj"],[2597,19,2521,27],[2597,22,2521,30,"moves"],[2597,27,2521,35],[2597,28,2521,36,"i"],[2597,29,2521,37],[2597,30,2521,38],[2598,12,2522,20],[2599,10,2523,16],[2600,8,2524,12],[2601,6,2525,8],[2602,6,2526,8],[2603,6,2527,8],[2603,10,2527,12],[2603,11,2527,13,"moveObj"],[2603,18,2527,20],[2603,20,2527,22],[2604,8,2528,12],[2604,12,2528,16],[2604,19,2528,23,"move"],[2604,23,2528,27],[2604,28,2528,32],[2604,36,2528,40],[2604,38,2528,42],[2605,10,2529,16],[2605,16,2529,22],[2605,20,2529,26,"Error"],[2605,25,2529,31],[2605,26,2529,32],[2605,43,2529,49,"move"],[2605,47,2529,53],[2605,49,2529,55],[2605,50,2529,56],[2606,8,2530,12],[2606,9,2530,13],[2606,15,2531,17],[2607,10,2532,16],[2607,16,2532,22],[2607,20,2532,26,"Error"],[2607,25,2532,31],[2607,26,2532,32],[2607,43,2532,49,"JSON"],[2607,47,2532,53],[2607,48,2532,54,"stringify"],[2607,57,2532,63],[2607,58,2532,64,"move"],[2607,62,2532,68],[2607,63,2532,69],[2607,65,2532,71],[2607,66,2532,72],[2608,8,2533,12],[2609,6,2534,8],[2610,6,2535,8],[2611,6,2536,8],[2611,10,2536,12],[2611,14,2536,16],[2611,15,2536,17,"isCheck"],[2611,22,2536,24],[2611,23,2536,25],[2611,24,2536,26],[2611,28,2536,30,"moveObj"],[2611,35,2536,37],[2611,36,2536,38,"flags"],[2611,41,2536,43],[2611,44,2536,46,"BITS"],[2611,48,2536,50],[2611,49,2536,51,"NULL_MOVE"],[2611,58,2536,60],[2611,60,2536,62],[2612,8,2537,12],[2612,14,2537,18],[2612,18,2537,22,"Error"],[2612,23,2537,27],[2612,24,2537,28],[2612,61,2537,65],[2612,62,2537,66],[2613,6,2538,8],[2614,6,2539,8],[2615,0,2540,0],[2616,0,2541,0],[2617,0,2542,0],[2618,6,2543,8],[2618,12,2543,14,"prettyMove"],[2618,22,2543,24],[2618,25,2543,27],[2618,29,2543,31,"Move"],[2618,33,2543,35],[2618,34,2543,36],[2618,38,2543,40],[2618,40,2543,42,"moveObj"],[2618,47,2543,49],[2618,48,2543,50],[2619,6,2544,8],[2619,10,2544,12],[2619,11,2544,13,"_makeMove"],[2619,20,2544,22],[2619,21,2544,23,"moveObj"],[2619,28,2544,30],[2619,29,2544,31],[2620,6,2545,8],[2620,10,2545,12],[2620,11,2545,13,"_incPositionCount"],[2620,28,2545,30],[2620,29,2545,31],[2620,30,2545,32],[2621,6,2546,8],[2621,13,2546,15,"prettyMove"],[2621,23,2546,25],[2622,4,2547,4],[2623,4,2548,4,"_push"],[2623,9,2548,9,"_push"],[2623,10,2548,10,"move"],[2623,14,2548,14],[2623,16,2548,16],[2624,6,2549,8],[2624,10,2549,12],[2624,11,2549,13,"_history"],[2624,19,2549,21],[2624,20,2549,22,"push"],[2624,24,2549,26],[2624,25,2549,27],[2625,8,2550,12,"move"],[2625,12,2550,16],[2626,8,2551,12,"kings"],[2626,13,2551,17],[2626,15,2551,19],[2627,10,2551,21,"b"],[2627,11,2551,22],[2627,13,2551,24],[2627,17,2551,28],[2627,18,2551,29,"_kings"],[2627,24,2551,35],[2627,25,2551,36,"b"],[2627,26,2551,37],[2628,10,2551,39,"w"],[2628,11,2551,40],[2628,13,2551,42],[2628,17,2551,46],[2628,18,2551,47,"_kings"],[2628,24,2551,53],[2628,25,2551,54,"w"],[2629,8,2551,56],[2629,9,2551,57],[2630,8,2552,12,"turn"],[2630,12,2552,16],[2630,14,2552,18],[2630,18,2552,22],[2630,19,2552,23,"_turn"],[2630,24,2552,28],[2631,8,2553,12,"castling"],[2631,16,2553,20],[2631,18,2553,22],[2632,10,2553,24,"b"],[2632,11,2553,25],[2632,13,2553,27],[2632,17,2553,31],[2632,18,2553,32,"_castling"],[2632,27,2553,41],[2632,28,2553,42,"b"],[2632,29,2553,43],[2633,10,2553,45,"w"],[2633,11,2553,46],[2633,13,2553,48],[2633,17,2553,52],[2633,18,2553,53,"_castling"],[2633,27,2553,62],[2633,28,2553,63,"w"],[2634,8,2553,65],[2634,9,2553,66],[2635,8,2554,12,"epSquare"],[2635,16,2554,20],[2635,18,2554,22],[2635,22,2554,26],[2635,23,2554,27,"_epSquare"],[2635,32,2554,36],[2636,8,2555,12,"halfMoves"],[2636,17,2555,21],[2636,19,2555,23],[2636,23,2555,27],[2636,24,2555,28,"_halfMoves"],[2636,34,2555,38],[2637,8,2556,12,"moveNumber"],[2637,18,2556,22],[2637,20,2556,24],[2637,24,2556,28],[2637,25,2556,29,"_moveNumber"],[2638,6,2557,8],[2638,7,2557,9],[2638,8,2557,10],[2639,4,2558,4],[2640,4,2559,4,"_movePiece"],[2640,14,2559,14,"_movePiece"],[2640,15,2559,15,"from"],[2640,19,2559,19],[2640,21,2559,21,"to"],[2640,23,2559,23],[2640,25,2559,25],[2641,6,2560,8],[2641,10,2560,12],[2641,11,2560,13,"_hash"],[2641,16,2560,18],[2641,20,2560,22],[2641,24,2560,26],[2641,25,2560,27,"_pieceKey"],[2641,34,2560,36],[2641,35,2560,37,"from"],[2641,39,2560,41],[2641,40,2560,42],[2642,6,2561,8],[2642,10,2561,12],[2642,11,2561,13,"_board"],[2642,17,2561,19],[2642,18,2561,20,"to"],[2642,20,2561,22],[2642,21,2561,23],[2642,24,2561,26],[2642,28,2561,30],[2642,29,2561,31,"_board"],[2642,35,2561,37],[2642,36,2561,38,"from"],[2642,40,2561,42],[2642,41,2561,43],[2643,6,2562,8],[2643,13,2562,15],[2643,17,2562,19],[2643,18,2562,20,"_board"],[2643,24,2562,26],[2643,25,2562,27,"from"],[2643,29,2562,31],[2643,30,2562,32],[2644,6,2563,8],[2644,10,2563,12],[2644,11,2563,13,"_hash"],[2644,16,2563,18],[2644,20,2563,22],[2644,24,2563,26],[2644,25,2563,27,"_pieceKey"],[2644,34,2563,36],[2644,35,2563,37,"to"],[2644,37,2563,39],[2644,38,2563,40],[2645,4,2564,4],[2646,4,2565,4,"_makeMove"],[2646,13,2565,13,"_makeMove"],[2646,14,2565,14,"move"],[2646,18,2565,18],[2646,20,2565,20],[2647,6,2566,8],[2647,12,2566,14,"us"],[2647,14,2566,16],[2647,17,2566,19],[2647,21,2566,23],[2647,22,2566,24,"_turn"],[2647,27,2566,29],[2648,6,2567,8],[2648,12,2567,14,"them"],[2648,16,2567,18],[2648,19,2567,21,"swapColor"],[2648,28,2567,30],[2648,29,2567,31,"us"],[2648,31,2567,33],[2648,32,2567,34],[2649,6,2568,8],[2649,10,2568,12],[2649,11,2568,13,"_push"],[2649,16,2568,18],[2649,17,2568,19,"move"],[2649,21,2568,23],[2649,22,2568,24],[2650,6,2569,8],[2650,10,2569,12,"move"],[2650,14,2569,16],[2650,15,2569,17,"flags"],[2650,20,2569,22],[2650,23,2569,25,"BITS"],[2650,27,2569,29],[2650,28,2569,30,"NULL_MOVE"],[2650,37,2569,39],[2650,39,2569,41],[2651,8,2570,12],[2651,12,2570,16,"us"],[2651,14,2570,18],[2651,19,2570,23,"BLACK"],[2651,24,2570,28],[2651,26,2570,30],[2652,10,2571,16],[2652,14,2571,20],[2652,15,2571,21,"_moveNumber"],[2652,26,2571,32],[2652,28,2571,34],[2653,8,2572,12],[2654,8,2573,12],[2654,12,2573,16],[2654,13,2573,17,"_halfMoves"],[2654,23,2573,27],[2654,25,2573,29],[2655,8,2574,12],[2655,12,2574,16],[2655,13,2574,17,"_turn"],[2655,18,2574,22],[2655,21,2574,25,"them"],[2655,25,2574,29],[2656,8,2575,12],[2656,12,2575,16],[2656,13,2575,17,"_epSquare"],[2656,22,2575,26],[2656,25,2575,29,"EMPTY"],[2656,30,2575,34],[2657,8,2576,12],[2658,6,2577,8],[2659,6,2578,8],[2659,10,2578,12],[2659,11,2578,13,"_hash"],[2659,16,2578,18],[2659,20,2578,22],[2659,24,2578,26],[2659,25,2578,27,"_epKey"],[2659,31,2578,33],[2659,32,2578,34],[2659,33,2578,35],[2660,6,2579,8],[2660,10,2579,12],[2660,11,2579,13,"_hash"],[2660,16,2579,18],[2660,20,2579,22],[2660,24,2579,26],[2660,25,2579,27,"_castlingKey"],[2660,37,2579,39],[2660,38,2579,40],[2660,39,2579,41],[2661,6,2580,8],[2661,10,2580,12,"move"],[2661,14,2580,16],[2661,15,2580,17,"captured"],[2661,23,2580,25],[2661,25,2580,27],[2662,8,2581,12],[2662,12,2581,16],[2662,13,2581,17,"_hash"],[2662,18,2581,22],[2662,22,2581,26],[2662,26,2581,30],[2662,27,2581,31,"_pieceKey"],[2662,36,2581,40],[2662,37,2581,41,"move"],[2662,41,2581,45],[2662,42,2581,46,"to"],[2662,44,2581,48],[2662,45,2581,49],[2663,6,2582,8],[2664,6,2583,8],[2664,10,2583,12],[2664,11,2583,13,"_movePiece"],[2664,21,2583,23],[2664,22,2583,24,"move"],[2664,26,2583,28],[2664,27,2583,29,"from"],[2664,31,2583,33],[2664,33,2583,35,"move"],[2664,37,2583,39],[2664,38,2583,40,"to"],[2664,40,2583,42],[2664,41,2583,43],[2665,6,2584,8],[2666,6,2585,8],[2666,10,2585,12,"move"],[2666,14,2585,16],[2666,15,2585,17,"flags"],[2666,20,2585,22],[2666,23,2585,25,"BITS"],[2666,27,2585,29],[2666,28,2585,30,"EP_CAPTURE"],[2666,38,2585,40],[2666,40,2585,42],[2667,8,2586,12],[2667,12,2586,16],[2667,16,2586,20],[2667,17,2586,21,"_turn"],[2667,22,2586,26],[2667,27,2586,31,"BLACK"],[2667,32,2586,36],[2667,34,2586,38],[2668,10,2587,16],[2668,14,2587,20],[2668,15,2587,21,"_clear"],[2668,21,2587,27],[2668,22,2587,28,"move"],[2668,26,2587,32],[2668,27,2587,33,"to"],[2668,29,2587,35],[2668,32,2587,38],[2668,34,2587,40],[2668,35,2587,41],[2669,8,2588,12],[2669,9,2588,13],[2669,15,2589,17],[2670,10,2590,16],[2670,14,2590,20],[2670,15,2590,21,"_clear"],[2670,21,2590,27],[2670,22,2590,28,"move"],[2670,26,2590,32],[2670,27,2590,33,"to"],[2670,29,2590,35],[2670,32,2590,38],[2670,34,2590,40],[2670,35,2590,41],[2671,8,2591,12],[2672,6,2592,8],[2673,6,2593,8],[2674,6,2594,8],[2674,10,2594,12,"move"],[2674,14,2594,16],[2674,15,2594,17,"promotion"],[2674,24,2594,26],[2674,26,2594,28],[2675,8,2595,12],[2675,12,2595,16],[2675,13,2595,17,"_clear"],[2675,19,2595,23],[2675,20,2595,24,"move"],[2675,24,2595,28],[2675,25,2595,29,"to"],[2675,27,2595,31],[2675,28,2595,32],[2676,8,2596,12],[2676,12,2596,16],[2676,13,2596,17,"_set"],[2676,17,2596,21],[2676,18,2596,22,"move"],[2676,22,2596,26],[2676,23,2596,27,"to"],[2676,25,2596,29],[2676,27,2596,31],[2677,10,2596,33,"type"],[2677,14,2596,37],[2677,16,2596,39,"move"],[2677,20,2596,43],[2677,21,2596,44,"promotion"],[2677,30,2596,53],[2678,10,2596,55,"color"],[2678,15,2596,60],[2678,17,2596,62,"us"],[2679,8,2596,65],[2679,9,2596,66],[2679,10,2596,67],[2680,6,2597,8],[2681,6,2598,8],[2682,6,2599,8],[2682,10,2599,12],[2682,14,2599,16],[2682,15,2599,17,"_board"],[2682,21,2599,23],[2682,22,2599,24,"move"],[2682,26,2599,28],[2682,27,2599,29,"to"],[2682,29,2599,31],[2682,30,2599,32],[2682,31,2599,33,"type"],[2682,35,2599,37],[2682,40,2599,42,"KING"],[2682,44,2599,46],[2682,46,2599,48],[2683,8,2600,12],[2683,12,2600,16],[2683,13,2600,17,"_kings"],[2683,19,2600,23],[2683,20,2600,24,"us"],[2683,22,2600,26],[2683,23,2600,27],[2683,26,2600,30,"move"],[2683,30,2600,34],[2683,31,2600,35,"to"],[2683,33,2600,37],[2684,8,2601,12],[2685,8,2602,12],[2685,12,2602,16,"move"],[2685,16,2602,20],[2685,17,2602,21,"flags"],[2685,22,2602,26],[2685,25,2602,29,"BITS"],[2685,29,2602,33],[2685,30,2602,34,"KSIDE_CASTLE"],[2685,42,2602,46],[2685,44,2602,48],[2686,10,2603,16],[2686,16,2603,22,"castlingTo"],[2686,26,2603,32],[2686,29,2603,35,"move"],[2686,33,2603,39],[2686,34,2603,40,"to"],[2686,36,2603,42],[2686,39,2603,45],[2686,40,2603,46],[2687,10,2604,16],[2687,16,2604,22,"castlingFrom"],[2687,28,2604,34],[2687,31,2604,37,"move"],[2687,35,2604,41],[2687,36,2604,42,"to"],[2687,38,2604,44],[2687,41,2604,47],[2687,42,2604,48],[2688,10,2605,16],[2688,14,2605,20],[2688,15,2605,21,"_movePiece"],[2688,25,2605,31],[2688,26,2605,32,"castlingFrom"],[2688,38,2605,44],[2688,40,2605,46,"castlingTo"],[2688,50,2605,56],[2688,51,2605,57],[2689,8,2606,12],[2689,9,2606,13],[2689,15,2607,17],[2689,19,2607,21,"move"],[2689,23,2607,25],[2689,24,2607,26,"flags"],[2689,29,2607,31],[2689,32,2607,34,"BITS"],[2689,36,2607,38],[2689,37,2607,39,"QSIDE_CASTLE"],[2689,49,2607,51],[2689,51,2607,53],[2690,10,2608,16],[2690,16,2608,22,"castlingTo"],[2690,26,2608,32],[2690,29,2608,35,"move"],[2690,33,2608,39],[2690,34,2608,40,"to"],[2690,36,2608,42],[2690,39,2608,45],[2690,40,2608,46],[2691,10,2609,16],[2691,16,2609,22,"castlingFrom"],[2691,28,2609,34],[2691,31,2609,37,"move"],[2691,35,2609,41],[2691,36,2609,42,"to"],[2691,38,2609,44],[2691,41,2609,47],[2691,42,2609,48],[2692,10,2610,16],[2692,14,2610,20],[2692,15,2610,21,"_movePiece"],[2692,25,2610,31],[2692,26,2610,32,"castlingFrom"],[2692,38,2610,44],[2692,40,2610,46,"castlingTo"],[2692,50,2610,56],[2692,51,2610,57],[2693,8,2611,12],[2694,8,2612,12],[2695,8,2613,12],[2695,12,2613,16],[2695,13,2613,17,"_castling"],[2695,22,2613,26],[2695,23,2613,27,"us"],[2695,25,2613,29],[2695,26,2613,30],[2695,29,2613,33],[2695,30,2613,34],[2696,6,2614,8],[2697,6,2615,8],[2698,6,2616,8],[2698,10,2616,12],[2698,14,2616,16],[2698,15,2616,17,"_castling"],[2698,24,2616,26],[2698,25,2616,27,"us"],[2698,27,2616,29],[2698,28,2616,30],[2698,30,2616,32],[2699,8,2617,12],[2699,13,2617,17],[2699,17,2617,21,"i"],[2699,18,2617,22],[2699,21,2617,25],[2699,22,2617,26],[2699,24,2617,28,"len"],[2699,27,2617,31],[2699,30,2617,34,"ROOKS"],[2699,35,2617,39],[2699,36,2617,40,"us"],[2699,38,2617,42],[2699,39,2617,43],[2699,40,2617,44,"length"],[2699,46,2617,50],[2699,48,2617,52,"i"],[2699,49,2617,53],[2699,52,2617,56,"len"],[2699,55,2617,59],[2699,57,2617,61,"i"],[2699,58,2617,62],[2699,60,2617,64],[2699,62,2617,66],[2700,10,2618,16],[2700,14,2618,20,"move"],[2700,18,2618,24],[2700,19,2618,25,"from"],[2700,23,2618,29],[2700,28,2618,34,"ROOKS"],[2700,33,2618,39],[2700,34,2618,40,"us"],[2700,36,2618,42],[2700,37,2618,43],[2700,38,2618,44,"i"],[2700,39,2618,45],[2700,40,2618,46],[2700,41,2618,47,"square"],[2700,47,2618,53],[2700,51,2619,20],[2700,55,2619,24],[2700,56,2619,25,"_castling"],[2700,65,2619,34],[2700,66,2619,35,"us"],[2700,68,2619,37],[2700,69,2619,38],[2700,72,2619,41,"ROOKS"],[2700,77,2619,46],[2700,78,2619,47,"us"],[2700,80,2619,49],[2700,81,2619,50],[2700,82,2619,51,"i"],[2700,83,2619,52],[2700,84,2619,53],[2700,85,2619,54,"flag"],[2700,89,2619,58],[2700,91,2619,60],[2701,12,2620,20],[2701,16,2620,24],[2701,17,2620,25,"_castling"],[2701,26,2620,34],[2701,27,2620,35,"us"],[2701,29,2620,37],[2701,30,2620,38],[2701,34,2620,42,"ROOKS"],[2701,39,2620,47],[2701,40,2620,48,"us"],[2701,42,2620,50],[2701,43,2620,51],[2701,44,2620,52,"i"],[2701,45,2620,53],[2701,46,2620,54],[2701,47,2620,55,"flag"],[2701,51,2620,59],[2702,12,2621,20],[2703,10,2622,16],[2704,8,2623,12],[2705,6,2624,8],[2706,6,2625,8],[2707,6,2626,8],[2707,10,2626,12],[2707,14,2626,16],[2707,15,2626,17,"_castling"],[2707,24,2626,26],[2707,25,2626,27,"them"],[2707,29,2626,31],[2707,30,2626,32],[2707,32,2626,34],[2708,8,2627,12],[2708,13,2627,17],[2708,17,2627,21,"i"],[2708,18,2627,22],[2708,21,2627,25],[2708,22,2627,26],[2708,24,2627,28,"len"],[2708,27,2627,31],[2708,30,2627,34,"ROOKS"],[2708,35,2627,39],[2708,36,2627,40,"them"],[2708,40,2627,44],[2708,41,2627,45],[2708,42,2627,46,"length"],[2708,48,2627,52],[2708,50,2627,54,"i"],[2708,51,2627,55],[2708,54,2627,58,"len"],[2708,57,2627,61],[2708,59,2627,63,"i"],[2708,60,2627,64],[2708,62,2627,66],[2708,64,2627,68],[2709,10,2628,16],[2709,14,2628,20,"move"],[2709,18,2628,24],[2709,19,2628,25,"to"],[2709,21,2628,27],[2709,26,2628,32,"ROOKS"],[2709,31,2628,37],[2709,32,2628,38,"them"],[2709,36,2628,42],[2709,37,2628,43],[2709,38,2628,44,"i"],[2709,39,2628,45],[2709,40,2628,46],[2709,41,2628,47,"square"],[2709,47,2628,53],[2709,51,2629,20],[2709,55,2629,24],[2709,56,2629,25,"_castling"],[2709,65,2629,34],[2709,66,2629,35,"them"],[2709,70,2629,39],[2709,71,2629,40],[2709,74,2629,43,"ROOKS"],[2709,79,2629,48],[2709,80,2629,49,"them"],[2709,84,2629,53],[2709,85,2629,54],[2709,86,2629,55,"i"],[2709,87,2629,56],[2709,88,2629,57],[2709,89,2629,58,"flag"],[2709,93,2629,62],[2709,95,2629,64],[2710,12,2630,20],[2710,16,2630,24],[2710,17,2630,25,"_castling"],[2710,26,2630,34],[2710,27,2630,35,"them"],[2710,31,2630,39],[2710,32,2630,40],[2710,36,2630,44,"ROOKS"],[2710,41,2630,49],[2710,42,2630,50,"them"],[2710,46,2630,54],[2710,47,2630,55],[2710,48,2630,56,"i"],[2710,49,2630,57],[2710,50,2630,58],[2710,51,2630,59,"flag"],[2710,55,2630,63],[2711,12,2631,20],[2712,10,2632,16],[2713,8,2633,12],[2714,6,2634,8],[2715,6,2635,8],[2715,10,2635,12],[2715,11,2635,13,"_hash"],[2715,16,2635,18],[2715,20,2635,22],[2715,24,2635,26],[2715,25,2635,27,"_castlingKey"],[2715,37,2635,39],[2715,38,2635,40],[2715,39,2635,41],[2716,6,2636,8],[2717,6,2637,8],[2717,10,2637,12,"move"],[2717,14,2637,16],[2717,15,2637,17,"flags"],[2717,20,2637,22],[2717,23,2637,25,"BITS"],[2717,27,2637,29],[2717,28,2637,30,"BIG_PAWN"],[2717,36,2637,38],[2717,38,2637,40],[2718,8,2638,12],[2718,12,2638,16,"epSquare"],[2718,20,2638,24],[2719,8,2639,12],[2719,12,2639,16,"us"],[2719,14,2639,18],[2719,19,2639,23,"BLACK"],[2719,24,2639,28],[2719,26,2639,30],[2720,10,2640,16,"epSquare"],[2720,18,2640,24],[2720,21,2640,27,"move"],[2720,25,2640,31],[2720,26,2640,32,"to"],[2720,28,2640,34],[2720,31,2640,37],[2720,33,2640,39],[2721,8,2641,12],[2721,9,2641,13],[2721,15,2642,17],[2722,10,2643,16,"epSquare"],[2722,18,2643,24],[2722,21,2643,27,"move"],[2722,25,2643,31],[2722,26,2643,32,"to"],[2722,28,2643,34],[2722,31,2643,37],[2722,33,2643,39],[2723,8,2644,12],[2724,8,2645,12],[2724,12,2645,17],[2724,14,2645,20,"move"],[2724,18,2645,24],[2724,19,2645,25,"to"],[2724,21,2645,27],[2724,24,2645,30],[2724,25,2645,31],[2724,28,2645,35],[2724,32,2645,39],[2724,33,2645,40],[2724,37,2646,16],[2724,41,2646,20],[2724,42,2646,21,"_board"],[2724,48,2646,27],[2724,49,2646,28,"move"],[2724,53,2646,32],[2724,54,2646,33,"to"],[2724,56,2646,35],[2724,59,2646,38],[2724,60,2646,39],[2724,61,2646,40],[2724,63,2646,42,"type"],[2724,67,2646,46],[2724,72,2646,51,"PAWN"],[2724,76,2646,55],[2724,80,2647,16],[2724,84,2647,20],[2724,85,2647,21,"_board"],[2724,91,2647,27],[2724,92,2647,28,"move"],[2724,96,2647,32],[2724,97,2647,33,"to"],[2724,99,2647,35],[2724,102,2647,38],[2724,103,2647,39],[2724,104,2647,40],[2724,106,2647,42,"color"],[2724,111,2647,47],[2724,116,2647,52,"them"],[2724,120,2647,56],[2724,124,2648,17],[2724,126,2648,20,"move"],[2724,130,2648,24],[2724,131,2648,25,"to"],[2724,133,2648,27],[2724,136,2648,30],[2724,137,2648,31],[2724,140,2648,35],[2724,144,2648,39],[2724,145,2648,40],[2724,149,2649,20],[2724,153,2649,24],[2724,154,2649,25,"_board"],[2724,160,2649,31],[2724,161,2649,32,"move"],[2724,165,2649,36],[2724,166,2649,37,"to"],[2724,168,2649,39],[2724,171,2649,42],[2724,172,2649,43],[2724,173,2649,44],[2724,175,2649,46,"type"],[2724,179,2649,50],[2724,184,2649,55,"PAWN"],[2724,188,2649,59],[2724,192,2650,20],[2724,196,2650,24],[2724,197,2650,25,"_board"],[2724,203,2650,31],[2724,204,2650,32,"move"],[2724,208,2650,36],[2724,209,2650,37,"to"],[2724,211,2650,39],[2724,214,2650,42],[2724,215,2650,43],[2724,216,2650,44],[2724,218,2650,46,"color"],[2724,223,2650,51],[2724,228,2650,56,"them"],[2724,232,2650,61],[2724,234,2650,63],[2725,10,2651,16],[2725,14,2651,20],[2725,15,2651,21,"_epSquare"],[2725,24,2651,30],[2725,27,2651,33,"epSquare"],[2725,35,2651,41],[2726,10,2652,16],[2726,14,2652,20],[2726,15,2652,21,"_hash"],[2726,20,2652,26],[2726,24,2652,30],[2726,28,2652,34],[2726,29,2652,35,"_epKey"],[2726,35,2652,41],[2726,36,2652,42],[2726,37,2652,43],[2727,8,2653,12],[2727,9,2653,13],[2727,15,2654,17],[2728,10,2655,16],[2728,14,2655,20],[2728,15,2655,21,"_epSquare"],[2728,24,2655,30],[2728,27,2655,33,"EMPTY"],[2728,32,2655,38],[2729,8,2656,12],[2730,6,2657,8],[2730,7,2657,9],[2730,13,2658,13],[2731,8,2659,12],[2731,12,2659,16],[2731,13,2659,17,"_epSquare"],[2731,22,2659,26],[2731,25,2659,29,"EMPTY"],[2731,30,2659,34],[2732,6,2660,8],[2733,6,2661,8],[2734,6,2662,8],[2734,10,2662,12,"move"],[2734,14,2662,16],[2734,15,2662,17,"piece"],[2734,20,2662,22],[2734,25,2662,27,"PAWN"],[2734,29,2662,31],[2734,31,2662,33],[2735,8,2663,12],[2735,12,2663,16],[2735,13,2663,17,"_halfMoves"],[2735,23,2663,27],[2735,26,2663,30],[2735,27,2663,31],[2736,6,2664,8],[2736,7,2664,9],[2736,13,2665,13],[2736,17,2665,17,"move"],[2736,21,2665,21],[2736,22,2665,22,"flags"],[2736,27,2665,27],[2736,31,2665,31,"BITS"],[2736,35,2665,35],[2736,36,2665,36,"CAPTURE"],[2736,43,2665,43],[2736,46,2665,46,"BITS"],[2736,50,2665,50],[2736,51,2665,51,"EP_CAPTURE"],[2736,61,2665,61],[2736,62,2665,62],[2736,64,2665,64],[2737,8,2666,12],[2737,12,2666,16],[2737,13,2666,17,"_halfMoves"],[2737,23,2666,27],[2737,26,2666,30],[2737,27,2666,31],[2738,6,2667,8],[2738,7,2667,9],[2738,13,2668,13],[2739,8,2669,12],[2739,12,2669,16],[2739,13,2669,17,"_halfMoves"],[2739,23,2669,27],[2739,25,2669,29],[2740,6,2670,8],[2741,6,2671,8],[2741,10,2671,12,"us"],[2741,12,2671,14],[2741,17,2671,19,"BLACK"],[2741,22,2671,24],[2741,24,2671,26],[2742,8,2672,12],[2742,12,2672,16],[2742,13,2672,17,"_moveNumber"],[2742,24,2672,28],[2742,26,2672,30],[2743,6,2673,8],[2744,6,2674,8],[2744,10,2674,12],[2744,11,2674,13,"_turn"],[2744,16,2674,18],[2744,19,2674,21,"them"],[2744,23,2674,25],[2745,6,2675,8],[2745,10,2675,12],[2745,11,2675,13,"_hash"],[2745,16,2675,18],[2745,20,2675,22,"SIDE_KEY"],[2745,28,2675,30],[2746,4,2676,4],[2747,4,2677,4,"undo"],[2747,8,2677,8,"undo"],[2747,9,2677,8],[2747,11,2677,11],[2748,6,2678,8],[2748,12,2678,14,"hash"],[2748,16,2678,18],[2748,19,2678,21],[2748,23,2678,25],[2748,24,2678,26,"_hash"],[2748,29,2678,31],[2749,6,2679,8],[2749,12,2679,14,"move"],[2749,16,2679,18],[2749,19,2679,21],[2749,23,2679,25],[2749,24,2679,26,"_undoMove"],[2749,33,2679,35],[2749,34,2679,36],[2749,35,2679,37],[2750,6,2680,8],[2750,10,2680,12,"move"],[2750,14,2680,16],[2750,16,2680,18],[2751,8,2681,12],[2751,14,2681,18,"prettyMove"],[2751,24,2681,28],[2751,27,2681,31],[2751,31,2681,35,"Move"],[2751,35,2681,39],[2751,36,2681,40],[2751,40,2681,44],[2751,42,2681,46,"move"],[2751,46,2681,50],[2751,47,2681,51],[2752,8,2682,12],[2752,12,2682,16],[2752,13,2682,17,"_decPositionCount"],[2752,30,2682,34],[2752,31,2682,35,"hash"],[2752,35,2682,39],[2752,36,2682,40],[2753,8,2683,12],[2753,15,2683,19,"prettyMove"],[2753,25,2683,29],[2754,6,2684,8],[2755,6,2685,8],[2755,13,2685,15],[2755,17,2685,19],[2756,4,2686,4],[2757,4,2687,4,"_undoMove"],[2757,13,2687,13,"_undoMove"],[2757,14,2687,13],[2757,16,2687,16],[2758,6,2688,8],[2758,12,2688,14,"old"],[2758,15,2688,17],[2758,18,2688,20],[2758,22,2688,24],[2758,23,2688,25,"_history"],[2758,31,2688,33],[2758,32,2688,34,"pop"],[2758,35,2688,37],[2758,36,2688,38],[2758,37,2688,39],[2759,6,2689,8],[2759,10,2689,12,"old"],[2759,13,2689,15],[2759,18,2689,20,"undefined"],[2759,27,2689,29],[2759,29,2689,31],[2760,8,2690,12],[2760,15,2690,19],[2760,19,2690,23],[2761,6,2691,8],[2762,6,2692,8],[2762,10,2692,12],[2762,11,2692,13,"_hash"],[2762,16,2692,18],[2762,20,2692,22],[2762,24,2692,26],[2762,25,2692,27,"_epKey"],[2762,31,2692,33],[2762,32,2692,34],[2762,33,2692,35],[2763,6,2693,8],[2763,10,2693,12],[2763,11,2693,13,"_hash"],[2763,16,2693,18],[2763,20,2693,22],[2763,24,2693,26],[2763,25,2693,27,"_castlingKey"],[2763,37,2693,39],[2763,38,2693,40],[2763,39,2693,41],[2764,6,2694,8],[2764,12,2694,14,"move"],[2764,16,2694,18],[2764,19,2694,21,"old"],[2764,22,2694,24],[2764,23,2694,25,"move"],[2764,27,2694,29],[2765,6,2695,8],[2765,10,2695,12],[2765,11,2695,13,"_kings"],[2765,17,2695,19],[2765,20,2695,22,"old"],[2765,23,2695,25],[2765,24,2695,26,"kings"],[2765,29,2695,31],[2766,6,2696,8],[2766,10,2696,12],[2766,11,2696,13,"_turn"],[2766,16,2696,18],[2766,19,2696,21,"old"],[2766,22,2696,24],[2766,23,2696,25,"turn"],[2766,27,2696,29],[2767,6,2697,8],[2767,10,2697,12],[2767,11,2697,13,"_castling"],[2767,20,2697,22],[2767,23,2697,25,"old"],[2767,26,2697,28],[2767,27,2697,29,"castling"],[2767,35,2697,37],[2768,6,2698,8],[2768,10,2698,12],[2768,11,2698,13,"_epSquare"],[2768,20,2698,22],[2768,23,2698,25,"old"],[2768,26,2698,28],[2768,27,2698,29,"epSquare"],[2768,35,2698,37],[2769,6,2699,8],[2769,10,2699,12],[2769,11,2699,13,"_halfMoves"],[2769,21,2699,23],[2769,24,2699,26,"old"],[2769,27,2699,29],[2769,28,2699,30,"halfMoves"],[2769,37,2699,39],[2770,6,2700,8],[2770,10,2700,12],[2770,11,2700,13,"_moveNumber"],[2770,22,2700,24],[2770,25,2700,27,"old"],[2770,28,2700,30],[2770,29,2700,31,"moveNumber"],[2770,39,2700,41],[2771,6,2701,8],[2771,10,2701,12],[2771,11,2701,13,"_hash"],[2771,16,2701,18],[2771,20,2701,22],[2771,24,2701,26],[2771,25,2701,27,"_epKey"],[2771,31,2701,33],[2771,32,2701,34],[2771,33,2701,35],[2772,6,2702,8],[2772,10,2702,12],[2772,11,2702,13,"_hash"],[2772,16,2702,18],[2772,20,2702,22],[2772,24,2702,26],[2772,25,2702,27,"_castlingKey"],[2772,37,2702,39],[2772,38,2702,40],[2772,39,2702,41],[2773,6,2703,8],[2773,10,2703,12],[2773,11,2703,13,"_hash"],[2773,16,2703,18],[2773,20,2703,22,"SIDE_KEY"],[2773,28,2703,30],[2774,6,2704,8],[2774,12,2704,14,"us"],[2774,14,2704,16],[2774,17,2704,19],[2774,21,2704,23],[2774,22,2704,24,"_turn"],[2774,27,2704,29],[2775,6,2705,8],[2775,12,2705,14,"them"],[2775,16,2705,18],[2775,19,2705,21,"swapColor"],[2775,28,2705,30],[2775,29,2705,31,"us"],[2775,31,2705,33],[2775,32,2705,34],[2776,6,2706,8],[2776,10,2706,12,"move"],[2776,14,2706,16],[2776,15,2706,17,"flags"],[2776,20,2706,22],[2776,23,2706,25,"BITS"],[2776,27,2706,29],[2776,28,2706,30,"NULL_MOVE"],[2776,37,2706,39],[2776,39,2706,41],[2777,8,2707,12],[2777,15,2707,19,"move"],[2777,19,2707,23],[2778,6,2708,8],[2779,6,2709,8],[2779,10,2709,12],[2779,11,2709,13,"_movePiece"],[2779,21,2709,23],[2779,22,2709,24,"move"],[2779,26,2709,28],[2779,27,2709,29,"to"],[2779,29,2709,31],[2779,31,2709,33,"move"],[2779,35,2709,37],[2779,36,2709,38,"from"],[2779,40,2709,42],[2779,41,2709,43],[2780,6,2710,8],[2781,6,2711,8],[2781,10,2711,12,"move"],[2781,14,2711,16],[2781,15,2711,17,"piece"],[2781,20,2711,22],[2781,22,2711,24],[2782,8,2712,12],[2782,12,2712,16],[2782,13,2712,17,"_clear"],[2782,19,2712,23],[2782,20,2712,24,"move"],[2782,24,2712,28],[2782,25,2712,29,"from"],[2782,29,2712,33],[2782,30,2712,34],[2783,8,2713,12],[2783,12,2713,16],[2783,13,2713,17,"_set"],[2783,17,2713,21],[2783,18,2713,22,"move"],[2783,22,2713,26],[2783,23,2713,27,"from"],[2783,27,2713,31],[2783,29,2713,33],[2784,10,2713,35,"type"],[2784,14,2713,39],[2784,16,2713,41,"move"],[2784,20,2713,45],[2784,21,2713,46,"piece"],[2784,26,2713,51],[2785,10,2713,53,"color"],[2785,15,2713,58],[2785,17,2713,60,"us"],[2786,8,2713,63],[2786,9,2713,64],[2786,10,2713,65],[2787,6,2714,8],[2788,6,2715,8],[2788,10,2715,12,"move"],[2788,14,2715,16],[2788,15,2715,17,"captured"],[2788,23,2715,25],[2788,25,2715,27],[2789,8,2716,12],[2789,12,2716,16,"move"],[2789,16,2716,20],[2789,17,2716,21,"flags"],[2789,22,2716,26],[2789,25,2716,29,"BITS"],[2789,29,2716,33],[2789,30,2716,34,"EP_CAPTURE"],[2789,40,2716,44],[2789,42,2716,46],[2790,10,2717,16],[2791,10,2718,16],[2791,14,2718,20,"index"],[2791,19,2718,25],[2792,10,2719,16],[2792,14,2719,20,"us"],[2792,16,2719,22],[2792,21,2719,27,"BLACK"],[2792,26,2719,32],[2792,28,2719,34],[2793,12,2720,20,"index"],[2793,17,2720,25],[2793,20,2720,28,"move"],[2793,24,2720,32],[2793,25,2720,33,"to"],[2793,27,2720,35],[2793,30,2720,38],[2793,32,2720,40],[2794,10,2721,16],[2794,11,2721,17],[2794,17,2722,21],[2795,12,2723,20,"index"],[2795,17,2723,25],[2795,20,2723,28,"move"],[2795,24,2723,32],[2795,25,2723,33,"to"],[2795,27,2723,35],[2795,30,2723,38],[2795,32,2723,40],[2796,10,2724,16],[2797,10,2725,16],[2797,14,2725,20],[2797,15,2725,21,"_set"],[2797,19,2725,25],[2797,20,2725,26,"index"],[2797,25,2725,31],[2797,27,2725,33],[2798,12,2725,35,"type"],[2798,16,2725,39],[2798,18,2725,41,"PAWN"],[2798,22,2725,45],[2799,12,2725,47,"color"],[2799,17,2725,52],[2799,19,2725,54,"them"],[2800,10,2725,59],[2800,11,2725,60],[2800,12,2725,61],[2801,8,2726,12],[2801,9,2726,13],[2801,15,2727,17],[2802,10,2728,16],[2803,10,2729,16],[2803,14,2729,20],[2803,15,2729,21,"_set"],[2803,19,2729,25],[2803,20,2729,26,"move"],[2803,24,2729,30],[2803,25,2729,31,"to"],[2803,27,2729,33],[2803,29,2729,35],[2804,12,2729,37,"type"],[2804,16,2729,41],[2804,18,2729,43,"move"],[2804,22,2729,47],[2804,23,2729,48,"captured"],[2804,31,2729,56],[2805,12,2729,58,"color"],[2805,17,2729,63],[2805,19,2729,65,"them"],[2806,10,2729,70],[2806,11,2729,71],[2806,12,2729,72],[2807,8,2730,12],[2808,6,2731,8],[2809,6,2732,8],[2809,10,2732,12,"move"],[2809,14,2732,16],[2809,15,2732,17,"flags"],[2809,20,2732,22],[2809,24,2732,26,"BITS"],[2809,28,2732,30],[2809,29,2732,31,"KSIDE_CASTLE"],[2809,41,2732,43],[2809,44,2732,46,"BITS"],[2809,48,2732,50],[2809,49,2732,51,"QSIDE_CASTLE"],[2809,61,2732,63],[2809,62,2732,64],[2809,64,2732,66],[2810,8,2733,12],[2810,12,2733,16,"castlingTo"],[2810,22,2733,26],[2810,24,2733,28,"castlingFrom"],[2810,36,2733,40],[2811,8,2734,12],[2811,12,2734,16,"move"],[2811,16,2734,20],[2811,17,2734,21,"flags"],[2811,22,2734,26],[2811,25,2734,29,"BITS"],[2811,29,2734,33],[2811,30,2734,34,"KSIDE_CASTLE"],[2811,42,2734,46],[2811,44,2734,48],[2812,10,2735,16,"castlingTo"],[2812,20,2735,26],[2812,23,2735,29,"move"],[2812,27,2735,33],[2812,28,2735,34,"to"],[2812,30,2735,36],[2812,33,2735,39],[2812,34,2735,40],[2813,10,2736,16,"castlingFrom"],[2813,22,2736,28],[2813,25,2736,31,"move"],[2813,29,2736,35],[2813,30,2736,36,"to"],[2813,32,2736,38],[2813,35,2736,41],[2813,36,2736,42],[2814,8,2737,12],[2814,9,2737,13],[2814,15,2738,17],[2815,10,2739,16,"castlingTo"],[2815,20,2739,26],[2815,23,2739,29,"move"],[2815,27,2739,33],[2815,28,2739,34,"to"],[2815,30,2739,36],[2815,33,2739,39],[2815,34,2739,40],[2816,10,2740,16,"castlingFrom"],[2816,22,2740,28],[2816,25,2740,31,"move"],[2816,29,2740,35],[2816,30,2740,36,"to"],[2816,32,2740,38],[2816,35,2740,41],[2816,36,2740,42],[2817,8,2741,12],[2818,8,2742,12],[2818,12,2742,16],[2818,13,2742,17,"_movePiece"],[2818,23,2742,27],[2818,24,2742,28,"castlingFrom"],[2818,36,2742,40],[2818,38,2742,42,"castlingTo"],[2818,48,2742,52],[2818,49,2742,53],[2819,6,2743,8],[2820,6,2744,8],[2820,13,2744,15,"move"],[2820,17,2744,19],[2821,4,2745,4],[2822,4,2746,4,"pgn"],[2822,7,2746,7,"pgn"],[2822,8,2746,8],[2823,6,2746,10,"newline"],[2823,13,2746,17],[2823,16,2746,20],[2823,20,2746,24],[2824,6,2746,26,"maxWidth"],[2824,14,2746,34],[2824,17,2746,37],[2825,4,2746,40],[2825,5,2746,41],[2825,8,2746,44],[2825,9,2746,45],[2825,10,2746,46],[2825,12,2746,48],[2826,6,2747,8],[2827,0,2748,0],[2828,0,2749,0],[2829,0,2750,0],[2830,6,2751,8],[2830,12,2751,14,"result"],[2830,18,2751,20],[2830,21,2751,23],[2830,23,2751,25],[2831,6,2752,8],[2831,10,2752,12,"headerExists"],[2831,22,2752,24],[2831,25,2752,27],[2831,30,2752,32],[2832,6,2753,8],[2833,6,2754,8],[2833,11,2754,13],[2833,17,2754,19,"i"],[2833,18,2754,20],[2833,22,2754,24],[2833,26,2754,28],[2833,27,2754,29,"_header"],[2833,34,2754,36],[2833,36,2754,38],[2834,8,2755,12],[2835,0,2756,0],[2836,0,2757,0],[2837,0,2758,0],[2838,0,2759,0],[2839,0,2760,0],[2840,0,2761,0],[2841,8,2762,12],[2841,14,2762,18,"headerTag"],[2841,23,2762,27],[2841,26,2762,30],[2841,30,2762,34],[2841,31,2762,35,"_header"],[2841,38,2762,42],[2841,39,2762,43,"i"],[2841,40,2762,44],[2841,41,2762,45],[2842,8,2763,12],[2842,12,2763,16,"headerTag"],[2842,21,2763,25],[2842,23,2764,16,"result"],[2842,29,2764,22],[2842,30,2764,23,"push"],[2842,34,2764,27],[2842,35,2764,28],[2842,39,2764,32,"i"],[2842,40,2764,33],[2842,45,2764,38],[2842,49,2764,42],[2842,50,2764,43,"_header"],[2842,57,2764,50],[2842,58,2764,51,"i"],[2842,59,2764,52],[2842,60,2764,53],[2842,64,2764,57],[2842,67,2764,60,"newline"],[2842,74,2764,67],[2842,75,2764,68],[2843,8,2765,12,"headerExists"],[2843,20,2765,24],[2843,23,2765,27],[2843,27,2765,31],[2844,6,2766,8],[2845,6,2767,8],[2845,10,2767,12,"headerExists"],[2845,22,2767,24],[2845,26,2767,28],[2845,30,2767,32],[2845,31,2767,33,"_history"],[2845,39,2767,41],[2845,40,2767,42,"length"],[2845,46,2767,48],[2845,48,2767,50],[2846,8,2768,12,"result"],[2846,14,2768,18],[2846,15,2768,19,"push"],[2846,19,2768,23],[2846,20,2768,24,"newline"],[2846,27,2768,31],[2846,28,2768,32],[2847,6,2769,8],[2848,6,2770,8],[2848,12,2770,14,"appendComment"],[2848,25,2770,27],[2848,28,2770,31,"moveString"],[2848,38,2770,41],[2848,42,2770,46],[2849,8,2771,12],[2849,14,2771,18,"comment"],[2849,21,2771,25],[2849,24,2771,28],[2849,28,2771,32],[2849,29,2771,33,"_comments"],[2849,38,2771,42],[2849,39,2771,43],[2849,43,2771,47],[2849,44,2771,48,"fen"],[2849,47,2771,51],[2849,48,2771,52],[2849,49,2771,53],[2849,50,2771,54],[2850,8,2772,12],[2850,12,2772,16],[2850,19,2772,23,"comment"],[2850,26,2772,30],[2850,31,2772,35],[2850,42,2772,46],[2850,44,2772,48],[2851,10,2773,16],[2851,16,2773,22,"delimiter"],[2851,25,2773,31],[2851,28,2773,34,"moveString"],[2851,38,2773,44],[2851,39,2773,45,"length"],[2851,45,2773,51],[2851,48,2773,54],[2851,49,2773,55],[2851,52,2773,58],[2851,55,2773,61],[2851,58,2773,64],[2851,60,2773,66],[2852,10,2774,16,"moveString"],[2852,20,2774,26],[2852,23,2774,29],[2852,26,2774,32,"moveString"],[2852,36,2774,42],[2852,39,2774,45,"delimiter"],[2852,48,2774,54],[2852,52,2774,58,"comment"],[2852,59,2774,65],[2852,62,2774,68],[2853,8,2775,12],[2854,8,2776,12],[2854,15,2776,19,"moveString"],[2854,25,2776,29],[2855,6,2777,8],[2855,7,2777,9],[2856,6,2778,8],[2857,6,2779,8],[2857,12,2779,14,"reversedHistory"],[2857,27,2779,29],[2857,30,2779,32],[2857,32,2779,34],[2858,6,2780,8],[2858,13,2780,15],[2858,17,2780,19],[2858,18,2780,20,"_history"],[2858,26,2780,28],[2858,27,2780,29,"length"],[2858,33,2780,35],[2858,36,2780,38],[2858,37,2780,39],[2858,39,2780,41],[2859,8,2781,12,"reversedHistory"],[2859,23,2781,27],[2859,24,2781,28,"push"],[2859,28,2781,32],[2859,29,2781,33],[2859,33,2781,37],[2859,34,2781,38,"_undoMove"],[2859,43,2781,47],[2859,44,2781,48],[2859,45,2781,49],[2859,46,2781,50],[2860,6,2782,8],[2861,6,2783,8],[2861,12,2783,14,"moves"],[2861,17,2783,19],[2861,20,2783,22],[2861,22,2783,24],[2862,6,2784,8],[2862,10,2784,12,"moveString"],[2862,20,2784,22],[2862,23,2784,25],[2862,25,2784,27],[2863,6,2785,8],[2864,6,2786,8],[2864,10,2786,12,"reversedHistory"],[2864,25,2786,27],[2864,26,2786,28,"length"],[2864,32,2786,34],[2864,37,2786,39],[2864,38,2786,40],[2864,40,2786,42],[2865,8,2787,12,"moves"],[2865,13,2787,17],[2865,14,2787,18,"push"],[2865,18,2787,22],[2865,19,2787,23,"appendComment"],[2865,32,2787,36],[2865,33,2787,37],[2865,35,2787,39],[2865,36,2787,40],[2865,37,2787,41],[2866,6,2788,8],[2867,6,2789,8],[2868,6,2790,8],[2868,13,2790,15,"reversedHistory"],[2868,28,2790,30],[2868,29,2790,31,"length"],[2868,35,2790,37],[2868,38,2790,40],[2868,39,2790,41],[2868,41,2790,43],[2869,8,2791,12,"moveString"],[2869,18,2791,22],[2869,21,2791,25,"appendComment"],[2869,34,2791,38],[2869,35,2791,39,"moveString"],[2869,45,2791,49],[2869,46,2791,50],[2870,8,2792,12],[2870,14,2792,18,"move"],[2870,18,2792,22],[2870,21,2792,25,"reversedHistory"],[2870,36,2792,40],[2870,37,2792,41,"pop"],[2870,40,2792,44],[2870,41,2792,45],[2870,42,2792,46],[2871,8,2793,12],[2872,8,2794,12],[2872,12,2794,16],[2872,13,2794,17,"move"],[2872,17,2794,21],[2872,19,2794,23],[2873,10,2795,16],[2874,8,2796,12],[2875,8,2797,12],[2876,8,2798,12],[2876,12,2798,16],[2876,13,2798,17],[2876,17,2798,21],[2876,18,2798,22,"_history"],[2876,26,2798,30],[2876,27,2798,31,"length"],[2876,33,2798,37],[2876,37,2798,41,"move"],[2876,41,2798,45],[2876,42,2798,46,"color"],[2876,47,2798,51],[2876,52,2798,56],[2876,55,2798,59],[2876,57,2798,61],[2877,10,2799,16],[2877,16,2799,22,"prefix"],[2877,22,2799,28],[2877,25,2799,31],[2877,28,2799,34],[2877,32,2799,38],[2877,33,2799,39,"_moveNumber"],[2877,44,2799,50],[2877,51,2799,57],[2878,10,2800,16],[2879,10,2801,16,"moveString"],[2879,20,2801,26],[2879,23,2801,29,"moveString"],[2879,33,2801,39],[2879,36,2801,42],[2879,39,2801,45,"moveString"],[2879,49,2801,55],[2879,53,2801,59,"prefix"],[2879,59,2801,65],[2879,61,2801,67],[2879,64,2801,70,"prefix"],[2879,70,2801,76],[2880,8,2802,12],[2880,9,2802,13],[2880,15,2803,17],[2880,19,2803,21,"move"],[2880,23,2803,25],[2880,24,2803,26,"color"],[2880,29,2803,31],[2880,34,2803,36],[2880,37,2803,39],[2880,39,2803,41],[2881,10,2804,16],[2882,10,2805,16],[2882,14,2805,20,"moveString"],[2882,24,2805,30],[2882,25,2805,31,"length"],[2882,31,2805,37],[2882,33,2805,39],[2883,12,2806,20,"moves"],[2883,17,2806,25],[2883,18,2806,26,"push"],[2883,22,2806,30],[2883,23,2806,31,"moveString"],[2883,33,2806,41],[2883,34,2806,42],[2884,10,2807,16],[2885,10,2808,16,"moveString"],[2885,20,2808,26],[2885,23,2808,29],[2885,27,2808,33],[2885,28,2808,34,"_moveNumber"],[2885,39,2808,45],[2885,42,2808,48],[2885,45,2808,51],[2886,8,2809,12],[2887,8,2810,12,"moveString"],[2887,18,2810,22],[2887,21,2811,16,"moveString"],[2887,31,2811,26],[2887,34,2811,29],[2887,37,2811,32],[2887,40,2811,35],[2887,44,2811,39],[2887,45,2811,40,"_moveToSan"],[2887,55,2811,50],[2887,56,2811,51,"move"],[2887,60,2811,55],[2887,62,2811,57],[2887,66,2811,61],[2887,67,2811,62,"_moves"],[2887,73,2811,68],[2887,74,2811,69],[2888,10,2811,71,"legal"],[2888,15,2811,76],[2888,17,2811,78],[2889,8,2811,83],[2889,9,2811,84],[2889,10,2811,85],[2889,11,2811,86],[2890,8,2812,12],[2890,12,2812,16],[2890,13,2812,17,"_makeMove"],[2890,22,2812,26],[2890,23,2812,27,"move"],[2890,27,2812,31],[2890,28,2812,32],[2891,6,2813,8],[2892,6,2814,8],[2893,6,2815,8],[2893,10,2815,12,"moveString"],[2893,20,2815,22],[2893,21,2815,23,"length"],[2893,27,2815,29],[2893,29,2815,31],[2894,8,2816,12,"moves"],[2894,13,2816,17],[2894,14,2816,18,"push"],[2894,18,2816,22],[2894,19,2816,23,"appendComment"],[2894,32,2816,36],[2894,33,2816,37,"moveString"],[2894,43,2816,47],[2894,44,2816,48],[2894,45,2816,49],[2895,6,2817,8],[2896,6,2818,8],[2897,6,2819,8,"moves"],[2897,11,2819,13],[2897,12,2819,14,"push"],[2897,16,2819,18],[2897,17,2819,19],[2897,21,2819,23],[2897,22,2819,24,"_header"],[2897,29,2819,31],[2897,30,2819,32,"Result"],[2897,36,2819,38],[2897,40,2819,42],[2897,43,2819,45],[2897,44,2819,46],[2898,6,2820,8],[2899,0,2821,0],[2900,0,2822,0],[2901,0,2823,0],[2902,6,2824,8],[2902,10,2824,12,"maxWidth"],[2902,18,2824,20],[2902,23,2824,25],[2902,24,2824,26],[2902,26,2824,28],[2903,8,2825,12],[2903,15,2825,19,"result"],[2903,21,2825,25],[2903,22,2825,26,"join"],[2903,26,2825,30],[2903,27,2825,31],[2903,29,2825,33],[2903,30,2825,34],[2903,33,2825,37,"moves"],[2903,38,2825,42],[2903,39,2825,43,"join"],[2903,43,2825,47],[2903,44,2825,48],[2903,47,2825,51],[2903,48,2825,52],[2904,6,2826,8],[2905,6,2827,8],[2906,6,2828,8],[2906,12,2828,14,"strip"],[2906,17,2828,19],[2906,20,2828,22],[2906,29,2828,22,"strip"],[2906,30,2828,22],[2906,32,2828,34],[2907,8,2829,12],[2907,12,2829,16,"result"],[2907,18,2829,22],[2907,19,2829,23,"length"],[2907,25,2829,29],[2907,28,2829,32],[2907,29,2829,33],[2907,33,2829,37,"result"],[2907,39,2829,43],[2907,40,2829,44,"result"],[2907,46,2829,50],[2907,47,2829,51,"length"],[2907,53,2829,57],[2907,56,2829,60],[2907,57,2829,61],[2907,58,2829,62],[2907,63,2829,67],[2907,66,2829,70],[2907,68,2829,72],[2908,10,2830,16,"result"],[2908,16,2830,22],[2908,17,2830,23,"pop"],[2908,20,2830,26],[2908,21,2830,27],[2908,22,2830,28],[2909,10,2831,16],[2909,17,2831,23],[2909,21,2831,27],[2910,8,2832,12],[2911,8,2833,12],[2911,15,2833,19],[2911,20,2833,24],[2912,6,2834,8],[2912,7,2834,9],[2913,6,2835,8],[2914,6,2836,8],[2914,12,2836,14,"wrapComment"],[2914,23,2836,25],[2914,26,2836,28],[2914,35,2836,28,"wrapComment"],[2914,36,2836,38,"width"],[2914,41,2836,43],[2914,43,2836,45,"move"],[2914,47,2836,49],[2914,49,2836,51],[2915,8,2837,12],[2915,13,2837,17],[2915,19,2837,23,"token"],[2915,24,2837,28],[2915,28,2837,32,"move"],[2915,32,2837,36],[2915,33,2837,37,"split"],[2915,38,2837,42],[2915,39,2837,43],[2915,42,2837,46],[2915,43,2837,47],[2915,45,2837,49],[2916,10,2838,16],[2916,14,2838,20],[2916,15,2838,21,"token"],[2916,20,2838,26],[2916,22,2838,28],[2917,12,2839,20],[2918,10,2840,16],[2919,10,2841,16],[2919,14,2841,20,"width"],[2919,19,2841,25],[2919,22,2841,28,"token"],[2919,27,2841,33],[2919,28,2841,34,"length"],[2919,34,2841,40],[2919,37,2841,43,"maxWidth"],[2919,45,2841,51],[2919,47,2841,53],[2920,12,2842,20],[2920,19,2842,27,"strip"],[2920,24,2842,32],[2920,25,2842,33],[2920,26,2842,34],[2920,28,2842,36],[2921,14,2843,24,"width"],[2921,19,2843,29],[2921,21,2843,31],[2922,12,2844,20],[2923,12,2845,20,"result"],[2923,18,2845,26],[2923,19,2845,27,"push"],[2923,23,2845,31],[2923,24,2845,32,"newline"],[2923,31,2845,39],[2923,32,2845,40],[2924,12,2846,20,"width"],[2924,17,2846,25],[2924,20,2846,28],[2924,21,2846,29],[2925,10,2847,16],[2926,10,2848,16,"result"],[2926,16,2848,22],[2926,17,2848,23,"push"],[2926,21,2848,27],[2926,22,2848,28,"token"],[2926,27,2848,33],[2926,28,2848,34],[2927,10,2849,16,"width"],[2927,15,2849,21],[2927,19,2849,25,"token"],[2927,24,2849,30],[2927,25,2849,31,"length"],[2927,31,2849,37],[2928,10,2850,16,"result"],[2928,16,2850,22],[2928,17,2850,23,"push"],[2928,21,2850,27],[2928,22,2850,28],[2928,25,2850,31],[2928,26,2850,32],[2929,10,2851,16,"width"],[2929,15,2851,21],[2929,17,2851,23],[2930,8,2852,12],[2931,8,2853,12],[2931,12,2853,16,"strip"],[2931,17,2853,21],[2931,18,2853,22],[2931,19,2853,23],[2931,21,2853,25],[2932,10,2854,16,"width"],[2932,15,2854,21],[2932,17,2854,23],[2933,8,2855,12],[2934,8,2856,12],[2934,15,2856,19,"width"],[2934,20,2856,24],[2935,6,2857,8],[2935,7,2857,9],[2936,6,2858,8],[2937,6,2859,8],[2937,10,2859,12,"currentWidth"],[2937,22,2859,24],[2937,25,2859,27],[2937,26,2859,28],[2938,6,2860,8],[2938,11,2860,13],[2938,15,2860,17,"i"],[2938,16,2860,18],[2938,19,2860,21],[2938,20,2860,22],[2938,22,2860,24,"i"],[2938,23,2860,25],[2938,26,2860,28,"moves"],[2938,31,2860,33],[2938,32,2860,34,"length"],[2938,38,2860,40],[2938,40,2860,42,"i"],[2938,41,2860,43],[2938,43,2860,45],[2938,45,2860,47],[2939,8,2861,12],[2939,12,2861,16,"currentWidth"],[2939,24,2861,28],[2939,27,2861,31,"moves"],[2939,32,2861,36],[2939,33,2861,37,"i"],[2939,34,2861,38],[2939,35,2861,39],[2939,36,2861,40,"length"],[2939,42,2861,46],[2939,45,2861,49,"maxWidth"],[2939,53,2861,57],[2939,55,2861,59],[2940,10,2862,16],[2940,14,2862,20,"moves"],[2940,19,2862,25],[2940,20,2862,26,"i"],[2940,21,2862,27],[2940,22,2862,28],[2940,23,2862,29,"includes"],[2940,31,2862,37],[2940,32,2862,38],[2940,35,2862,41],[2940,36,2862,42],[2940,38,2862,44],[2941,12,2863,20,"currentWidth"],[2941,24,2863,32],[2941,27,2863,35,"wrapComment"],[2941,38,2863,46],[2941,39,2863,47,"currentWidth"],[2941,51,2863,59],[2941,53,2863,61,"moves"],[2941,58,2863,66],[2941,59,2863,67,"i"],[2941,60,2863,68],[2941,61,2863,69],[2941,62,2863,70],[2942,12,2864,20],[2943,10,2865,16],[2944,8,2866,12],[2945,8,2867,12],[2946,8,2868,12],[2946,12,2868,16,"currentWidth"],[2946,24,2868,28],[2946,27,2868,31,"moves"],[2946,32,2868,36],[2946,33,2868,37,"i"],[2946,34,2868,38],[2946,35,2868,39],[2946,36,2868,40,"length"],[2946,42,2868,46],[2946,45,2868,49,"maxWidth"],[2946,53,2868,57],[2946,57,2868,61,"i"],[2946,58,2868,62],[2946,63,2868,67],[2946,64,2868,68],[2946,66,2868,70],[2947,10,2869,16],[2948,10,2870,16],[2948,14,2870,20,"result"],[2948,20,2870,26],[2948,21,2870,27,"result"],[2948,27,2870,33],[2948,28,2870,34,"length"],[2948,34,2870,40],[2948,37,2870,43],[2948,38,2870,44],[2948,39,2870,45],[2948,44,2870,50],[2948,47,2870,53],[2948,49,2870,55],[2949,12,2871,20,"result"],[2949,18,2871,26],[2949,19,2871,27,"pop"],[2949,22,2871,30],[2949,23,2871,31],[2949,24,2871,32],[2950,10,2872,16],[2951,10,2873,16,"result"],[2951,16,2873,22],[2951,17,2873,23,"push"],[2951,21,2873,27],[2951,22,2873,28,"newline"],[2951,29,2873,35],[2951,30,2873,36],[2952,10,2874,16,"currentWidth"],[2952,22,2874,28],[2952,25,2874,31],[2952,26,2874,32],[2953,8,2875,12],[2953,9,2875,13],[2953,15,2876,17],[2953,19,2876,21,"i"],[2953,20,2876,22],[2953,25,2876,27],[2953,26,2876,28],[2953,28,2876,30],[2954,10,2877,16,"result"],[2954,16,2877,22],[2954,17,2877,23,"push"],[2954,21,2877,27],[2954,22,2877,28],[2954,25,2877,31],[2954,26,2877,32],[2955,10,2878,16,"currentWidth"],[2955,22,2878,28],[2955,24,2878,30],[2956,8,2879,12],[2957,8,2880,12,"result"],[2957,14,2880,18],[2957,15,2880,19,"push"],[2957,19,2880,23],[2957,20,2880,24,"moves"],[2957,25,2880,29],[2957,26,2880,30,"i"],[2957,27,2880,31],[2957,28,2880,32],[2957,29,2880,33],[2958,8,2881,12,"currentWidth"],[2958,20,2881,24],[2958,24,2881,28,"moves"],[2958,29,2881,33],[2958,30,2881,34,"i"],[2958,31,2881,35],[2958,32,2881,36],[2958,33,2881,37,"length"],[2958,39,2881,43],[2959,6,2882,8],[2960,6,2883,8],[2960,13,2883,15,"result"],[2960,19,2883,21],[2960,20,2883,22,"join"],[2960,24,2883,26],[2960,25,2883,27],[2960,27,2883,29],[2960,28,2883,30],[2961,4,2884,4],[2962,4,2885,4],[2963,0,2886,0],[2964,0,2887,0],[2965,4,2888,4,"header"],[2965,10,2888,10,"header"],[2965,11,2888,11],[2965,14,2888,14,"args"],[2965,18,2888,18],[2965,20,2888,20],[2966,6,2889,8],[2966,11,2889,13],[2966,15,2889,17,"i"],[2966,16,2889,18],[2966,19,2889,21],[2966,20,2889,22],[2966,22,2889,24,"i"],[2966,23,2889,25],[2966,26,2889,28,"args"],[2966,30,2889,32],[2966,31,2889,33,"length"],[2966,37,2889,39],[2966,39,2889,41,"i"],[2966,40,2889,42],[2966,44,2889,46],[2966,45,2889,47],[2966,47,2889,49],[2967,8,2890,12],[2967,12,2890,16],[2967,19,2890,23,"args"],[2967,23,2890,27],[2967,24,2890,28,"i"],[2967,25,2890,29],[2967,26,2890,30],[2967,31,2890,35],[2967,39,2890,43],[2967,43,2890,47],[2967,50,2890,54,"args"],[2967,54,2890,58],[2967,55,2890,59,"i"],[2967,56,2890,60],[2967,59,2890,63],[2967,60,2890,64],[2967,61,2890,65],[2967,66,2890,70],[2967,74,2890,78],[2967,76,2890,80],[2968,10,2891,16],[2968,14,2891,20],[2968,15,2891,21,"_header"],[2968,22,2891,28],[2968,23,2891,29,"args"],[2968,27,2891,33],[2968,28,2891,34,"i"],[2968,29,2891,35],[2968,30,2891,36],[2968,31,2891,37],[2968,34,2891,40,"args"],[2968,38,2891,44],[2968,39,2891,45,"i"],[2968,40,2891,46],[2968,43,2891,49],[2968,44,2891,50],[2968,45,2891,51],[2969,8,2892,12],[2970,6,2893,8],[2971,6,2894,8],[2971,13,2894,15],[2971,17,2894,19],[2971,18,2894,20,"_header"],[2971,25,2894,27],[2972,4,2895,4],[2973,4,2896,4],[2974,4,2897,4,"setHeader"],[2974,13,2897,13,"setHeader"],[2974,14,2897,14,"key"],[2974,17,2897,17],[2974,19,2897,19,"value"],[2974,24,2897,24],[2974,26,2897,26],[2975,6,2898,8],[2975,10,2898,12],[2975,11,2898,13,"_header"],[2975,18,2898,20],[2975,19,2898,21,"key"],[2975,22,2898,24],[2975,23,2898,25],[2975,26,2898,28,"value"],[2975,31,2898,33],[2975,35,2898,37,"SEVEN_TAG_ROSTER"],[2975,51,2898,53],[2975,52,2898,54,"key"],[2975,55,2898,57],[2975,56,2898,58],[2975,60,2898,62],[2975,64,2898,66],[2976,6,2899,8],[2976,13,2899,15],[2976,17,2899,19],[2976,18,2899,20,"getHeaders"],[2976,28,2899,30],[2976,29,2899,31],[2976,30,2899,32],[2977,4,2900,4],[2978,4,2901,4,"removeHeader"],[2978,16,2901,16,"removeHeader"],[2978,17,2901,17,"key"],[2978,20,2901,20],[2978,22,2901,22],[2979,6,2902,8],[2979,10,2902,12,"key"],[2979,13,2902,15],[2979,17,2902,19],[2979,21,2902,23],[2979,22,2902,24,"_header"],[2979,29,2902,31],[2979,31,2902,33],[2980,8,2903,12],[2980,12,2903,16],[2980,13,2903,17,"_header"],[2980,20,2903,24],[2980,21,2903,25,"key"],[2980,24,2903,28],[2980,25,2903,29],[2980,28,2903,32,"SEVEN_TAG_ROSTER"],[2980,44,2903,48],[2980,45,2903,49,"key"],[2980,48,2903,52],[2980,49,2903,53],[2980,53,2903,57],[2980,57,2903,61],[2981,8,2904,12],[2981,15,2904,19],[2981,19,2904,23],[2982,6,2905,8],[2983,6,2906,8],[2983,13,2906,15],[2983,18,2906,20],[2984,4,2907,4],[2985,4,2908,4],[2986,4,2909,4,"getHeaders"],[2986,14,2909,14,"getHeaders"],[2986,15,2909,14],[2986,17,2909,17],[2987,6,2910,8],[2987,12,2910,14,"nonNullHeaders"],[2987,26,2910,28],[2987,29,2910,31],[2987,30,2910,32],[2987,31,2910,33],[2988,6,2911,8],[2988,11,2911,13],[2988,17,2911,19],[2988,18,2911,20,"key"],[2988,21,2911,23],[2988,23,2911,25,"value"],[2988,28,2911,30],[2988,29,2911,31],[2988,33,2911,35,"Object"],[2988,39,2911,41],[2988,40,2911,42,"entries"],[2988,47,2911,49],[2988,48,2911,50],[2988,52,2911,54],[2988,53,2911,55,"_header"],[2988,60,2911,62],[2988,61,2911,63],[2988,63,2911,65],[2989,8,2912,12],[2989,12,2912,16,"value"],[2989,17,2912,21],[2989,22,2912,26],[2989,26,2912,30],[2989,28,2912,32],[2990,10,2913,16,"nonNullHeaders"],[2990,24,2913,30],[2990,25,2913,31,"key"],[2990,28,2913,34],[2990,29,2913,35],[2990,32,2913,38,"value"],[2990,37,2913,43],[2991,8,2914,12],[2992,6,2915,8],[2993,6,2916,8],[2993,13,2916,15,"nonNullHeaders"],[2993,27,2916,29],[2994,4,2917,4],[2995,4,2918,4,"loadPgn"],[2995,11,2918,11,"loadPgn"],[2995,12,2918,12,"pgn"],[2995,15,2918,15],[2995,17,2918,17],[2996,6,2918,19,"strict"],[2996,12,2918,25],[2996,15,2918,28],[2996,20,2918,33],[2997,6,2918,35,"newlineChar"],[2997,17,2918,46],[2997,20,2918,49],[2998,4,2918,58],[2998,5,2918,59],[2998,8,2918,62],[2998,9,2918,63],[2998,10,2918,64],[2998,12,2918,66],[2999,6,2919,8],[3000,6,2920,8],[3000,10,2920,12,"newlineChar"],[3000,21,2920,23],[3000,26,2920,28],[3000,33,2920,35],[3000,35,2920,37],[3001,8,2921,12,"pgn"],[3001,11,2921,15],[3001,14,2921,18,"pgn"],[3001,17,2921,21],[3001,18,2921,22,"replace"],[3001,25,2921,29],[3001,26,2921,30],[3001,30,2921,34,"RegExp"],[3001,36,2921,40],[3001,37,2921,41,"newlineChar"],[3001,48,2921,52],[3001,50,2921,54],[3001,53,2921,57],[3001,54,2921,58],[3001,56,2921,60],[3001,60,2921,64],[3001,61,2921,65],[3002,6,2922,8],[3003,6,2923,8],[3003,12,2923,14,"parsedPgn"],[3003,21,2923,23],[3003,24,2923,26,"peg$parse"],[3003,33,2923,35],[3003,34,2923,36,"pgn"],[3003,37,2923,39],[3003,38,2923,40],[3004,6,2924,8],[3005,6,2925,8],[3005,10,2925,12],[3005,11,2925,13,"reset"],[3005,16,2925,18],[3005,17,2925,19],[3005,18,2925,20],[3006,6,2926,8],[3007,6,2927,8],[3007,12,2927,14,"headers"],[3007,19,2927,21],[3007,22,2927,24,"parsedPgn"],[3007,31,2927,33],[3007,32,2927,34,"headers"],[3007,39,2927,41],[3008,6,2928,8],[3008,10,2928,12,"fen"],[3008,13,2928,15],[3008,16,2928,18],[3008,18,2928,20],[3009,6,2929,8],[3009,11,2929,13],[3009,17,2929,19,"key"],[3009,20,2929,22],[3009,24,2929,26,"headers"],[3009,31,2929,33],[3009,33,2929,35],[3010,8,2930,12],[3011,8,2931,12],[3011,12,2931,16,"key"],[3011,15,2931,19],[3011,16,2931,20,"toLowerCase"],[3011,27,2931,31],[3011,28,2931,32],[3011,29,2931,33],[3011,34,2931,38],[3011,39,2931,43],[3011,41,2931,45],[3012,10,2932,16,"fen"],[3012,13,2932,19],[3012,16,2932,22,"headers"],[3012,23,2932,29],[3012,24,2932,30,"key"],[3012,27,2932,33],[3012,28,2932,34],[3013,8,2933,12],[3014,8,2934,12],[3014,12,2934,16],[3014,13,2934,17,"header"],[3014,19,2934,23],[3014,20,2934,24,"key"],[3014,23,2934,27],[3014,25,2934,29,"headers"],[3014,32,2934,36],[3014,33,2934,37,"key"],[3014,36,2934,40],[3014,37,2934,41],[3014,38,2934,42],[3015,6,2935,8],[3016,6,2936,8],[3017,0,2937,0],[3018,0,2938,0],[3019,0,2939,0],[3020,6,2940,8],[3020,10,2940,12],[3020,11,2940,13,"strict"],[3020,17,2940,19],[3020,19,2940,21],[3021,8,2941,12],[3021,12,2941,16,"fen"],[3021,15,2941,19],[3021,17,2941,21],[3022,10,2942,16],[3022,14,2942,20],[3022,15,2942,21,"load"],[3022,19,2942,25],[3022,20,2942,26,"fen"],[3022,23,2942,29],[3022,25,2942,31],[3023,12,2942,33,"preserveHeaders"],[3023,27,2942,48],[3023,29,2942,50],[3024,10,2942,55],[3024,11,2942,56],[3024,12,2942,57],[3025,8,2943,12],[3026,6,2944,8],[3026,7,2944,9],[3026,13,2945,13],[3027,8,2946,12],[3028,0,2947,0],[3029,0,2948,0],[3030,0,2949,0],[3031,8,2950,12],[3031,12,2950,16,"headers"],[3031,19,2950,23],[3031,20,2950,24],[3031,27,2950,31],[3031,28,2950,32],[3031,33,2950,37],[3031,36,2950,40],[3031,38,2950,42],[3032,10,2951,16],[3032,14,2951,20],[3032,16,2951,22],[3032,21,2951,27],[3032,25,2951,31,"headers"],[3032,32,2951,38],[3032,33,2951,39],[3032,35,2951,41],[3033,12,2952,20],[3033,18,2952,26],[3033,22,2952,30,"Error"],[3033,27,2952,35],[3033,28,2952,36],[3033,82,2952,90],[3033,83,2952,91],[3034,10,2953,16],[3035,10,2954,16],[3036,10,2955,16],[3036,14,2955,20],[3036,15,2955,21,"load"],[3036,19,2955,25],[3036,20,2955,26,"headers"],[3036,27,2955,33],[3036,28,2955,34],[3036,33,2955,39],[3036,34,2955,40],[3036,36,2955,42],[3037,12,2955,44,"preserveHeaders"],[3037,27,2955,59],[3037,29,2955,61],[3038,10,2955,66],[3038,11,2955,67],[3038,12,2955,68],[3039,8,2956,12],[3040,6,2957,8],[3041,6,2958,8],[3041,10,2958,12,"node"],[3041,14,2958,16],[3041,17,2958,19,"parsedPgn"],[3041,26,2958,28],[3041,27,2958,29,"root"],[3041,31,2958,33],[3042,6,2959,8],[3042,13,2959,15,"node"],[3042,17,2959,19],[3042,19,2959,21],[3043,8,2960,12],[3043,12,2960,16,"node"],[3043,16,2960,20],[3043,17,2960,21,"move"],[3043,21,2960,25],[3043,23,2960,27],[3044,10,2961,16],[3044,16,2961,22,"move"],[3044,20,2961,26],[3044,23,2961,29],[3044,27,2961,33],[3044,28,2961,34,"_moveFromSan"],[3044,40,2961,46],[3044,41,2961,47,"node"],[3044,45,2961,51],[3044,46,2961,52,"move"],[3044,50,2961,56],[3044,52,2961,58,"strict"],[3044,58,2961,64],[3044,59,2961,65],[3045,10,2962,16],[3045,14,2962,20,"move"],[3045,18,2962,24],[3045,22,2962,28],[3045,26,2962,32],[3045,28,2962,34],[3046,12,2963,20],[3046,18,2963,26],[3046,22,2963,30,"Error"],[3046,27,2963,35],[3046,28,2963,36],[3046,52,2963,60,"node"],[3046,56,2963,64],[3046,57,2963,65,"move"],[3046,61,2963,69],[3046,63,2963,71],[3046,64,2963,72],[3047,10,2964,16],[3047,11,2964,17],[3047,17,2965,21],[3048,12,2966,20],[3048,16,2966,24],[3048,17,2966,25,"_makeMove"],[3048,26,2966,34],[3048,27,2966,35,"move"],[3048,31,2966,39],[3048,32,2966,40],[3049,12,2967,20],[3049,16,2967,24],[3049,17,2967,25,"_incPositionCount"],[3049,34,2967,42],[3049,35,2967,43],[3049,36,2967,44],[3050,10,2968,16],[3051,8,2969,12],[3052,8,2970,12],[3052,12,2970,16,"node"],[3052,16,2970,20],[3052,17,2970,21,"comment"],[3052,24,2970,28],[3052,29,2970,33,"undefined"],[3052,38,2970,42],[3052,40,2970,44],[3053,10,2971,16],[3053,14,2971,20],[3053,15,2971,21,"_comments"],[3053,24,2971,30],[3053,25,2971,31],[3053,29,2971,35],[3053,30,2971,36,"fen"],[3053,33,2971,39],[3053,34,2971,40],[3053,35,2971,41],[3053,36,2971,42],[3053,39,2971,45,"node"],[3053,43,2971,49],[3053,44,2971,50,"comment"],[3053,51,2971,57],[3054,8,2972,12],[3055,8,2973,12,"node"],[3055,12,2973,16],[3055,15,2973,19,"node"],[3055,19,2973,23],[3055,20,2973,24,"variations"],[3055,30,2973,34],[3055,31,2973,35],[3055,32,2973,36],[3055,33,2973,37],[3056,6,2974,8],[3057,6,2975,8],[3058,0,2976,0],[3059,0,2977,0],[3060,0,2978,0],[3061,0,2979,0],[3062,6,2980,8],[3062,12,2980,14,"result"],[3062,18,2980,20],[3062,21,2980,23,"parsedPgn"],[3062,30,2980,32],[3062,31,2980,33,"result"],[3062,37,2980,39],[3063,6,2981,8],[3063,10,2981,12,"result"],[3063,16,2981,18],[3063,20,2982,12,"Object"],[3063,26,2982,18],[3063,27,2982,19,"keys"],[3063,31,2982,23],[3063,32,2982,24],[3063,36,2982,28],[3063,37,2982,29,"_header"],[3063,44,2982,36],[3063,45,2982,37],[3063,46,2982,38,"length"],[3063,52,2982,44],[3063,56,2983,12],[3063,60,2983,16],[3063,61,2983,17,"_header"],[3063,68,2983,24],[3063,69,2983,25],[3063,77,2983,33],[3063,78,2983,34],[3063,83,2983,39,"result"],[3063,89,2983,45],[3063,91,2983,47],[3064,8,2984,12],[3064,12,2984,16],[3064,13,2984,17,"setHeader"],[3064,22,2984,26],[3064,23,2984,27],[3064,31,2984,35],[3064,33,2984,37,"result"],[3064,39,2984,43],[3064,40,2984,44],[3065,6,2985,8],[3066,4,2986,4],[3067,4,2987,4],[3068,0,2988,0],[3069,0,2989,0],[3070,0,2990,0],[3071,0,2991,0],[3072,0,2992,0],[3073,0,2993,0],[3074,0,2994,0],[3075,0,2995,0],[3076,0,2996,0],[3077,0,2997,0],[3078,4,2998,4,"_moveToSan"],[3078,14,2998,14,"_moveToSan"],[3078,15,2998,15,"move"],[3078,19,2998,19],[3078,21,2998,21,"moves"],[3078,26,2998,26],[3078,28,2998,28],[3079,6,2999,8],[3079,10,2999,12,"output"],[3079,16,2999,18],[3079,19,2999,21],[3079,21,2999,23],[3080,6,3000,8],[3080,10,3000,12,"move"],[3080,14,3000,16],[3080,15,3000,17,"flags"],[3080,20,3000,22],[3080,23,3000,25,"BITS"],[3080,27,3000,29],[3080,28,3000,30,"KSIDE_CASTLE"],[3080,40,3000,42],[3080,42,3000,44],[3081,8,3001,12,"output"],[3081,14,3001,18],[3081,17,3001,21],[3081,22,3001,26],[3082,6,3002,8],[3082,7,3002,9],[3082,13,3003,13],[3082,17,3003,17,"move"],[3082,21,3003,21],[3082,22,3003,22,"flags"],[3082,27,3003,27],[3082,30,3003,30,"BITS"],[3082,34,3003,34],[3082,35,3003,35,"QSIDE_CASTLE"],[3082,47,3003,47],[3082,49,3003,49],[3083,8,3004,12,"output"],[3083,14,3004,18],[3083,17,3004,21],[3083,24,3004,28],[3084,6,3005,8],[3084,7,3005,9],[3084,13,3006,13],[3084,17,3006,17,"move"],[3084,21,3006,21],[3084,22,3006,22,"flags"],[3084,27,3006,27],[3084,30,3006,30,"BITS"],[3084,34,3006,34],[3084,35,3006,35,"NULL_MOVE"],[3084,44,3006,44],[3084,46,3006,46],[3085,8,3007,12],[3085,15,3007,19,"SAN_NULLMOVE"],[3085,27,3007,31],[3086,6,3008,8],[3086,7,3008,9],[3086,13,3009,13],[3087,8,3010,12],[3087,12,3010,16,"move"],[3087,16,3010,20],[3087,17,3010,21,"piece"],[3087,22,3010,26],[3087,27,3010,31,"PAWN"],[3087,31,3010,35],[3087,33,3010,37],[3088,10,3011,16],[3088,16,3011,22,"disambiguator"],[3088,29,3011,35],[3088,32,3011,38,"getDisambiguator"],[3088,48,3011,54],[3088,49,3011,55,"move"],[3088,53,3011,59],[3088,55,3011,61,"moves"],[3088,60,3011,66],[3088,61,3011,67],[3089,10,3012,16,"output"],[3089,16,3012,22],[3089,20,3012,26,"move"],[3089,24,3012,30],[3089,25,3012,31,"piece"],[3089,30,3012,36],[3089,31,3012,37,"toUpperCase"],[3089,42,3012,48],[3089,43,3012,49],[3089,44,3012,50],[3089,47,3012,53,"disambiguator"],[3089,60,3012,66],[3090,8,3013,12],[3091,8,3014,12],[3091,12,3014,16,"move"],[3091,16,3014,20],[3091,17,3014,21,"flags"],[3091,22,3014,26],[3091,26,3014,30,"BITS"],[3091,30,3014,34],[3091,31,3014,35,"CAPTURE"],[3091,38,3014,42],[3091,41,3014,45,"BITS"],[3091,45,3014,49],[3091,46,3014,50,"EP_CAPTURE"],[3091,56,3014,60],[3091,57,3014,61],[3091,59,3014,63],[3092,10,3015,16],[3092,14,3015,20,"move"],[3092,18,3015,24],[3092,19,3015,25,"piece"],[3092,24,3015,30],[3092,29,3015,35,"PAWN"],[3092,33,3015,39],[3092,35,3015,41],[3093,12,3016,20,"output"],[3093,18,3016,26],[3093,22,3016,30,"algebraic"],[3093,31,3016,39],[3093,32,3016,40,"move"],[3093,36,3016,44],[3093,37,3016,45,"from"],[3093,41,3016,49],[3093,42,3016,50],[3093,43,3016,51],[3093,44,3016,52],[3093,45,3016,53],[3094,10,3017,16],[3095,10,3018,16,"output"],[3095,16,3018,22],[3095,20,3018,26],[3095,23,3018,29],[3096,8,3019,12],[3097,8,3020,12,"output"],[3097,14,3020,18],[3097,18,3020,22,"algebraic"],[3097,27,3020,31],[3097,28,3020,32,"move"],[3097,32,3020,36],[3097,33,3020,37,"to"],[3097,35,3020,39],[3097,36,3020,40],[3098,8,3021,12],[3098,12,3021,16,"move"],[3098,16,3021,20],[3098,17,3021,21,"promotion"],[3098,26,3021,30],[3098,28,3021,32],[3099,10,3022,16,"output"],[3099,16,3022,22],[3099,20,3022,26],[3099,23,3022,29],[3099,26,3022,32,"move"],[3099,30,3022,36],[3099,31,3022,37,"promotion"],[3099,40,3022,46],[3099,41,3022,47,"toUpperCase"],[3099,52,3022,58],[3099,53,3022,59],[3099,54,3022,60],[3100,8,3023,12],[3101,6,3024,8],[3102,6,3025,8],[3102,10,3025,12],[3102,11,3025,13,"_makeMove"],[3102,20,3025,22],[3102,21,3025,23,"move"],[3102,25,3025,27],[3102,26,3025,28],[3103,6,3026,8],[3103,10,3026,12],[3103,14,3026,16],[3103,15,3026,17,"isCheck"],[3103,22,3026,24],[3103,23,3026,25],[3103,24,3026,26],[3103,26,3026,28],[3104,8,3027,12],[3104,12,3027,16],[3104,16,3027,20],[3104,17,3027,21,"isCheckmate"],[3104,28,3027,32],[3104,29,3027,33],[3104,30,3027,34],[3104,32,3027,36],[3105,10,3028,16,"output"],[3105,16,3028,22],[3105,20,3028,26],[3105,23,3028,29],[3106,8,3029,12],[3106,9,3029,13],[3106,15,3030,17],[3107,10,3031,16,"output"],[3107,16,3031,22],[3107,20,3031,26],[3107,23,3031,29],[3108,8,3032,12],[3109,6,3033,8],[3110,6,3034,8],[3110,10,3034,12],[3110,11,3034,13,"_undoMove"],[3110,20,3034,22],[3110,21,3034,23],[3110,22,3034,24],[3111,6,3035,8],[3111,13,3035,15,"output"],[3111,19,3035,21],[3112,4,3036,4],[3113,4,3037,4],[3114,4,3038,4,"_moveFromSan"],[3114,16,3038,16,"_moveFromSan"],[3114,17,3038,17,"move"],[3114,21,3038,21],[3114,23,3038,23,"strict"],[3114,29,3038,29],[3114,32,3038,32],[3114,37,3038,37],[3114,39,3038,39],[3115,6,3039,8],[3116,6,3040,8],[3116,10,3040,12,"cleanMove"],[3116,19,3040,21],[3116,22,3040,24,"strippedSan"],[3116,33,3040,35],[3116,34,3040,36,"move"],[3116,38,3040,40],[3116,39,3040,41],[3117,6,3041,8],[3117,10,3041,12],[3117,11,3041,13,"strict"],[3117,17,3041,19],[3117,19,3041,21],[3118,8,3042,12],[3118,12,3042,16,"cleanMove"],[3118,21,3042,25],[3118,26,3042,30],[3118,31,3042,35],[3118,33,3042,37],[3119,10,3043,16,"cleanMove"],[3119,19,3043,25],[3119,22,3043,28],[3119,27,3043,33],[3120,8,3044,12],[3120,9,3044,13],[3120,15,3045,17],[3120,19,3045,21,"cleanMove"],[3120,28,3045,30],[3120,33,3045,35],[3120,40,3045,42],[3120,42,3045,44],[3121,10,3046,16,"cleanMove"],[3121,19,3046,25],[3121,22,3046,28],[3121,29,3046,35],[3122,8,3047,12],[3123,6,3048,8],[3124,6,3049,8],[3125,6,3050,8],[3125,10,3050,12,"cleanMove"],[3125,19,3050,21],[3125,23,3050,25,"SAN_NULLMOVE"],[3125,35,3050,37],[3125,37,3050,39],[3126,8,3051,12],[3126,14,3051,18,"res"],[3126,17,3051,21],[3126,20,3051,24],[3127,10,3052,16,"color"],[3127,15,3052,21],[3127,17,3052,23],[3127,21,3052,27],[3127,22,3052,28,"_turn"],[3127,27,3052,33],[3128,10,3053,16,"from"],[3128,14,3053,20],[3128,16,3053,22],[3128,17,3053,23],[3129,10,3054,16,"to"],[3129,12,3054,18],[3129,14,3054,20],[3129,15,3054,21],[3130,10,3055,16,"piece"],[3130,15,3055,21],[3130,17,3055,23],[3130,20,3055,26],[3131,10,3056,16,"flags"],[3131,15,3056,21],[3131,17,3056,23,"BITS"],[3131,21,3056,27],[3131,22,3056,28,"NULL_MOVE"],[3132,8,3057,12],[3132,9,3057,13],[3133,8,3058,12],[3133,15,3058,19,"res"],[3133,18,3058,22],[3134,6,3059,8],[3135,6,3060,8],[3135,10,3060,12,"pieceType"],[3135,19,3060,21],[3135,22,3060,24,"inferPieceType"],[3135,36,3060,38],[3135,37,3060,39,"cleanMove"],[3135,46,3060,48],[3135,47,3060,49],[3136,6,3061,8],[3136,10,3061,12,"moves"],[3136,15,3061,17],[3136,18,3061,20],[3136,22,3061,24],[3136,23,3061,25,"_moves"],[3136,29,3061,31],[3136,30,3061,32],[3137,8,3061,34,"legal"],[3137,13,3061,39],[3137,15,3061,41],[3137,19,3061,45],[3138,8,3061,47,"piece"],[3138,13,3061,52],[3138,15,3061,54,"pieceType"],[3139,6,3061,64],[3139,7,3061,65],[3139,8,3061,66],[3140,6,3062,8],[3141,6,3063,8],[3141,11,3063,13],[3141,15,3063,17,"i"],[3141,16,3063,18],[3141,19,3063,21],[3141,20,3063,22],[3141,22,3063,24,"len"],[3141,25,3063,27],[3141,28,3063,30,"moves"],[3141,33,3063,35],[3141,34,3063,36,"length"],[3141,40,3063,42],[3141,42,3063,44,"i"],[3141,43,3063,45],[3141,46,3063,48,"len"],[3141,49,3063,51],[3141,51,3063,53,"i"],[3141,52,3063,54],[3141,54,3063,56],[3141,56,3063,58],[3142,8,3064,12],[3142,12,3064,16,"cleanMove"],[3142,21,3064,25],[3142,26,3064,30,"strippedSan"],[3142,37,3064,41],[3142,38,3064,42],[3142,42,3064,46],[3142,43,3064,47,"_moveToSan"],[3142,53,3064,57],[3142,54,3064,58,"moves"],[3142,59,3064,63],[3142,60,3064,64,"i"],[3142,61,3064,65],[3142,62,3064,66],[3142,64,3064,68,"moves"],[3142,69,3064,73],[3142,70,3064,74],[3142,71,3064,75],[3142,73,3064,77],[3143,10,3065,16],[3143,17,3065,23,"moves"],[3143,22,3065,28],[3143,23,3065,29,"i"],[3143,24,3065,30],[3143,25,3065,31],[3144,8,3066,12],[3145,6,3067,8],[3146,6,3068,8],[3147,6,3069,8],[3147,10,3069,12,"strict"],[3147,16,3069,18],[3147,18,3069,20],[3148,8,3070,12],[3148,15,3070,19],[3148,19,3070,23],[3149,6,3071,8],[3150,6,3072,8],[3150,10,3072,12,"piece"],[3150,15,3072,17],[3150,18,3072,20,"undefined"],[3150,27,3072,29],[3151,6,3073,8],[3151,10,3073,12,"matches"],[3151,17,3073,19],[3151,20,3073,22,"undefined"],[3151,29,3073,31],[3152,6,3074,8],[3152,10,3074,12,"from"],[3152,14,3074,16],[3152,17,3074,19,"undefined"],[3152,26,3074,28],[3153,6,3075,8],[3153,10,3075,12,"to"],[3153,12,3075,14],[3153,15,3075,17,"undefined"],[3153,24,3075,26],[3154,6,3076,8],[3154,10,3076,12,"promotion"],[3154,19,3076,21],[3154,22,3076,24,"undefined"],[3154,31,3076,33],[3155,6,3077,8],[3156,0,3078,0],[3157,0,3079,0],[3158,0,3080,0],[3159,0,3081,0],[3160,0,3082,0],[3161,0,3083,0],[3162,0,3084,0],[3163,0,3085,0],[3164,0,3086,0],[3165,0,3087,0],[3166,0,3088,0],[3167,0,3089,0],[3168,0,3090,0],[3169,0,3091,0],[3170,0,3092,0],[3171,6,3093,8],[3171,10,3093,12,"overlyDisambiguated"],[3171,29,3093,31],[3171,32,3093,34],[3171,37,3093,39],[3172,6,3094,8,"matches"],[3172,13,3094,15],[3172,16,3094,18,"cleanMove"],[3172,25,3094,27],[3172,26,3094,28,"match"],[3172,31,3094,33],[3172,32,3094,34],[3172,92,3094,94],[3172,93,3094,95],[3173,6,3095,8],[3173,10,3095,12,"matches"],[3173,17,3095,19],[3173,19,3095,21],[3174,8,3096,12,"piece"],[3174,13,3096,17],[3174,16,3096,20,"matches"],[3174,23,3096,27],[3174,24,3096,28],[3174,25,3096,29],[3174,26,3096,30],[3175,8,3097,12,"from"],[3175,12,3097,16],[3175,15,3097,19,"matches"],[3175,22,3097,26],[3175,23,3097,27],[3175,24,3097,28],[3175,25,3097,29],[3176,8,3098,12,"to"],[3176,10,3098,14],[3176,13,3098,17,"matches"],[3176,20,3098,24],[3176,21,3098,25],[3176,22,3098,26],[3176,23,3098,27],[3177,8,3099,12,"promotion"],[3177,17,3099,21],[3177,20,3099,24,"matches"],[3177,27,3099,31],[3177,28,3099,32],[3177,29,3099,33],[3177,30,3099,34],[3178,8,3100,12],[3178,12,3100,16,"from"],[3178,16,3100,20],[3178,17,3100,21,"length"],[3178,23,3100,27],[3178,27,3100,31],[3178,28,3100,32],[3178,30,3100,34],[3179,10,3101,16,"overlyDisambiguated"],[3179,29,3101,35],[3179,32,3101,38],[3179,36,3101,42],[3180,8,3102,12],[3181,6,3103,8],[3181,7,3103,9],[3181,13,3104,13],[3182,8,3105,12],[3183,0,3106,0],[3184,0,3107,0],[3185,0,3108,0],[3186,0,3109,0],[3187,0,3110,0],[3188,8,3111,12,"matches"],[3188,15,3111,19],[3188,18,3111,22,"cleanMove"],[3188,27,3111,31],[3188,28,3111,32,"match"],[3188,33,3111,37],[3188,34,3111,38],[3188,96,3111,100],[3188,97,3111,101],[3189,8,3112,12],[3189,12,3112,16,"matches"],[3189,19,3112,23],[3189,21,3112,25],[3190,10,3113,16,"piece"],[3190,15,3113,21],[3190,18,3113,24,"matches"],[3190,25,3113,31],[3190,26,3113,32],[3190,27,3113,33],[3190,28,3113,34],[3191,10,3114,16,"from"],[3191,14,3114,20],[3191,17,3114,23,"matches"],[3191,24,3114,30],[3191,25,3114,31],[3191,26,3114,32],[3191,27,3114,33],[3192,10,3115,16,"to"],[3192,12,3115,18],[3192,15,3115,21,"matches"],[3192,22,3115,28],[3192,23,3115,29],[3192,24,3115,30],[3192,25,3115,31],[3193,10,3116,16,"promotion"],[3193,19,3116,25],[3193,22,3116,28,"matches"],[3193,29,3116,35],[3193,30,3116,36],[3193,31,3116,37],[3193,32,3116,38],[3194,10,3117,16],[3194,14,3117,20,"from"],[3194,18,3117,24],[3194,19,3117,25,"length"],[3194,25,3117,31],[3194,29,3117,35],[3194,30,3117,36],[3194,32,3117,38],[3195,12,3118,20,"overlyDisambiguated"],[3195,31,3118,39],[3195,34,3118,42],[3195,38,3118,46],[3196,10,3119,16],[3197,8,3120,12],[3198,6,3121,8],[3199,6,3122,8,"pieceType"],[3199,15,3122,17],[3199,18,3122,20,"inferPieceType"],[3199,32,3122,34],[3199,33,3122,35,"cleanMove"],[3199,42,3122,44],[3199,43,3122,45],[3200,6,3123,8,"moves"],[3200,11,3123,13],[3200,14,3123,16],[3200,18,3123,20],[3200,19,3123,21,"_moves"],[3200,25,3123,27],[3200,26,3123,28],[3201,8,3124,12,"legal"],[3201,13,3124,17],[3201,15,3124,19],[3201,19,3124,23],[3202,8,3125,12,"piece"],[3202,13,3125,17],[3202,15,3125,19,"piece"],[3202,20,3125,24],[3202,23,3125,27,"piece"],[3202,28,3125,32],[3202,31,3125,35,"pieceType"],[3203,6,3126,8],[3203,7,3126,9],[3203,8,3126,10],[3204,6,3127,8],[3204,10,3127,12],[3204,11,3127,13,"to"],[3204,13,3127,15],[3204,15,3127,17],[3205,8,3128,12],[3205,15,3128,19],[3205,19,3128,23],[3206,6,3129,8],[3207,6,3130,8],[3207,11,3130,13],[3207,15,3130,17,"i"],[3207,16,3130,18],[3207,19,3130,21],[3207,20,3130,22],[3207,22,3130,24,"len"],[3207,25,3130,27],[3207,28,3130,30,"moves"],[3207,33,3130,35],[3207,34,3130,36,"length"],[3207,40,3130,42],[3207,42,3130,44,"i"],[3207,43,3130,45],[3207,46,3130,48,"len"],[3207,49,3130,51],[3207,51,3130,53,"i"],[3207,52,3130,54],[3207,54,3130,56],[3207,56,3130,58],[3208,8,3131,12],[3208,12,3131,16],[3208,13,3131,17,"from"],[3208,17,3131,21],[3208,19,3131,23],[3209,10,3132,16],[3210,10,3133,16],[3210,14,3133,20,"cleanMove"],[3210,23,3133,29],[3210,28,3134,20,"strippedSan"],[3210,39,3134,31],[3210,40,3134,32],[3210,44,3134,36],[3210,45,3134,37,"_moveToSan"],[3210,55,3134,47],[3210,56,3134,48,"moves"],[3210,61,3134,53],[3210,62,3134,54,"i"],[3210,63,3134,55],[3210,64,3134,56],[3210,66,3134,58,"moves"],[3210,71,3134,63],[3210,72,3134,64],[3210,73,3134,65],[3210,74,3134,66,"replace"],[3210,81,3134,73],[3210,82,3134,74],[3210,85,3134,77],[3210,87,3134,79],[3210,89,3134,81],[3210,90,3134,82],[3210,92,3134,84],[3211,12,3135,20],[3211,19,3135,27,"moves"],[3211,24,3135,32],[3211,25,3135,33,"i"],[3211,26,3135,34],[3211,27,3135,35],[3212,10,3136,16],[3213,10,3137,16],[3214,8,3138,12],[3214,9,3138,13],[3214,15,3139,17],[3214,19,3139,21],[3214,20,3139,22],[3214,21,3139,23,"piece"],[3214,26,3139,28],[3214,30,3139,32,"piece"],[3214,35,3139,37],[3214,36,3139,38,"toLowerCase"],[3214,47,3139,49],[3214,48,3139,50],[3214,49,3139,51],[3214,53,3139,55,"moves"],[3214,58,3139,60],[3214,59,3139,61,"i"],[3214,60,3139,62],[3214,61,3139,63],[3214,62,3139,64,"piece"],[3214,67,3139,69],[3214,72,3140,16,"Ox88"],[3214,76,3140,20],[3214,77,3140,21,"from"],[3214,81,3140,25],[3214,82,3140,26],[3214,86,3140,30,"moves"],[3214,91,3140,35],[3214,92,3140,36,"i"],[3214,93,3140,37],[3214,94,3140,38],[3214,95,3140,39,"from"],[3214,99,3140,43],[3214,103,3141,16,"Ox88"],[3214,107,3141,20],[3214,108,3141,21,"to"],[3214,110,3141,23],[3214,111,3141,24],[3214,115,3141,28,"moves"],[3214,120,3141,33],[3214,121,3141,34,"i"],[3214,122,3141,35],[3214,123,3141,36],[3214,124,3141,37,"to"],[3214,126,3141,39],[3214,131,3142,17],[3214,132,3142,18,"promotion"],[3214,141,3142,27],[3214,145,3142,31,"promotion"],[3214,154,3142,40],[3214,155,3142,41,"toLowerCase"],[3214,166,3142,52],[3214,167,3142,53],[3214,168,3142,54],[3214,172,3142,58,"moves"],[3214,177,3142,63],[3214,178,3142,64,"i"],[3214,179,3142,65],[3214,180,3142,66],[3214,181,3142,67,"promotion"],[3214,190,3142,76],[3214,191,3142,77],[3214,193,3142,79],[3215,10,3143,16],[3215,17,3143,23,"moves"],[3215,22,3143,28],[3215,23,3143,29,"i"],[3215,24,3143,30],[3215,25,3143,31],[3216,8,3144,12],[3216,9,3144,13],[3216,15,3145,17],[3216,19,3145,21,"overlyDisambiguated"],[3216,38,3145,40],[3216,40,3145,42],[3217,10,3146,16],[3218,0,3147,0],[3219,0,3148,0],[3220,0,3149,0],[3221,10,3150,16],[3221,16,3150,22,"square"],[3221,22,3150,28],[3221,25,3150,31,"algebraic"],[3221,34,3150,40],[3221,35,3150,41,"moves"],[3221,40,3150,46],[3221,41,3150,47,"i"],[3221,42,3150,48],[3221,43,3150,49],[3221,44,3150,50,"from"],[3221,48,3150,54],[3221,49,3150,55],[3222,10,3151,16],[3222,14,3151,20],[3222,15,3151,21],[3222,16,3151,22,"piece"],[3222,21,3151,27],[3222,25,3151,31,"piece"],[3222,30,3151,36],[3222,31,3151,37,"toLowerCase"],[3222,42,3151,48],[3222,43,3151,49],[3222,44,3151,50],[3222,48,3151,54,"moves"],[3222,53,3151,59],[3222,54,3151,60,"i"],[3222,55,3151,61],[3222,56,3151,62],[3222,57,3151,63,"piece"],[3222,62,3151,68],[3222,67,3152,20,"Ox88"],[3222,71,3152,24],[3222,72,3152,25,"to"],[3222,74,3152,27],[3222,75,3152,28],[3222,79,3152,32,"moves"],[3222,84,3152,37],[3222,85,3152,38,"i"],[3222,86,3152,39],[3222,87,3152,40],[3222,88,3152,41,"to"],[3222,90,3152,43],[3222,95,3153,21,"from"],[3222,99,3153,25],[3222,103,3153,29,"square"],[3222,109,3153,35],[3222,110,3153,36],[3222,111,3153,37],[3222,112,3153,38],[3222,116,3153,42,"from"],[3222,120,3153,46],[3222,124,3153,50,"square"],[3222,130,3153,56],[3222,131,3153,57],[3222,132,3153,58],[3222,133,3153,59],[3222,134,3153,60],[3222,139,3154,21],[3222,140,3154,22,"promotion"],[3222,149,3154,31],[3222,153,3154,35,"promotion"],[3222,162,3154,44],[3222,163,3154,45,"toLowerCase"],[3222,174,3154,56],[3222,175,3154,57],[3222,176,3154,58],[3222,180,3154,62,"moves"],[3222,185,3154,67],[3222,186,3154,68,"i"],[3222,187,3154,69],[3222,188,3154,70],[3222,189,3154,71,"promotion"],[3222,198,3154,80],[3222,199,3154,81],[3222,201,3154,83],[3223,12,3155,20],[3223,19,3155,27,"moves"],[3223,24,3155,32],[3223,25,3155,33,"i"],[3223,26,3155,34],[3223,27,3155,35],[3224,10,3156,16],[3225,8,3157,12],[3226,6,3158,8],[3227,6,3159,8],[3227,13,3159,15],[3227,17,3159,19],[3228,4,3160,4],[3229,4,3161,4,"ascii"],[3229,9,3161,9,"ascii"],[3229,10,3161,9],[3229,12,3161,12],[3230,6,3162,8],[3230,10,3162,12,"s"],[3230,11,3162,13],[3230,14,3162,16],[3230,47,3162,49],[3231,6,3163,8],[3231,11,3163,13],[3231,15,3163,17,"i"],[3231,16,3163,18],[3231,19,3163,21,"Ox88"],[3231,23,3163,25],[3231,24,3163,26,"a8"],[3231,26,3163,28],[3231,28,3163,30,"i"],[3231,29,3163,31],[3231,33,3163,35,"Ox88"],[3231,37,3163,39],[3231,38,3163,40,"h1"],[3231,40,3163,42],[3231,42,3163,44,"i"],[3231,43,3163,45],[3231,45,3163,47],[3231,47,3163,49],[3232,8,3164,12],[3233,8,3165,12],[3233,12,3165,16,"file"],[3233,16,3165,20],[3233,17,3165,21,"i"],[3233,18,3165,22],[3233,19,3165,23],[3233,24,3165,28],[3233,25,3165,29],[3233,27,3165,31],[3234,10,3166,16,"s"],[3234,11,3166,17],[3234,15,3166,21],[3234,18,3166,24],[3234,21,3166,27],[3234,31,3166,37],[3234,32,3166,38,"rank"],[3234,36,3166,42],[3234,37,3166,43,"i"],[3234,38,3166,44],[3234,39,3166,45],[3234,40,3166,46],[3234,43,3166,49],[3234,47,3166,53],[3235,8,3167,12],[3236,8,3168,12],[3236,12,3168,16],[3236,16,3168,20],[3236,17,3168,21,"_board"],[3236,23,3168,27],[3236,24,3168,28,"i"],[3236,25,3168,29],[3236,26,3168,30],[3236,28,3168,32],[3237,10,3169,16],[3237,16,3169,22,"piece"],[3237,21,3169,27],[3237,24,3169,30],[3237,28,3169,34],[3237,29,3169,35,"_board"],[3237,35,3169,41],[3237,36,3169,42,"i"],[3237,37,3169,43],[3237,38,3169,44],[3237,39,3169,45,"type"],[3237,43,3169,49],[3238,10,3170,16],[3238,16,3170,22,"color"],[3238,21,3170,27],[3238,24,3170,30],[3238,28,3170,34],[3238,29,3170,35,"_board"],[3238,35,3170,41],[3238,36,3170,42,"i"],[3238,37,3170,43],[3238,38,3170,44],[3238,39,3170,45,"color"],[3238,44,3170,50],[3239,10,3171,16],[3239,16,3171,22,"symbol"],[3239,22,3171,28],[3239,25,3171,31,"color"],[3239,30,3171,36],[3239,35,3171,41,"WHITE"],[3239,40,3171,46],[3239,43,3171,49,"piece"],[3239,48,3171,54],[3239,49,3171,55,"toUpperCase"],[3239,60,3171,66],[3239,61,3171,67],[3239,62,3171,68],[3239,65,3171,71,"piece"],[3239,70,3171,76],[3239,71,3171,77,"toLowerCase"],[3239,82,3171,88],[3239,83,3171,89],[3239,84,3171,90],[3240,10,3172,16,"s"],[3240,11,3172,17],[3240,15,3172,21],[3240,18,3172,24],[3240,21,3172,27,"symbol"],[3240,27,3172,33],[3240,30,3172,36],[3240,33,3172,39],[3241,8,3173,12],[3241,9,3173,13],[3241,15,3174,17],[3242,10,3175,16,"s"],[3242,11,3175,17],[3242,15,3175,21],[3242,20,3175,26],[3243,8,3176,12],[3244,8,3177,12],[3244,12,3177,17,"i"],[3244,13,3177,18],[3244,16,3177,21],[3244,17,3177,22],[3244,20,3177,26],[3244,24,3177,30],[3244,26,3177,32],[3245,10,3178,16,"s"],[3245,11,3178,17],[3245,15,3178,21],[3245,20,3178,26],[3246,10,3179,16,"i"],[3246,11,3179,17],[3246,15,3179,21],[3246,16,3179,22],[3247,8,3180,12],[3248,6,3181,8],[3249,6,3182,8,"s"],[3249,7,3182,9],[3249,11,3182,13],[3249,44,3182,46],[3250,6,3183,8,"s"],[3250,7,3183,9],[3250,11,3183,13],[3250,40,3183,42],[3251,6,3184,8],[3251,13,3184,15,"s"],[3251,14,3184,16],[3252,4,3185,4],[3253,4,3186,4,"perft"],[3253,9,3186,9,"perft"],[3253,10,3186,10,"depth"],[3253,15,3186,15],[3253,17,3186,17],[3254,6,3187,8],[3254,12,3187,14,"moves"],[3254,17,3187,19],[3254,20,3187,22],[3254,24,3187,26],[3254,25,3187,27,"_moves"],[3254,31,3187,33],[3254,32,3187,34],[3255,8,3187,36,"legal"],[3255,13,3187,41],[3255,15,3187,43],[3256,6,3187,49],[3256,7,3187,50],[3256,8,3187,51],[3257,6,3188,8],[3257,10,3188,12,"nodes"],[3257,15,3188,17],[3257,18,3188,20],[3257,19,3188,21],[3258,6,3189,8],[3258,12,3189,14,"color"],[3258,17,3189,19],[3258,20,3189,22],[3258,24,3189,26],[3258,25,3189,27,"_turn"],[3258,30,3189,32],[3259,6,3190,8],[3259,11,3190,13],[3259,15,3190,17,"i"],[3259,16,3190,18],[3259,19,3190,21],[3259,20,3190,22],[3259,22,3190,24,"len"],[3259,25,3190,27],[3259,28,3190,30,"moves"],[3259,33,3190,35],[3259,34,3190,36,"length"],[3259,40,3190,42],[3259,42,3190,44,"i"],[3259,43,3190,45],[3259,46,3190,48,"len"],[3259,49,3190,51],[3259,51,3190,53,"i"],[3259,52,3190,54],[3259,54,3190,56],[3259,56,3190,58],[3260,8,3191,12],[3260,12,3191,16],[3260,13,3191,17,"_makeMove"],[3260,22,3191,26],[3260,23,3191,27,"moves"],[3260,28,3191,32],[3260,29,3191,33,"i"],[3260,30,3191,34],[3260,31,3191,35],[3260,32,3191,36],[3261,8,3192,12],[3261,12,3192,16],[3261,13,3192,17],[3261,17,3192,21],[3261,18,3192,22,"_isKingAttacked"],[3261,33,3192,37],[3261,34,3192,38,"color"],[3261,39,3192,43],[3261,40,3192,44],[3261,42,3192,46],[3262,10,3193,16],[3262,14,3193,20,"depth"],[3262,19,3193,25],[3262,22,3193,28],[3262,23,3193,29],[3262,26,3193,32],[3262,27,3193,33],[3262,29,3193,35],[3263,12,3194,20,"nodes"],[3263,17,3194,25],[3263,21,3194,29],[3263,25,3194,33],[3263,26,3194,34,"perft"],[3263,31,3194,39],[3263,32,3194,40,"depth"],[3263,37,3194,45],[3263,40,3194,48],[3263,41,3194,49],[3263,42,3194,50],[3264,10,3195,16],[3264,11,3195,17],[3264,17,3196,21],[3265,12,3197,20,"nodes"],[3265,17,3197,25],[3265,19,3197,27],[3266,10,3198,16],[3267,8,3199,12],[3268,8,3200,12],[3268,12,3200,16],[3268,13,3200,17,"_undoMove"],[3268,22,3200,26],[3268,23,3200,27],[3268,24,3200,28],[3269,6,3201,8],[3270,6,3202,8],[3270,13,3202,15,"nodes"],[3270,18,3202,20],[3271,4,3203,4],[3272,4,3204,4,"setTurn"],[3272,11,3204,11,"setTurn"],[3272,12,3204,12,"color"],[3272,17,3204,17],[3272,19,3204,19],[3273,6,3205,8],[3273,10,3205,12],[3273,14,3205,16],[3273,15,3205,17,"_turn"],[3273,20,3205,22],[3273,24,3205,26,"color"],[3273,29,3205,31],[3273,31,3205,33],[3274,8,3206,12],[3274,15,3206,19],[3274,20,3206,24],[3275,6,3207,8],[3276,6,3208,8],[3276,10,3208,12],[3276,11,3208,13,"move"],[3276,15,3208,17],[3276,16,3208,18],[3276,20,3208,22],[3276,21,3208,23],[3277,6,3209,8],[3277,13,3209,15],[3277,17,3209,19],[3278,4,3210,4],[3279,4,3211,4,"turn"],[3279,8,3211,8,"turn"],[3279,9,3211,8],[3279,11,3211,11],[3280,6,3212,8],[3280,13,3212,15],[3280,17,3212,19],[3280,18,3212,20,"_turn"],[3280,23,3212,25],[3281,4,3213,4],[3282,4,3214,4,"board"],[3282,9,3214,9,"board"],[3282,10,3214,9],[3282,12,3214,12],[3283,6,3215,8],[3283,12,3215,14,"output"],[3283,18,3215,20],[3283,21,3215,23],[3283,23,3215,25],[3284,6,3216,8],[3284,10,3216,12,"row"],[3284,13,3216,15],[3284,16,3216,18],[3284,18,3216,20],[3285,6,3217,8],[3285,11,3217,13],[3285,15,3217,17,"i"],[3285,16,3217,18],[3285,19,3217,21,"Ox88"],[3285,23,3217,25],[3285,24,3217,26,"a8"],[3285,26,3217,28],[3285,28,3217,30,"i"],[3285,29,3217,31],[3285,33,3217,35,"Ox88"],[3285,37,3217,39],[3285,38,3217,40,"h1"],[3285,40,3217,42],[3285,42,3217,44,"i"],[3285,43,3217,45],[3285,45,3217,47],[3285,47,3217,49],[3286,8,3218,12],[3286,12,3218,16],[3286,16,3218,20],[3286,17,3218,21,"_board"],[3286,23,3218,27],[3286,24,3218,28,"i"],[3286,25,3218,29],[3286,26,3218,30],[3286,30,3218,34],[3286,34,3218,38],[3286,36,3218,40],[3287,10,3219,16,"row"],[3287,13,3219,19],[3287,14,3219,20,"push"],[3287,18,3219,24],[3287,19,3219,25],[3287,23,3219,29],[3287,24,3219,30],[3288,8,3220,12],[3288,9,3220,13],[3288,15,3221,17],[3289,10,3222,16,"row"],[3289,13,3222,19],[3289,14,3222,20,"push"],[3289,18,3222,24],[3289,19,3222,25],[3290,12,3223,20,"square"],[3290,18,3223,26],[3290,20,3223,28,"algebraic"],[3290,29,3223,37],[3290,30,3223,38,"i"],[3290,31,3223,39],[3290,32,3223,40],[3291,12,3224,20,"type"],[3291,16,3224,24],[3291,18,3224,26],[3291,22,3224,30],[3291,23,3224,31,"_board"],[3291,29,3224,37],[3291,30,3224,38,"i"],[3291,31,3224,39],[3291,32,3224,40],[3291,33,3224,41,"type"],[3291,37,3224,45],[3292,12,3225,20,"color"],[3292,17,3225,25],[3292,19,3225,27],[3292,23,3225,31],[3292,24,3225,32,"_board"],[3292,30,3225,38],[3292,31,3225,39,"i"],[3292,32,3225,40],[3292,33,3225,41],[3292,34,3225,42,"color"],[3293,10,3226,16],[3293,11,3226,17],[3293,12,3226,18],[3294,8,3227,12],[3295,8,3228,12],[3295,12,3228,17,"i"],[3295,13,3228,18],[3295,16,3228,21],[3295,17,3228,22],[3295,20,3228,26],[3295,24,3228,30],[3295,26,3228,32],[3296,10,3229,16,"output"],[3296,16,3229,22],[3296,17,3229,23,"push"],[3296,21,3229,27],[3296,22,3229,28,"row"],[3296,25,3229,31],[3296,26,3229,32],[3297,10,3230,16,"row"],[3297,13,3230,19],[3297,16,3230,22],[3297,18,3230,24],[3298,10,3231,16,"i"],[3298,11,3231,17],[3298,15,3231,21],[3298,16,3231,22],[3299,8,3232,12],[3300,6,3233,8],[3301,6,3234,8],[3301,13,3234,15,"output"],[3301,19,3234,21],[3302,4,3235,4],[3303,4,3236,4,"squareColor"],[3303,15,3236,15,"squareColor"],[3303,16,3236,16,"square"],[3303,22,3236,22],[3303,24,3236,24],[3304,6,3237,8],[3304,10,3237,12,"square"],[3304,16,3237,18],[3304,20,3237,22,"Ox88"],[3304,24,3237,26],[3304,26,3237,28],[3305,8,3238,12],[3305,14,3238,18,"sq"],[3305,16,3238,20],[3305,19,3238,23,"Ox88"],[3305,23,3238,27],[3305,24,3238,28,"square"],[3305,30,3238,34],[3305,31,3238,35],[3306,8,3239,12],[3306,15,3239,19],[3306,16,3239,20,"rank"],[3306,20,3239,24],[3306,21,3239,25,"sq"],[3306,23,3239,27],[3306,24,3239,28],[3306,27,3239,31,"file"],[3306,31,3239,35],[3306,32,3239,36,"sq"],[3306,34,3239,38],[3306,35,3239,39],[3306,39,3239,43],[3306,40,3239,44],[3306,45,3239,49],[3306,46,3239,50],[3306,49,3239,53],[3306,56,3239,60],[3306,59,3239,63],[3306,65,3239,69],[3307,6,3240,8],[3308,6,3241,8],[3308,13,3241,15],[3308,17,3241,19],[3309,4,3242,4],[3310,4,3243,4,"history"],[3310,11,3243,11,"history"],[3310,12,3243,12],[3311,6,3243,14,"verbose"],[3311,13,3243,21],[3311,16,3243,24],[3312,4,3243,30],[3312,5,3243,31],[3312,8,3243,34],[3312,9,3243,35],[3312,10,3243,36],[3312,12,3243,38],[3313,6,3244,8],[3313,12,3244,14,"reversedHistory"],[3313,27,3244,29],[3313,30,3244,32],[3313,32,3244,34],[3314,6,3245,8],[3314,12,3245,14,"moveHistory"],[3314,23,3245,25],[3314,26,3245,28],[3314,28,3245,30],[3315,6,3246,8],[3315,13,3246,15],[3315,17,3246,19],[3315,18,3246,20,"_history"],[3315,26,3246,28],[3315,27,3246,29,"length"],[3315,33,3246,35],[3315,36,3246,38],[3315,37,3246,39],[3315,39,3246,41],[3316,8,3247,12,"reversedHistory"],[3316,23,3247,27],[3316,24,3247,28,"push"],[3316,28,3247,32],[3316,29,3247,33],[3316,33,3247,37],[3316,34,3247,38,"_undoMove"],[3316,43,3247,47],[3316,44,3247,48],[3316,45,3247,49],[3316,46,3247,50],[3317,6,3248,8],[3318,6,3249,8],[3318,13,3249,15],[3318,17,3249,19],[3318,19,3249,21],[3319,8,3250,12],[3319,14,3250,18,"move"],[3319,18,3250,22],[3319,21,3250,25,"reversedHistory"],[3319,36,3250,40],[3319,37,3250,41,"pop"],[3319,40,3250,44],[3319,41,3250,45],[3319,42,3250,46],[3320,8,3251,12],[3320,12,3251,16],[3320,13,3251,17,"move"],[3320,17,3251,21],[3320,19,3251,23],[3321,10,3252,16],[3322,8,3253,12],[3323,8,3254,12],[3323,12,3254,16,"verbose"],[3323,19,3254,23],[3323,21,3254,25],[3324,10,3255,16,"moveHistory"],[3324,21,3255,27],[3324,22,3255,28,"push"],[3324,26,3255,32],[3324,27,3255,33],[3324,31,3255,37,"Move"],[3324,35,3255,41],[3324,36,3255,42],[3324,40,3255,46],[3324,42,3255,48,"move"],[3324,46,3255,52],[3324,47,3255,53],[3324,48,3255,54],[3325,8,3256,12],[3325,9,3256,13],[3325,15,3257,17],[3326,10,3258,16,"moveHistory"],[3326,21,3258,27],[3326,22,3258,28,"push"],[3326,26,3258,32],[3326,27,3258,33],[3326,31,3258,37],[3326,32,3258,38,"_moveToSan"],[3326,42,3258,48],[3326,43,3258,49,"move"],[3326,47,3258,53],[3326,49,3258,55],[3326,53,3258,59],[3326,54,3258,60,"_moves"],[3326,60,3258,66],[3326,61,3258,67],[3326,62,3258,68],[3326,63,3258,69],[3326,64,3258,70],[3327,8,3259,12],[3328,8,3260,12],[3328,12,3260,16],[3328,13,3260,17,"_makeMove"],[3328,22,3260,26],[3328,23,3260,27,"move"],[3328,27,3260,31],[3328,28,3260,32],[3329,6,3261,8],[3330,6,3262,8],[3330,13,3262,15,"moveHistory"],[3330,24,3262,26],[3331,4,3263,4],[3332,4,3264,4],[3333,0,3265,0],[3334,0,3266,0],[3335,0,3267,0],[3336,4,3268,4,"_getPositionCount"],[3336,21,3268,21,"_getPositionCount"],[3336,22,3268,22,"hash"],[3336,26,3268,26],[3336,28,3268,28],[3337,6,3269,8],[3337,13,3269,15],[3337,17,3269,19],[3337,18,3269,20,"_positionCount"],[3337,32,3269,34],[3337,33,3269,35,"get"],[3337,36,3269,38],[3337,37,3269,39,"hash"],[3337,41,3269,43],[3337,42,3269,44],[3337,46,3269,48],[3337,47,3269,49],[3338,4,3270,4],[3339,4,3271,4,"_incPositionCount"],[3339,21,3271,21,"_incPositionCount"],[3339,22,3271,21],[3339,24,3271,24],[3340,6,3272,8],[3340,10,3272,12],[3340,11,3272,13,"_positionCount"],[3340,25,3272,27],[3340,26,3272,28,"set"],[3340,29,3272,31],[3340,30,3272,32],[3340,34,3272,36],[3340,35,3272,37,"_hash"],[3340,40,3272,42],[3340,42,3272,44],[3340,43,3272,45],[3340,47,3272,49],[3340,48,3272,50,"_positionCount"],[3340,62,3272,64],[3340,63,3272,65,"get"],[3340,66,3272,68],[3340,67,3272,69],[3340,71,3272,73],[3340,72,3272,74,"_hash"],[3340,77,3272,79],[3340,78,3272,80],[3340,82,3272,84],[3340,83,3272,85],[3340,87,3272,89],[3340,88,3272,90],[3340,89,3272,91],[3341,4,3273,4],[3342,4,3274,4,"_decPositionCount"],[3342,21,3274,21,"_decPositionCount"],[3342,22,3274,22,"hash"],[3342,26,3274,26],[3342,28,3274,28],[3343,6,3275,8],[3343,12,3275,14,"currentCount"],[3343,24,3275,26],[3343,27,3275,29],[3343,31,3275,33],[3343,32,3275,34,"_positionCount"],[3343,46,3275,48],[3343,47,3275,49,"get"],[3343,50,3275,52],[3343,51,3275,53,"hash"],[3343,55,3275,57],[3343,56,3275,58],[3343,60,3275,62],[3343,61,3275,63],[3344,6,3276,8],[3344,10,3276,12,"currentCount"],[3344,22,3276,24],[3344,27,3276,29],[3344,28,3276,30],[3344,30,3276,32],[3345,8,3277,12],[3345,12,3277,16],[3345,13,3277,17,"_positionCount"],[3345,27,3277,31],[3345,28,3277,32,"delete"],[3345,34,3277,38],[3345,35,3277,39,"hash"],[3345,39,3277,43],[3345,40,3277,44],[3346,6,3278,8],[3346,7,3278,9],[3346,13,3279,13],[3347,8,3280,12],[3347,12,3280,16],[3347,13,3280,17,"_positionCount"],[3347,27,3280,31],[3347,28,3280,32,"set"],[3347,31,3280,35],[3347,32,3280,36,"hash"],[3347,36,3280,40],[3347,38,3280,42,"currentCount"],[3347,50,3280,54],[3347,53,3280,57],[3347,54,3280,58],[3347,55,3280,59],[3348,6,3281,8],[3349,4,3282,4],[3350,4,3283,4,"_pruneComments"],[3350,18,3283,18,"_pruneComments"],[3350,19,3283,18],[3350,21,3283,21],[3351,6,3284,8],[3351,12,3284,14,"reversedHistory"],[3351,27,3284,29],[3351,30,3284,32],[3351,32,3284,34],[3352,6,3285,8],[3352,12,3285,14,"currentComments"],[3352,27,3285,29],[3352,30,3285,32],[3352,31,3285,33],[3352,32,3285,34],[3353,6,3286,8],[3353,12,3286,14,"copyComment"],[3353,23,3286,25],[3353,26,3286,29,"fen"],[3353,29,3286,32],[3353,33,3286,37],[3354,8,3287,12],[3354,12,3287,16,"fen"],[3354,15,3287,19],[3354,19,3287,23],[3354,23,3287,27],[3354,24,3287,28,"_comments"],[3354,33,3287,37],[3354,35,3287,39],[3355,10,3288,16,"currentComments"],[3355,25,3288,31],[3355,26,3288,32,"fen"],[3355,29,3288,35],[3355,30,3288,36],[3355,33,3288,39],[3355,37,3288,43],[3355,38,3288,44,"_comments"],[3355,47,3288,53],[3355,48,3288,54,"fen"],[3355,51,3288,57],[3355,52,3288,58],[3356,8,3289,12],[3357,6,3290,8],[3357,7,3290,9],[3358,6,3291,8],[3358,13,3291,15],[3358,17,3291,19],[3358,18,3291,20,"_history"],[3358,26,3291,28],[3358,27,3291,29,"length"],[3358,33,3291,35],[3358,36,3291,38],[3358,37,3291,39],[3358,39,3291,41],[3359,8,3292,12,"reversedHistory"],[3359,23,3292,27],[3359,24,3292,28,"push"],[3359,28,3292,32],[3359,29,3292,33],[3359,33,3292,37],[3359,34,3292,38,"_undoMove"],[3359,43,3292,47],[3359,44,3292,48],[3359,45,3292,49],[3359,46,3292,50],[3360,6,3293,8],[3361,6,3294,8,"copyComment"],[3361,17,3294,19],[3361,18,3294,20],[3361,22,3294,24],[3361,23,3294,25,"fen"],[3361,26,3294,28],[3361,27,3294,29],[3361,28,3294,30],[3361,29,3294,31],[3362,6,3295,8],[3362,13,3295,15],[3362,17,3295,19],[3362,19,3295,21],[3363,8,3296,12],[3363,14,3296,18,"move"],[3363,18,3296,22],[3363,21,3296,25,"reversedHistory"],[3363,36,3296,40],[3363,37,3296,41,"pop"],[3363,40,3296,44],[3363,41,3296,45],[3363,42,3296,46],[3364,8,3297,12],[3364,12,3297,16],[3364,13,3297,17,"move"],[3364,17,3297,21],[3364,19,3297,23],[3365,10,3298,16],[3366,8,3299,12],[3367,8,3300,12],[3367,12,3300,16],[3367,13,3300,17,"_makeMove"],[3367,22,3300,26],[3367,23,3300,27,"move"],[3367,27,3300,31],[3367,28,3300,32],[3368,8,3301,12,"copyComment"],[3368,19,3301,23],[3368,20,3301,24],[3368,24,3301,28],[3368,25,3301,29,"fen"],[3368,28,3301,32],[3368,29,3301,33],[3368,30,3301,34],[3368,31,3301,35],[3369,6,3302,8],[3370,6,3303,8],[3370,10,3303,12],[3370,11,3303,13,"_comments"],[3370,20,3303,22],[3370,23,3303,25,"currentComments"],[3370,38,3303,40],[3371,4,3304,4],[3372,4,3305,4,"getComment"],[3372,14,3305,14,"getComment"],[3372,15,3305,14],[3372,17,3305,17],[3373,6,3306,8],[3373,13,3306,15],[3373,17,3306,19],[3373,18,3306,20,"_comments"],[3373,27,3306,29],[3373,28,3306,30],[3373,32,3306,34],[3373,33,3306,35,"fen"],[3373,36,3306,38],[3373,37,3306,39],[3373,38,3306,40],[3373,39,3306,41],[3374,4,3307,4],[3375,4,3308,4,"setComment"],[3375,14,3308,14,"setComment"],[3375,15,3308,15,"comment"],[3375,22,3308,22],[3375,24,3308,24],[3376,6,3309,8],[3376,10,3309,12],[3376,11,3309,13,"_comments"],[3376,20,3309,22],[3376,21,3309,23],[3376,25,3309,27],[3376,26,3309,28,"fen"],[3376,29,3309,31],[3376,30,3309,32],[3376,31,3309,33],[3376,32,3309,34],[3376,35,3309,37,"comment"],[3376,42,3309,44],[3376,43,3309,45,"replace"],[3376,50,3309,52],[3376,51,3309,53],[3376,54,3309,56],[3376,56,3309,58],[3376,59,3309,61],[3376,60,3309,62],[3376,61,3309,63,"replace"],[3376,68,3309,70],[3376,69,3309,71],[3376,72,3309,74],[3376,74,3309,76],[3376,77,3309,79],[3376,78,3309,80],[3377,4,3310,4],[3378,4,3311,4],[3379,0,3312,0],[3380,0,3313,0],[3381,4,3314,4,"deleteComment"],[3381,17,3314,17,"deleteComment"],[3381,18,3314,17],[3381,20,3314,20],[3382,6,3315,8],[3382,13,3315,15],[3382,17,3315,19],[3382,18,3315,20,"removeComment"],[3382,31,3315,33],[3382,32,3315,34],[3382,33,3315,35],[3383,4,3316,4],[3384,4,3317,4,"removeComment"],[3384,17,3317,17,"removeComment"],[3384,18,3317,17],[3384,20,3317,20],[3385,6,3318,8],[3385,12,3318,14,"comment"],[3385,19,3318,21],[3385,22,3318,24],[3385,26,3318,28],[3385,27,3318,29,"_comments"],[3385,36,3318,38],[3385,37,3318,39],[3385,41,3318,43],[3385,42,3318,44,"fen"],[3385,45,3318,47],[3385,46,3318,48],[3385,47,3318,49],[3385,48,3318,50],[3386,6,3319,8],[3386,13,3319,15],[3386,17,3319,19],[3386,18,3319,20,"_comments"],[3386,27,3319,29],[3386,28,3319,30],[3386,32,3319,34],[3386,33,3319,35,"fen"],[3386,36,3319,38],[3386,37,3319,39],[3386,38,3319,40],[3386,39,3319,41],[3387,6,3320,8],[3387,13,3320,15,"comment"],[3387,20,3320,22],[3388,4,3321,4],[3389,4,3322,4,"getComments"],[3389,15,3322,15,"getComments"],[3389,16,3322,15],[3389,18,3322,18],[3390,6,3323,8],[3390,10,3323,12],[3390,11,3323,13,"_pruneComments"],[3390,25,3323,27],[3390,26,3323,28],[3390,27,3323,29],[3391,6,3324,8],[3391,13,3324,15,"Object"],[3391,19,3324,21],[3391,20,3324,22,"keys"],[3391,24,3324,26],[3391,25,3324,27],[3391,29,3324,31],[3391,30,3324,32,"_comments"],[3391,39,3324,41],[3391,40,3324,42],[3391,41,3324,43,"map"],[3391,44,3324,46],[3391,45,3324,48,"fen"],[3391,48,3324,51],[3391,52,3324,56],[3392,8,3325,12],[3392,15,3325,19],[3393,10,3325,21,"fen"],[3393,13,3325,24],[3393,15,3325,26,"fen"],[3393,18,3325,29],[3394,10,3325,31,"comment"],[3394,17,3325,38],[3394,19,3325,40],[3394,23,3325,44],[3394,24,3325,45,"_comments"],[3394,33,3325,54],[3394,34,3325,55,"fen"],[3394,37,3325,58],[3395,8,3325,60],[3395,9,3325,61],[3396,6,3326,8],[3396,7,3326,9],[3396,8,3326,10],[3397,4,3327,4],[3398,4,3328,4],[3399,0,3329,0],[3400,0,3330,0],[3401,4,3331,4,"deleteComments"],[3401,18,3331,18,"deleteComments"],[3401,19,3331,18],[3401,21,3331,21],[3402,6,3332,8],[3402,13,3332,15],[3402,17,3332,19],[3402,18,3332,20,"removeComments"],[3402,32,3332,34],[3402,33,3332,35],[3402,34,3332,36],[3403,4,3333,4],[3404,4,3334,4,"removeComments"],[3404,18,3334,18,"removeComments"],[3404,19,3334,18],[3404,21,3334,21],[3405,6,3335,8],[3405,10,3335,12],[3405,11,3335,13,"_pruneComments"],[3405,25,3335,27],[3405,26,3335,28],[3405,27,3335,29],[3406,6,3336,8],[3406,13,3336,15,"Object"],[3406,19,3336,21],[3406,20,3336,22,"keys"],[3406,24,3336,26],[3406,25,3336,27],[3406,29,3336,31],[3406,30,3336,32,"_comments"],[3406,39,3336,41],[3406,40,3336,42],[3406,41,3336,43,"map"],[3406,44,3336,46],[3406,45,3336,48,"fen"],[3406,48,3336,51],[3406,52,3336,56],[3407,8,3337,12],[3407,14,3337,18,"comment"],[3407,21,3337,25],[3407,24,3337,28],[3407,28,3337,32],[3407,29,3337,33,"_comments"],[3407,38,3337,42],[3407,39,3337,43,"fen"],[3407,42,3337,46],[3407,43,3337,47],[3408,8,3338,12],[3408,15,3338,19],[3408,19,3338,23],[3408,20,3338,24,"_comments"],[3408,29,3338,33],[3408,30,3338,34,"fen"],[3408,33,3338,37],[3408,34,3338,38],[3409,8,3339,12],[3409,15,3339,19],[3410,10,3339,21,"fen"],[3410,13,3339,24],[3410,15,3339,26,"fen"],[3410,18,3339,29],[3411,10,3339,31,"comment"],[3411,17,3339,38],[3411,19,3339,40,"comment"],[3412,8,3339,48],[3412,9,3339,49],[3413,6,3340,8],[3413,7,3340,9],[3413,8,3340,10],[3414,4,3341,4],[3415,4,3342,4,"setCastlingRights"],[3415,21,3342,21,"setCastlingRights"],[3415,22,3342,22,"color"],[3415,27,3342,27],[3415,29,3342,29,"rights"],[3415,35,3342,35],[3415,37,3342,37],[3416,6,3343,8],[3416,11,3343,13],[3416,17,3343,19,"side"],[3416,21,3343,23],[3416,25,3343,27],[3416,26,3343,28,"KING"],[3416,30,3343,32],[3416,32,3343,34,"QUEEN"],[3416,37,3343,39],[3416,38,3343,40],[3416,40,3343,42],[3417,8,3344,12],[3417,12,3344,16,"rights"],[3417,18,3344,22],[3417,19,3344,23,"side"],[3417,23,3344,27],[3417,24,3344,28],[3417,29,3344,33,"undefined"],[3417,38,3344,42],[3417,40,3344,44],[3418,10,3345,16],[3418,14,3345,20,"rights"],[3418,20,3345,26],[3418,21,3345,27,"side"],[3418,25,3345,31],[3418,26,3345,32],[3418,28,3345,34],[3419,12,3346,20],[3419,16,3346,24],[3419,17,3346,25,"_castling"],[3419,26,3346,34],[3419,27,3346,35,"color"],[3419,32,3346,40],[3419,33,3346,41],[3419,37,3346,45,"SIDES"],[3419,42,3346,50],[3419,43,3346,51,"side"],[3419,47,3346,55],[3419,48,3346,56],[3420,10,3347,16],[3420,11,3347,17],[3420,17,3348,21],[3421,12,3349,20],[3421,16,3349,24],[3421,17,3349,25,"_castling"],[3421,26,3349,34],[3421,27,3349,35,"color"],[3421,32,3349,40],[3421,33,3349,41],[3421,37,3349,45],[3421,38,3349,46,"SIDES"],[3421,43,3349,51],[3421,44,3349,52,"side"],[3421,48,3349,56],[3421,49,3349,57],[3422,10,3350,16],[3423,8,3351,12],[3424,6,3352,8],[3425,6,3353,8],[3425,10,3353,12],[3425,11,3353,13,"_updateCastlingRights"],[3425,32,3353,34],[3425,33,3353,35],[3425,34,3353,36],[3426,6,3354,8],[3426,12,3354,14,"result"],[3426,18,3354,20],[3426,21,3354,23],[3426,25,3354,27],[3426,26,3354,28,"getCastlingRights"],[3426,43,3354,45],[3426,44,3354,46,"color"],[3426,49,3354,51],[3426,50,3354,52],[3427,6,3355,8],[3427,13,3355,16],[3427,14,3355,17,"rights"],[3427,20,3355,23],[3427,21,3355,24,"KING"],[3427,25,3355,28],[3427,26,3355,29],[3427,31,3355,34,"undefined"],[3427,40,3355,43],[3427,44,3355,47,"rights"],[3427,50,3355,53],[3427,51,3355,54,"KING"],[3427,55,3355,58],[3427,56,3355,59],[3427,61,3355,64,"result"],[3427,67,3355,70],[3427,68,3355,71,"KING"],[3427,72,3355,75],[3427,73,3355,76],[3427,79,3356,13,"rights"],[3427,85,3356,19],[3427,86,3356,20,"QUEEN"],[3427,91,3356,25],[3427,92,3356,26],[3427,97,3356,31,"undefined"],[3427,106,3356,40],[3427,110,3356,44,"rights"],[3427,116,3356,50],[3427,117,3356,51,"QUEEN"],[3427,122,3356,56],[3427,123,3356,57],[3427,128,3356,62,"result"],[3427,134,3356,68],[3427,135,3356,69,"QUEEN"],[3427,140,3356,74],[3427,141,3356,75],[3427,142,3356,76],[3428,4,3357,4],[3429,4,3358,4,"getCastlingRights"],[3429,21,3358,21,"getCastlingRights"],[3429,22,3358,22,"color"],[3429,27,3358,27],[3429,29,3358,29],[3430,6,3359,8],[3430,13,3359,15],[3431,8,3360,12],[3431,9,3360,13,"KING"],[3431,13,3360,17],[3431,16,3360,20],[3431,17,3360,21],[3431,21,3360,25],[3431,22,3360,26,"_castling"],[3431,31,3360,35],[3431,32,3360,36,"color"],[3431,37,3360,41],[3431,38,3360,42],[3431,41,3360,45,"SIDES"],[3431,46,3360,50],[3431,47,3360,51,"KING"],[3431,51,3360,55],[3431,52,3360,56],[3431,58,3360,62],[3431,59,3360,63],[3432,8,3361,12],[3432,9,3361,13,"QUEEN"],[3432,14,3361,18],[3432,17,3361,21],[3432,18,3361,22],[3432,22,3361,26],[3432,23,3361,27,"_castling"],[3432,32,3361,36],[3432,33,3361,37,"color"],[3432,38,3361,42],[3432,39,3361,43],[3432,42,3361,46,"SIDES"],[3432,47,3361,51],[3432,48,3361,52,"QUEEN"],[3432,53,3361,57],[3432,54,3361,58],[3432,60,3361,64],[3433,6,3362,8],[3433,7,3362,9],[3434,4,3363,4],[3435,4,3364,4,"moveNumber"],[3435,14,3364,14,"moveNumber"],[3435,15,3364,14],[3435,17,3364,17],[3436,6,3365,8],[3436,13,3365,15],[3436,17,3365,19],[3436,18,3365,20,"_moveNumber"],[3436,29,3365,31],[3437,4,3366,4],[3438,2,3367,0],[3439,2,3369,0,"exports"],[3439,9,3369,7],[3439,10,3369,8,"BISHOP"],[3439,16,3369,14],[3439,19,3369,17,"BISHOP"],[3439,25,3369,23],[3440,2,3370,0,"exports"],[3440,9,3370,7],[3440,10,3370,8,"BLACK"],[3440,15,3370,13],[3440,18,3370,16,"BLACK"],[3440,23,3370,21],[3441,2,3371,0,"exports"],[3441,9,3371,7],[3441,10,3371,8,"Chess"],[3441,15,3371,13],[3441,18,3371,16,"Chess"],[3441,23,3371,21],[3442,2,3372,0,"exports"],[3442,9,3372,7],[3442,10,3372,8,"DEFAULT_POSITION"],[3442,26,3372,24],[3442,29,3372,27,"DEFAULT_POSITION"],[3442,45,3372,43],[3443,2,3373,0,"exports"],[3443,9,3373,7],[3443,10,3373,8,"KING"],[3443,14,3373,12],[3443,17,3373,15,"KING"],[3443,21,3373,19],[3444,2,3374,0,"exports"],[3444,9,3374,7],[3444,10,3374,8,"KNIGHT"],[3444,16,3374,14],[3444,19,3374,17,"KNIGHT"],[3444,25,3374,23],[3445,2,3375,0,"exports"],[3445,9,3375,7],[3445,10,3375,8,"Move"],[3445,14,3375,12],[3445,17,3375,15,"Move"],[3445,21,3375,19],[3446,2,3376,0,"exports"],[3446,9,3376,7],[3446,10,3376,8,"PAWN"],[3446,14,3376,12],[3446,17,3376,15,"PAWN"],[3446,21,3376,19],[3447,2,3377,0,"exports"],[3447,9,3377,7],[3447,10,3377,8,"QUEEN"],[3447,15,3377,13],[3447,18,3377,16,"QUEEN"],[3447,23,3377,21],[3448,2,3378,0,"exports"],[3448,9,3378,7],[3448,10,3378,8,"ROOK"],[3448,14,3378,12],[3448,17,3378,15,"ROOK"],[3448,21,3378,19],[3449,2,3379,0,"exports"],[3449,9,3379,7],[3449,10,3379,8,"SEVEN_TAG_ROSTER"],[3449,26,3379,24],[3449,29,3379,27,"SEVEN_TAG_ROSTER"],[3449,45,3379,43],[3450,2,3380,0,"exports"],[3450,9,3380,7],[3450,10,3380,8,"SQUARES"],[3450,17,3380,15],[3450,20,3380,18,"SQUARES"],[3450,27,3380,25],[3451,2,3381,0,"exports"],[3451,9,3381,7],[3451,10,3381,8,"WHITE"],[3451,15,3381,13],[3451,18,3381,16,"WHITE"],[3451,23,3381,21],[3452,2,3382,0,"exports"],[3452,9,3382,7],[3452,10,3382,8,"validateFen"],[3452,21,3382,19],[3452,24,3382,22,"validateFen"],[3452,35,3382,33],[3453,2,3383,0,"exports"],[3453,9,3383,7],[3453,10,3383,8,"xoroshiro128"],[3453,22,3383,20],[3453,25,3383,23,"xoroshiro128"],[3453,37,3383,35],[3454,0,3383,36],[3454,3]],"functionMap":{"names":["<global>","rootNode","node","lineToTree","pgn","peg$subclass","C","peg$SyntaxError","peg$padEnd","peg$SyntaxError.prototype.format","peg$SyntaxError.buildMessage","DESCRIBE_EXPECTATION_FNS.literal","DESCRIBE_EXPECTATION_FNS._class","expectation.parts.map$argument_0","DESCRIBE_EXPECTATION_FNS.any","DESCRIBE_EXPECTATION_FNS.end","DESCRIBE_EXPECTATION_FNS.other","hex","literalEscape","s.replace...replace.replace$argument_1","classEscape","describeExpectation","describeExpected","describeFound","peg$parse","peg$f0","peg$f1","peg$f2","peg$f3","peg$f4","peg$f5","peg$f6","peg$f7","peg$f8","peg$f9","peg$f10","peg$literalExpectation","peg$classExpectation","peg$endExpectation","peg$otherExpectation","peg$computePosDetails","peg$computeLocation","peg$fail","peg$buildStructuredError","peg$parsepgn","peg$parsetagPairSection","peg$parsetagPair","peg$parsetagName","peg$parsetagValue","peg$parsemoveTextSection","peg$parseline","peg$parsemove","peg$parsemoveNumber","peg$parsesan","peg$parsesuffixAnnotation","peg$parsenag","peg$parsecomment","peg$parsebraceComment","peg$parserestOfLineComment","peg$parsevariation","peg$parsegameTerminationMarker","peg$parse_","rotl","wrappingMul","xoroshiro128","<anonymous>","Array.from$argument_1","Move","Move#constructor","Move#isCapture","Move#isPromotion","Move#isEnPassant","Move#isKingsideCastle","Move#isQueensideCastle","Move#isBigPawn","rank","file","isDigit","algebraic","swapColor","validateFen","Array.from.some$argument_0","getDisambiguator","addMove","inferPieceType","strippedSan","Chess","Chess#constructor","Chess#clear","Chess#load","Chess#fen","Chess#_pieceKey","Chess#_epKey","Chess#_castlingKey","Chess#_computeHash","Chess#_updateSetup","Chess#reset","Chess#get","Chess#findPiece","Chess#put","Chess#_set","Chess#_put","Chess#_clear","Chess#remove","Chess#_updateCastlingRights","Chess#_updateEnPassantSquare","canCapture","Chess#_attacked","Chess#attackers","Chess#_isKingAttacked","Chess#hash","Chess#isAttacked","Chess#isCheck","Chess#inCheck","Chess#isCheckmate","Chess#isStalemate","Chess#isInsufficientMaterial","Chess#isThreefoldRepetition","Chess#isDrawByFiftyMoves","Chess#isDraw","Chess#isGameOver","Chess#moves","moves.map$argument_0","Chess#_moves","Chess#move","Chess#_push","Chess#_movePiece","Chess#_makeMove","Chess#undo","Chess#_undoMove","Chess#pgn","appendComment","strip","wrapComment","Chess#header","Chess#setHeader","Chess#removeHeader","Chess#getHeaders","Chess#loadPgn","Chess#_moveToSan","Chess#_moveFromSan","Chess#ascii","Chess#perft","Chess#setTurn","Chess#turn","Chess#board","Chess#squareColor","Chess#history","Chess#_getPositionCount","Chess#_incPositionCount","Chess#_decPositionCount","Chess#_pruneComments","copyComment","Chess#getComment","Chess#setComment","Chess#deleteComment","Chess#removeComment","Chess#getComments","Object.keys.map$argument_0","Chess#deleteComments","Chess#removeComments","Chess#setCastlingRights","Chess#getCastlingRights","Chess#moveNumber"],"mappings":"AAA;ECQ;GDE;EEE;GFgB;EGE;GHc;EIE;GJkB;AKE;ECC,0CD;CLG;AOE;CPW;AQI;CRM;mCSE;CTgC;+BUE;aCE;KDE;WEE;+CCC;ODI;KFG;SIE;KJE;SKE;KLE;WME;KNE;EOG;GPE;EQE;wCCQ,yCD;wCCC,yCD;GRC;EUE;wCDU,yCC;wCDC,yCC;GVC;EWE;GXE;EYE;GZ4B;EaE;GbE;CVG;AwBE;eCgF,qDD;eEC,0DF;eGC,0DH;eIC,iDJ;eKC,kFL;eMC,sGN;eOC,4BP;eQC,6DR;eSC,2CT;eUC,8BV;gBWC,wDX;EYiB;GZE;EaE;GbE;EcE;GdE;EeE;GfE;EgBE;GhBmC;EiBE;GjBkB;EkBE;GlBS;EmBE;GnBO;EoBE;GpBS;EqBE;GrBc;EsBE;GtBuE;EuBE;GvBuC;EwBE;GxB6B;EyBE;GzBc;E0BE;G1BiB;E2BE;G3BqC;E4BE;G5B+D;E6BE;G7BiH;E8BE;G9BwC;E+BE;G/B0D;EgCE;GhCS;EiCE;GjCyD;EkCE;GlC6C;EmCE;GnC4C;EoCE;GpCyD;EqCE;GrC2B;CxB4B;A8D6B;C9DE;A+DC;C/DE;AgEE;WCC;KDS;ChEC;6CkEE,gFlE;0CkEC,YlE;iDkEC,YlE;AmEW;ICkB;KDkC;IEC;KFE;IGC;KHE;IIC;KJE;IKC;KLE;IMC;KNE;IOC;KPE;CnEC;A2EoN;C3EE;A4EE;C5EE;A6EC;C7EE;A8EE;C9EK;A+EC;C/EE;AgFC;2CCkG,oCD;ChFO;AkFE;ClF8C;AmFC;CnF0B;AoFC;CpFc;AqFE;CrFE;AsFC;ICc;KDE;IEC;KFoB;IGC;KHkD;IIC;KJ0F;IKC;KLkB;IMC;KNE;IOC;KPG;IQC;KRkB;ISO;KTW;IUC;KVE;IWC;KXE;IYC;KZmB;IaC;KbQ;IcC;KdI;IeC;KfyB;IgBC;KhBG;IiBC;KjBU;IkBC;KlB2B;ImBC;2BCe;8CDE;KnBK;IqBC;KrBqE;IsBC;KtBO;IuBC;KvBG;IwBC;KxBE;IyBC;KzBE;I0BC;K1BE;I2BC;K3BE;I4BC;K5BE;I6BC;K7BE;I8BC;K9BwD;I+BC;K/BE;IgCC;KhCE;IiCC;KjCK;IkCC;KlCE;ImCC;6BCG,8BD;6BCG,sCD;KnCE;IqCC;KrCwI;IsCC;KtCsD;IuCC;KvCU;IwCC;KxCK;IyCC;KzC+G;I0CC;K1CS;I2CC;K3C0D;I4CC;8BCwB;SDO;sBEmD;SFM;4BGE;SHqB;K5C2B;IgDI;KhDO;IiDE;KjDG;IkDC;KlDM;ImDE;KnDQ;IoDC;KpDoE;IqDY;KrDsC;IsDE;KtD0H;IuDC;KvDwB;IwDC;KxDiB;IyDC;KzDM;I0DC;K1DE;I2DC;K3DqB;I4DC;K5DM;I6DC;K7DoB;I8DK;K9DE;I+DC;K/DE;IgEC;KhEQ;IiEC;4BCG;SDI;KjEc;ImEC;KnEE;IoEC;KpEE;IqEI;KrEE;IsEC;KtEI;IuEC;+CCE;SDE;KvEC;IyEI;KzEE;I0EC;+CFE;SEI;K1EC;I2EC;K3Ee;I4EC;K5EK;I6EC;K7EE;CtFC"},"hasCjsExports":true},"type":"js/module"}]}