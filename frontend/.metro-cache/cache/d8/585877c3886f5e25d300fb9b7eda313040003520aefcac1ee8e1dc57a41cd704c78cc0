{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"BISHOP\", {\n    enumerable: true,\n    get: function () {\n      return BISHOP;\n    }\n  });\n  Object.defineProperty(exports, \"BLACK\", {\n    enumerable: true,\n    get: function () {\n      return BLACK;\n    }\n  });\n  Object.defineProperty(exports, \"Chess\", {\n    enumerable: true,\n    get: function () {\n      return Chess;\n    }\n  });\n  Object.defineProperty(exports, \"DEFAULT_POSITION\", {\n    enumerable: true,\n    get: function () {\n      return DEFAULT_POSITION;\n    }\n  });\n  Object.defineProperty(exports, \"KING\", {\n    enumerable: true,\n    get: function () {\n      return KING;\n    }\n  });\n  Object.defineProperty(exports, \"KNIGHT\", {\n    enumerable: true,\n    get: function () {\n      return KNIGHT;\n    }\n  });\n  Object.defineProperty(exports, \"Move\", {\n    enumerable: true,\n    get: function () {\n      return Move;\n    }\n  });\n  Object.defineProperty(exports, \"PAWN\", {\n    enumerable: true,\n    get: function () {\n      return PAWN;\n    }\n  });\n  Object.defineProperty(exports, \"QUEEN\", {\n    enumerable: true,\n    get: function () {\n      return QUEEN;\n    }\n  });\n  Object.defineProperty(exports, \"ROOK\", {\n    enumerable: true,\n    get: function () {\n      return ROOK;\n    }\n  });\n  Object.defineProperty(exports, \"SEVEN_TAG_ROSTER\", {\n    enumerable: true,\n    get: function () {\n      return SEVEN_TAG_ROSTER;\n    }\n  });\n  Object.defineProperty(exports, \"SQUARES\", {\n    enumerable: true,\n    get: function () {\n      return SQUARES;\n    }\n  });\n  Object.defineProperty(exports, \"WHITE\", {\n    enumerable: true,\n    get: function () {\n      return WHITE;\n    }\n  });\n  Object.defineProperty(exports, \"validateFen\", {\n    enumerable: true,\n    get: function () {\n      return validateFen;\n    }\n  });\n  Object.defineProperty(exports, \"xoroshiro128\", {\n    enumerable: true,\n    get: function () {\n      return xoroshiro128;\n    }\n  });\n  // @generated by Peggy 4.2.0.\n  //\n  // https://peggyjs.org/\n\n  function rootNode(comment) {\n    return comment !== null ? {\n      comment,\n      variations: []\n    } : {\n      variations: []\n    };\n  }\n  function node(move, suffix, nag, comment, variations) {\n    const node = {\n      move,\n      variations\n    };\n    if (suffix) {\n      node.suffix = suffix;\n    }\n    if (nag) {\n      node.nag = nag;\n    }\n    if (comment !== null) {\n      node.comment = comment;\n    }\n    return node;\n  }\n  function lineToTree(...nodes) {\n    const [root, ...rest] = nodes;\n    let parent = root;\n    for (const child of rest) {\n      if (child !== null) {\n        parent.variations = [child, ...child.variations];\n        child.variations = [];\n        parent = child;\n      }\n    }\n    return root;\n  }\n  function pgn(headers, game) {\n    if (game.marker && game.marker.comment) {\n      let node = game.root;\n      while (true) {\n        const next = node.variations[0];\n        if (!next) {\n          node.comment = game.marker.comment;\n          break;\n        }\n        node = next;\n      }\n    }\n    return {\n      headers,\n      root: game.root,\n      result: (game.marker && game.marker.result) ?? undefined\n    };\n  }\n  function peg$subclass(child, parent) {\n    function C() {\n      this.constructor = child;\n    }\n    C.prototype = parent.prototype;\n    child.prototype = new C();\n  }\n  function peg$SyntaxError(message, expected, found, location) {\n    var self = Error.call(this, message);\n    // istanbul ignore next Check is a necessary evil to support older environments\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(self, peg$SyntaxError.prototype);\n    }\n    self.expected = expected;\n    self.found = found;\n    self.location = location;\n    self.name = \"SyntaxError\";\n    return self;\n  }\n  peg$subclass(peg$SyntaxError, Error);\n  function peg$padEnd(str, targetLength, padString) {\n    padString = padString || \" \";\n    if (str.length > targetLength) {\n      return str;\n    }\n    targetLength -= str.length;\n    padString += padString.repeat(targetLength);\n    return str + padString.slice(0, targetLength);\n  }\n  peg$SyntaxError.prototype.format = function (sources) {\n    var str = \"Error: \" + this.message;\n    if (this.location) {\n      var src = null;\n      var k;\n      for (k = 0; k < sources.length; k++) {\n        if (sources[k].source === this.location.source) {\n          src = sources[k].text.split(/\\r\\n|\\n|\\r/g);\n          break;\n        }\n      }\n      var s = this.location.start;\n      var offset_s = this.location.source && typeof this.location.source.offset === \"function\" ? this.location.source.offset(s) : s;\n      var loc = this.location.source + \":\" + offset_s.line + \":\" + offset_s.column;\n      if (src) {\n        var e = this.location.end;\n        var filler = peg$padEnd(\"\", offset_s.line.toString().length, ' ');\n        var line = src[s.line - 1];\n        var last = s.line === e.line ? e.column : line.length + 1;\n        var hatLen = last - s.column || 1;\n        str += \"\\n --> \" + loc + \"\\n\" + filler + \" |\\n\" + offset_s.line + \" | \" + line + \"\\n\" + filler + \" | \" + peg$padEnd(\"\", s.column - 1, ' ') + peg$padEnd(\"\", hatLen, \"^\");\n      } else {\n        str += \"\\n at \" + loc;\n      }\n    }\n    return str;\n  };\n  peg$SyntaxError.buildMessage = function (expected, found) {\n    var DESCRIBE_EXPECTATION_FNS = {\n      literal: function (expectation) {\n        return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n      },\n      class: function (expectation) {\n        var escapedParts = expectation.parts.map(function (part) {\n          return Array.isArray(part) ? classEscape(part[0]) + \"-\" + classEscape(part[1]) : classEscape(part);\n        });\n        return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts.join(\"\") + \"]\";\n      },\n      any: function () {\n        return \"any character\";\n      },\n      end: function () {\n        return \"end of input\";\n      },\n      other: function (expectation) {\n        return expectation.description;\n      }\n    };\n    function hex(ch) {\n      return ch.charCodeAt(0).toString(16).toUpperCase();\n    }\n    function literalEscape(s) {\n      return s.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, \"\\\\\\\"\").replace(/\\0/g, \"\\\\0\").replace(/\\t/g, \"\\\\t\").replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\").replace(/[\\x00-\\x0F]/g, function (ch) {\n        return \"\\\\x0\" + hex(ch);\n      }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n        return \"\\\\x\" + hex(ch);\n      });\n    }\n    function classEscape(s) {\n      return s.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\]/g, \"\\\\]\").replace(/\\^/g, \"\\\\^\").replace(/-/g, \"\\\\-\").replace(/\\0/g, \"\\\\0\").replace(/\\t/g, \"\\\\t\").replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\").replace(/[\\x00-\\x0F]/g, function (ch) {\n        return \"\\\\x0\" + hex(ch);\n      }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n        return \"\\\\x\" + hex(ch);\n      });\n    }\n    function describeExpectation(expectation) {\n      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n    }\n    function describeExpected(expected) {\n      var descriptions = expected.map(describeExpectation);\n      var i, j;\n      descriptions.sort();\n      if (descriptions.length > 0) {\n        for (i = 1, j = 1; i < descriptions.length; i++) {\n          if (descriptions[i - 1] !== descriptions[i]) {\n            descriptions[j] = descriptions[i];\n            j++;\n          }\n        }\n        descriptions.length = j;\n      }\n      switch (descriptions.length) {\n        case 1:\n          return descriptions[0];\n        case 2:\n          return descriptions[0] + \" or \" + descriptions[1];\n        default:\n          return descriptions.slice(0, -1).join(\", \") + \", or \" + descriptions[descriptions.length - 1];\n      }\n    }\n    function describeFound(found) {\n      return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n    }\n    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n  };\n  function peg$parse(input, options) {\n    options = options !== undefined ? options : {};\n    var peg$FAILED = {};\n    var peg$source = options.grammarSource;\n    var peg$startRuleFunctions = {\n      pgn: peg$parsepgn\n    };\n    var peg$startRuleFunction = peg$parsepgn;\n    var peg$c0 = \"[\";\n    var peg$c1 = \"\\\"\";\n    var peg$c2 = \"]\";\n    var peg$c3 = \".\";\n    var peg$c4 = \"O-O-O\";\n    var peg$c5 = \"O-O\";\n    var peg$c6 = \"0-0-0\";\n    var peg$c7 = \"0-0\";\n    var peg$c8 = \"$\";\n    var peg$c9 = \"{\";\n    var peg$c10 = \"}\";\n    var peg$c11 = \";\";\n    var peg$c12 = \"(\";\n    var peg$c13 = \")\";\n    var peg$c14 = \"1-0\";\n    var peg$c15 = \"0-1\";\n    var peg$c16 = \"1/2-1/2\";\n    var peg$c17 = \"*\";\n    var peg$r0 = /^[a-zA-Z]/;\n    var peg$r1 = /^[^\"]/;\n    var peg$r2 = /^[0-9]/;\n    var peg$r3 = /^[.]/;\n    var peg$r4 = /^[a-zA-Z1-8\\-=]/;\n    var peg$r5 = /^[+#]/;\n    var peg$r6 = /^[!?]/;\n    var peg$r7 = /^[^}]/;\n    var peg$r8 = /^[^\\r\\n]/;\n    var peg$r9 = /^[ \\t\\r\\n]/;\n    var peg$e0 = peg$otherExpectation(\"tag pair\");\n    var peg$e1 = peg$literalExpectation(\"[\", false);\n    var peg$e2 = peg$literalExpectation(\"\\\"\", false);\n    var peg$e3 = peg$literalExpectation(\"]\", false);\n    var peg$e4 = peg$otherExpectation(\"tag name\");\n    var peg$e5 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false);\n    var peg$e6 = peg$otherExpectation(\"tag value\");\n    var peg$e7 = peg$classExpectation([\"\\\"\"], true, false);\n    var peg$e8 = peg$otherExpectation(\"move number\");\n    var peg$e9 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n    var peg$e10 = peg$literalExpectation(\".\", false);\n    var peg$e11 = peg$classExpectation([\".\"], false, false);\n    var peg$e12 = peg$otherExpectation(\"standard algebraic notation\");\n    var peg$e13 = peg$literalExpectation(\"O-O-O\", false);\n    var peg$e14 = peg$literalExpectation(\"O-O\", false);\n    var peg$e15 = peg$literalExpectation(\"0-0-0\", false);\n    var peg$e16 = peg$literalExpectation(\"0-0\", false);\n    var peg$e17 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"1\", \"8\"], \"-\", \"=\"], false, false);\n    var peg$e18 = peg$classExpectation([\"+\", \"#\"], false, false);\n    var peg$e19 = peg$otherExpectation(\"suffix annotation\");\n    var peg$e20 = peg$classExpectation([\"!\", \"?\"], false, false);\n    var peg$e21 = peg$otherExpectation(\"NAG\");\n    var peg$e22 = peg$literalExpectation(\"$\", false);\n    var peg$e23 = peg$otherExpectation(\"brace comment\");\n    var peg$e24 = peg$literalExpectation(\"{\", false);\n    var peg$e25 = peg$classExpectation([\"}\"], true, false);\n    var peg$e26 = peg$literalExpectation(\"}\", false);\n    var peg$e27 = peg$otherExpectation(\"rest of line comment\");\n    var peg$e28 = peg$literalExpectation(\";\", false);\n    var peg$e29 = peg$classExpectation([\"\\r\", \"\\n\"], true, false);\n    var peg$e30 = peg$otherExpectation(\"variation\");\n    var peg$e31 = peg$literalExpectation(\"(\", false);\n    var peg$e32 = peg$literalExpectation(\")\", false);\n    var peg$e33 = peg$otherExpectation(\"game termination marker\");\n    var peg$e34 = peg$literalExpectation(\"1-0\", false);\n    var peg$e35 = peg$literalExpectation(\"0-1\", false);\n    var peg$e36 = peg$literalExpectation(\"1/2-1/2\", false);\n    var peg$e37 = peg$literalExpectation(\"*\", false);\n    var peg$e38 = peg$otherExpectation(\"whitespace\");\n    var peg$e39 = peg$classExpectation([\" \", \"\\t\", \"\\r\", \"\\n\"], false, false);\n    var peg$f0 = function (headers, game) {\n      return pgn(headers, game);\n    };\n    var peg$f1 = function (tagPairs) {\n      return Object.fromEntries(tagPairs);\n    };\n    var peg$f2 = function (tagName, tagValue) {\n      return [tagName, tagValue];\n    };\n    var peg$f3 = function (root, marker) {\n      return {\n        root,\n        marker\n      };\n    };\n    var peg$f4 = function (comment, moves) {\n      return lineToTree(rootNode(comment), ...moves.flat());\n    };\n    var peg$f5 = function (san, suffix, nag, comment, variations) {\n      return node(san, suffix, nag, comment, variations);\n    };\n    var peg$f6 = function (nag) {\n      return nag;\n    };\n    var peg$f7 = function (comment) {\n      return comment.replace(/[\\r\\n]+/g, \" \");\n    };\n    var peg$f8 = function (comment) {\n      return comment.trim();\n    };\n    var peg$f9 = function (line) {\n      return line;\n    };\n    var peg$f10 = function (result, comment) {\n      return {\n        result,\n        comment\n      };\n    };\n    var peg$currPos = options.peg$currPos | 0;\n    var peg$posDetailsCache = [{\n      line: 1,\n      column: 1\n    }];\n    var peg$maxFailPos = peg$currPos;\n    var peg$maxFailExpected = options.peg$maxFailExpected || [];\n    var peg$silentFails = options.peg$silentFails | 0;\n    var peg$result;\n    if (options.startRule) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n    function peg$literalExpectation(text, ignoreCase) {\n      return {\n        type: \"literal\",\n        text: text,\n        ignoreCase: ignoreCase\n      };\n    }\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n      return {\n        type: \"class\",\n        parts: parts,\n        inverted: inverted,\n        ignoreCase: ignoreCase\n      };\n    }\n    function peg$endExpectation() {\n      return {\n        type: \"end\"\n      };\n    }\n    function peg$otherExpectation(description) {\n      return {\n        type: \"other\",\n        description: description\n      };\n    }\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos];\n      var p;\n      if (details) {\n        return details;\n      } else {\n        if (pos >= peg$posDetailsCache.length) {\n          p = peg$posDetailsCache.length - 1;\n        } else {\n          p = pos;\n          while (!peg$posDetailsCache[--p]) {}\n        }\n        details = peg$posDetailsCache[p];\n        details = {\n          line: details.line,\n          column: details.column\n        };\n        while (p < pos) {\n          if (input.charCodeAt(p) === 10) {\n            details.line++;\n            details.column = 1;\n          } else {\n            details.column++;\n          }\n          p++;\n        }\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n    function peg$computeLocation(startPos, endPos, offset) {\n      var startPosDetails = peg$computePosDetails(startPos);\n      var endPosDetails = peg$computePosDetails(endPos);\n      var res = {\n        source: peg$source,\n        start: {\n          offset: startPos,\n          line: startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line: endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n      return res;\n    }\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) {\n        return;\n      }\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n      peg$maxFailExpected.push(expected);\n    }\n    function peg$buildStructuredError(expected, found, location) {\n      return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);\n    }\n    function peg$parsepgn() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n      s1 = peg$parsetagPairSection();\n      s2 = peg$parsemoveTextSection();\n      s0 = peg$f0(s1, s2);\n      return s0;\n    }\n    function peg$parsetagPairSection() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsetagPair();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsetagPair();\n      }\n      s2 = peg$parse_();\n      s0 = peg$f1(s1);\n      return s0;\n    }\n    function peg$parsetagPair() {\n      var s0, s2, s4, s6, s7, s8, s10;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      peg$parse_();\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s2 = peg$c0;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e1);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$parse_();\n        s4 = peg$parsetagName();\n        if (s4 !== peg$FAILED) {\n          peg$parse_();\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s6 = peg$c1;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e2);\n            }\n          }\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsetagValue();\n            if (input.charCodeAt(peg$currPos) === 34) {\n              s8 = peg$c1;\n              peg$currPos++;\n            } else {\n              s8 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$e2);\n              }\n            }\n            if (s8 !== peg$FAILED) {\n              peg$parse_();\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s10 = peg$c2;\n                peg$currPos++;\n              } else {\n                s10 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$e3);\n                }\n              }\n              if (s10 !== peg$FAILED) {\n                s0 = peg$f2(s4, s7);\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e0);\n        }\n      }\n      return s0;\n    }\n    function peg$parsetagName() {\n      var s0, s1, s2;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = input.charAt(peg$currPos);\n      if (peg$r0.test(s2)) {\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e5);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = input.charAt(peg$currPos);\n          if (peg$r0.test(s2)) {\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e5);\n            }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e4);\n        }\n      }\n      return s0;\n    }\n    function peg$parsetagValue() {\n      var s0, s1, s2;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = input.charAt(peg$currPos);\n      if (peg$r1.test(s2)) {\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e7);\n        }\n      }\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = input.charAt(peg$currPos);\n        if (peg$r1.test(s2)) {\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e7);\n          }\n        }\n      }\n      s0 = input.substring(s0, peg$currPos);\n      peg$silentFails--;\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e6);\n      }\n      return s0;\n    }\n    function peg$parsemoveTextSection() {\n      var s0, s1, s3;\n      s0 = peg$currPos;\n      s1 = peg$parseline();\n      peg$parse_();\n      s3 = peg$parsegameTerminationMarker();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$parse_();\n      s0 = peg$f3(s1, s3);\n      return s0;\n    }\n    function peg$parseline() {\n      var s0, s1, s2, s3;\n      s0 = peg$currPos;\n      s1 = peg$parsecomment();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      s2 = [];\n      s3 = peg$parsemove();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsemove();\n      }\n      s0 = peg$f4(s1, s2);\n      return s0;\n    }\n    function peg$parsemove() {\n      var s0, s4, s5, s6, s7, s8, s9, s10;\n      s0 = peg$currPos;\n      peg$parse_();\n      peg$parsemoveNumber();\n      peg$parse_();\n      s4 = peg$parsesan();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsesuffixAnnotation();\n        if (s5 === peg$FAILED) {\n          s5 = null;\n        }\n        s6 = [];\n        s7 = peg$parsenag();\n        while (s7 !== peg$FAILED) {\n          s6.push(s7);\n          s7 = peg$parsenag();\n        }\n        s7 = peg$parse_();\n        s8 = peg$parsecomment();\n        if (s8 === peg$FAILED) {\n          s8 = null;\n        }\n        s9 = [];\n        s10 = peg$parsevariation();\n        while (s10 !== peg$FAILED) {\n          s9.push(s10);\n          s10 = peg$parsevariation();\n        }\n        s0 = peg$f5(s4, s5, s6, s8, s9);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      return s0;\n    }\n    function peg$parsemoveNumber() {\n      var s0, s1, s2, s3, s4, s5;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = input.charAt(peg$currPos);\n      if (peg$r2.test(s2)) {\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e9);\n        }\n      }\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = input.charAt(peg$currPos);\n        if (peg$r2.test(s2)) {\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e9);\n          }\n        }\n      }\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s2 = peg$c3;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e10);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        s4 = [];\n        s5 = input.charAt(peg$currPos);\n        if (peg$r3.test(s5)) {\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e11);\n          }\n        }\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = input.charAt(peg$currPos);\n          if (peg$r3.test(s5)) {\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e11);\n            }\n          }\n        }\n        s1 = [s1, s2, s3, s4];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e8);\n        }\n      }\n      return s0;\n    }\n    function peg$parsesan() {\n      var s0, s1, s2, s3, s4, s5;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c4) {\n        s2 = peg$c4;\n        peg$currPos += 5;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e13);\n        }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.substr(peg$currPos, 3) === peg$c5) {\n          s2 = peg$c5;\n          peg$currPos += 3;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e14);\n          }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 5) === peg$c6) {\n            s2 = peg$c6;\n            peg$currPos += 5;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e15);\n            }\n          }\n          if (s2 === peg$FAILED) {\n            if (input.substr(peg$currPos, 3) === peg$c7) {\n              s2 = peg$c7;\n              peg$currPos += 3;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$e16);\n              }\n            }\n            if (s2 === peg$FAILED) {\n              s2 = peg$currPos;\n              s3 = input.charAt(peg$currPos);\n              if (peg$r0.test(s3)) {\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$e5);\n                }\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = [];\n                s5 = input.charAt(peg$currPos);\n                if (peg$r4.test(s5)) {\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$e17);\n                  }\n                }\n                if (s5 !== peg$FAILED) {\n                  while (s5 !== peg$FAILED) {\n                    s4.push(s5);\n                    s5 = input.charAt(peg$currPos);\n                    if (peg$r4.test(s5)) {\n                      peg$currPos++;\n                    } else {\n                      s5 = peg$FAILED;\n                      if (peg$silentFails === 0) {\n                        peg$fail(peg$e17);\n                      }\n                    }\n                  }\n                } else {\n                  s4 = peg$FAILED;\n                }\n                if (s4 !== peg$FAILED) {\n                  s3 = [s3, s4];\n                  s2 = s3;\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            }\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = input.charAt(peg$currPos);\n        if (peg$r5.test(s3)) {\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e18);\n          }\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e12);\n        }\n      }\n      return s0;\n    }\n    function peg$parsesuffixAnnotation() {\n      var s0, s1, s2;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = input.charAt(peg$currPos);\n      if (peg$r6.test(s2)) {\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e20);\n        }\n      }\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (s1.length >= 2) {\n          s2 = peg$FAILED;\n        } else {\n          s2 = input.charAt(peg$currPos);\n          if (peg$r6.test(s2)) {\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e20);\n            }\n          }\n        }\n      }\n      if (s1.length < 1) {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      } else {\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e19);\n        }\n      }\n      return s0;\n    }\n    function peg$parsenag() {\n      var s0, s2, s3, s4, s5;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      peg$parse_();\n      if (input.charCodeAt(peg$currPos) === 36) {\n        s2 = peg$c8;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e22);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = [];\n        s5 = input.charAt(peg$currPos);\n        if (peg$r2.test(s5)) {\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e9);\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = input.charAt(peg$currPos);\n            if (peg$r2.test(s5)) {\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$e9);\n              }\n            }\n          }\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s3 = input.substring(s3, peg$currPos);\n        } else {\n          s3 = s4;\n        }\n        if (s3 !== peg$FAILED) {\n          s0 = peg$f6(s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e21);\n        }\n      }\n      return s0;\n    }\n    function peg$parsecomment() {\n      var s0;\n      s0 = peg$parsebraceComment();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parserestOfLineComment();\n      }\n      return s0;\n    }\n    function peg$parsebraceComment() {\n      var s0, s1, s2, s3, s4;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c9;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e24);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = [];\n        s4 = input.charAt(peg$currPos);\n        if (peg$r7.test(s4)) {\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e25);\n          }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = input.charAt(peg$currPos);\n          if (peg$r7.test(s4)) {\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e25);\n            }\n          }\n        }\n        s2 = input.substring(s2, peg$currPos);\n        if (input.charCodeAt(peg$currPos) === 125) {\n          s3 = peg$c10;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e26);\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s0 = peg$f7(s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e23);\n        }\n      }\n      return s0;\n    }\n    function peg$parserestOfLineComment() {\n      var s0, s1, s2, s3, s4;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 59) {\n        s1 = peg$c11;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e28);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = [];\n        s4 = input.charAt(peg$currPos);\n        if (peg$r8.test(s4)) {\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e29);\n          }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = input.charAt(peg$currPos);\n          if (peg$r8.test(s4)) {\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e29);\n            }\n          }\n        }\n        s2 = input.substring(s2, peg$currPos);\n        s0 = peg$f8(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e27);\n        }\n      }\n      return s0;\n    }\n    function peg$parsevariation() {\n      var s0, s2, s3, s5;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      peg$parse_();\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c12;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e31);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseline();\n        if (s3 !== peg$FAILED) {\n          peg$parse_();\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s5 = peg$c13;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e32);\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s0 = peg$f9(s3);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e30);\n        }\n      }\n      return s0;\n    }\n    function peg$parsegameTerminationMarker() {\n      var s0, s1, s3;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c14) {\n        s1 = peg$c14;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e34);\n        }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 3) === peg$c15) {\n          s1 = peg$c15;\n          peg$currPos += 3;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e35);\n          }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 7) === peg$c16) {\n            s1 = peg$c16;\n            peg$currPos += 7;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e36);\n            }\n          }\n          if (s1 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 42) {\n              s1 = peg$c17;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$e37);\n              }\n            }\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$parse_();\n        s3 = peg$parsecomment();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        s0 = peg$f10(s1, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e33);\n        }\n      }\n      return s0;\n    }\n    function peg$parse_() {\n      var s0, s1;\n      peg$silentFails++;\n      s0 = [];\n      s1 = input.charAt(peg$currPos);\n      if (peg$r9.test(s1)) {\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e39);\n        }\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = input.charAt(peg$currPos);\n        if (peg$r9.test(s1)) {\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e39);\n          }\n        }\n      }\n      peg$silentFails--;\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e38);\n      }\n      return s0;\n    }\n    peg$result = peg$startRuleFunction();\n    if (options.peg$library) {\n      return /** @type {any} */{\n        peg$result,\n        peg$currPos,\n        peg$FAILED,\n        peg$maxFailExpected,\n        peg$maxFailPos\n      };\n    }\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail(peg$endExpectation());\n      }\n      throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n    }\n  }\n\n  /**\n   * @license\n   * Copyright (c) 2025, Jeff Hlywa (jhlywa@gmail.com)\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are met:\n   *\n   * 1. Redistributions of source code must retain the above copyright notice,\n   *    this list of conditions and the following disclaimer.\n   * 2. Redistributions in binary form must reproduce the above copyright notice,\n   *    this list of conditions and the following disclaimer in the documentation\n   *    and/or other materials provided with the distribution.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n   * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n   * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n   * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n   * POSSIBILITY OF SUCH DAMAGE.\n   */\n  const MASK64 = 0xffffffffffffffffn;\n  function rotl(x, k) {\n    return (x << k | x >> 64n - k) & 0xffffffffffffffffn;\n  }\n  function wrappingMul(x, y) {\n    return x * y & MASK64;\n  }\n  // xoroshiro128**\n  function xoroshiro128(state) {\n    return function () {\n      let s0 = BigInt(state & MASK64);\n      let s1 = BigInt(state >> 64n & MASK64);\n      const result = wrappingMul(rotl(wrappingMul(s0, 5n), 7n), 9n);\n      s1 ^= s0;\n      s0 = (rotl(s0, 24n) ^ s1 ^ s1 << 16n) & MASK64;\n      s1 = rotl(s1, 37n);\n      state = s1 << 64n | s0;\n      return result;\n    };\n  }\n  const rand = xoroshiro128(0xa187eb39cdcaed8f31c4b365b102e01en);\n  const PIECE_KEYS = Array.from({\n    length: 2\n  }, () => Array.from({\n    length: 6\n  }, () => Array.from({\n    length: 128\n  }, () => rand())));\n  const EP_KEYS = Array.from({\n    length: 8\n  }, () => rand());\n  const CASTLING_KEYS = Array.from({\n    length: 16\n  }, () => rand());\n  const SIDE_KEY = rand();\n  const WHITE = 'w';\n  const BLACK = 'b';\n  const PAWN = 'p';\n  const KNIGHT = 'n';\n  const BISHOP = 'b';\n  const ROOK = 'r';\n  const QUEEN = 'q';\n  const KING = 'k';\n  const DEFAULT_POSITION = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\n  class Move {\n    /**\n     * @deprecated This field is deprecated and will be removed in version 2.0.0.\n     * Please use move descriptor functions instead: `isCapture`, `isPromotion`,\n     * `isEnPassant`, `isKingsideCastle`, `isQueensideCastle`, `isCastle`, and\n     * `isBigPawn`\n     */\n\n    constructor(chess, internal) {\n      const {\n        color,\n        piece,\n        from,\n        to,\n        flags,\n        captured,\n        promotion\n      } = internal;\n      const fromAlgebraic = algebraic(from);\n      const toAlgebraic = algebraic(to);\n      this.color = color;\n      this.piece = piece;\n      this.from = fromAlgebraic;\n      this.to = toAlgebraic;\n      /*\n       * HACK: The chess['_method']() calls below invoke private methods in the\n       * Chess class to generate SAN and FEN. It's a bit of a hack, but makes the\n       * code cleaner elsewhere.\n       */\n      this.san = chess['_moveToSan'](internal, chess['_moves']({\n        legal: true\n      }));\n      this.lan = fromAlgebraic + toAlgebraic;\n      this.before = chess.fen();\n      // Generate the FEN for the 'after' key\n      chess['_makeMove'](internal);\n      this.after = chess.fen();\n      chess['_undoMove']();\n      // Build the text representation of the move flags\n      this.flags = '';\n      for (const flag in BITS) {\n        if (BITS[flag] & flags) {\n          this.flags += FLAGS[flag];\n        }\n      }\n      if (captured) {\n        this.captured = captured;\n      }\n      if (promotion) {\n        this.promotion = promotion;\n        this.lan += promotion;\n      }\n    }\n    isCapture() {\n      return this.flags.indexOf(FLAGS['CAPTURE']) > -1;\n    }\n    isPromotion() {\n      return this.flags.indexOf(FLAGS['PROMOTION']) > -1;\n    }\n    isEnPassant() {\n      return this.flags.indexOf(FLAGS['EP_CAPTURE']) > -1;\n    }\n    isKingsideCastle() {\n      return this.flags.indexOf(FLAGS['KSIDE_CASTLE']) > -1;\n    }\n    isQueensideCastle() {\n      return this.flags.indexOf(FLAGS['QSIDE_CASTLE']) > -1;\n    }\n    isBigPawn() {\n      return this.flags.indexOf(FLAGS['BIG_PAWN']) > -1;\n    }\n  }\n  const EMPTY = -1;\n  const FLAGS = {\n    NORMAL: 'n',\n    CAPTURE: 'c',\n    BIG_PAWN: 'b',\n    EP_CAPTURE: 'e',\n    PROMOTION: 'p',\n    KSIDE_CASTLE: 'k',\n    QSIDE_CASTLE: 'q',\n    NULL_MOVE: '-'\n  };\n  // prettier-ignore\n  const SQUARES = ['a8', 'b8', 'c8', 'd8', 'e8', 'f8', 'g8', 'h8', 'a7', 'b7', 'c7', 'd7', 'e7', 'f7', 'g7', 'h7', 'a6', 'b6', 'c6', 'd6', 'e6', 'f6', 'g6', 'h6', 'a5', 'b5', 'c5', 'd5', 'e5', 'f5', 'g5', 'h5', 'a4', 'b4', 'c4', 'd4', 'e4', 'f4', 'g4', 'h4', 'a3', 'b3', 'c3', 'd3', 'e3', 'f3', 'g3', 'h3', 'a2', 'b2', 'c2', 'd2', 'e2', 'f2', 'g2', 'h2', 'a1', 'b1', 'c1', 'd1', 'e1', 'f1', 'g1', 'h1'];\n  const BITS = {\n    NORMAL: 1,\n    CAPTURE: 2,\n    BIG_PAWN: 4,\n    EP_CAPTURE: 8,\n    PROMOTION: 16,\n    KSIDE_CASTLE: 32,\n    QSIDE_CASTLE: 64,\n    NULL_MOVE: 128\n  };\n  /* eslint-disable @typescript-eslint/naming-convention */\n  // these are required, according to spec\n  const SEVEN_TAG_ROSTER = {\n    Event: '?',\n    Site: '?',\n    Date: '????.??.??',\n    Round: '?',\n    White: '?',\n    Black: '?',\n    Result: '*'\n  };\n  /**\n   * These nulls are placeholders to fix the order of tags (as they appear in PGN spec); null values will be\n   * eliminated in getHeaders()\n   */\n  const SUPLEMENTAL_TAGS = {\n    WhiteTitle: null,\n    BlackTitle: null,\n    WhiteElo: null,\n    BlackElo: null,\n    WhiteUSCF: null,\n    BlackUSCF: null,\n    WhiteNA: null,\n    BlackNA: null,\n    WhiteType: null,\n    BlackType: null,\n    EventDate: null,\n    EventSponsor: null,\n    Section: null,\n    Stage: null,\n    Board: null,\n    Opening: null,\n    Variation: null,\n    SubVariation: null,\n    ECO: null,\n    NIC: null,\n    Time: null,\n    UTCTime: null,\n    UTCDate: null,\n    TimeControl: null,\n    SetUp: null,\n    FEN: null,\n    Termination: null,\n    Annotator: null,\n    Mode: null,\n    PlyCount: null\n  };\n  const HEADER_TEMPLATE = Object.assign({}, SEVEN_TAG_ROSTER, SUPLEMENTAL_TAGS);\n  /* eslint-enable @typescript-eslint/naming-convention */\n  /*\n   * NOTES ABOUT 0x88 MOVE GENERATION ALGORITHM\n   * ----------------------------------------------------------------------------\n   * From https://github.com/jhlywa/chess.js/issues/230\n   *\n   * A lot of people are confused when they first see the internal representation\n   * of chess.js. It uses the 0x88 Move Generation Algorithm which internally\n   * stores the board as an 8x16 array. This is purely for efficiency but has a\n   * couple of interesting benefits:\n   *\n   * 1. 0x88 offers a very inexpensive \"off the board\" check. Bitwise AND (&) any\n   *    square with 0x88, if the result is non-zero then the square is off the\n   *    board. For example, assuming a knight square A8 (0 in 0x88 notation),\n   *    there are 8 possible directions in which the knight can move. These\n   *    directions are relative to the 8x16 board and are stored in the\n   *    PIECE_OFFSETS map. One possible move is A8 - 18 (up one square, and two\n   *    squares to the left - which is off the board). 0 - 18 = -18 & 0x88 = 0x88\n   *    (because of two-complement representation of -18). The non-zero result\n   *    means the square is off the board and the move is illegal. Take the\n   *    opposite move (from A8 to C7), 0 + 18 = 18 & 0x88 = 0. A result of zero\n   *    means the square is on the board.\n   *\n   * 2. The relative distance (or difference) between two squares on a 8x16 board\n   *    is unique and can be used to inexpensively determine if a piece on a\n   *    square can attack any other arbitrary square. For example, let's see if a\n   *    pawn on E7 can attack E2. The difference between E7 (20) - E2 (100) is\n   *    -80. We add 119 to make the ATTACKS array index non-negative (because the\n   *    worst case difference is A8 - H1 = -119). The ATTACKS array contains a\n   *    bitmask of pieces that can attack from that distance and direction.\n   *    ATTACKS[-80 + 119=39] gives us 24 or 0b11000 in binary. Look at the\n   *    PIECE_MASKS map to determine the mask for a given piece type. In our pawn\n   *    example, we would check to see if 24 & 0x1 is non-zero, which it is\n   *    not. So, naturally, a pawn on E7 can't attack a piece on E2. However, a\n   *    rook can since 24 & 0x8 is non-zero. The only thing left to check is that\n   *    there are no blocking pieces between E7 and E2. That's where the RAYS\n   *    array comes in. It provides an offset (in this case 16) to add to E7 (20)\n   *    to check for blocking pieces. E7 (20) + 16 = E6 (36) + 16 = E5 (52) etc.\n   */\n  // prettier-ignore\n  // eslint-disable-next-line\n  const Ox88 = {\n    a8: 0,\n    b8: 1,\n    c8: 2,\n    d8: 3,\n    e8: 4,\n    f8: 5,\n    g8: 6,\n    h8: 7,\n    a7: 16,\n    b7: 17,\n    c7: 18,\n    d7: 19,\n    e7: 20,\n    f7: 21,\n    g7: 22,\n    h7: 23,\n    a6: 32,\n    b6: 33,\n    c6: 34,\n    d6: 35,\n    e6: 36,\n    f6: 37,\n    g6: 38,\n    h6: 39,\n    a5: 48,\n    b5: 49,\n    c5: 50,\n    d5: 51,\n    e5: 52,\n    f5: 53,\n    g5: 54,\n    h5: 55,\n    a4: 64,\n    b4: 65,\n    c4: 66,\n    d4: 67,\n    e4: 68,\n    f4: 69,\n    g4: 70,\n    h4: 71,\n    a3: 80,\n    b3: 81,\n    c3: 82,\n    d3: 83,\n    e3: 84,\n    f3: 85,\n    g3: 86,\n    h3: 87,\n    a2: 96,\n    b2: 97,\n    c2: 98,\n    d2: 99,\n    e2: 100,\n    f2: 101,\n    g2: 102,\n    h2: 103,\n    a1: 112,\n    b1: 113,\n    c1: 114,\n    d1: 115,\n    e1: 116,\n    f1: 117,\n    g1: 118,\n    h1: 119\n  };\n  const PAWN_OFFSETS = {\n    b: [16, 32, 17, 15],\n    w: [-16, -32, -17, -15]\n  };\n  const PIECE_OFFSETS = {\n    n: [-18, -33, -31, -14, 18, 33, 31, 14],\n    b: [-17, -15, 17, 15],\n    r: [-16, 1, 16, -1],\n    q: [-17, -16, -15, 1, 17, 16, 15, -1],\n    k: [-17, -16, -15, 1, 17, 16, 15, -1]\n  };\n  // prettier-ignore\n  const ATTACKS = [20, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 20, 0, 0, 20, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 20, 0, 0, 0, 0, 24, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 24, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 24, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 2, 24, 2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 53, 56, 53, 2, 0, 0, 0, 0, 0, 0, 24, 24, 24, 24, 24, 24, 56, 0, 56, 24, 24, 24, 24, 24, 24, 0, 0, 0, 0, 0, 0, 2, 53, 56, 53, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 2, 24, 2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 24, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 24, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 24, 0, 0, 0, 0, 20, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 20, 0, 0, 20, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 20];\n  // prettier-ignore\n  const RAYS = [17, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 15, 0, 0, 17, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 17, 0, 0, 0, 0, 16, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 16, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 16, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 16, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 16, 15, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, -15, -16, -17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -15, 0, -16, 0, -17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -15, 0, 0, -16, 0, 0, -17, 0, 0, 0, 0, 0, 0, 0, 0, -15, 0, 0, 0, -16, 0, 0, 0, -17, 0, 0, 0, 0, 0, 0, -15, 0, 0, 0, 0, -16, 0, 0, 0, 0, -17, 0, 0, 0, 0, -15, 0, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, -17, 0, 0, -15, 0, 0, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, 0, -17];\n  const PIECE_MASKS = {\n    p: 0x1,\n    n: 0x2,\n    b: 0x4,\n    r: 0x8,\n    q: 0x10,\n    k: 0x20\n  };\n  const SYMBOLS = 'pnbrqkPNBRQK';\n  const PROMOTIONS = [KNIGHT, BISHOP, ROOK, QUEEN];\n  const RANK_1 = 7;\n  const RANK_2 = 6;\n  /*\n   * const RANK_3 = 5\n   * const RANK_4 = 4\n   * const RANK_5 = 3\n   * const RANK_6 = 2\n   */\n  const RANK_7 = 1;\n  const RANK_8 = 0;\n  const SIDES = {\n    [KING]: BITS.KSIDE_CASTLE,\n    [QUEEN]: BITS.QSIDE_CASTLE\n  };\n  const ROOKS = {\n    w: [{\n      square: Ox88.a1,\n      flag: BITS.QSIDE_CASTLE\n    }, {\n      square: Ox88.h1,\n      flag: BITS.KSIDE_CASTLE\n    }],\n    b: [{\n      square: Ox88.a8,\n      flag: BITS.QSIDE_CASTLE\n    }, {\n      square: Ox88.h8,\n      flag: BITS.KSIDE_CASTLE\n    }]\n  };\n  const SECOND_RANK = {\n    b: RANK_7,\n    w: RANK_2\n  };\n  const SAN_NULLMOVE = '--';\n  // Extracts the zero-based rank of an 0x88 square.\n  function rank(square) {\n    return square >> 4;\n  }\n  // Extracts the zero-based file of an 0x88 square.\n  function file(square) {\n    return square & 0xf;\n  }\n  function isDigit(c) {\n    return '0123456789'.indexOf(c) !== -1;\n  }\n  // Converts a 0x88 square to algebraic notation.\n  function algebraic(square) {\n    const f = file(square);\n    const r = rank(square);\n    return 'abcdefgh'.substring(f, f + 1) + '87654321'.substring(r, r + 1);\n  }\n  function swapColor(color) {\n    return color === WHITE ? BLACK : WHITE;\n  }\n  function validateFen(fen) {\n    // 1st criterion: 6 space-seperated fields?\n    const tokens = fen.split(/\\s+/);\n    if (tokens.length !== 6) {\n      return {\n        ok: false,\n        error: 'Invalid FEN: must contain six space-delimited fields'\n      };\n    }\n    // 2nd criterion: move number field is a integer value > 0?\n    const moveNumber = parseInt(tokens[5], 10);\n    if (isNaN(moveNumber) || moveNumber <= 0) {\n      return {\n        ok: false,\n        error: 'Invalid FEN: move number must be a positive integer'\n      };\n    }\n    // 3rd criterion: half move counter is an integer >= 0?\n    const halfMoves = parseInt(tokens[4], 10);\n    if (isNaN(halfMoves) || halfMoves < 0) {\n      return {\n        ok: false,\n        error: 'Invalid FEN: half move counter number must be a non-negative integer'\n      };\n    }\n    // 4th criterion: 4th field is a valid e.p.-string?\n    if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) {\n      return {\n        ok: false,\n        error: 'Invalid FEN: en-passant square is invalid'\n      };\n    }\n    // 5th criterion: 3th field is a valid castle-string?\n    if (/[^kKqQ-]/.test(tokens[2])) {\n      return {\n        ok: false,\n        error: 'Invalid FEN: castling availability is invalid'\n      };\n    }\n    // 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)?\n    if (!/^(w|b)$/.test(tokens[1])) {\n      return {\n        ok: false,\n        error: 'Invalid FEN: side-to-move is invalid'\n      };\n    }\n    // 7th criterion: 1st field contains 8 rows?\n    const rows = tokens[0].split('/');\n    if (rows.length !== 8) {\n      return {\n        ok: false,\n        error: \"Invalid FEN: piece data does not contain 8 '/'-delimited rows\"\n      };\n    }\n    // 8th criterion: every row is valid?\n    for (let i = 0; i < rows.length; i++) {\n      // check for right sum of fields AND not two numbers in succession\n      let sumFields = 0;\n      let previousWasNumber = false;\n      for (let k = 0; k < rows[i].length; k++) {\n        if (isDigit(rows[i][k])) {\n          if (previousWasNumber) {\n            return {\n              ok: false,\n              error: 'Invalid FEN: piece data is invalid (consecutive number)'\n            };\n          }\n          sumFields += parseInt(rows[i][k], 10);\n          previousWasNumber = true;\n        } else {\n          if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) {\n            return {\n              ok: false,\n              error: 'Invalid FEN: piece data is invalid (invalid piece)'\n            };\n          }\n          sumFields += 1;\n          previousWasNumber = false;\n        }\n      }\n      if (sumFields !== 8) {\n        return {\n          ok: false,\n          error: 'Invalid FEN: piece data is invalid (too many squares in rank)'\n        };\n      }\n    }\n    // 9th criterion: is en-passant square legal?\n    if (tokens[3][1] == '3' && tokens[1] == 'w' || tokens[3][1] == '6' && tokens[1] == 'b') {\n      return {\n        ok: false,\n        error: 'Invalid FEN: illegal en-passant square'\n      };\n    }\n    // 10th criterion: does chess position contain exact two kings?\n    const kings = [{\n      color: 'white',\n      regex: /K/g\n    }, {\n      color: 'black',\n      regex: /k/g\n    }];\n    for (const {\n      color,\n      regex\n    } of kings) {\n      if (!regex.test(tokens[0])) {\n        return {\n          ok: false,\n          error: `Invalid FEN: missing ${color} king`\n        };\n      }\n      if ((tokens[0].match(regex) || []).length > 1) {\n        return {\n          ok: false,\n          error: `Invalid FEN: too many ${color} kings`\n        };\n      }\n    }\n    // 11th criterion: are any pawns on the first or eighth rows?\n    if (Array.from(rows[0] + rows[7]).some(char => char.toUpperCase() === 'P')) {\n      return {\n        ok: false,\n        error: 'Invalid FEN: some pawns are on the edge rows'\n      };\n    }\n    return {\n      ok: true\n    };\n  }\n  // this function is used to uniquely identify ambiguous moves\n  function getDisambiguator(move, moves) {\n    const from = move.from;\n    const to = move.to;\n    const piece = move.piece;\n    let ambiguities = 0;\n    let sameRank = 0;\n    let sameFile = 0;\n    for (let i = 0, len = moves.length; i < len; i++) {\n      const ambigFrom = moves[i].from;\n      const ambigTo = moves[i].to;\n      const ambigPiece = moves[i].piece;\n      /*\n       * if a move of the same piece type ends on the same to square, we'll need\n       * to add a disambiguator to the algebraic notation\n       */\n      if (piece === ambigPiece && from !== ambigFrom && to === ambigTo) {\n        ambiguities++;\n        if (rank(from) === rank(ambigFrom)) {\n          sameRank++;\n        }\n        if (file(from) === file(ambigFrom)) {\n          sameFile++;\n        }\n      }\n    }\n    if (ambiguities > 0) {\n      if (sameRank > 0 && sameFile > 0) {\n        /*\n         * if there exists a similar moving piece on the same rank and file as\n         * the move in question, use the square as the disambiguator\n         */\n        return algebraic(from);\n      } else if (sameFile > 0) {\n        /*\n         * if the moving piece rests on the same file, use the rank symbol as the\n         * disambiguator\n         */\n        return algebraic(from).charAt(1);\n      } else {\n        // else use the file symbol\n        return algebraic(from).charAt(0);\n      }\n    }\n    return '';\n  }\n  function addMove(moves, color, from, to, piece, captured = undefined, flags = BITS.NORMAL) {\n    const r = rank(to);\n    if (piece === PAWN && (r === RANK_1 || r === RANK_8)) {\n      for (let i = 0; i < PROMOTIONS.length; i++) {\n        const promotion = PROMOTIONS[i];\n        moves.push({\n          color,\n          from,\n          to,\n          piece,\n          captured,\n          promotion,\n          flags: flags | BITS.PROMOTION\n        });\n      }\n    } else {\n      moves.push({\n        color,\n        from,\n        to,\n        piece,\n        captured,\n        flags\n      });\n    }\n  }\n  function inferPieceType(san) {\n    let pieceType = san.charAt(0);\n    if (pieceType >= 'a' && pieceType <= 'h') {\n      const matches = san.match(/[a-h]\\d.*[a-h]\\d/);\n      if (matches) {\n        return undefined;\n      }\n      return PAWN;\n    }\n    pieceType = pieceType.toLowerCase();\n    if (pieceType === 'o') {\n      return KING;\n    }\n    return pieceType;\n  }\n  // parses all of the decorators out of a SAN string\n  function strippedSan(move) {\n    return move.replace(/=/, '').replace(/[+#]?[?!]*$/, '');\n  }\n  class Chess {\n    _board = new Array(128);\n    _turn = WHITE;\n    _header = {};\n    _kings = {\n      w: EMPTY,\n      b: EMPTY\n    };\n    _epSquare = -1;\n    _halfMoves = 0;\n    _moveNumber = 0;\n    _history = [];\n    _comments = {};\n    _castling = {\n      w: 0,\n      b: 0\n    };\n    _hash = 0n;\n    // tracks number of times a position has been seen for repetition checking\n    _positionCount = new Map();\n    constructor(fen = DEFAULT_POSITION, {\n      skipValidation = false\n    } = {}) {\n      this.load(fen, {\n        skipValidation\n      });\n    }\n    clear({\n      preserveHeaders = false\n    } = {}) {\n      this._board = new Array(128);\n      this._kings = {\n        w: EMPTY,\n        b: EMPTY\n      };\n      this._turn = WHITE;\n      this._castling = {\n        w: 0,\n        b: 0\n      };\n      this._epSquare = EMPTY;\n      this._halfMoves = 0;\n      this._moveNumber = 1;\n      this._history = [];\n      this._comments = {};\n      this._header = preserveHeaders ? this._header : Object.assign({}, HEADER_TEMPLATE);\n      this._hash = this._computeHash();\n      this._positionCount = new Map();\n      /*\n       * Delete the SetUp and FEN headers (if preserved), the board is empty and\n       * these headers don't make sense in this state. They'll get added later\n       * via .load() or .put()\n       */\n      this._header['SetUp'] = null;\n      this._header['FEN'] = null;\n    }\n    load(fen, {\n      skipValidation = false,\n      preserveHeaders = false\n    } = {}) {\n      let tokens = fen.split(/\\s+/);\n      // append commonly omitted fen tokens\n      if (tokens.length >= 2 && tokens.length < 6) {\n        const adjustments = ['-', '-', '0', '1'];\n        fen = tokens.concat(adjustments.slice(-(6 - tokens.length))).join(' ');\n      }\n      tokens = fen.split(/\\s+/);\n      if (!skipValidation) {\n        const {\n          ok,\n          error\n        } = validateFen(fen);\n        if (!ok) {\n          throw new Error(error);\n        }\n      }\n      const position = tokens[0];\n      let square = 0;\n      this.clear({\n        preserveHeaders\n      });\n      for (let i = 0; i < position.length; i++) {\n        const piece = position.charAt(i);\n        if (piece === '/') {\n          square += 8;\n        } else if (isDigit(piece)) {\n          square += parseInt(piece, 10);\n        } else {\n          const color = piece < 'a' ? WHITE : BLACK;\n          this._put({\n            type: piece.toLowerCase(),\n            color\n          }, algebraic(square));\n          square++;\n        }\n      }\n      this._turn = tokens[1];\n      if (tokens[2].indexOf('K') > -1) {\n        this._castling.w |= BITS.KSIDE_CASTLE;\n      }\n      if (tokens[2].indexOf('Q') > -1) {\n        this._castling.w |= BITS.QSIDE_CASTLE;\n      }\n      if (tokens[2].indexOf('k') > -1) {\n        this._castling.b |= BITS.KSIDE_CASTLE;\n      }\n      if (tokens[2].indexOf('q') > -1) {\n        this._castling.b |= BITS.QSIDE_CASTLE;\n      }\n      this._epSquare = tokens[3] === '-' ? EMPTY : Ox88[tokens[3]];\n      this._halfMoves = parseInt(tokens[4], 10);\n      this._moveNumber = parseInt(tokens[5], 10);\n      this._hash = this._computeHash();\n      this._updateSetup(fen);\n      this._incPositionCount();\n    }\n    fen({\n      forceEnpassantSquare = false\n    } = {}) {\n      let empty = 0;\n      let fen = '';\n      for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n        if (this._board[i]) {\n          if (empty > 0) {\n            fen += empty;\n            empty = 0;\n          }\n          const {\n            color,\n            type: piece\n          } = this._board[i];\n          fen += color === WHITE ? piece.toUpperCase() : piece.toLowerCase();\n        } else {\n          empty++;\n        }\n        if (i + 1 & 0x88) {\n          if (empty > 0) {\n            fen += empty;\n          }\n          if (i !== Ox88.h1) {\n            fen += '/';\n          }\n          empty = 0;\n          i += 8;\n        }\n      }\n      let castling = '';\n      if (this._castling[WHITE] & BITS.KSIDE_CASTLE) {\n        castling += 'K';\n      }\n      if (this._castling[WHITE] & BITS.QSIDE_CASTLE) {\n        castling += 'Q';\n      }\n      if (this._castling[BLACK] & BITS.KSIDE_CASTLE) {\n        castling += 'k';\n      }\n      if (this._castling[BLACK] & BITS.QSIDE_CASTLE) {\n        castling += 'q';\n      }\n      // do we have an empty castling flag?\n      castling = castling || '-';\n      let epSquare = '-';\n      /*\n       * only print the ep square if en passant is a valid move (pawn is present\n       * and ep capture is not pinned)\n       */\n      if (this._epSquare !== EMPTY) {\n        if (forceEnpassantSquare) {\n          epSquare = algebraic(this._epSquare);\n        } else {\n          const bigPawnSquare = this._epSquare + (this._turn === WHITE ? 16 : -16);\n          const squares = [bigPawnSquare + 1, bigPawnSquare - 1];\n          for (const square of squares) {\n            // is the square off the board?\n            if (square & 0x88) {\n              continue;\n            }\n            const color = this._turn;\n            // is there a pawn that can capture the epSquare?\n            if (this._board[square]?.color === color && this._board[square]?.type === PAWN) {\n              // if the pawn makes an ep capture, does it leave its king in check?\n              this._makeMove({\n                color,\n                from: square,\n                to: this._epSquare,\n                piece: PAWN,\n                captured: PAWN,\n                flags: BITS.EP_CAPTURE\n              });\n              const isLegal = !this._isKingAttacked(color);\n              this._undoMove();\n              // if ep is legal, break and set the ep square in the FEN output\n              if (isLegal) {\n                epSquare = algebraic(this._epSquare);\n                break;\n              }\n            }\n          }\n        }\n      }\n      return [fen, this._turn, castling, epSquare, this._halfMoves, this._moveNumber].join(' ');\n    }\n    _pieceKey(i) {\n      if (!this._board[i]) {\n        return 0n;\n      }\n      const {\n        color,\n        type\n      } = this._board[i];\n      const colorIndex = {\n        w: 0,\n        b: 1\n      }[color];\n      const typeIndex = {\n        p: 0,\n        n: 1,\n        b: 2,\n        r: 3,\n        q: 4,\n        k: 5\n      }[type];\n      return PIECE_KEYS[colorIndex][typeIndex][i];\n    }\n    _epKey() {\n      return this._epSquare === EMPTY ? 0n : EP_KEYS[this._epSquare & 7];\n    }\n    _castlingKey() {\n      const index = this._castling.w >> 5 | this._castling.b >> 3;\n      return CASTLING_KEYS[index];\n    }\n    _computeHash() {\n      let hash = 0n;\n      for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n        // did we run off the end of the board\n        if (i & 0x88) {\n          i += 7;\n          continue;\n        }\n        if (this._board[i]) {\n          hash ^= this._pieceKey(i);\n        }\n      }\n      hash ^= this._epKey();\n      hash ^= this._castlingKey();\n      if (this._turn === 'b') {\n        hash ^= SIDE_KEY;\n      }\n      return hash;\n    }\n    /*\n     * Called when the initial board setup is changed with put() or remove().\n     * modifies the SetUp and FEN properties of the header object. If the FEN\n     * is equal to the default position, the SetUp and FEN are deleted the setup\n     * is only updated if history.length is zero, ie moves haven't been made.\n     */\n    _updateSetup(fen) {\n      if (this._history.length > 0) return;\n      if (fen !== DEFAULT_POSITION) {\n        this._header['SetUp'] = '1';\n        this._header['FEN'] = fen;\n      } else {\n        this._header['SetUp'] = null;\n        this._header['FEN'] = null;\n      }\n    }\n    reset() {\n      this.load(DEFAULT_POSITION);\n    }\n    get(square) {\n      return this._board[Ox88[square]];\n    }\n    findPiece(piece) {\n      const squares = [];\n      for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n        // did we run off the end of the board\n        if (i & 0x88) {\n          i += 7;\n          continue;\n        }\n        // if empty square or wrong color\n        if (!this._board[i] || this._board[i]?.color !== piece.color) {\n          continue;\n        }\n        // check if square contains the requested piece\n        if (this._board[i].color === piece.color && this._board[i].type === piece.type) {\n          squares.push(algebraic(i));\n        }\n      }\n      return squares;\n    }\n    put({\n      type,\n      color\n    }, square) {\n      if (this._put({\n        type,\n        color\n      }, square)) {\n        this._updateCastlingRights();\n        this._updateEnPassantSquare();\n        this._updateSetup(this.fen());\n        return true;\n      }\n      return false;\n    }\n    _set(sq, piece) {\n      this._hash ^= this._pieceKey(sq);\n      this._board[sq] = piece;\n      this._hash ^= this._pieceKey(sq);\n    }\n    _put({\n      type,\n      color\n    }, square) {\n      // check for piece\n      if (SYMBOLS.indexOf(type.toLowerCase()) === -1) {\n        return false;\n      }\n      // check for valid square\n      if (!(square in Ox88)) {\n        return false;\n      }\n      const sq = Ox88[square];\n      // don't let the user place more than one king\n      if (type == KING && !(this._kings[color] == EMPTY || this._kings[color] == sq)) {\n        return false;\n      }\n      const currentPieceOnSquare = this._board[sq];\n      // if one of the kings will be replaced by the piece from args, set the `_kings` respective entry to `EMPTY`\n      if (currentPieceOnSquare && currentPieceOnSquare.type === KING) {\n        this._kings[currentPieceOnSquare.color] = EMPTY;\n      }\n      this._set(sq, {\n        type: type,\n        color: color\n      });\n      if (type === KING) {\n        this._kings[color] = sq;\n      }\n      return true;\n    }\n    _clear(sq) {\n      this._hash ^= this._pieceKey(sq);\n      delete this._board[sq];\n    }\n    remove(square) {\n      const piece = this.get(square);\n      this._clear(Ox88[square]);\n      if (piece && piece.type === KING) {\n        this._kings[piece.color] = EMPTY;\n      }\n      this._updateCastlingRights();\n      this._updateEnPassantSquare();\n      this._updateSetup(this.fen());\n      return piece;\n    }\n    _updateCastlingRights() {\n      this._hash ^= this._castlingKey();\n      const whiteKingInPlace = this._board[Ox88.e1]?.type === KING && this._board[Ox88.e1]?.color === WHITE;\n      const blackKingInPlace = this._board[Ox88.e8]?.type === KING && this._board[Ox88.e8]?.color === BLACK;\n      if (!whiteKingInPlace || this._board[Ox88.a1]?.type !== ROOK || this._board[Ox88.a1]?.color !== WHITE) {\n        this._castling.w &= -65;\n      }\n      if (!whiteKingInPlace || this._board[Ox88.h1]?.type !== ROOK || this._board[Ox88.h1]?.color !== WHITE) {\n        this._castling.w &= -33;\n      }\n      if (!blackKingInPlace || this._board[Ox88.a8]?.type !== ROOK || this._board[Ox88.a8]?.color !== BLACK) {\n        this._castling.b &= -65;\n      }\n      if (!blackKingInPlace || this._board[Ox88.h8]?.type !== ROOK || this._board[Ox88.h8]?.color !== BLACK) {\n        this._castling.b &= -33;\n      }\n      this._hash ^= this._castlingKey();\n    }\n    _updateEnPassantSquare() {\n      if (this._epSquare === EMPTY) {\n        return;\n      }\n      const startSquare = this._epSquare + (this._turn === WHITE ? -16 : 16);\n      const currentSquare = this._epSquare + (this._turn === WHITE ? 16 : -16);\n      const attackers = [currentSquare + 1, currentSquare - 1];\n      if (this._board[startSquare] !== null || this._board[this._epSquare] !== null || this._board[currentSquare]?.color !== swapColor(this._turn) || this._board[currentSquare]?.type !== PAWN) {\n        this._hash ^= this._epKey();\n        this._epSquare = EMPTY;\n        return;\n      }\n      const canCapture = square => !(square & 0x88) && this._board[square]?.color === this._turn && this._board[square]?.type === PAWN;\n      if (!attackers.some(canCapture)) {\n        this._hash ^= this._epKey();\n        this._epSquare = EMPTY;\n      }\n    }\n    _attacked(color, square, verbose) {\n      const attackers = [];\n      for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n        // did we run off the end of the board\n        if (i & 0x88) {\n          i += 7;\n          continue;\n        }\n        // if empty square or wrong color\n        if (this._board[i] === undefined || this._board[i].color !== color) {\n          continue;\n        }\n        const piece = this._board[i];\n        const difference = i - square;\n        // skip - to/from square are the same\n        if (difference === 0) {\n          continue;\n        }\n        const index = difference + 119;\n        if (ATTACKS[index] & PIECE_MASKS[piece.type]) {\n          if (piece.type === PAWN) {\n            if (difference > 0 && piece.color === WHITE || difference <= 0 && piece.color === BLACK) {\n              if (!verbose) {\n                return true;\n              } else {\n                attackers.push(algebraic(i));\n              }\n            }\n            continue;\n          }\n          // if the piece is a knight or a king\n          if (piece.type === 'n' || piece.type === 'k') {\n            if (!verbose) {\n              return true;\n            } else {\n              attackers.push(algebraic(i));\n              continue;\n            }\n          }\n          const offset = RAYS[index];\n          let j = i + offset;\n          let blocked = false;\n          while (j !== square) {\n            if (this._board[j] != null) {\n              blocked = true;\n              break;\n            }\n            j += offset;\n          }\n          if (!blocked) {\n            if (!verbose) {\n              return true;\n            } else {\n              attackers.push(algebraic(i));\n              continue;\n            }\n          }\n        }\n      }\n      if (verbose) {\n        return attackers;\n      } else {\n        return false;\n      }\n    }\n    attackers(square, attackedBy) {\n      if (!attackedBy) {\n        return this._attacked(this._turn, Ox88[square], true);\n      } else {\n        return this._attacked(attackedBy, Ox88[square], true);\n      }\n    }\n    _isKingAttacked(color) {\n      const square = this._kings[color];\n      return square === -1 ? false : this._attacked(swapColor(color), square);\n    }\n    hash() {\n      return this._hash.toString(16);\n    }\n    isAttacked(square, attackedBy) {\n      return this._attacked(attackedBy, Ox88[square]);\n    }\n    isCheck() {\n      return this._isKingAttacked(this._turn);\n    }\n    inCheck() {\n      return this.isCheck();\n    }\n    isCheckmate() {\n      return this.isCheck() && this._moves().length === 0;\n    }\n    isStalemate() {\n      return !this.isCheck() && this._moves().length === 0;\n    }\n    isInsufficientMaterial() {\n      /*\n       * k.b. vs k.b. (of opposite colors) with mate in 1:\n       * 8/8/8/8/1b6/8/B1k5/K7 b - - 0 1\n       *\n       * k.b. vs k.n. with mate in 1:\n       * 8/8/8/8/1n6/8/B7/K1k5 b - - 2 1\n       */\n      const pieces = {\n        b: 0,\n        n: 0,\n        r: 0,\n        q: 0,\n        k: 0,\n        p: 0\n      };\n      const bishops = [];\n      let numPieces = 0;\n      let squareColor = 0;\n      for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n        squareColor = (squareColor + 1) % 2;\n        if (i & 0x88) {\n          i += 7;\n          continue;\n        }\n        const piece = this._board[i];\n        if (piece) {\n          pieces[piece.type] = piece.type in pieces ? pieces[piece.type] + 1 : 1;\n          if (piece.type === BISHOP) {\n            bishops.push(squareColor);\n          }\n          numPieces++;\n        }\n      }\n      // k vs. k\n      if (numPieces === 2) {\n        return true;\n      } else if (\n      // k vs. kn .... or .... k vs. kb\n      numPieces === 3 && (pieces[BISHOP] === 1 || pieces[KNIGHT] === 1)) {\n        return true;\n      } else if (numPieces === pieces[BISHOP] + 2) {\n        // kb vs. kb where any number of bishops are all on the same color\n        let sum = 0;\n        const len = bishops.length;\n        for (let i = 0; i < len; i++) {\n          sum += bishops[i];\n        }\n        if (sum === 0 || sum === len) {\n          return true;\n        }\n      }\n      return false;\n    }\n    isThreefoldRepetition() {\n      return this._getPositionCount(this._hash) >= 3;\n    }\n    isDrawByFiftyMoves() {\n      return this._halfMoves >= 100; // 50 moves per side = 100 half moves\n    }\n    isDraw() {\n      return this.isDrawByFiftyMoves() || this.isStalemate() || this.isInsufficientMaterial() || this.isThreefoldRepetition();\n    }\n    isGameOver() {\n      return this.isCheckmate() || this.isDraw();\n    }\n    moves({\n      verbose = false,\n      square = undefined,\n      piece = undefined\n    } = {}) {\n      const moves = this._moves({\n        square,\n        piece\n      });\n      if (verbose) {\n        return moves.map(move => new Move(this, move));\n      } else {\n        return moves.map(move => this._moveToSan(move, moves));\n      }\n    }\n    _moves({\n      legal = true,\n      piece = undefined,\n      square = undefined\n    } = {}) {\n      const forSquare = square ? square.toLowerCase() : undefined;\n      const forPiece = piece?.toLowerCase();\n      const moves = [];\n      const us = this._turn;\n      const them = swapColor(us);\n      let firstSquare = Ox88.a8;\n      let lastSquare = Ox88.h1;\n      let singleSquare = false;\n      // are we generating moves for a single square?\n      if (forSquare) {\n        // illegal square, return empty moves\n        if (!(forSquare in Ox88)) {\n          return [];\n        } else {\n          firstSquare = lastSquare = Ox88[forSquare];\n          singleSquare = true;\n        }\n      }\n      for (let from = firstSquare; from <= lastSquare; from++) {\n        // did we run off the end of the board\n        if (from & 0x88) {\n          from += 7;\n          continue;\n        }\n        // empty square or opponent, skip\n        if (!this._board[from] || this._board[from].color === them) {\n          continue;\n        }\n        const {\n          type\n        } = this._board[from];\n        let to;\n        if (type === PAWN) {\n          if (forPiece && forPiece !== type) continue;\n          // single square, non-capturing\n          to = from + PAWN_OFFSETS[us][0];\n          if (!this._board[to]) {\n            addMove(moves, us, from, to, PAWN);\n            // double square\n            to = from + PAWN_OFFSETS[us][1];\n            if (SECOND_RANK[us] === rank(from) && !this._board[to]) {\n              addMove(moves, us, from, to, PAWN, undefined, BITS.BIG_PAWN);\n            }\n          }\n          // pawn captures\n          for (let j = 2; j < 4; j++) {\n            to = from + PAWN_OFFSETS[us][j];\n            if (to & 0x88) continue;\n            if (this._board[to]?.color === them) {\n              addMove(moves, us, from, to, PAWN, this._board[to].type, BITS.CAPTURE);\n            } else if (to === this._epSquare) {\n              addMove(moves, us, from, to, PAWN, PAWN, BITS.EP_CAPTURE);\n            }\n          }\n        } else {\n          if (forPiece && forPiece !== type) continue;\n          for (let j = 0, len = PIECE_OFFSETS[type].length; j < len; j++) {\n            const offset = PIECE_OFFSETS[type][j];\n            to = from;\n            while (true) {\n              to += offset;\n              if (to & 0x88) break;\n              if (!this._board[to]) {\n                addMove(moves, us, from, to, type);\n              } else {\n                // own color, stop loop\n                if (this._board[to].color === us) break;\n                addMove(moves, us, from, to, type, this._board[to].type, BITS.CAPTURE);\n                break;\n              }\n              /* break, if knight or king */\n              if (type === KNIGHT || type === KING) break;\n            }\n          }\n        }\n      }\n      /*\n       * check for castling if we're:\n       *   a) generating all moves, or\n       *   b) doing single square move generation on the king's square\n       */\n      if (forPiece === undefined || forPiece === KING) {\n        if (!singleSquare || lastSquare === this._kings[us]) {\n          // king-side castling\n          if (this._castling[us] & BITS.KSIDE_CASTLE) {\n            const castlingFrom = this._kings[us];\n            const castlingTo = castlingFrom + 2;\n            if (!this._board[castlingFrom + 1] && !this._board[castlingTo] && !this._attacked(them, this._kings[us]) && !this._attacked(them, castlingFrom + 1) && !this._attacked(them, castlingTo)) {\n              addMove(moves, us, this._kings[us], castlingTo, KING, undefined, BITS.KSIDE_CASTLE);\n            }\n          }\n          // queen-side castling\n          if (this._castling[us] & BITS.QSIDE_CASTLE) {\n            const castlingFrom = this._kings[us];\n            const castlingTo = castlingFrom - 2;\n            if (!this._board[castlingFrom - 1] && !this._board[castlingFrom - 2] && !this._board[castlingFrom - 3] && !this._attacked(them, this._kings[us]) && !this._attacked(them, castlingFrom - 1) && !this._attacked(them, castlingTo)) {\n              addMove(moves, us, this._kings[us], castlingTo, KING, undefined, BITS.QSIDE_CASTLE);\n            }\n          }\n        }\n      }\n      /*\n       * return all pseudo-legal moves (this includes moves that allow the king\n       * to be captured)\n       */\n      if (!legal || this._kings[us] === -1) {\n        return moves;\n      }\n      // filter out illegal moves\n      const legalMoves = [];\n      for (let i = 0, len = moves.length; i < len; i++) {\n        this._makeMove(moves[i]);\n        if (!this._isKingAttacked(us)) {\n          legalMoves.push(moves[i]);\n        }\n        this._undoMove();\n      }\n      return legalMoves;\n    }\n    move(move, {\n      strict = false\n    } = {}) {\n      /*\n       * The move function can be called with in the following parameters:\n       *\n       * .move('Nxb7')       <- argument is a case-sensitive SAN string\n       *\n       * .move({ from: 'h7', <- argument is a move object\n       *         to :'h8',\n       *         promotion: 'q' })\n       *\n       *\n       * An optional strict argument may be supplied to tell chess.js to\n       * strictly follow the SAN specification.\n       */\n      let moveObj = null;\n      if (typeof move === 'string') {\n        moveObj = this._moveFromSan(move, strict);\n      } else if (move === null) {\n        moveObj = this._moveFromSan(SAN_NULLMOVE, strict);\n      } else if (typeof move === 'object') {\n        const moves = this._moves();\n        // convert the pretty move object to an ugly move object\n        for (let i = 0, len = moves.length; i < len; i++) {\n          if (move.from === algebraic(moves[i].from) && move.to === algebraic(moves[i].to) && (!('promotion' in moves[i]) || move.promotion === moves[i].promotion)) {\n            moveObj = moves[i];\n            break;\n          }\n        }\n      }\n      // failed to find move\n      if (!moveObj) {\n        if (typeof move === 'string') {\n          throw new Error(`Invalid move: ${move}`);\n        } else {\n          throw new Error(`Invalid move: ${JSON.stringify(move)}`);\n        }\n      }\n      //disallow null moves when in check\n      if (this.isCheck() && moveObj.flags & BITS.NULL_MOVE) {\n        throw new Error('Null move not allowed when in check');\n      }\n      /*\n       * need to make a copy of move because we can't generate SAN after the move\n       * is made\n       */\n      const prettyMove = new Move(this, moveObj);\n      this._makeMove(moveObj);\n      this._incPositionCount();\n      return prettyMove;\n    }\n    _push(move) {\n      this._history.push({\n        move,\n        kings: {\n          b: this._kings.b,\n          w: this._kings.w\n        },\n        turn: this._turn,\n        castling: {\n          b: this._castling.b,\n          w: this._castling.w\n        },\n        epSquare: this._epSquare,\n        halfMoves: this._halfMoves,\n        moveNumber: this._moveNumber\n      });\n    }\n    _movePiece(from, to) {\n      this._hash ^= this._pieceKey(from);\n      this._board[to] = this._board[from];\n      delete this._board[from];\n      this._hash ^= this._pieceKey(to);\n    }\n    _makeMove(move) {\n      const us = this._turn;\n      const them = swapColor(us);\n      this._push(move);\n      if (move.flags & BITS.NULL_MOVE) {\n        if (us === BLACK) {\n          this._moveNumber++;\n        }\n        this._halfMoves++;\n        this._turn = them;\n        this._epSquare = EMPTY;\n        return;\n      }\n      this._hash ^= this._epKey();\n      this._hash ^= this._castlingKey();\n      if (move.captured) {\n        this._hash ^= this._pieceKey(move.to);\n      }\n      this._movePiece(move.from, move.to);\n      // if ep capture, remove the captured pawn\n      if (move.flags & BITS.EP_CAPTURE) {\n        if (this._turn === BLACK) {\n          this._clear(move.to - 16);\n        } else {\n          this._clear(move.to + 16);\n        }\n      }\n      // if pawn promotion, replace with new piece\n      if (move.promotion) {\n        this._clear(move.to);\n        this._set(move.to, {\n          type: move.promotion,\n          color: us\n        });\n      }\n      // if we moved the king\n      if (this._board[move.to].type === KING) {\n        this._kings[us] = move.to;\n        // if we castled, move the rook next to the king\n        if (move.flags & BITS.KSIDE_CASTLE) {\n          const castlingTo = move.to - 1;\n          const castlingFrom = move.to + 1;\n          this._movePiece(castlingFrom, castlingTo);\n        } else if (move.flags & BITS.QSIDE_CASTLE) {\n          const castlingTo = move.to + 1;\n          const castlingFrom = move.to - 2;\n          this._movePiece(castlingFrom, castlingTo);\n        }\n        // turn off castling\n        this._castling[us] = 0;\n      }\n      // turn off castling if we move a rook\n      if (this._castling[us]) {\n        for (let i = 0, len = ROOKS[us].length; i < len; i++) {\n          if (move.from === ROOKS[us][i].square && this._castling[us] & ROOKS[us][i].flag) {\n            this._castling[us] ^= ROOKS[us][i].flag;\n            break;\n          }\n        }\n      }\n      // turn off castling if we capture a rook\n      if (this._castling[them]) {\n        for (let i = 0, len = ROOKS[them].length; i < len; i++) {\n          if (move.to === ROOKS[them][i].square && this._castling[them] & ROOKS[them][i].flag) {\n            this._castling[them] ^= ROOKS[them][i].flag;\n            break;\n          }\n        }\n      }\n      this._hash ^= this._castlingKey();\n      // if big pawn move, update the en passant square\n      if (move.flags & BITS.BIG_PAWN) {\n        let epSquare;\n        if (us === BLACK) {\n          epSquare = move.to - 16;\n        } else {\n          epSquare = move.to + 16;\n        }\n        if (!(move.to - 1 & 0x88) && this._board[move.to - 1]?.type === PAWN && this._board[move.to - 1]?.color === them || !(move.to + 1 & 0x88) && this._board[move.to + 1]?.type === PAWN && this._board[move.to + 1]?.color === them) {\n          this._epSquare = epSquare;\n          this._hash ^= this._epKey();\n        } else {\n          this._epSquare = EMPTY;\n        }\n      } else {\n        this._epSquare = EMPTY;\n      }\n      // reset the 50 move counter if a pawn is moved or a piece is captured\n      if (move.piece === PAWN) {\n        this._halfMoves = 0;\n      } else if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n        this._halfMoves = 0;\n      } else {\n        this._halfMoves++;\n      }\n      if (us === BLACK) {\n        this._moveNumber++;\n      }\n      this._turn = them;\n      this._hash ^= SIDE_KEY;\n    }\n    undo() {\n      const hash = this._hash;\n      const move = this._undoMove();\n      if (move) {\n        const prettyMove = new Move(this, move);\n        this._decPositionCount(hash);\n        return prettyMove;\n      }\n      return null;\n    }\n    _undoMove() {\n      const old = this._history.pop();\n      if (old === undefined) {\n        return null;\n      }\n      this._hash ^= this._epKey();\n      this._hash ^= this._castlingKey();\n      const move = old.move;\n      this._kings = old.kings;\n      this._turn = old.turn;\n      this._castling = old.castling;\n      this._epSquare = old.epSquare;\n      this._halfMoves = old.halfMoves;\n      this._moveNumber = old.moveNumber;\n      this._hash ^= this._epKey();\n      this._hash ^= this._castlingKey();\n      this._hash ^= SIDE_KEY;\n      const us = this._turn;\n      const them = swapColor(us);\n      if (move.flags & BITS.NULL_MOVE) {\n        return move;\n      }\n      this._movePiece(move.to, move.from);\n      // to undo any promotions\n      if (move.piece) {\n        this._clear(move.from);\n        this._set(move.from, {\n          type: move.piece,\n          color: us\n        });\n      }\n      if (move.captured) {\n        if (move.flags & BITS.EP_CAPTURE) {\n          // en passant capture\n          let index;\n          if (us === BLACK) {\n            index = move.to - 16;\n          } else {\n            index = move.to + 16;\n          }\n          this._set(index, {\n            type: PAWN,\n            color: them\n          });\n        } else {\n          // regular capture\n          this._set(move.to, {\n            type: move.captured,\n            color: them\n          });\n        }\n      }\n      if (move.flags & (BITS.KSIDE_CASTLE | BITS.QSIDE_CASTLE)) {\n        let castlingTo, castlingFrom;\n        if (move.flags & BITS.KSIDE_CASTLE) {\n          castlingTo = move.to + 1;\n          castlingFrom = move.to - 1;\n        } else {\n          castlingTo = move.to - 2;\n          castlingFrom = move.to + 1;\n        }\n        this._movePiece(castlingFrom, castlingTo);\n      }\n      return move;\n    }\n    pgn({\n      newline = '\\n',\n      maxWidth = 0\n    } = {}) {\n      /*\n       * using the specification from http://www.chessclub.com/help/PGN-spec\n       * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\n       */\n      const result = [];\n      let headerExists = false;\n      /* add the PGN header information */\n      for (const i in this._header) {\n        /*\n         * TODO: order of enumerated properties in header object is not\n         * guaranteed, see ECMA-262 spec (section 12.6.4)\n         *\n         * By using HEADER_TEMPLATE, the order of tags should be preserved; we\n         * do have to check for null placeholders, though, and omit them\n         */\n        const headerTag = this._header[i];\n        if (headerTag) result.push(`[${i} \"${this._header[i]}\"]` + newline);\n        headerExists = true;\n      }\n      if (headerExists && this._history.length) {\n        result.push(newline);\n      }\n      const appendComment = moveString => {\n        const comment = this._comments[this.fen()];\n        if (typeof comment !== 'undefined') {\n          const delimiter = moveString.length > 0 ? ' ' : '';\n          moveString = `${moveString}${delimiter}{${comment}}`;\n        }\n        return moveString;\n      };\n      // pop all of history onto reversed_history\n      const reversedHistory = [];\n      while (this._history.length > 0) {\n        reversedHistory.push(this._undoMove());\n      }\n      const moves = [];\n      let moveString = '';\n      // special case of a commented starting position with no moves\n      if (reversedHistory.length === 0) {\n        moves.push(appendComment(''));\n      }\n      // build the list of moves.  a move_string looks like: \"3. e3 e6\"\n      while (reversedHistory.length > 0) {\n        moveString = appendComment(moveString);\n        const move = reversedHistory.pop();\n        // make TypeScript stop complaining about move being undefined\n        if (!move) {\n          break;\n        }\n        // if the position started with black to move, start PGN with #. ...\n        if (!this._history.length && move.color === 'b') {\n          const prefix = `${this._moveNumber}. ...`;\n          // is there a comment preceding the first move?\n          moveString = moveString ? `${moveString} ${prefix}` : prefix;\n        } else if (move.color === 'w') {\n          // store the previous generated move_string if we have one\n          if (moveString.length) {\n            moves.push(moveString);\n          }\n          moveString = this._moveNumber + '.';\n        }\n        moveString = moveString + ' ' + this._moveToSan(move, this._moves({\n          legal: true\n        }));\n        this._makeMove(move);\n      }\n      // are there any other leftover moves?\n      if (moveString.length) {\n        moves.push(appendComment(moveString));\n      }\n      // is there a result? (there ALWAYS has to be a result according to spec; see Seven Tag Roster)\n      moves.push(this._header.Result || '*');\n      /*\n       * history should be back to what it was before we started generating PGN,\n       * so join together moves\n       */\n      if (maxWidth === 0) {\n        return result.join('') + moves.join(' ');\n      }\n      // TODO (jah): huh?\n      const strip = function () {\n        if (result.length > 0 && result[result.length - 1] === ' ') {\n          result.pop();\n          return true;\n        }\n        return false;\n      };\n      // NB: this does not preserve comment whitespace.\n      const wrapComment = function (width, move) {\n        for (const token of move.split(' ')) {\n          if (!token) {\n            continue;\n          }\n          if (width + token.length > maxWidth) {\n            while (strip()) {\n              width--;\n            }\n            result.push(newline);\n            width = 0;\n          }\n          result.push(token);\n          width += token.length;\n          result.push(' ');\n          width++;\n        }\n        if (strip()) {\n          width--;\n        }\n        return width;\n      };\n      // wrap the PGN output at max_width\n      let currentWidth = 0;\n      for (let i = 0; i < moves.length; i++) {\n        if (currentWidth + moves[i].length > maxWidth) {\n          if (moves[i].includes('{')) {\n            currentWidth = wrapComment(currentWidth, moves[i]);\n            continue;\n          }\n        }\n        // if the current move will push past max_width\n        if (currentWidth + moves[i].length > maxWidth && i !== 0) {\n          // don't end the line with whitespace\n          if (result[result.length - 1] === ' ') {\n            result.pop();\n          }\n          result.push(newline);\n          currentWidth = 0;\n        } else if (i !== 0) {\n          result.push(' ');\n          currentWidth++;\n        }\n        result.push(moves[i]);\n        currentWidth += moves[i].length;\n      }\n      return result.join('');\n    }\n    /**\n     * @deprecated Use `setHeader` and `getHeaders` instead. This method will return null header tags (which is not what you want)\n     */\n    header(...args) {\n      for (let i = 0; i < args.length; i += 2) {\n        if (typeof args[i] === 'string' && typeof args[i + 1] === 'string') {\n          this._header[args[i]] = args[i + 1];\n        }\n      }\n      return this._header;\n    }\n    // TODO: value validation per spec\n    setHeader(key, value) {\n      this._header[key] = value ?? SEVEN_TAG_ROSTER[key] ?? null;\n      return this.getHeaders();\n    }\n    removeHeader(key) {\n      if (key in this._header) {\n        this._header[key] = SEVEN_TAG_ROSTER[key] || null;\n        return true;\n      }\n      return false;\n    }\n    // return only non-null headers (omit placemarker nulls)\n    getHeaders() {\n      const nonNullHeaders = {};\n      for (const [key, value] of Object.entries(this._header)) {\n        if (value !== null) {\n          nonNullHeaders[key] = value;\n        }\n      }\n      return nonNullHeaders;\n    }\n    loadPgn(pgn, {\n      strict = false,\n      newlineChar = '\\r?\\n'\n    } = {}) {\n      // If newlineChar is not the default, replace all instances with \\n\n      if (newlineChar !== '\\r?\\n') {\n        pgn = pgn.replace(new RegExp(newlineChar, 'g'), '\\n');\n      }\n      const parsedPgn = peg$parse(pgn);\n      // Put the board in the starting position\n      this.reset();\n      // parse PGN header\n      const headers = parsedPgn.headers;\n      let fen = '';\n      for (const key in headers) {\n        // check to see user is including fen (possibly with wrong tag case)\n        if (key.toLowerCase() === 'fen') {\n          fen = headers[key];\n        }\n        this.header(key, headers[key]);\n      }\n      /*\n       * the permissive parser should attempt to load a fen tag, even if it's the\n       * wrong case and doesn't include a corresponding [SetUp \"1\"] tag\n       */\n      if (!strict) {\n        if (fen) {\n          this.load(fen, {\n            preserveHeaders: true\n          });\n        }\n      } else {\n        /*\n         * strict parser - load the starting position indicated by [Setup '1']\n         * and [FEN position]\n         */\n        if (headers['SetUp'] === '1') {\n          if (!('FEN' in headers)) {\n            throw new Error('Invalid PGN: FEN tag must be supplied with SetUp tag');\n          }\n          // don't clear the headers when loading\n          this.load(headers['FEN'], {\n            preserveHeaders: true\n          });\n        }\n      }\n      let node = parsedPgn.root;\n      while (node) {\n        if (node.move) {\n          const move = this._moveFromSan(node.move, strict);\n          if (move == null) {\n            throw new Error(`Invalid move in PGN: ${node.move}`);\n          } else {\n            this._makeMove(move);\n            this._incPositionCount();\n          }\n        }\n        if (node.comment !== undefined) {\n          this._comments[this.fen()] = node.comment;\n        }\n        node = node.variations[0];\n      }\n      /*\n       * Per section 8.2.6 of the PGN spec, the Result tag pair must match match\n       * the termination marker. Only do this when headers are present, but the\n       * result tag is missing\n       */\n      const result = parsedPgn.result;\n      if (result && Object.keys(this._header).length && this._header['Result'] !== result) {\n        this.setHeader('Result', result);\n      }\n    }\n    /*\n     * Convert a move from 0x88 coordinates to Standard Algebraic Notation\n     * (SAN)\n     *\n     * @param {boolean} strict Use the strict SAN parser. It will throw errors\n     * on overly disambiguated moves (see below):\n     *\n     * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\n     * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\n     * 4. ... Ne7 is technically the valid SAN\n     */\n    _moveToSan(move, moves) {\n      let output = '';\n      if (move.flags & BITS.KSIDE_CASTLE) {\n        output = 'O-O';\n      } else if (move.flags & BITS.QSIDE_CASTLE) {\n        output = 'O-O-O';\n      } else if (move.flags & BITS.NULL_MOVE) {\n        return SAN_NULLMOVE;\n      } else {\n        if (move.piece !== PAWN) {\n          const disambiguator = getDisambiguator(move, moves);\n          output += move.piece.toUpperCase() + disambiguator;\n        }\n        if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n          if (move.piece === PAWN) {\n            output += algebraic(move.from)[0];\n          }\n          output += 'x';\n        }\n        output += algebraic(move.to);\n        if (move.promotion) {\n          output += '=' + move.promotion.toUpperCase();\n        }\n      }\n      this._makeMove(move);\n      if (this.isCheck()) {\n        if (this.isCheckmate()) {\n          output += '#';\n        } else {\n          output += '+';\n        }\n      }\n      this._undoMove();\n      return output;\n    }\n    // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\n    _moveFromSan(move, strict = false) {\n      // strip off any move decorations: e.g Nf3+?! becomes Nf3\n      let cleanMove = strippedSan(move);\n      if (!strict) {\n        if (cleanMove === '0-0') {\n          cleanMove = 'O-O';\n        } else if (cleanMove === '0-0-0') {\n          cleanMove = 'O-O-O';\n        }\n      }\n      //first implementation of null with a dummy move (black king moves from a8 to a8), maybe this can be implemented better\n      if (cleanMove == SAN_NULLMOVE) {\n        const res = {\n          color: this._turn,\n          from: 0,\n          to: 0,\n          piece: 'k',\n          flags: BITS.NULL_MOVE\n        };\n        return res;\n      }\n      let pieceType = inferPieceType(cleanMove);\n      let moves = this._moves({\n        legal: true,\n        piece: pieceType\n      });\n      // strict parser\n      for (let i = 0, len = moves.length; i < len; i++) {\n        if (cleanMove === strippedSan(this._moveToSan(moves[i], moves))) {\n          return moves[i];\n        }\n      }\n      // the strict parser failed\n      if (strict) {\n        return null;\n      }\n      let piece = undefined;\n      let matches = undefined;\n      let from = undefined;\n      let to = undefined;\n      let promotion = undefined;\n      /*\n       * The default permissive (non-strict) parser allows the user to parse\n       * non-standard chess notations. This parser is only run after the strict\n       * Standard Algebraic Notation (SAN) parser has failed.\n       *\n       * When running the permissive parser, we'll run a regex to grab the piece, the\n       * to/from square, and an optional promotion piece. This regex will\n       * parse common non-standard notation like: Pe2-e4, Rc1c4, Qf3xf7,\n       * f7f8q, b1c3\n       *\n       * NOTE: Some positions and moves may be ambiguous when using the permissive\n       * parser. For example, in this position: 6k1/8/8/B7/8/8/8/BN4K1 w - - 0 1,\n       * the move b1c3 may be interpreted as Nc3 or B1c3 (a disambiguated bishop\n       * move). In these cases, the permissive parser will default to the most\n       * basic interpretation (which is b1c3 parsing to Nc3).\n       */\n      let overlyDisambiguated = false;\n      matches = cleanMove.match(/([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/);\n      if (matches) {\n        piece = matches[1];\n        from = matches[2];\n        to = matches[3];\n        promotion = matches[4];\n        if (from.length == 1) {\n          overlyDisambiguated = true;\n        }\n      } else {\n        /*\n         * The [a-h]?[1-8]? portion of the regex below handles moves that may be\n         * overly disambiguated (e.g. Nge7 is unnecessary and non-standard when\n         * there is one legal knight move to e7). In this case, the value of\n         * 'from' variable will be a rank or file, not a square.\n         */\n        matches = cleanMove.match(/([pnbrqkPNBRQK])?([a-h]?[1-8]?)x?-?([a-h][1-8])([qrbnQRBN])?/);\n        if (matches) {\n          piece = matches[1];\n          from = matches[2];\n          to = matches[3];\n          promotion = matches[4];\n          if (from.length == 1) {\n            overlyDisambiguated = true;\n          }\n        }\n      }\n      pieceType = inferPieceType(cleanMove);\n      moves = this._moves({\n        legal: true,\n        piece: piece ? piece : pieceType\n      });\n      if (!to) {\n        return null;\n      }\n      for (let i = 0, len = moves.length; i < len; i++) {\n        if (!from) {\n          // if there is no from square, it could be just 'x' missing from a capture\n          if (cleanMove === strippedSan(this._moveToSan(moves[i], moves)).replace('x', '')) {\n            return moves[i];\n          }\n          // hand-compare move properties with the results from our permissive regex\n        } else if ((!piece || piece.toLowerCase() == moves[i].piece) && Ox88[from] == moves[i].from && Ox88[to] == moves[i].to && (!promotion || promotion.toLowerCase() == moves[i].promotion)) {\n          return moves[i];\n        } else if (overlyDisambiguated) {\n          /*\n           * SPECIAL CASE: we parsed a move string that may have an unneeded\n           * rank/file disambiguator (e.g. Nge7).  The 'from' variable will\n           */\n          const square = algebraic(moves[i].from);\n          if ((!piece || piece.toLowerCase() == moves[i].piece) && Ox88[to] == moves[i].to && (from == square[0] || from == square[1]) && (!promotion || promotion.toLowerCase() == moves[i].promotion)) {\n            return moves[i];\n          }\n        }\n      }\n      return null;\n    }\n    ascii() {\n      let s = '   +------------------------+\\n';\n      for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n        // display the rank\n        if (file(i) === 0) {\n          s += ' ' + '87654321'[rank(i)] + ' |';\n        }\n        if (this._board[i]) {\n          const piece = this._board[i].type;\n          const color = this._board[i].color;\n          const symbol = color === WHITE ? piece.toUpperCase() : piece.toLowerCase();\n          s += ' ' + symbol + ' ';\n        } else {\n          s += ' . ';\n        }\n        if (i + 1 & 0x88) {\n          s += '|\\n';\n          i += 8;\n        }\n      }\n      s += '   +------------------------+\\n';\n      s += '     a  b  c  d  e  f  g  h';\n      return s;\n    }\n    perft(depth) {\n      const moves = this._moves({\n        legal: false\n      });\n      let nodes = 0;\n      const color = this._turn;\n      for (let i = 0, len = moves.length; i < len; i++) {\n        this._makeMove(moves[i]);\n        if (!this._isKingAttacked(color)) {\n          if (depth - 1 > 0) {\n            nodes += this.perft(depth - 1);\n          } else {\n            nodes++;\n          }\n        }\n        this._undoMove();\n      }\n      return nodes;\n    }\n    setTurn(color) {\n      if (this._turn == color) {\n        return false;\n      }\n      this.move('--');\n      return true;\n    }\n    turn() {\n      return this._turn;\n    }\n    board() {\n      const output = [];\n      let row = [];\n      for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n        if (this._board[i] == null) {\n          row.push(null);\n        } else {\n          row.push({\n            square: algebraic(i),\n            type: this._board[i].type,\n            color: this._board[i].color\n          });\n        }\n        if (i + 1 & 0x88) {\n          output.push(row);\n          row = [];\n          i += 8;\n        }\n      }\n      return output;\n    }\n    squareColor(square) {\n      if (square in Ox88) {\n        const sq = Ox88[square];\n        return (rank(sq) + file(sq)) % 2 === 0 ? 'light' : 'dark';\n      }\n      return null;\n    }\n    history({\n      verbose = false\n    } = {}) {\n      const reversedHistory = [];\n      const moveHistory = [];\n      while (this._history.length > 0) {\n        reversedHistory.push(this._undoMove());\n      }\n      while (true) {\n        const move = reversedHistory.pop();\n        if (!move) {\n          break;\n        }\n        if (verbose) {\n          moveHistory.push(new Move(this, move));\n        } else {\n          moveHistory.push(this._moveToSan(move, this._moves()));\n        }\n        this._makeMove(move);\n      }\n      return moveHistory;\n    }\n    /*\n     * Keeps track of position occurrence counts for the purpose of repetition\n     * checking. Old positions are removed from the map if their counts are reduced to 0.\n     */\n    _getPositionCount(hash) {\n      return this._positionCount.get(hash) ?? 0;\n    }\n    _incPositionCount() {\n      this._positionCount.set(this._hash, (this._positionCount.get(this._hash) ?? 0) + 1);\n    }\n    _decPositionCount(hash) {\n      const currentCount = this._positionCount.get(hash) ?? 0;\n      if (currentCount === 1) {\n        this._positionCount.delete(hash);\n      } else {\n        this._positionCount.set(hash, currentCount - 1);\n      }\n    }\n    _pruneComments() {\n      const reversedHistory = [];\n      const currentComments = {};\n      const copyComment = fen => {\n        if (fen in this._comments) {\n          currentComments[fen] = this._comments[fen];\n        }\n      };\n      while (this._history.length > 0) {\n        reversedHistory.push(this._undoMove());\n      }\n      copyComment(this.fen());\n      while (true) {\n        const move = reversedHistory.pop();\n        if (!move) {\n          break;\n        }\n        this._makeMove(move);\n        copyComment(this.fen());\n      }\n      this._comments = currentComments;\n    }\n    getComment() {\n      return this._comments[this.fen()];\n    }\n    setComment(comment) {\n      this._comments[this.fen()] = comment.replace('{', '[').replace('}', ']');\n    }\n    /**\n     * @deprecated Renamed to `removeComment` for consistency\n     */\n    deleteComment() {\n      return this.removeComment();\n    }\n    removeComment() {\n      const comment = this._comments[this.fen()];\n      delete this._comments[this.fen()];\n      return comment;\n    }\n    getComments() {\n      this._pruneComments();\n      return Object.keys(this._comments).map(fen => {\n        return {\n          fen: fen,\n          comment: this._comments[fen]\n        };\n      });\n    }\n    /**\n     * @deprecated Renamed to `removeComments` for consistency\n     */\n    deleteComments() {\n      return this.removeComments();\n    }\n    removeComments() {\n      this._pruneComments();\n      return Object.keys(this._comments).map(fen => {\n        const comment = this._comments[fen];\n        delete this._comments[fen];\n        return {\n          fen: fen,\n          comment: comment\n        };\n      });\n    }\n    setCastlingRights(color, rights) {\n      for (const side of [KING, QUEEN]) {\n        if (rights[side] !== undefined) {\n          if (rights[side]) {\n            this._castling[color] |= SIDES[side];\n          } else {\n            this._castling[color] &= ~SIDES[side];\n          }\n        }\n      }\n      this._updateCastlingRights();\n      const result = this.getCastlingRights(color);\n      return (rights[KING] === undefined || rights[KING] === result[KING]) && (rights[QUEEN] === undefined || rights[QUEEN] === result[QUEEN]);\n    }\n    getCastlingRights(color) {\n      return {\n        [KING]: (this._castling[color] & SIDES[KING]) !== 0,\n        [QUEEN]: (this._castling[color] & SIDES[QUEEN]) !== 0\n      };\n    }\n    moveNumber() {\n      return this._moveNumber;\n    }\n  }\n});","lineCount":3528,"map":[[7,2,3367,0,"Object"],[7,8,3367,0],[7,9,3367,0,"defineProperty"],[7,23,3367,0],[7,24,3367,0,"exports"],[7,31,3367,0],[8,4,3367,0,"enumerable"],[8,14,3367,0],[9,4,3367,0,"get"],[9,7,3367,0],[9,18,3367,0,"get"],[9,19,3367,0],[10,6,3367,0],[10,13,3367,9,"BISHOP"],[10,19,3367,15],[11,4,3367,15],[12,2,3367,15],[13,2,3367,0,"Object"],[13,8,3367,0],[13,9,3367,0,"defineProperty"],[13,23,3367,0],[13,24,3367,0,"exports"],[13,31,3367,0],[14,4,3367,0,"enumerable"],[14,14,3367,0],[15,4,3367,0,"get"],[15,7,3367,0],[15,18,3367,0,"get"],[15,19,3367,0],[16,6,3367,0],[16,13,3367,17,"BLACK"],[16,18,3367,22],[17,4,3367,22],[18,2,3367,22],[19,2,3367,0,"Object"],[19,8,3367,0],[19,9,3367,0,"defineProperty"],[19,23,3367,0],[19,24,3367,0,"exports"],[19,31,3367,0],[20,4,3367,0,"enumerable"],[20,14,3367,0],[21,4,3367,0,"get"],[21,7,3367,0],[21,18,3367,0,"get"],[21,19,3367,0],[22,6,3367,0],[22,13,3367,24,"Chess"],[22,18,3367,29],[23,4,3367,29],[24,2,3367,29],[25,2,3367,0,"Object"],[25,8,3367,0],[25,9,3367,0,"defineProperty"],[25,23,3367,0],[25,24,3367,0,"exports"],[25,31,3367,0],[26,4,3367,0,"enumerable"],[26,14,3367,0],[27,4,3367,0,"get"],[27,7,3367,0],[27,18,3367,0,"get"],[27,19,3367,0],[28,6,3367,0],[28,13,3367,31,"DEFAULT_POSITION"],[28,29,3367,47],[29,4,3367,47],[30,2,3367,47],[31,2,3367,0,"Object"],[31,8,3367,0],[31,9,3367,0,"defineProperty"],[31,23,3367,0],[31,24,3367,0,"exports"],[31,31,3367,0],[32,4,3367,0,"enumerable"],[32,14,3367,0],[33,4,3367,0,"get"],[33,7,3367,0],[33,18,3367,0,"get"],[33,19,3367,0],[34,6,3367,0],[34,13,3367,49,"KING"],[34,17,3367,53],[35,4,3367,53],[36,2,3367,53],[37,2,3367,0,"Object"],[37,8,3367,0],[37,9,3367,0,"defineProperty"],[37,23,3367,0],[37,24,3367,0,"exports"],[37,31,3367,0],[38,4,3367,0,"enumerable"],[38,14,3367,0],[39,4,3367,0,"get"],[39,7,3367,0],[39,18,3367,0,"get"],[39,19,3367,0],[40,6,3367,0],[40,13,3367,55,"KNIGHT"],[40,19,3367,61],[41,4,3367,61],[42,2,3367,61],[43,2,3367,0,"Object"],[43,8,3367,0],[43,9,3367,0,"defineProperty"],[43,23,3367,0],[43,24,3367,0,"exports"],[43,31,3367,0],[44,4,3367,0,"enumerable"],[44,14,3367,0],[45,4,3367,0,"get"],[45,7,3367,0],[45,18,3367,0,"get"],[45,19,3367,0],[46,6,3367,0],[46,13,3367,63,"Move"],[46,17,3367,67],[47,4,3367,67],[48,2,3367,67],[49,2,3367,0,"Object"],[49,8,3367,0],[49,9,3367,0,"defineProperty"],[49,23,3367,0],[49,24,3367,0,"exports"],[49,31,3367,0],[50,4,3367,0,"enumerable"],[50,14,3367,0],[51,4,3367,0,"get"],[51,7,3367,0],[51,18,3367,0,"get"],[51,19,3367,0],[52,6,3367,0],[52,13,3367,69,"PAWN"],[52,17,3367,73],[53,4,3367,73],[54,2,3367,73],[55,2,3367,0,"Object"],[55,8,3367,0],[55,9,3367,0,"defineProperty"],[55,23,3367,0],[55,24,3367,0,"exports"],[55,31,3367,0],[56,4,3367,0,"enumerable"],[56,14,3367,0],[57,4,3367,0,"get"],[57,7,3367,0],[57,18,3367,0,"get"],[57,19,3367,0],[58,6,3367,0],[58,13,3367,75,"QUEEN"],[58,18,3367,80],[59,4,3367,80],[60,2,3367,80],[61,2,3367,0,"Object"],[61,8,3367,0],[61,9,3367,0,"defineProperty"],[61,23,3367,0],[61,24,3367,0,"exports"],[61,31,3367,0],[62,4,3367,0,"enumerable"],[62,14,3367,0],[63,4,3367,0,"get"],[63,7,3367,0],[63,18,3367,0,"get"],[63,19,3367,0],[64,6,3367,0],[64,13,3367,82,"ROOK"],[64,17,3367,86],[65,4,3367,86],[66,2,3367,86],[67,2,3367,0,"Object"],[67,8,3367,0],[67,9,3367,0,"defineProperty"],[67,23,3367,0],[67,24,3367,0,"exports"],[67,31,3367,0],[68,4,3367,0,"enumerable"],[68,14,3367,0],[69,4,3367,0,"get"],[69,7,3367,0],[69,18,3367,0,"get"],[69,19,3367,0],[70,6,3367,0],[70,13,3367,88,"SEVEN_TAG_ROSTER"],[70,29,3367,104],[71,4,3367,104],[72,2,3367,104],[73,2,3367,0,"Object"],[73,8,3367,0],[73,9,3367,0,"defineProperty"],[73,23,3367,0],[73,24,3367,0,"exports"],[73,31,3367,0],[74,4,3367,0,"enumerable"],[74,14,3367,0],[75,4,3367,0,"get"],[75,7,3367,0],[75,18,3367,0,"get"],[75,19,3367,0],[76,6,3367,0],[76,13,3367,106,"SQUARES"],[76,20,3367,113],[77,4,3367,113],[78,2,3367,113],[79,2,3367,0,"Object"],[79,8,3367,0],[79,9,3367,0,"defineProperty"],[79,23,3367,0],[79,24,3367,0,"exports"],[79,31,3367,0],[80,4,3367,0,"enumerable"],[80,14,3367,0],[81,4,3367,0,"get"],[81,7,3367,0],[81,18,3367,0,"get"],[81,19,3367,0],[82,6,3367,0],[82,13,3367,115,"WHITE"],[82,18,3367,120],[83,4,3367,120],[84,2,3367,120],[85,2,3367,0,"Object"],[85,8,3367,0],[85,9,3367,0,"defineProperty"],[85,23,3367,0],[85,24,3367,0,"exports"],[85,31,3367,0],[86,4,3367,0,"enumerable"],[86,14,3367,0],[87,4,3367,0,"get"],[87,7,3367,0],[87,18,3367,0,"get"],[87,19,3367,0],[88,6,3367,0],[88,13,3367,122,"validateFen"],[88,24,3367,133],[89,4,3367,133],[90,2,3367,133],[91,2,3367,0,"Object"],[91,8,3367,0],[91,9,3367,0,"defineProperty"],[91,23,3367,0],[91,24,3367,0,"exports"],[91,31,3367,0],[92,4,3367,0,"enumerable"],[92,14,3367,0],[93,4,3367,0,"get"],[93,7,3367,0],[93,18,3367,0,"get"],[93,19,3367,0],[94,6,3367,0],[94,13,3367,135,"xoroshiro128"],[94,25,3367,147],[95,4,3367,147],[96,2,3367,147],[97,2,1,0],[98,2,2,0],[99,2,3,0],[101,2,7,2],[101,11,7,11,"rootNode"],[101,19,7,19,"rootNode"],[101,20,7,20,"comment"],[101,27,7,27],[101,29,7,29],[102,4,8,3],[102,11,8,10,"comment"],[102,18,8,17],[102,23,8,22],[102,27,8,26],[102,30,8,29],[103,6,8,31,"comment"],[103,13,8,38],[104,6,8,40,"variations"],[104,16,8,50],[104,18,8,52],[105,4,8,55],[105,5,8,56],[105,8,8,59],[106,6,8,61,"variations"],[106,16,8,71],[106,18,8,73],[107,4,8,75],[107,5,8,76],[108,2,9,2],[109,2,11,2],[109,11,11,11,"node"],[109,15,11,15,"node"],[109,16,11,16,"move"],[109,20,11,20],[109,22,11,22,"suffix"],[109,28,11,28],[109,30,11,30,"nag"],[109,33,11,33],[109,35,11,35,"comment"],[109,42,11,42],[109,44,11,44,"variations"],[109,54,11,54],[109,56,11,56],[110,4,12,3],[110,10,12,9,"node"],[110,14,12,13],[110,17,12,16],[111,6,12,18,"move"],[111,10,12,22],[112,6,12,24,"variations"],[113,4,12,35],[113,5,12,36],[114,4,14,4],[114,8,14,8,"suffix"],[114,14,14,14],[114,16,14,16],[115,6,15,5,"node"],[115,10,15,9],[115,11,15,10,"suffix"],[115,17,15,16],[115,20,15,19,"suffix"],[115,26,15,25],[116,4,16,4],[117,4,18,4],[117,8,18,8,"nag"],[117,11,18,11],[117,13,18,13],[118,6,19,5,"node"],[118,10,19,9],[118,11,19,10,"nag"],[118,14,19,13],[118,17,19,16,"nag"],[118,20,19,19],[119,4,20,4],[120,4,22,4],[120,8,22,8,"comment"],[120,15,22,15],[120,20,22,20],[120,24,22,24],[120,26,22,26],[121,6,23,5,"node"],[121,10,23,9],[121,11,23,10,"comment"],[121,18,23,17],[121,21,23,20,"comment"],[121,28,23,27],[122,4,24,4],[123,4,26,4],[123,11,26,11,"node"],[123,15,26,15],[124,2,27,2],[125,2,29,2],[125,11,29,11,"lineToTree"],[125,21,29,21,"lineToTree"],[125,22,29,22],[125,25,29,25,"nodes"],[125,30,29,30],[125,32,29,32],[126,4,30,3],[126,10,30,9],[126,11,30,10,"root"],[126,15,30,14],[126,17,30,16],[126,20,30,19,"rest"],[126,24,30,23],[126,25,30,24],[126,28,30,27,"nodes"],[126,33,30,32],[127,4,32,4],[127,8,32,8,"parent"],[127,14,32,14],[127,17,32,17,"root"],[127,21,32,21],[128,4,34,4],[128,9,34,9],[128,15,34,15,"child"],[128,20,34,20],[128,24,34,24,"rest"],[128,28,34,28],[128,30,34,30],[129,6,35,5],[129,10,35,9,"child"],[129,15,35,14],[129,20,35,19],[129,24,35,23],[129,26,35,25],[130,8,36,9,"parent"],[130,14,36,15],[130,15,36,16,"variations"],[130,25,36,26],[130,28,36,29],[130,29,36,30,"child"],[130,34,36,35],[130,36,36,37],[130,39,36,40,"child"],[130,44,36,45],[130,45,36,46,"variations"],[130,55,36,56],[130,56,36,57],[131,8,37,12,"child"],[131,13,37,17],[131,14,37,18,"variations"],[131,24,37,28],[131,27,37,31],[131,29,37,33],[132,8,38,12,"parent"],[132,14,38,18],[132,17,38,21,"child"],[132,22,38,26],[133,6,39,8],[134,4,40,4],[135,4,42,3],[135,11,42,10,"root"],[135,15,42,14],[136,2,43,2],[137,2,45,2],[137,11,45,11,"pgn"],[137,14,45,14,"pgn"],[137,15,45,15,"headers"],[137,22,45,22],[137,24,45,24,"game"],[137,28,45,28],[137,30,45,30],[138,4,46,3],[138,8,46,7,"game"],[138,12,46,11],[138,13,46,12,"marker"],[138,19,46,18],[138,23,46,22,"game"],[138,27,46,26],[138,28,46,27,"marker"],[138,34,46,33],[138,35,46,34,"comment"],[138,42,46,41],[138,44,46,43],[139,6,47,5],[139,10,47,9,"node"],[139,14,47,13],[139,17,47,16,"game"],[139,21,47,20],[139,22,47,21,"root"],[139,26,47,25],[140,6,48,8],[140,13,48,15],[140,17,48,19],[140,19,48,21],[141,8,49,9],[141,14,49,15,"next"],[141,18,49,19],[141,21,49,22,"node"],[141,25,49,26],[141,26,49,27,"variations"],[141,36,49,37],[141,37,49,38],[141,38,49,39],[141,39,49,40],[142,8,50,12],[142,12,50,16],[142,13,50,17,"next"],[142,17,50,21],[142,19,50,23],[143,10,51,13,"node"],[143,14,51,17],[143,15,51,18,"comment"],[143,22,51,25],[143,25,51,28,"game"],[143,29,51,32],[143,30,51,33,"marker"],[143,36,51,39],[143,37,51,40,"comment"],[143,44,51,47],[144,10,52,13],[145,8,53,12],[146,8,54,12,"node"],[146,12,54,16],[146,15,54,19,"next"],[146,19,54,23],[147,6,55,8],[148,4,56,4],[149,4,58,3],[149,11,58,10],[150,6,59,5,"headers"],[150,13,59,12],[151,6,60,8,"root"],[151,10,60,12],[151,12,60,14,"game"],[151,16,60,18],[151,17,60,19,"root"],[151,21,60,23],[152,6,61,8,"result"],[152,12,61,14],[152,14,61,16],[152,15,61,17,"game"],[152,19,61,21],[152,20,61,22,"marker"],[152,26,61,28],[152,30,61,32,"game"],[152,34,61,36],[152,35,61,37,"marker"],[152,41,61,43],[152,42,61,44,"result"],[152,48,61,50],[152,53,61,55,"undefined"],[153,4,62,4],[153,5,62,5],[154,2,63,2],[155,2,65,0],[155,11,65,9,"peg$subclass"],[155,23,65,21,"peg$subclass"],[155,24,65,22,"child"],[155,29,65,27],[155,31,65,29,"parent"],[155,37,65,35],[155,39,65,37],[156,4,66,2],[156,13,66,11,"C"],[156,14,66,12,"C"],[156,15,66,12],[156,17,66,15],[157,6,66,17],[157,10,66,21],[157,11,66,22,"constructor"],[157,22,66,33],[157,25,66,36,"child"],[157,30,66,41],[158,4,66,43],[159,4,67,2,"C"],[159,5,67,3],[159,6,67,4,"prototype"],[159,15,67,13],[159,18,67,16,"parent"],[159,24,67,22],[159,25,67,23,"prototype"],[159,34,67,32],[160,4,68,2,"child"],[160,9,68,7],[160,10,68,8,"prototype"],[160,19,68,17],[160,22,68,20],[160,26,68,24,"C"],[160,27,68,25],[160,28,68,26],[160,29,68,27],[161,2,69,0],[162,2,71,0],[162,11,71,9,"peg$SyntaxError"],[162,26,71,24,"peg$SyntaxError"],[162,27,71,25,"message"],[162,34,71,32],[162,36,71,34,"expected"],[162,44,71,42],[162,46,71,44,"found"],[162,51,71,49],[162,53,71,51,"location"],[162,61,71,59],[162,63,71,61],[163,4,72,2],[163,8,72,6,"self"],[163,12,72,10],[163,15,72,13,"Error"],[163,20,72,18],[163,21,72,19,"call"],[163,25,72,23],[163,26,72,24],[163,30,72,28],[163,32,72,30,"message"],[163,39,72,37],[163,40,72,38],[164,4,73,2],[165,4,74,2],[165,8,74,6,"Object"],[165,14,74,12],[165,15,74,13,"setPrototypeOf"],[165,29,74,27],[165,31,74,29],[166,6,75,4,"Object"],[166,12,75,10],[166,13,75,11,"setPrototypeOf"],[166,27,75,25],[166,28,75,26,"self"],[166,32,75,30],[166,34,75,32,"peg$SyntaxError"],[166,49,75,47],[166,50,75,48,"prototype"],[166,59,75,57],[166,60,75,58],[167,4,76,2],[168,4,77,2,"self"],[168,8,77,6],[168,9,77,7,"expected"],[168,17,77,15],[168,20,77,18,"expected"],[168,28,77,26],[169,4,78,2,"self"],[169,8,78,6],[169,9,78,7,"found"],[169,14,78,12],[169,17,78,15,"found"],[169,22,78,20],[170,4,79,2,"self"],[170,8,79,6],[170,9,79,7,"location"],[170,17,79,15],[170,20,79,18,"location"],[170,28,79,26],[171,4,80,2,"self"],[171,8,80,6],[171,9,80,7,"name"],[171,13,80,11],[171,16,80,14],[171,29,80,27],[172,4,81,2],[172,11,81,9,"self"],[172,15,81,13],[173,2,82,0],[174,2,84,0,"peg$subclass"],[174,14,84,12],[174,15,84,13,"peg$SyntaxError"],[174,30,84,28],[174,32,84,30,"Error"],[174,37,84,35],[174,38,84,36],[175,2,86,0],[175,11,86,9,"peg$padEnd"],[175,21,86,19,"peg$padEnd"],[175,22,86,20,"str"],[175,25,86,23],[175,27,86,25,"targetLength"],[175,39,86,37],[175,41,86,39,"padString"],[175,50,86,48],[175,52,86,50],[176,4,87,2,"padString"],[176,13,87,11],[176,16,87,14,"padString"],[176,25,87,23],[176,29,87,27],[176,32,87,30],[177,4,88,2],[177,8,88,6,"str"],[177,11,88,9],[177,12,88,10,"length"],[177,18,88,16],[177,21,88,19,"targetLength"],[177,33,88,31],[177,35,88,33],[178,6,88,35],[178,13,88,42,"str"],[178,16,88,45],[179,4,88,47],[180,4,89,2,"targetLength"],[180,16,89,14],[180,20,89,18,"str"],[180,23,89,21],[180,24,89,22,"length"],[180,30,89,28],[181,4,90,2,"padString"],[181,13,90,11],[181,17,90,15,"padString"],[181,26,90,24],[181,27,90,25,"repeat"],[181,33,90,31],[181,34,90,32,"targetLength"],[181,46,90,44],[181,47,90,45],[182,4,91,2],[182,11,91,9,"str"],[182,14,91,12],[182,17,91,15,"padString"],[182,26,91,24],[182,27,91,25,"slice"],[182,32,91,30],[182,33,91,31],[182,34,91,32],[182,36,91,34,"targetLength"],[182,48,91,46],[182,49,91,47],[183,2,92,0],[184,2,94,0,"peg$SyntaxError"],[184,17,94,15],[184,18,94,16,"prototype"],[184,27,94,25],[184,28,94,26,"format"],[184,34,94,32],[184,37,94,35],[184,47,94,44,"sources"],[184,54,94,51],[184,56,94,53],[185,4,95,2],[185,8,95,6,"str"],[185,11,95,9],[185,14,95,12],[185,23,95,21],[185,26,95,24],[185,30,95,28],[185,31,95,29,"message"],[185,38,95,36],[186,4,96,2],[186,8,96,6],[186,12,96,10],[186,13,96,11,"location"],[186,21,96,19],[186,23,96,21],[187,6,97,4],[187,10,97,8,"src"],[187,13,97,11],[187,16,97,14],[187,20,97,18],[188,6,98,4],[188,10,98,8,"k"],[188,11,98,9],[189,6,99,4],[189,11,99,9,"k"],[189,12,99,10],[189,15,99,13],[189,16,99,14],[189,18,99,16,"k"],[189,19,99,17],[189,22,99,20,"sources"],[189,29,99,27],[189,30,99,28,"length"],[189,36,99,34],[189,38,99,36,"k"],[189,39,99,37],[189,41,99,39],[189,43,99,41],[190,8,100,6],[190,12,100,10,"sources"],[190,19,100,17],[190,20,100,18,"k"],[190,21,100,19],[190,22,100,20],[190,23,100,21,"source"],[190,29,100,27],[190,34,100,32],[190,38,100,36],[190,39,100,37,"location"],[190,47,100,45],[190,48,100,46,"source"],[190,54,100,52],[190,56,100,54],[191,10,101,8,"src"],[191,13,101,11],[191,16,101,14,"sources"],[191,23,101,21],[191,24,101,22,"k"],[191,25,101,23],[191,26,101,24],[191,27,101,25,"text"],[191,31,101,29],[191,32,101,30,"split"],[191,37,101,35],[191,38,101,36],[191,51,101,49],[191,52,101,50],[192,10,102,8],[193,8,103,6],[194,6,104,4],[195,6,105,4],[195,10,105,8,"s"],[195,11,105,9],[195,14,105,12],[195,18,105,16],[195,19,105,17,"location"],[195,27,105,25],[195,28,105,26,"start"],[195,33,105,31],[196,6,106,4],[196,10,106,8,"offset_s"],[196,18,106,16],[196,21,106,20],[196,25,106,24],[196,26,106,25,"location"],[196,34,106,33],[196,35,106,34,"source"],[196,41,106,40],[196,45,106,45],[196,52,106,52],[196,56,106,56],[196,57,106,57,"location"],[196,65,106,65],[196,66,106,66,"source"],[196,72,106,72],[196,73,106,73,"offset"],[196,79,106,79],[196,84,106,84],[196,94,106,95],[196,97,107,8],[196,101,107,12],[196,102,107,13,"location"],[196,110,107,21],[196,111,107,22,"source"],[196,117,107,28],[196,118,107,29,"offset"],[196,124,107,35],[196,125,107,36,"s"],[196,126,107,37],[196,127,107,38],[196,130,108,8,"s"],[196,131,108,9],[197,6,109,4],[197,10,109,8,"loc"],[197,13,109,11],[197,16,109,14],[197,20,109,18],[197,21,109,19,"location"],[197,29,109,27],[197,30,109,28,"source"],[197,36,109,34],[197,39,109,37],[197,42,109,40],[197,45,109,43,"offset_s"],[197,53,109,51],[197,54,109,52,"line"],[197,58,109,56],[197,61,109,59],[197,64,109,62],[197,67,109,65,"offset_s"],[197,75,109,73],[197,76,109,74,"column"],[197,82,109,80],[198,6,110,4],[198,10,110,8,"src"],[198,13,110,11],[198,15,110,13],[199,8,111,6],[199,12,111,10,"e"],[199,13,111,11],[199,16,111,14],[199,20,111,18],[199,21,111,19,"location"],[199,29,111,27],[199,30,111,28,"end"],[199,33,111,31],[200,8,112,6],[200,12,112,10,"filler"],[200,18,112,16],[200,21,112,19,"peg$padEnd"],[200,31,112,29],[200,32,112,30],[200,34,112,32],[200,36,112,34,"offset_s"],[200,44,112,42],[200,45,112,43,"line"],[200,49,112,47],[200,50,112,48,"toString"],[200,58,112,56],[200,59,112,57],[200,60,112,58],[200,61,112,59,"length"],[200,67,112,65],[200,69,112,67],[200,72,112,70],[200,73,112,71],[201,8,113,6],[201,12,113,10,"line"],[201,16,113,14],[201,19,113,17,"src"],[201,22,113,20],[201,23,113,21,"s"],[201,24,113,22],[201,25,113,23,"line"],[201,29,113,27],[201,32,113,30],[201,33,113,31],[201,34,113,32],[202,8,114,6],[202,12,114,10,"last"],[202,16,114,14],[202,19,114,17,"s"],[202,20,114,18],[202,21,114,19,"line"],[202,25,114,23],[202,30,114,28,"e"],[202,31,114,29],[202,32,114,30,"line"],[202,36,114,34],[202,39,114,37,"e"],[202,40,114,38],[202,41,114,39,"column"],[202,47,114,45],[202,50,114,48,"line"],[202,54,114,52],[202,55,114,53,"length"],[202,61,114,59],[202,64,114,62],[202,65,114,63],[203,8,115,6],[203,12,115,10,"hatLen"],[203,18,115,16],[203,21,115,20,"last"],[203,25,115,24],[203,28,115,27,"s"],[203,29,115,28],[203,30,115,29,"column"],[203,36,115,35],[203,40,115,40],[203,41,115,41],[204,8,116,6,"str"],[204,11,116,9],[204,15,116,13],[204,24,116,22],[204,27,116,25,"loc"],[204,30,116,28],[204,33,116,31],[204,37,116,35],[204,40,117,12,"filler"],[204,46,117,18],[204,49,117,21],[204,55,117,27],[204,58,118,12,"offset_s"],[204,66,118,20],[204,67,118,21,"line"],[204,71,118,25],[204,74,118,28],[204,79,118,33],[204,82,118,36,"line"],[204,86,118,40],[204,89,118,43],[204,93,118,47],[204,96,119,12,"filler"],[204,102,119,18],[204,105,119,21],[204,110,119,26],[204,113,119,29,"peg$padEnd"],[204,123,119,39],[204,124,119,40],[204,126,119,42],[204,128,119,44,"s"],[204,129,119,45],[204,130,119,46,"column"],[204,136,119,52],[204,139,119,55],[204,140,119,56],[204,142,119,58],[204,145,119,61],[204,146,119,62],[204,149,120,12,"peg$padEnd"],[204,159,120,22],[204,160,120,23],[204,162,120,25],[204,164,120,27,"hatLen"],[204,170,120,33],[204,172,120,35],[204,175,120,38],[204,176,120,39],[205,6,121,4],[205,7,121,5],[205,13,121,11],[206,8,122,6,"str"],[206,11,122,9],[206,15,122,13],[206,23,122,21],[206,26,122,24,"loc"],[206,29,122,27],[207,6,123,4],[208,4,124,2],[209,4,125,2],[209,11,125,9,"str"],[209,14,125,12],[210,2,126,0],[210,3,126,1],[211,2,128,0,"peg$SyntaxError"],[211,17,128,15],[211,18,128,16,"buildMessage"],[211,30,128,28],[211,33,128,31],[211,43,128,40,"expected"],[211,51,128,48],[211,53,128,50,"found"],[211,58,128,55],[211,60,128,57],[212,4,129,2],[212,8,129,6,"DESCRIBE_EXPECTATION_FNS"],[212,32,129,30],[212,35,129,33],[213,6,130,4,"literal"],[213,13,130,11],[213,15,130,13],[213,24,130,13,"literal"],[213,25,130,22,"expectation"],[213,36,130,33],[213,38,130,35],[214,8,131,6],[214,15,131,13],[214,19,131,17],[214,22,131,20,"literalEscape"],[214,35,131,33],[214,36,131,34,"expectation"],[214,47,131,45],[214,48,131,46,"text"],[214,52,131,50],[214,53,131,51],[214,56,131,54],[214,60,131,58],[215,6,132,4],[215,7,132,5],[216,6,134,4,"class"],[216,11,134,9],[216,13,134,11],[216,22,134,11,"class"],[216,23,134,20,"expectation"],[216,34,134,31],[216,36,134,33],[217,8,135,6],[217,12,135,10,"escapedParts"],[217,24,135,22],[217,27,135,25,"expectation"],[217,38,135,36],[217,39,135,37,"parts"],[217,44,135,42],[217,45,135,43,"map"],[217,48,135,46],[217,49,135,47],[217,59,135,56,"part"],[217,63,135,60],[217,65,135,62],[218,10,136,8],[218,17,136,15,"Array"],[218,22,136,20],[218,23,136,21,"isArray"],[218,30,136,28],[218,31,136,29,"part"],[218,35,136,33],[218,36,136,34],[218,39,137,12,"classEscape"],[218,50,137,23],[218,51,137,24,"part"],[218,55,137,28],[218,56,137,29],[218,57,137,30],[218,58,137,31],[218,59,137,32],[218,62,137,35],[218,65,137,38],[218,68,137,41,"classEscape"],[218,79,137,52],[218,80,137,53,"part"],[218,84,137,57],[218,85,137,58],[218,86,137,59],[218,87,137,60],[218,88,137,61],[218,91,138,12,"classEscape"],[218,102,138,23],[218,103,138,24,"part"],[218,107,138,28],[218,108,138,29],[219,8,139,6],[219,9,139,7],[219,10,139,8],[220,8,141,6],[220,15,141,13],[220,18,141,16],[220,22,141,20,"expectation"],[220,33,141,31],[220,34,141,32,"inverted"],[220,42,141,40],[220,45,141,43],[220,48,141,46],[220,51,141,49],[220,53,141,51],[220,54,141,52],[220,57,141,55,"escapedParts"],[220,69,141,67],[220,70,141,68,"join"],[220,74,141,72],[220,75,141,73],[220,77,141,75],[220,78,141,76],[220,81,141,79],[220,84,141,82],[221,6,142,4],[221,7,142,5],[222,6,144,4,"any"],[222,9,144,7],[222,11,144,9],[222,20,144,9,"any"],[222,21,144,9],[222,23,144,20],[223,8,145,6],[223,15,145,13],[223,30,145,28],[224,6,146,4],[224,7,146,5],[225,6,148,4,"end"],[225,9,148,7],[225,11,148,9],[225,20,148,9,"end"],[225,21,148,9],[225,23,148,20],[226,8,149,6],[226,15,149,13],[226,29,149,27],[227,6,150,4],[227,7,150,5],[228,6,152,4,"other"],[228,11,152,9],[228,13,152,11],[228,22,152,11,"other"],[228,23,152,20,"expectation"],[228,34,152,31],[228,36,152,33],[229,8,153,6],[229,15,153,13,"expectation"],[229,26,153,24],[229,27,153,25,"description"],[229,38,153,36],[230,6,154,4],[231,4,155,2],[231,5,155,3],[232,4,157,2],[232,13,157,11,"hex"],[232,16,157,14,"hex"],[232,17,157,15,"ch"],[232,19,157,17],[232,21,157,19],[233,6,158,4],[233,13,158,11,"ch"],[233,15,158,13],[233,16,158,14,"charCodeAt"],[233,26,158,24],[233,27,158,25],[233,28,158,26],[233,29,158,27],[233,30,158,28,"toString"],[233,38,158,36],[233,39,158,37],[233,41,158,39],[233,42,158,40],[233,43,158,41,"toUpperCase"],[233,54,158,52],[233,55,158,53],[233,56,158,54],[234,4,159,2],[235,4,161,2],[235,13,161,11,"literalEscape"],[235,26,161,24,"literalEscape"],[235,27,161,25,"s"],[235,28,161,26],[235,30,161,28],[236,6,162,4],[236,13,162,11,"s"],[236,14,162,12],[236,15,163,7,"replace"],[236,22,163,14],[236,23,163,15],[236,28,163,20],[236,30,163,22],[236,36,163,28],[236,37,163,29],[236,38,164,7,"replace"],[236,45,164,14],[236,46,164,15],[236,50,164,19],[236,52,164,22],[236,58,164,28],[236,59,164,29],[236,60,165,7,"replace"],[236,67,165,14],[236,68,165,15],[236,73,165,20],[236,75,165,22],[236,80,165,27],[236,81,165,28],[236,82,166,7,"replace"],[236,89,166,14],[236,90,166,15],[236,95,166,20],[236,97,166,22],[236,102,166,27],[236,103,166,28],[236,104,167,7,"replace"],[236,111,167,14],[236,112,167,15],[236,117,167,20],[236,119,167,22],[236,124,167,27],[236,125,167,28],[236,126,168,7,"replace"],[236,133,168,14],[236,134,168,15],[236,139,168,20],[236,141,168,22],[236,146,168,27],[236,147,168,28],[236,148,169,7,"replace"],[236,155,169,14],[236,156,169,15],[236,170,169,29],[236,172,169,40],[236,182,169,49,"ch"],[236,184,169,51],[236,186,169,53],[237,8,169,55],[237,15,169,62],[237,21,169,68],[237,24,169,71,"hex"],[237,27,169,74],[237,28,169,75,"ch"],[237,30,169,77],[237,31,169,78],[238,6,169,80],[238,7,169,81],[238,8,169,82],[238,9,170,7,"replace"],[238,16,170,14],[238,17,170,15],[238,40,170,38],[238,42,170,40],[238,52,170,49,"ch"],[238,54,170,51],[238,56,170,53],[239,8,170,55],[239,15,170,62],[239,20,170,67],[239,23,170,71,"hex"],[239,26,170,74],[239,27,170,75,"ch"],[239,29,170,77],[239,30,170,78],[240,6,170,80],[240,7,170,81],[240,8,170,82],[241,4,171,2],[242,4,173,2],[242,13,173,11,"classEscape"],[242,24,173,22,"classEscape"],[242,25,173,23,"s"],[242,26,173,24],[242,28,173,26],[243,6,174,4],[243,13,174,11,"s"],[243,14,174,12],[243,15,175,7,"replace"],[243,22,175,14],[243,23,175,15],[243,28,175,20],[243,30,175,22],[243,36,175,28],[243,37,175,29],[243,38,176,7,"replace"],[243,45,176,14],[243,46,176,15],[243,51,176,20],[243,53,176,22],[243,58,176,27],[243,59,176,28],[243,60,177,7,"replace"],[243,67,177,14],[243,68,177,15],[243,73,177,20],[243,75,177,22],[243,80,177,27],[243,81,177,28],[243,82,178,7,"replace"],[243,89,178,14],[243,90,178,15],[243,94,178,19],[243,96,178,22],[243,101,178,27],[243,102,178,28],[243,103,179,7,"replace"],[243,110,179,14],[243,111,179,15],[243,116,179,20],[243,118,179,22],[243,123,179,27],[243,124,179,28],[243,125,180,7,"replace"],[243,132,180,14],[243,133,180,15],[243,138,180,20],[243,140,180,22],[243,145,180,27],[243,146,180,28],[243,147,181,7,"replace"],[243,154,181,14],[243,155,181,15],[243,160,181,20],[243,162,181,22],[243,167,181,27],[243,168,181,28],[243,169,182,7,"replace"],[243,176,182,14],[243,177,182,15],[243,182,182,20],[243,184,182,22],[243,189,182,27],[243,190,182,28],[243,191,183,7,"replace"],[243,198,183,14],[243,199,183,15],[243,213,183,29],[243,215,183,40],[243,225,183,49,"ch"],[243,227,183,51],[243,229,183,53],[244,8,183,55],[244,15,183,62],[244,21,183,68],[244,24,183,71,"hex"],[244,27,183,74],[244,28,183,75,"ch"],[244,30,183,77],[244,31,183,78],[245,6,183,80],[245,7,183,81],[245,8,183,82],[245,9,184,7,"replace"],[245,16,184,14],[245,17,184,15],[245,40,184,38],[245,42,184,40],[245,52,184,49,"ch"],[245,54,184,51],[245,56,184,53],[246,8,184,55],[246,15,184,62],[246,20,184,67],[246,23,184,71,"hex"],[246,26,184,74],[246,27,184,75,"ch"],[246,29,184,77],[246,30,184,78],[247,6,184,80],[247,7,184,81],[247,8,184,82],[248,4,185,2],[249,4,187,2],[249,13,187,11,"describeExpectation"],[249,32,187,30,"describeExpectation"],[249,33,187,31,"expectation"],[249,44,187,42],[249,46,187,44],[250,6,188,4],[250,13,188,11,"DESCRIBE_EXPECTATION_FNS"],[250,37,188,35],[250,38,188,36,"expectation"],[250,49,188,47],[250,50,188,48,"type"],[250,54,188,52],[250,55,188,53],[250,56,188,54,"expectation"],[250,67,188,65],[250,68,188,66],[251,4,189,2],[252,4,191,2],[252,13,191,11,"describeExpected"],[252,29,191,27,"describeExpected"],[252,30,191,28,"expected"],[252,38,191,36],[252,40,191,38],[253,6,192,4],[253,10,192,8,"descriptions"],[253,22,192,20],[253,25,192,23,"expected"],[253,33,192,31],[253,34,192,32,"map"],[253,37,192,35],[253,38,192,36,"describeExpectation"],[253,57,192,55],[253,58,192,56],[254,6,193,4],[254,10,193,8,"i"],[254,11,193,9],[254,13,193,11,"j"],[254,14,193,12],[255,6,195,4,"descriptions"],[255,18,195,16],[255,19,195,17,"sort"],[255,23,195,21],[255,24,195,22],[255,25,195,23],[256,6,197,4],[256,10,197,8,"descriptions"],[256,22,197,20],[256,23,197,21,"length"],[256,29,197,27],[256,32,197,30],[256,33,197,31],[256,35,197,33],[257,8,198,6],[257,13,198,11,"i"],[257,14,198,12],[257,17,198,15],[257,18,198,16],[257,20,198,18,"j"],[257,21,198,19],[257,24,198,22],[257,25,198,23],[257,27,198,25,"i"],[257,28,198,26],[257,31,198,29,"descriptions"],[257,43,198,41],[257,44,198,42,"length"],[257,50,198,48],[257,52,198,50,"i"],[257,53,198,51],[257,55,198,53],[257,57,198,55],[258,10,199,8],[258,14,199,12,"descriptions"],[258,26,199,24],[258,27,199,25,"i"],[258,28,199,26],[258,31,199,29],[258,32,199,30],[258,33,199,31],[258,38,199,36,"descriptions"],[258,50,199,48],[258,51,199,49,"i"],[258,52,199,50],[258,53,199,51],[258,55,199,53],[259,12,200,10,"descriptions"],[259,24,200,22],[259,25,200,23,"j"],[259,26,200,24],[259,27,200,25],[259,30,200,28,"descriptions"],[259,42,200,40],[259,43,200,41,"i"],[259,44,200,42],[259,45,200,43],[260,12,201,10,"j"],[260,13,201,11],[260,15,201,13],[261,10,202,8],[262,8,203,6],[263,8,204,6,"descriptions"],[263,20,204,18],[263,21,204,19,"length"],[263,27,204,25],[263,30,204,28,"j"],[263,31,204,29],[264,6,205,4],[265,6,207,4],[265,14,207,12,"descriptions"],[265,26,207,24],[265,27,207,25,"length"],[265,33,207,31],[266,8,208,6],[266,13,208,11],[266,14,208,12],[267,10,209,8],[267,17,209,15,"descriptions"],[267,29,209,27],[267,30,209,28],[267,31,209,29],[267,32,209,30],[268,8,211,6],[268,13,211,11],[268,14,211,12],[269,10,212,8],[269,17,212,15,"descriptions"],[269,29,212,27],[269,30,212,28],[269,31,212,29],[269,32,212,30],[269,35,212,33],[269,41,212,39],[269,44,212,42,"descriptions"],[269,56,212,54],[269,57,212,55],[269,58,212,56],[269,59,212,57],[270,8,214,6],[271,10,215,8],[271,17,215,15,"descriptions"],[271,29,215,27],[271,30,215,28,"slice"],[271,35,215,33],[271,36,215,34],[271,37,215,35],[271,39,215,37],[271,40,215,38],[271,41,215,39],[271,42,215,40],[271,43,215,41,"join"],[271,47,215,45],[271,48,215,46],[271,52,215,50],[271,53,215,51],[271,56,216,12],[271,63,216,19],[271,66,217,12,"descriptions"],[271,78,217,24],[271,79,217,25,"descriptions"],[271,91,217,37],[271,92,217,38,"length"],[271,98,217,44],[271,101,217,47],[271,102,217,48],[271,103,217,49],[272,6,218,4],[273,4,219,2],[274,4,221,2],[274,13,221,11,"describeFound"],[274,26,221,24,"describeFound"],[274,27,221,25,"found"],[274,32,221,30],[274,34,221,32],[275,6,222,4],[275,13,222,11,"found"],[275,18,222,16],[275,21,222,19],[275,25,222,23],[275,28,222,26,"literalEscape"],[275,41,222,39],[275,42,222,40,"found"],[275,47,222,45],[275,48,222,46],[275,51,222,49],[275,55,222,53],[275,58,222,56],[275,72,222,70],[276,4,223,2],[277,4,225,2],[277,11,225,9],[277,22,225,20],[277,25,225,23,"describeExpected"],[277,41,225,39],[277,42,225,40,"expected"],[277,50,225,48],[277,51,225,49],[277,54,225,52],[277,61,225,59],[277,64,225,62,"describeFound"],[277,77,225,75],[277,78,225,76,"found"],[277,83,225,81],[277,84,225,82],[277,87,225,85],[277,96,225,94],[278,2,226,0],[278,3,226,1],[279,2,228,0],[279,11,228,9,"peg$parse"],[279,20,228,18,"peg$parse"],[279,21,228,19,"input"],[279,26,228,24],[279,28,228,26,"options"],[279,35,228,33],[279,37,228,35],[280,4,229,2,"options"],[280,11,229,9],[280,14,229,12,"options"],[280,21,229,19],[280,26,229,24,"undefined"],[280,35,229,33],[280,38,229,36,"options"],[280,45,229,43],[280,48,229,46],[280,49,229,47],[280,50,229,48],[281,4,231,2],[281,8,231,6,"peg$FAILED"],[281,18,231,16],[281,21,231,19],[281,22,231,20],[281,23,231,21],[282,4,232,2],[282,8,232,6,"peg$source"],[282,18,232,16],[282,21,232,19,"options"],[282,28,232,26],[282,29,232,27,"grammarSource"],[282,42,232,40],[283,4,234,2],[283,8,234,6,"peg$startRuleFunctions"],[283,30,234,28],[283,33,234,31],[284,6,234,33,"pgn"],[284,9,234,36],[284,11,234,38,"peg$parsepgn"],[285,4,234,51],[285,5,234,52],[286,4,235,2],[286,8,235,6,"peg$startRuleFunction"],[286,29,235,27],[286,32,235,30,"peg$parsepgn"],[286,44,235,42],[287,4,237,2],[287,8,237,6,"peg$c0"],[287,14,237,12],[287,17,237,15],[287,20,237,18],[288,4,238,2],[288,8,238,6,"peg$c1"],[288,14,238,12],[288,17,238,15],[288,21,238,19],[289,4,239,2],[289,8,239,6,"peg$c2"],[289,14,239,12],[289,17,239,15],[289,20,239,18],[290,4,240,2],[290,8,240,6,"peg$c3"],[290,14,240,12],[290,17,240,15],[290,20,240,18],[291,4,241,2],[291,8,241,6,"peg$c4"],[291,14,241,12],[291,17,241,15],[291,24,241,22],[292,4,242,2],[292,8,242,6,"peg$c5"],[292,14,242,12],[292,17,242,15],[292,22,242,20],[293,4,243,2],[293,8,243,6,"peg$c6"],[293,14,243,12],[293,17,243,15],[293,24,243,22],[294,4,244,2],[294,8,244,6,"peg$c7"],[294,14,244,12],[294,17,244,15],[294,22,244,20],[295,4,245,2],[295,8,245,6,"peg$c8"],[295,14,245,12],[295,17,245,15],[295,20,245,18],[296,4,246,2],[296,8,246,6,"peg$c9"],[296,14,246,12],[296,17,246,15],[296,20,246,18],[297,4,247,2],[297,8,247,6,"peg$c10"],[297,15,247,13],[297,18,247,16],[297,21,247,19],[298,4,248,2],[298,8,248,6,"peg$c11"],[298,15,248,13],[298,18,248,16],[298,21,248,19],[299,4,249,2],[299,8,249,6,"peg$c12"],[299,15,249,13],[299,18,249,16],[299,21,249,19],[300,4,250,2],[300,8,250,6,"peg$c13"],[300,15,250,13],[300,18,250,16],[300,21,250,19],[301,4,251,2],[301,8,251,6,"peg$c14"],[301,15,251,13],[301,18,251,16],[301,23,251,21],[302,4,252,2],[302,8,252,6,"peg$c15"],[302,15,252,13],[302,18,252,16],[302,23,252,21],[303,4,253,2],[303,8,253,6,"peg$c16"],[303,15,253,13],[303,18,253,16],[303,27,253,25],[304,4,254,2],[304,8,254,6,"peg$c17"],[304,15,254,13],[304,18,254,16],[304,21,254,19],[305,4,256,2],[305,8,256,6,"peg$r0"],[305,14,256,12],[305,17,256,15],[305,28,256,26],[306,4,257,2],[306,8,257,6,"peg$r1"],[306,14,257,12],[306,17,257,15],[306,24,257,22],[307,4,258,2],[307,8,258,6,"peg$r2"],[307,14,258,12],[307,17,258,15],[307,25,258,23],[308,4,259,2],[308,8,259,6,"peg$r3"],[308,14,259,12],[308,17,259,15],[308,23,259,21],[309,4,260,2],[309,8,260,6,"peg$r4"],[309,14,260,12],[309,17,260,15],[309,34,260,32],[310,4,261,2],[310,8,261,6,"peg$r5"],[310,14,261,12],[310,17,261,15],[310,24,261,22],[311,4,262,2],[311,8,262,6,"peg$r6"],[311,14,262,12],[311,17,262,15],[311,24,262,22],[312,4,263,2],[312,8,263,6,"peg$r7"],[312,14,263,12],[312,17,263,15],[312,24,263,22],[313,4,264,2],[313,8,264,6,"peg$r8"],[313,14,264,12],[313,17,264,15],[313,27,264,25],[314,4,265,2],[314,8,265,6,"peg$r9"],[314,14,265,12],[314,17,265,15],[314,29,265,27],[315,4,267,2],[315,8,267,6,"peg$e0"],[315,14,267,12],[315,17,267,15,"peg$otherExpectation"],[315,37,267,35],[315,38,267,36],[315,48,267,46],[315,49,267,47],[316,4,268,2],[316,8,268,6,"peg$e1"],[316,14,268,12],[316,17,268,15,"peg$literalExpectation"],[316,39,268,37],[316,40,268,38],[316,43,268,41],[316,45,268,43],[316,50,268,48],[316,51,268,49],[317,4,269,2],[317,8,269,6,"peg$e2"],[317,14,269,12],[317,17,269,15,"peg$literalExpectation"],[317,39,269,37],[317,40,269,38],[317,44,269,42],[317,46,269,44],[317,51,269,49],[317,52,269,50],[318,4,270,2],[318,8,270,6,"peg$e3"],[318,14,270,12],[318,17,270,15,"peg$literalExpectation"],[318,39,270,37],[318,40,270,38],[318,43,270,41],[318,45,270,43],[318,50,270,48],[318,51,270,49],[319,4,271,2],[319,8,271,6,"peg$e4"],[319,14,271,12],[319,17,271,15,"peg$otherExpectation"],[319,37,271,35],[319,38,271,36],[319,48,271,46],[319,49,271,47],[320,4,272,2],[320,8,272,6,"peg$e5"],[320,14,272,12],[320,17,272,15,"peg$classExpectation"],[320,37,272,35],[320,38,272,36],[320,39,272,37],[320,40,272,38],[320,43,272,41],[320,45,272,43],[320,48,272,46],[320,49,272,47],[320,51,272,49],[320,52,272,50],[320,55,272,53],[320,57,272,55],[320,60,272,58],[320,61,272,59],[320,62,272,60],[320,64,272,62],[320,69,272,67],[320,71,272,69],[320,76,272,74],[320,77,272,75],[321,4,273,2],[321,8,273,6,"peg$e6"],[321,14,273,12],[321,17,273,15,"peg$otherExpectation"],[321,37,273,35],[321,38,273,36],[321,49,273,47],[321,50,273,48],[322,4,274,2],[322,8,274,6,"peg$e7"],[322,14,274,12],[322,17,274,15,"peg$classExpectation"],[322,37,274,35],[322,38,274,36],[322,39,274,37],[322,43,274,41],[322,44,274,42],[322,46,274,44],[322,50,274,48],[322,52,274,50],[322,57,274,55],[322,58,274,56],[323,4,275,2],[323,8,275,6,"peg$e8"],[323,14,275,12],[323,17,275,15,"peg$otherExpectation"],[323,37,275,35],[323,38,275,36],[323,51,275,49],[323,52,275,50],[324,4,276,2],[324,8,276,6,"peg$e9"],[324,14,276,12],[324,17,276,15,"peg$classExpectation"],[324,37,276,35],[324,38,276,36],[324,39,276,37],[324,40,276,38],[324,43,276,41],[324,45,276,43],[324,48,276,46],[324,49,276,47],[324,50,276,48],[324,52,276,50],[324,57,276,55],[324,59,276,57],[324,64,276,62],[324,65,276,63],[325,4,277,2],[325,8,277,6,"peg$e10"],[325,15,277,13],[325,18,277,16,"peg$literalExpectation"],[325,40,277,38],[325,41,277,39],[325,44,277,42],[325,46,277,44],[325,51,277,49],[325,52,277,50],[326,4,278,2],[326,8,278,6,"peg$e11"],[326,15,278,13],[326,18,278,16,"peg$classExpectation"],[326,38,278,36],[326,39,278,37],[326,40,278,38],[326,43,278,41],[326,44,278,42],[326,46,278,44],[326,51,278,49],[326,53,278,51],[326,58,278,56],[326,59,278,57],[327,4,279,2],[327,8,279,6,"peg$e12"],[327,15,279,13],[327,18,279,16,"peg$otherExpectation"],[327,38,279,36],[327,39,279,37],[327,68,279,66],[327,69,279,67],[328,4,280,2],[328,8,280,6,"peg$e13"],[328,15,280,13],[328,18,280,16,"peg$literalExpectation"],[328,40,280,38],[328,41,280,39],[328,48,280,46],[328,50,280,48],[328,55,280,53],[328,56,280,54],[329,4,281,2],[329,8,281,6,"peg$e14"],[329,15,281,13],[329,18,281,16,"peg$literalExpectation"],[329,40,281,38],[329,41,281,39],[329,46,281,44],[329,48,281,46],[329,53,281,51],[329,54,281,52],[330,4,282,2],[330,8,282,6,"peg$e15"],[330,15,282,13],[330,18,282,16,"peg$literalExpectation"],[330,40,282,38],[330,41,282,39],[330,48,282,46],[330,50,282,48],[330,55,282,53],[330,56,282,54],[331,4,283,2],[331,8,283,6,"peg$e16"],[331,15,283,13],[331,18,283,16,"peg$literalExpectation"],[331,40,283,38],[331,41,283,39],[331,46,283,44],[331,48,283,46],[331,53,283,51],[331,54,283,52],[332,4,284,2],[332,8,284,6,"peg$e17"],[332,15,284,13],[332,18,284,16,"peg$classExpectation"],[332,38,284,36],[332,39,284,37],[332,40,284,38],[332,41,284,39],[332,44,284,42],[332,46,284,44],[332,49,284,47],[332,50,284,48],[332,52,284,50],[332,53,284,51],[332,56,284,54],[332,58,284,56],[332,61,284,59],[332,62,284,60],[332,64,284,62],[332,65,284,63],[332,68,284,66],[332,70,284,68],[332,73,284,71],[332,74,284,72],[332,76,284,74],[332,79,284,77],[332,81,284,79],[332,84,284,82],[332,85,284,83],[332,87,284,85],[332,92,284,90],[332,94,284,92],[332,99,284,97],[332,100,284,98],[333,4,285,2],[333,8,285,6,"peg$e18"],[333,15,285,13],[333,18,285,16,"peg$classExpectation"],[333,38,285,36],[333,39,285,37],[333,40,285,38],[333,43,285,41],[333,45,285,43],[333,48,285,46],[333,49,285,47],[333,51,285,49],[333,56,285,54],[333,58,285,56],[333,63,285,61],[333,64,285,62],[334,4,286,2],[334,8,286,6,"peg$e19"],[334,15,286,13],[334,18,286,16,"peg$otherExpectation"],[334,38,286,36],[334,39,286,37],[334,58,286,56],[334,59,286,57],[335,4,287,2],[335,8,287,6,"peg$e20"],[335,15,287,13],[335,18,287,16,"peg$classExpectation"],[335,38,287,36],[335,39,287,37],[335,40,287,38],[335,43,287,41],[335,45,287,43],[335,48,287,46],[335,49,287,47],[335,51,287,49],[335,56,287,54],[335,58,287,56],[335,63,287,61],[335,64,287,62],[336,4,288,2],[336,8,288,6,"peg$e21"],[336,15,288,13],[336,18,288,16,"peg$otherExpectation"],[336,38,288,36],[336,39,288,37],[336,44,288,42],[336,45,288,43],[337,4,289,2],[337,8,289,6,"peg$e22"],[337,15,289,13],[337,18,289,16,"peg$literalExpectation"],[337,40,289,38],[337,41,289,39],[337,44,289,42],[337,46,289,44],[337,51,289,49],[337,52,289,50],[338,4,290,2],[338,8,290,6,"peg$e23"],[338,15,290,13],[338,18,290,16,"peg$otherExpectation"],[338,38,290,36],[338,39,290,37],[338,54,290,52],[338,55,290,53],[339,4,291,2],[339,8,291,6,"peg$e24"],[339,15,291,13],[339,18,291,16,"peg$literalExpectation"],[339,40,291,38],[339,41,291,39],[339,44,291,42],[339,46,291,44],[339,51,291,49],[339,52,291,50],[340,4,292,2],[340,8,292,6,"peg$e25"],[340,15,292,13],[340,18,292,16,"peg$classExpectation"],[340,38,292,36],[340,39,292,37],[340,40,292,38],[340,43,292,41],[340,44,292,42],[340,46,292,44],[340,50,292,48],[340,52,292,50],[340,57,292,55],[340,58,292,56],[341,4,293,2],[341,8,293,6,"peg$e26"],[341,15,293,13],[341,18,293,16,"peg$literalExpectation"],[341,40,293,38],[341,41,293,39],[341,44,293,42],[341,46,293,44],[341,51,293,49],[341,52,293,50],[342,4,294,2],[342,8,294,6,"peg$e27"],[342,15,294,13],[342,18,294,16,"peg$otherExpectation"],[342,38,294,36],[342,39,294,37],[342,61,294,59],[342,62,294,60],[343,4,295,2],[343,8,295,6,"peg$e28"],[343,15,295,13],[343,18,295,16,"peg$literalExpectation"],[343,40,295,38],[343,41,295,39],[343,44,295,42],[343,46,295,44],[343,51,295,49],[343,52,295,50],[344,4,296,2],[344,8,296,6,"peg$e29"],[344,15,296,13],[344,18,296,16,"peg$classExpectation"],[344,38,296,36],[344,39,296,37],[344,40,296,38],[344,44,296,42],[344,46,296,44],[344,50,296,48],[344,51,296,49],[344,53,296,51],[344,57,296,55],[344,59,296,57],[344,64,296,62],[344,65,296,63],[345,4,297,2],[345,8,297,6,"peg$e30"],[345,15,297,13],[345,18,297,16,"peg$otherExpectation"],[345,38,297,36],[345,39,297,37],[345,50,297,48],[345,51,297,49],[346,4,298,2],[346,8,298,6,"peg$e31"],[346,15,298,13],[346,18,298,16,"peg$literalExpectation"],[346,40,298,38],[346,41,298,39],[346,44,298,42],[346,46,298,44],[346,51,298,49],[346,52,298,50],[347,4,299,2],[347,8,299,6,"peg$e32"],[347,15,299,13],[347,18,299,16,"peg$literalExpectation"],[347,40,299,38],[347,41,299,39],[347,44,299,42],[347,46,299,44],[347,51,299,49],[347,52,299,50],[348,4,300,2],[348,8,300,6,"peg$e33"],[348,15,300,13],[348,18,300,16,"peg$otherExpectation"],[348,38,300,36],[348,39,300,37],[348,64,300,62],[348,65,300,63],[349,4,301,2],[349,8,301,6,"peg$e34"],[349,15,301,13],[349,18,301,16,"peg$literalExpectation"],[349,40,301,38],[349,41,301,39],[349,46,301,44],[349,48,301,46],[349,53,301,51],[349,54,301,52],[350,4,302,2],[350,8,302,6,"peg$e35"],[350,15,302,13],[350,18,302,16,"peg$literalExpectation"],[350,40,302,38],[350,41,302,39],[350,46,302,44],[350,48,302,46],[350,53,302,51],[350,54,302,52],[351,4,303,2],[351,8,303,6,"peg$e36"],[351,15,303,13],[351,18,303,16,"peg$literalExpectation"],[351,40,303,38],[351,41,303,39],[351,50,303,48],[351,52,303,50],[351,57,303,55],[351,58,303,56],[352,4,304,2],[352,8,304,6,"peg$e37"],[352,15,304,13],[352,18,304,16,"peg$literalExpectation"],[352,40,304,38],[352,41,304,39],[352,44,304,42],[352,46,304,44],[352,51,304,49],[352,52,304,50],[353,4,305,2],[353,8,305,6,"peg$e38"],[353,15,305,13],[353,18,305,16,"peg$otherExpectation"],[353,38,305,36],[353,39,305,37],[353,51,305,49],[353,52,305,50],[354,4,306,2],[354,8,306,6,"peg$e39"],[354,15,306,13],[354,18,306,16,"peg$classExpectation"],[354,38,306,36],[354,39,306,37],[354,40,306,38],[354,43,306,41],[354,45,306,43],[354,49,306,47],[354,51,306,49],[354,55,306,53],[354,57,306,55],[354,61,306,59],[354,62,306,60],[354,64,306,62],[354,69,306,67],[354,71,306,69],[354,76,306,74],[354,77,306,75],[355,4,308,2],[355,8,308,6,"peg$f0"],[355,14,308,12],[355,17,308,15],[355,26,308,15,"peg$f0"],[355,27,308,24,"headers"],[355,34,308,31],[355,36,308,33,"game"],[355,40,308,37],[355,42,308,39],[356,6,308,41],[356,13,308,48,"pgn"],[356,16,308,51],[356,17,308,52,"headers"],[356,24,308,59],[356,26,308,61,"game"],[356,30,308,65],[356,31,308,66],[357,4,308,67],[357,5,308,68],[358,4,309,2],[358,8,309,6,"peg$f1"],[358,14,309,12],[358,17,309,15],[358,26,309,15,"peg$f1"],[358,27,309,24,"tagPairs"],[358,35,309,32],[358,37,309,34],[359,6,309,36],[359,13,309,43,"Object"],[359,19,309,49],[359,20,309,50,"fromEntries"],[359,31,309,61],[359,32,309,62,"tagPairs"],[359,40,309,70],[359,41,309,71],[360,4,309,72],[360,5,309,73],[361,4,310,2],[361,8,310,6,"peg$f2"],[361,14,310,12],[361,17,310,15],[361,26,310,15,"peg$f2"],[361,27,310,24,"tagName"],[361,34,310,31],[361,36,310,33,"tagValue"],[361,44,310,41],[361,46,310,43],[362,6,310,45],[362,13,310,52],[362,14,310,53,"tagName"],[362,21,310,60],[362,23,310,62,"tagValue"],[362,31,310,70],[362,32,310,71],[363,4,310,72],[363,5,310,73],[364,4,311,2],[364,8,311,6,"peg$f3"],[364,14,311,12],[364,17,311,15],[364,26,311,15,"peg$f3"],[364,27,311,24,"root"],[364,31,311,28],[364,33,311,30,"marker"],[364,39,311,36],[364,41,311,38],[365,6,311,40],[365,13,311,47],[366,8,311,49,"root"],[366,12,311,53],[367,8,311,55,"marker"],[368,6,311,61],[368,7,311,62],[369,4,311,63],[369,5,311,64],[370,4,312,2],[370,8,312,6,"peg$f4"],[370,14,312,12],[370,17,312,15],[370,26,312,15,"peg$f4"],[370,27,312,24,"comment"],[370,34,312,31],[370,36,312,33,"moves"],[370,41,312,38],[370,43,312,40],[371,6,312,42],[371,13,312,49,"lineToTree"],[371,23,312,59],[371,24,312,60,"rootNode"],[371,32,312,68],[371,33,312,69,"comment"],[371,40,312,76],[371,41,312,77],[371,43,312,79],[371,46,312,82,"moves"],[371,51,312,87],[371,52,312,88,"flat"],[371,56,312,92],[371,57,312,93],[371,58,312,94],[371,59,312,95],[372,4,312,96],[372,5,312,97],[373,4,313,2],[373,8,313,6,"peg$f5"],[373,14,313,12],[373,17,313,15],[373,26,313,15,"peg$f5"],[373,27,313,24,"san"],[373,30,313,27],[373,32,313,29,"suffix"],[373,38,313,35],[373,40,313,37,"nag"],[373,43,313,40],[373,45,313,42,"comment"],[373,52,313,49],[373,54,313,51,"variations"],[373,64,313,61],[373,66,313,63],[374,6,313,65],[374,13,313,72,"node"],[374,17,313,76],[374,18,313,77,"san"],[374,21,313,80],[374,23,313,82,"suffix"],[374,29,313,88],[374,31,313,90,"nag"],[374,34,313,93],[374,36,313,95,"comment"],[374,43,313,102],[374,45,313,104,"variations"],[374,55,313,114],[374,56,313,115],[375,4,313,116],[375,5,313,117],[376,4,314,2],[376,8,314,6,"peg$f6"],[376,14,314,12],[376,17,314,15],[376,26,314,15,"peg$f6"],[376,27,314,24,"nag"],[376,30,314,27],[376,32,314,29],[377,6,314,31],[377,13,314,38,"nag"],[377,16,314,41],[378,4,314,42],[378,5,314,43],[379,4,315,2],[379,8,315,6,"peg$f7"],[379,14,315,12],[379,17,315,15],[379,26,315,15,"peg$f7"],[379,27,315,24,"comment"],[379,34,315,31],[379,36,315,33],[380,6,315,35],[380,13,315,42,"comment"],[380,20,315,49],[380,21,315,50,"replace"],[380,28,315,57],[380,29,315,58],[380,39,315,68],[380,41,315,70],[380,44,315,73],[380,45,315,74],[381,4,315,75],[381,5,315,76],[382,4,316,2],[382,8,316,6,"peg$f8"],[382,14,316,12],[382,17,316,15],[382,26,316,15,"peg$f8"],[382,27,316,24,"comment"],[382,34,316,31],[382,36,316,33],[383,6,316,35],[383,13,316,42,"comment"],[383,20,316,49],[383,21,316,50,"trim"],[383,25,316,54],[383,26,316,55],[383,27,316,56],[384,4,316,57],[384,5,316,58],[385,4,317,2],[385,8,317,6,"peg$f9"],[385,14,317,12],[385,17,317,15],[385,26,317,15,"peg$f9"],[385,27,317,24,"line"],[385,31,317,28],[385,33,317,30],[386,6,317,32],[386,13,317,39,"line"],[386,17,317,43],[387,4,317,44],[387,5,317,45],[388,4,318,2],[388,8,318,6,"peg$f10"],[388,15,318,13],[388,18,318,16],[388,27,318,16,"peg$f10"],[388,28,318,25,"result"],[388,34,318,31],[388,36,318,33,"comment"],[388,43,318,40],[388,45,318,42],[389,6,318,44],[389,13,318,51],[390,8,318,53,"result"],[390,14,318,59],[391,8,318,61,"comment"],[392,6,318,69],[392,7,318,70],[393,4,318,71],[393,5,318,72],[394,4,319,2],[394,8,319,6,"peg$currPos"],[394,19,319,17],[394,22,319,20,"options"],[394,29,319,27],[394,30,319,28,"peg$currPos"],[394,41,319,39],[394,44,319,42],[394,45,319,43],[395,4,320,2],[395,8,320,6,"peg$posDetailsCache"],[395,27,320,25],[395,30,320,28],[395,31,320,29],[396,6,320,31,"line"],[396,10,320,35],[396,12,320,37],[396,13,320,38],[397,6,320,40,"column"],[397,12,320,46],[397,14,320,48],[398,4,320,50],[398,5,320,51],[398,6,320,52],[399,4,321,2],[399,8,321,6,"peg$maxFailPos"],[399,22,321,20],[399,25,321,23,"peg$currPos"],[399,36,321,34],[400,4,322,2],[400,8,322,6,"peg$maxFailExpected"],[400,27,322,25],[400,30,322,28,"options"],[400,37,322,35],[400,38,322,36,"peg$maxFailExpected"],[400,57,322,55],[400,61,322,59],[400,63,322,61],[401,4,323,2],[401,8,323,6,"peg$silentFails"],[401,23,323,21],[401,26,323,24,"options"],[401,33,323,31],[401,34,323,32,"peg$silentFails"],[401,49,323,47],[401,52,323,50],[401,53,323,51],[402,4,325,2],[402,8,325,6,"peg$result"],[402,18,325,16],[403,4,327,2],[403,8,327,6,"options"],[403,15,327,13],[403,16,327,14,"startRule"],[403,25,327,23],[403,27,327,25],[404,6,328,4],[404,10,328,8],[404,12,328,10,"options"],[404,19,328,17],[404,20,328,18,"startRule"],[404,29,328,27],[404,33,328,31,"peg$startRuleFunctions"],[404,55,328,53],[404,56,328,54],[404,58,328,56],[405,8,329,6],[405,14,329,12],[405,18,329,16,"Error"],[405,23,329,21],[405,24,329,22],[405,58,329,56],[405,61,329,59,"options"],[405,68,329,66],[405,69,329,67,"startRule"],[405,78,329,76],[405,81,329,79],[405,86,329,84],[405,87,329,85],[406,6,330,4],[407,6,332,4,"peg$startRuleFunction"],[407,27,332,25],[407,30,332,28,"peg$startRuleFunctions"],[407,52,332,50],[407,53,332,51,"options"],[407,60,332,58],[407,61,332,59,"startRule"],[407,70,332,68],[407,71,332,69],[408,4,333,2],[409,4,335,2],[409,13,335,11,"peg$literalExpectation"],[409,35,335,33,"peg$literalExpectation"],[409,36,335,34,"text"],[409,40,335,38],[409,42,335,40,"ignoreCase"],[409,52,335,50],[409,54,335,52],[410,6,336,4],[410,13,336,11],[411,8,336,13,"type"],[411,12,336,17],[411,14,336,19],[411,23,336,28],[412,8,336,30,"text"],[412,12,336,34],[412,14,336,36,"text"],[412,18,336,40],[413,8,336,42,"ignoreCase"],[413,18,336,52],[413,20,336,54,"ignoreCase"],[414,6,336,65],[414,7,336,66],[415,4,337,2],[416,4,339,2],[416,13,339,11,"peg$classExpectation"],[416,33,339,31,"peg$classExpectation"],[416,34,339,32,"parts"],[416,39,339,37],[416,41,339,39,"inverted"],[416,49,339,47],[416,51,339,49,"ignoreCase"],[416,61,339,59],[416,63,339,61],[417,6,340,4],[417,13,340,11],[418,8,340,13,"type"],[418,12,340,17],[418,14,340,19],[418,21,340,26],[419,8,340,28,"parts"],[419,13,340,33],[419,15,340,35,"parts"],[419,20,340,40],[420,8,340,42,"inverted"],[420,16,340,50],[420,18,340,52,"inverted"],[420,26,340,60],[421,8,340,62,"ignoreCase"],[421,18,340,72],[421,20,340,74,"ignoreCase"],[422,6,340,85],[422,7,340,86],[423,4,341,2],[424,4,343,2],[424,13,343,11,"peg$endExpectation"],[424,31,343,29,"peg$endExpectation"],[424,32,343,29],[424,34,343,32],[425,6,344,4],[425,13,344,11],[426,8,344,13,"type"],[426,12,344,17],[426,14,344,19],[427,6,344,25],[427,7,344,26],[428,4,345,2],[429,4,347,2],[429,13,347,11,"peg$otherExpectation"],[429,33,347,31,"peg$otherExpectation"],[429,34,347,32,"description"],[429,45,347,43],[429,47,347,45],[430,6,348,4],[430,13,348,11],[431,8,348,13,"type"],[431,12,348,17],[431,14,348,19],[431,21,348,26],[432,8,348,28,"description"],[432,19,348,39],[432,21,348,41,"description"],[433,6,348,53],[433,7,348,54],[434,4,349,2],[435,4,351,2],[435,13,351,11,"peg$computePosDetails"],[435,34,351,32,"peg$computePosDetails"],[435,35,351,33,"pos"],[435,38,351,36],[435,40,351,38],[436,6,352,4],[436,10,352,8,"details"],[436,17,352,15],[436,20,352,18,"peg$posDetailsCache"],[436,39,352,37],[436,40,352,38,"pos"],[436,43,352,41],[436,44,352,42],[437,6,353,4],[437,10,353,8,"p"],[437,11,353,9],[438,6,355,4],[438,10,355,8,"details"],[438,17,355,15],[438,19,355,17],[439,8,356,6],[439,15,356,13,"details"],[439,22,356,20],[440,6,357,4],[440,7,357,5],[440,13,357,11],[441,8,358,6],[441,12,358,10,"pos"],[441,15,358,13],[441,19,358,17,"peg$posDetailsCache"],[441,38,358,36],[441,39,358,37,"length"],[441,45,358,43],[441,47,358,45],[442,10,359,8,"p"],[442,11,359,9],[442,14,359,12,"peg$posDetailsCache"],[442,33,359,31],[442,34,359,32,"length"],[442,40,359,38],[442,43,359,41],[442,44,359,42],[443,8,360,6],[443,9,360,7],[443,15,360,13],[444,10,361,8,"p"],[444,11,361,9],[444,14,361,12,"pos"],[444,17,361,15],[445,10,362,8],[445,17,362,15],[445,18,362,16,"peg$posDetailsCache"],[445,37,362,35],[445,38,362,36],[445,40,362,38,"p"],[445,41,362,39],[445,42,362,40],[445,44,362,42],[445,45,362,43],[446,8,363,6],[447,8,365,6,"details"],[447,15,365,13],[447,18,365,16,"peg$posDetailsCache"],[447,37,365,35],[447,38,365,36,"p"],[447,39,365,37],[447,40,365,38],[448,8,366,6,"details"],[448,15,366,13],[448,18,366,16],[449,10,367,8,"line"],[449,14,367,12],[449,16,367,14,"details"],[449,23,367,21],[449,24,367,22,"line"],[449,28,367,26],[450,10,368,8,"column"],[450,16,368,14],[450,18,368,16,"details"],[450,25,368,23],[450,26,368,24,"column"],[451,8,369,6],[451,9,369,7],[452,8,371,6],[452,15,371,13,"p"],[452,16,371,14],[452,19,371,17,"pos"],[452,22,371,20],[452,24,371,22],[453,10,372,8],[453,14,372,12,"input"],[453,19,372,17],[453,20,372,18,"charCodeAt"],[453,30,372,28],[453,31,372,29,"p"],[453,32,372,30],[453,33,372,31],[453,38,372,36],[453,40,372,38],[453,42,372,40],[454,12,373,10,"details"],[454,19,373,17],[454,20,373,18,"line"],[454,24,373,22],[454,26,373,24],[455,12,374,10,"details"],[455,19,374,17],[455,20,374,18,"column"],[455,26,374,24],[455,29,374,27],[455,30,374,28],[456,10,375,8],[456,11,375,9],[456,17,375,15],[457,12,376,10,"details"],[457,19,376,17],[457,20,376,18,"column"],[457,26,376,24],[457,28,376,26],[458,10,377,8],[459,10,379,8,"p"],[459,11,379,9],[459,13,379,11],[460,8,380,6],[461,8,382,6,"peg$posDetailsCache"],[461,27,382,25],[461,28,382,26,"pos"],[461,31,382,29],[461,32,382,30],[461,35,382,33,"details"],[461,42,382,40],[462,8,384,6],[462,15,384,13,"details"],[462,22,384,20],[463,6,385,4],[464,4,386,2],[465,4,388,2],[465,13,388,11,"peg$computeLocation"],[465,32,388,30,"peg$computeLocation"],[465,33,388,31,"startPos"],[465,41,388,39],[465,43,388,41,"endPos"],[465,49,388,47],[465,51,388,49,"offset"],[465,57,388,55],[465,59,388,57],[466,6,389,4],[466,10,389,8,"startPosDetails"],[466,25,389,23],[466,28,389,26,"peg$computePosDetails"],[466,49,389,47],[466,50,389,48,"startPos"],[466,58,389,56],[466,59,389,57],[467,6,390,4],[467,10,390,8,"endPosDetails"],[467,23,390,21],[467,26,390,24,"peg$computePosDetails"],[467,47,390,45],[467,48,390,46,"endPos"],[467,54,390,52],[467,55,390,53],[468,6,392,4],[468,10,392,8,"res"],[468,13,392,11],[468,16,392,14],[469,8,393,6,"source"],[469,14,393,12],[469,16,393,14,"peg$source"],[469,26,393,24],[470,8,394,6,"start"],[470,13,394,11],[470,15,394,13],[471,10,395,8,"offset"],[471,16,395,14],[471,18,395,16,"startPos"],[471,26,395,24],[472,10,396,8,"line"],[472,14,396,12],[472,16,396,14,"startPosDetails"],[472,31,396,29],[472,32,396,30,"line"],[472,36,396,34],[473,10,397,8,"column"],[473,16,397,14],[473,18,397,16,"startPosDetails"],[473,33,397,31],[473,34,397,32,"column"],[474,8,398,6],[474,9,398,7],[475,8,399,6,"end"],[475,11,399,9],[475,13,399,11],[476,10,400,8,"offset"],[476,16,400,14],[476,18,400,16,"endPos"],[476,24,400,22],[477,10,401,8,"line"],[477,14,401,12],[477,16,401,14,"endPosDetails"],[477,29,401,27],[477,30,401,28,"line"],[477,34,401,32],[478,10,402,8,"column"],[478,16,402,14],[478,18,402,16,"endPosDetails"],[478,31,402,29],[478,32,402,30,"column"],[479,8,403,6],[480,6,404,4],[480,7,404,5],[481,6,405,4],[481,13,405,11,"res"],[481,16,405,14],[482,4,406,2],[483,4,408,2],[483,13,408,11,"peg$fail"],[483,21,408,19,"peg$fail"],[483,22,408,20,"expected"],[483,30,408,28],[483,32,408,30],[484,6,409,4],[484,10,409,8,"peg$currPos"],[484,21,409,19],[484,24,409,22,"peg$maxFailPos"],[484,38,409,36],[484,40,409,38],[485,8,409,40],[486,6,409,48],[487,6,411,4],[487,10,411,8,"peg$currPos"],[487,21,411,19],[487,24,411,22,"peg$maxFailPos"],[487,38,411,36],[487,40,411,38],[488,8,412,6,"peg$maxFailPos"],[488,22,412,20],[488,25,412,23,"peg$currPos"],[488,36,412,34],[489,8,413,6,"peg$maxFailExpected"],[489,27,413,25],[489,30,413,28],[489,32,413,30],[490,6,414,4],[491,6,416,4,"peg$maxFailExpected"],[491,25,416,23],[491,26,416,24,"push"],[491,30,416,28],[491,31,416,29,"expected"],[491,39,416,37],[491,40,416,38],[492,4,417,2],[493,4,419,2],[493,13,419,11,"peg$buildStructuredError"],[493,37,419,35,"peg$buildStructuredError"],[493,38,419,36,"expected"],[493,46,419,44],[493,48,419,46,"found"],[493,53,419,51],[493,55,419,53,"location"],[493,63,419,61],[493,65,419,63],[494,6,420,4],[494,13,420,11],[494,17,420,15,"peg$SyntaxError"],[494,32,420,30],[494,33,421,6,"peg$SyntaxError"],[494,48,421,21],[494,49,421,22,"buildMessage"],[494,61,421,34],[494,62,421,35,"expected"],[494,70,421,43],[494,72,421,45,"found"],[494,77,421,50],[494,78,421,51],[494,80,422,6,"expected"],[494,88,422,14],[494,90,423,6,"found"],[494,95,423,11],[494,97,424,6,"location"],[494,105,425,4],[494,106,425,5],[495,4,426,2],[496,4,428,2],[496,13,428,11,"peg$parsepgn"],[496,25,428,23,"peg$parsepgn"],[496,26,428,23],[496,28,428,26],[497,6,429,4],[497,10,429,8,"s0"],[497,12,429,10],[497,14,429,12,"s1"],[497,16,429,14],[497,18,429,16,"s2"],[497,20,429,18],[498,6,431,4,"s0"],[498,8,431,6],[498,11,431,9,"peg$currPos"],[498,22,431,20],[499,6,432,4,"s1"],[499,8,432,6],[499,11,432,9,"peg$parsetagPairSection"],[499,34,432,32],[499,35,432,33],[499,36,432,34],[500,6,433,4,"s2"],[500,8,433,6],[500,11,433,9,"peg$parsemoveTextSection"],[500,35,433,33],[500,36,433,34],[500,37,433,35],[501,6,434,4,"s0"],[501,8,434,6],[501,11,434,9,"peg$f0"],[501,17,434,15],[501,18,434,16,"s1"],[501,20,434,18],[501,22,434,20,"s2"],[501,24,434,22],[501,25,434,23],[502,6,436,4],[502,13,436,11,"s0"],[502,15,436,13],[503,4,437,2],[504,4,439,2],[504,13,439,11,"peg$parsetagPairSection"],[504,36,439,34,"peg$parsetagPairSection"],[504,37,439,34],[504,39,439,37],[505,6,440,4],[505,10,440,8,"s0"],[505,12,440,10],[505,14,440,12,"s1"],[505,16,440,14],[505,18,440,16,"s2"],[505,20,440,18],[506,6,442,4,"s0"],[506,8,442,6],[506,11,442,9,"peg$currPos"],[506,22,442,20],[507,6,443,4,"s1"],[507,8,443,6],[507,11,443,9],[507,13,443,11],[508,6,444,4,"s2"],[508,8,444,6],[508,11,444,9,"peg$parsetagPair"],[508,27,444,25],[508,28,444,26],[508,29,444,27],[509,6,445,4],[509,13,445,11,"s2"],[509,15,445,13],[509,20,445,18,"peg$FAILED"],[509,30,445,28],[509,32,445,30],[510,8,446,6,"s1"],[510,10,446,8],[510,11,446,9,"push"],[510,15,446,13],[510,16,446,14,"s2"],[510,18,446,16],[510,19,446,17],[511,8,447,6,"s2"],[511,10,447,8],[511,13,447,11,"peg$parsetagPair"],[511,29,447,27],[511,30,447,28],[511,31,447,29],[512,6,448,4],[513,6,449,4,"s2"],[513,8,449,6],[513,11,449,9,"peg$parse_"],[513,21,449,19],[513,22,449,20],[513,23,449,21],[514,6,450,4,"s0"],[514,8,450,6],[514,11,450,9,"peg$f1"],[514,17,450,15],[514,18,450,16,"s1"],[514,20,450,18],[514,21,450,19],[515,6,452,4],[515,13,452,11,"s0"],[515,15,452,13],[516,4,453,2],[517,4,455,2],[517,13,455,11,"peg$parsetagPair"],[517,29,455,27,"peg$parsetagPair"],[517,30,455,27],[517,32,455,30],[518,6,456,4],[518,10,456,8,"s0"],[518,12,456,10],[518,14,456,12,"s2"],[518,16,456,14],[518,18,456,16,"s4"],[518,20,456,18],[518,22,456,20,"s6"],[518,24,456,22],[518,26,456,24,"s7"],[518,28,456,26],[518,30,456,28,"s8"],[518,32,456,30],[518,34,456,32,"s10"],[518,37,456,35],[519,6,458,4,"peg$silentFails"],[519,21,458,19],[519,23,458,21],[520,6,459,4,"s0"],[520,8,459,6],[520,11,459,9,"peg$currPos"],[520,22,459,20],[521,6,460,4,"peg$parse_"],[521,16,460,14],[521,17,460,15],[521,18,460,16],[522,6,461,4],[522,10,461,8,"input"],[522,15,461,13],[522,16,461,14,"charCodeAt"],[522,26,461,24],[522,27,461,25,"peg$currPos"],[522,38,461,36],[522,39,461,37],[522,44,461,42],[522,46,461,44],[522,48,461,46],[523,8,462,6,"s2"],[523,10,462,8],[523,13,462,11,"peg$c0"],[523,19,462,17],[524,8,463,6,"peg$currPos"],[524,19,463,17],[524,21,463,19],[525,6,464,4],[525,7,464,5],[525,13,464,11],[526,8,465,6,"s2"],[526,10,465,8],[526,13,465,11,"peg$FAILED"],[526,23,465,21],[527,8,466,6],[527,12,466,10,"peg$silentFails"],[527,27,466,25],[527,32,466,30],[527,33,466,31],[527,35,466,33],[528,10,466,35,"peg$fail"],[528,18,466,43],[528,19,466,44,"peg$e1"],[528,25,466,50],[528,26,466,51],[529,8,466,53],[530,6,467,4],[531,6,468,4],[531,10,468,8,"s2"],[531,12,468,10],[531,17,468,15,"peg$FAILED"],[531,27,468,25],[531,29,468,27],[532,8,469,6,"peg$parse_"],[532,18,469,16],[532,19,469,17],[532,20,469,18],[533,8,470,6,"s4"],[533,10,470,8],[533,13,470,11,"peg$parsetagName"],[533,29,470,27],[533,30,470,28],[533,31,470,29],[534,8,471,6],[534,12,471,10,"s4"],[534,14,471,12],[534,19,471,17,"peg$FAILED"],[534,29,471,27],[534,31,471,29],[535,10,472,8,"peg$parse_"],[535,20,472,18],[535,21,472,19],[535,22,472,20],[536,10,473,8],[536,14,473,12,"input"],[536,19,473,17],[536,20,473,18,"charCodeAt"],[536,30,473,28],[536,31,473,29,"peg$currPos"],[536,42,473,40],[536,43,473,41],[536,48,473,46],[536,50,473,48],[536,52,473,50],[537,12,474,10,"s6"],[537,14,474,12],[537,17,474,15,"peg$c1"],[537,23,474,21],[538,12,475,10,"peg$currPos"],[538,23,475,21],[538,25,475,23],[539,10,476,8],[539,11,476,9],[539,17,476,15],[540,12,477,10,"s6"],[540,14,477,12],[540,17,477,15,"peg$FAILED"],[540,27,477,25],[541,12,478,10],[541,16,478,14,"peg$silentFails"],[541,31,478,29],[541,36,478,34],[541,37,478,35],[541,39,478,37],[542,14,478,39,"peg$fail"],[542,22,478,47],[542,23,478,48,"peg$e2"],[542,29,478,54],[542,30,478,55],[543,12,478,57],[544,10,479,8],[545,10,480,8],[545,14,480,12,"s6"],[545,16,480,14],[545,21,480,19,"peg$FAILED"],[545,31,480,29],[545,33,480,31],[546,12,481,10,"s7"],[546,14,481,12],[546,17,481,15,"peg$parsetagValue"],[546,34,481,32],[546,35,481,33],[546,36,481,34],[547,12,482,10],[547,16,482,14,"input"],[547,21,482,19],[547,22,482,20,"charCodeAt"],[547,32,482,30],[547,33,482,31,"peg$currPos"],[547,44,482,42],[547,45,482,43],[547,50,482,48],[547,52,482,50],[547,54,482,52],[548,14,483,12,"s8"],[548,16,483,14],[548,19,483,17,"peg$c1"],[548,25,483,23],[549,14,484,12,"peg$currPos"],[549,25,484,23],[549,27,484,25],[550,12,485,10],[550,13,485,11],[550,19,485,17],[551,14,486,12,"s8"],[551,16,486,14],[551,19,486,17,"peg$FAILED"],[551,29,486,27],[552,14,487,12],[552,18,487,16,"peg$silentFails"],[552,33,487,31],[552,38,487,36],[552,39,487,37],[552,41,487,39],[553,16,487,41,"peg$fail"],[553,24,487,49],[553,25,487,50,"peg$e2"],[553,31,487,56],[553,32,487,57],[554,14,487,59],[555,12,488,10],[556,12,489,10],[556,16,489,14,"s8"],[556,18,489,16],[556,23,489,21,"peg$FAILED"],[556,33,489,31],[556,35,489,33],[557,14,490,12,"peg$parse_"],[557,24,490,22],[557,25,490,23],[557,26,490,24],[558,14,491,12],[558,18,491,16,"input"],[558,23,491,21],[558,24,491,22,"charCodeAt"],[558,34,491,32],[558,35,491,33,"peg$currPos"],[558,46,491,44],[558,47,491,45],[558,52,491,50],[558,54,491,52],[558,56,491,54],[559,16,492,14,"s10"],[559,19,492,17],[559,22,492,20,"peg$c2"],[559,28,492,26],[560,16,493,14,"peg$currPos"],[560,27,493,25],[560,29,493,27],[561,14,494,12],[561,15,494,13],[561,21,494,19],[562,16,495,14,"s10"],[562,19,495,17],[562,22,495,20,"peg$FAILED"],[562,32,495,30],[563,16,496,14],[563,20,496,18,"peg$silentFails"],[563,35,496,33],[563,40,496,38],[563,41,496,39],[563,43,496,41],[564,18,496,43,"peg$fail"],[564,26,496,51],[564,27,496,52,"peg$e3"],[564,33,496,58],[564,34,496,59],[565,16,496,61],[566,14,497,12],[567,14,498,12],[567,18,498,16,"s10"],[567,21,498,19],[567,26,498,24,"peg$FAILED"],[567,36,498,34],[567,38,498,36],[568,16,499,14,"s0"],[568,18,499,16],[568,21,499,19,"peg$f2"],[568,27,499,25],[568,28,499,26,"s4"],[568,30,499,28],[568,32,499,30,"s7"],[568,34,499,32],[568,35,499,33],[569,14,500,12],[569,15,500,13],[569,21,500,19],[570,16,501,14,"peg$currPos"],[570,27,501,25],[570,30,501,28,"s0"],[570,32,501,30],[571,16,502,14,"s0"],[571,18,502,16],[571,21,502,19,"peg$FAILED"],[571,31,502,29],[572,14,503,12],[573,12,504,10],[573,13,504,11],[573,19,504,17],[574,14,505,12,"peg$currPos"],[574,25,505,23],[574,28,505,26,"s0"],[574,30,505,28],[575,14,506,12,"s0"],[575,16,506,14],[575,19,506,17,"peg$FAILED"],[575,29,506,27],[576,12,507,10],[577,10,508,8],[577,11,508,9],[577,17,508,15],[578,12,509,10,"peg$currPos"],[578,23,509,21],[578,26,509,24,"s0"],[578,28,509,26],[579,12,510,10,"s0"],[579,14,510,12],[579,17,510,15,"peg$FAILED"],[579,27,510,25],[580,10,511,8],[581,8,512,6],[581,9,512,7],[581,15,512,13],[582,10,513,8,"peg$currPos"],[582,21,513,19],[582,24,513,22,"s0"],[582,26,513,24],[583,10,514,8,"s0"],[583,12,514,10],[583,15,514,13,"peg$FAILED"],[583,25,514,23],[584,8,515,6],[585,6,516,4],[585,7,516,5],[585,13,516,11],[586,8,517,6,"peg$currPos"],[586,19,517,17],[586,22,517,20,"s0"],[586,24,517,22],[587,8,518,6,"s0"],[587,10,518,8],[587,13,518,11,"peg$FAILED"],[587,23,518,21],[588,6,519,4],[589,6,520,4,"peg$silentFails"],[589,21,520,19],[589,23,520,21],[590,6,521,4],[590,10,521,8,"s0"],[590,12,521,10],[590,17,521,15,"peg$FAILED"],[590,27,521,25],[590,29,521,27],[591,8,522,6],[591,12,522,10,"peg$silentFails"],[591,27,522,25],[591,32,522,30],[591,33,522,31],[591,35,522,33],[592,10,522,35,"peg$fail"],[592,18,522,43],[592,19,522,44,"peg$e0"],[592,25,522,50],[592,26,522,51],[593,8,522,53],[594,6,523,4],[595,6,525,4],[595,13,525,11,"s0"],[595,15,525,13],[596,4,526,2],[597,4,528,2],[597,13,528,11,"peg$parsetagName"],[597,29,528,27,"peg$parsetagName"],[597,30,528,27],[597,32,528,30],[598,6,529,4],[598,10,529,8,"s0"],[598,12,529,10],[598,14,529,12,"s1"],[598,16,529,14],[598,18,529,16,"s2"],[598,20,529,18],[599,6,531,4,"peg$silentFails"],[599,21,531,19],[599,23,531,21],[600,6,532,4,"s0"],[600,8,532,6],[600,11,532,9,"peg$currPos"],[600,22,532,20],[601,6,533,4,"s1"],[601,8,533,6],[601,11,533,9],[601,13,533,11],[602,6,534,4,"s2"],[602,8,534,6],[602,11,534,9,"input"],[602,16,534,14],[602,17,534,15,"charAt"],[602,23,534,21],[602,24,534,22,"peg$currPos"],[602,35,534,33],[602,36,534,34],[603,6,535,4],[603,10,535,8,"peg$r0"],[603,16,535,14],[603,17,535,15,"test"],[603,21,535,19],[603,22,535,20,"s2"],[603,24,535,22],[603,25,535,23],[603,27,535,25],[604,8,536,6,"peg$currPos"],[604,19,536,17],[604,21,536,19],[605,6,537,4],[605,7,537,5],[605,13,537,11],[606,8,538,6,"s2"],[606,10,538,8],[606,13,538,11,"peg$FAILED"],[606,23,538,21],[607,8,539,6],[607,12,539,10,"peg$silentFails"],[607,27,539,25],[607,32,539,30],[607,33,539,31],[607,35,539,33],[608,10,539,35,"peg$fail"],[608,18,539,43],[608,19,539,44,"peg$e5"],[608,25,539,50],[608,26,539,51],[609,8,539,53],[610,6,540,4],[611,6,541,4],[611,10,541,8,"s2"],[611,12,541,10],[611,17,541,15,"peg$FAILED"],[611,27,541,25],[611,29,541,27],[612,8,542,6],[612,15,542,13,"s2"],[612,17,542,15],[612,22,542,20,"peg$FAILED"],[612,32,542,30],[612,34,542,32],[613,10,543,8,"s1"],[613,12,543,10],[613,13,543,11,"push"],[613,17,543,15],[613,18,543,16,"s2"],[613,20,543,18],[613,21,543,19],[614,10,544,8,"s2"],[614,12,544,10],[614,15,544,13,"input"],[614,20,544,18],[614,21,544,19,"charAt"],[614,27,544,25],[614,28,544,26,"peg$currPos"],[614,39,544,37],[614,40,544,38],[615,10,545,8],[615,14,545,12,"peg$r0"],[615,20,545,18],[615,21,545,19,"test"],[615,25,545,23],[615,26,545,24,"s2"],[615,28,545,26],[615,29,545,27],[615,31,545,29],[616,12,546,10,"peg$currPos"],[616,23,546,21],[616,25,546,23],[617,10,547,8],[617,11,547,9],[617,17,547,15],[618,12,548,10,"s2"],[618,14,548,12],[618,17,548,15,"peg$FAILED"],[618,27,548,25],[619,12,549,10],[619,16,549,14,"peg$silentFails"],[619,31,549,29],[619,36,549,34],[619,37,549,35],[619,39,549,37],[620,14,549,39,"peg$fail"],[620,22,549,47],[620,23,549,48,"peg$e5"],[620,29,549,54],[620,30,549,55],[621,12,549,57],[622,10,550,8],[623,8,551,6],[624,6,552,4],[624,7,552,5],[624,13,552,11],[625,8,553,6,"s1"],[625,10,553,8],[625,13,553,11,"peg$FAILED"],[625,23,553,21],[626,6,554,4],[627,6,555,4],[627,10,555,8,"s1"],[627,12,555,10],[627,17,555,15,"peg$FAILED"],[627,27,555,25],[627,29,555,27],[628,8,556,6,"s0"],[628,10,556,8],[628,13,556,11,"input"],[628,18,556,16],[628,19,556,17,"substring"],[628,28,556,26],[628,29,556,27,"s0"],[628,31,556,29],[628,33,556,31,"peg$currPos"],[628,44,556,42],[628,45,556,43],[629,6,557,4],[629,7,557,5],[629,13,557,11],[630,8,558,6,"s0"],[630,10,558,8],[630,13,558,11,"s1"],[630,15,558,13],[631,6,559,4],[632,6,560,4,"peg$silentFails"],[632,21,560,19],[632,23,560,21],[633,6,561,4],[633,10,561,8,"s0"],[633,12,561,10],[633,17,561,15,"peg$FAILED"],[633,27,561,25],[633,29,561,27],[634,8,562,6,"s1"],[634,10,562,8],[634,13,562,11,"peg$FAILED"],[634,23,562,21],[635,8,563,6],[635,12,563,10,"peg$silentFails"],[635,27,563,25],[635,32,563,30],[635,33,563,31],[635,35,563,33],[636,10,563,35,"peg$fail"],[636,18,563,43],[636,19,563,44,"peg$e4"],[636,25,563,50],[636,26,563,51],[637,8,563,53],[638,6,564,4],[639,6,566,4],[639,13,566,11,"s0"],[639,15,566,13],[640,4,567,2],[641,4,569,2],[641,13,569,11,"peg$parsetagValue"],[641,30,569,28,"peg$parsetagValue"],[641,31,569,28],[641,33,569,31],[642,6,570,4],[642,10,570,8,"s0"],[642,12,570,10],[642,14,570,12,"s1"],[642,16,570,14],[642,18,570,16,"s2"],[642,20,570,18],[643,6,572,4,"peg$silentFails"],[643,21,572,19],[643,23,572,21],[644,6,573,4,"s0"],[644,8,573,6],[644,11,573,9,"peg$currPos"],[644,22,573,20],[645,6,574,4,"s1"],[645,8,574,6],[645,11,574,9],[645,13,574,11],[646,6,575,4,"s2"],[646,8,575,6],[646,11,575,9,"input"],[646,16,575,14],[646,17,575,15,"charAt"],[646,23,575,21],[646,24,575,22,"peg$currPos"],[646,35,575,33],[646,36,575,34],[647,6,576,4],[647,10,576,8,"peg$r1"],[647,16,576,14],[647,17,576,15,"test"],[647,21,576,19],[647,22,576,20,"s2"],[647,24,576,22],[647,25,576,23],[647,27,576,25],[648,8,577,6,"peg$currPos"],[648,19,577,17],[648,21,577,19],[649,6,578,4],[649,7,578,5],[649,13,578,11],[650,8,579,6,"s2"],[650,10,579,8],[650,13,579,11,"peg$FAILED"],[650,23,579,21],[651,8,580,6],[651,12,580,10,"peg$silentFails"],[651,27,580,25],[651,32,580,30],[651,33,580,31],[651,35,580,33],[652,10,580,35,"peg$fail"],[652,18,580,43],[652,19,580,44,"peg$e7"],[652,25,580,50],[652,26,580,51],[653,8,580,53],[654,6,581,4],[655,6,582,4],[655,13,582,11,"s2"],[655,15,582,13],[655,20,582,18,"peg$FAILED"],[655,30,582,28],[655,32,582,30],[656,8,583,6,"s1"],[656,10,583,8],[656,11,583,9,"push"],[656,15,583,13],[656,16,583,14,"s2"],[656,18,583,16],[656,19,583,17],[657,8,584,6,"s2"],[657,10,584,8],[657,13,584,11,"input"],[657,18,584,16],[657,19,584,17,"charAt"],[657,25,584,23],[657,26,584,24,"peg$currPos"],[657,37,584,35],[657,38,584,36],[658,8,585,6],[658,12,585,10,"peg$r1"],[658,18,585,16],[658,19,585,17,"test"],[658,23,585,21],[658,24,585,22,"s2"],[658,26,585,24],[658,27,585,25],[658,29,585,27],[659,10,586,8,"peg$currPos"],[659,21,586,19],[659,23,586,21],[660,8,587,6],[660,9,587,7],[660,15,587,13],[661,10,588,8,"s2"],[661,12,588,10],[661,15,588,13,"peg$FAILED"],[661,25,588,23],[662,10,589,8],[662,14,589,12,"peg$silentFails"],[662,29,589,27],[662,34,589,32],[662,35,589,33],[662,37,589,35],[663,12,589,37,"peg$fail"],[663,20,589,45],[663,21,589,46,"peg$e7"],[663,27,589,52],[663,28,589,53],[664,10,589,55],[665,8,590,6],[666,6,591,4],[667,6,592,4,"s0"],[667,8,592,6],[667,11,592,9,"input"],[667,16,592,14],[667,17,592,15,"substring"],[667,26,592,24],[667,27,592,25,"s0"],[667,29,592,27],[667,31,592,29,"peg$currPos"],[667,42,592,40],[667,43,592,41],[668,6,593,4,"peg$silentFails"],[668,21,593,19],[668,23,593,21],[669,6,594,4,"s1"],[669,8,594,6],[669,11,594,9,"peg$FAILED"],[669,21,594,19],[670,6,595,4],[670,10,595,8,"peg$silentFails"],[670,25,595,23],[670,30,595,28],[670,31,595,29],[670,33,595,31],[671,8,595,33,"peg$fail"],[671,16,595,41],[671,17,595,42,"peg$e6"],[671,23,595,48],[671,24,595,49],[672,6,595,51],[673,6,597,4],[673,13,597,11,"s0"],[673,15,597,13],[674,4,598,2],[675,4,600,2],[675,13,600,11,"peg$parsemoveTextSection"],[675,37,600,35,"peg$parsemoveTextSection"],[675,38,600,35],[675,40,600,38],[676,6,601,4],[676,10,601,8,"s0"],[676,12,601,10],[676,14,601,12,"s1"],[676,16,601,14],[676,18,601,16,"s3"],[676,20,601,18],[677,6,603,4,"s0"],[677,8,603,6],[677,11,603,9,"peg$currPos"],[677,22,603,20],[678,6,604,4,"s1"],[678,8,604,6],[678,11,604,9,"peg$parseline"],[678,24,604,22],[678,25,604,23],[678,26,604,24],[679,6,605,4,"peg$parse_"],[679,16,605,14],[679,17,605,15],[679,18,605,16],[680,6,606,4,"s3"],[680,8,606,6],[680,11,606,9,"peg$parsegameTerminationMarker"],[680,41,606,39],[680,42,606,40],[680,43,606,41],[681,6,607,4],[681,10,607,8,"s3"],[681,12,607,10],[681,17,607,15,"peg$FAILED"],[681,27,607,25],[681,29,607,27],[682,8,608,6,"s3"],[682,10,608,8],[682,13,608,11],[682,17,608,15],[683,6,609,4],[684,6,610,4,"peg$parse_"],[684,16,610,14],[684,17,610,15],[684,18,610,16],[685,6,611,4,"s0"],[685,8,611,6],[685,11,611,9,"peg$f3"],[685,17,611,15],[685,18,611,16,"s1"],[685,20,611,18],[685,22,611,20,"s3"],[685,24,611,22],[685,25,611,23],[686,6,613,4],[686,13,613,11,"s0"],[686,15,613,13],[687,4,614,2],[688,4,616,2],[688,13,616,11,"peg$parseline"],[688,26,616,24,"peg$parseline"],[688,27,616,24],[688,29,616,27],[689,6,617,4],[689,10,617,8,"s0"],[689,12,617,10],[689,14,617,12,"s1"],[689,16,617,14],[689,18,617,16,"s2"],[689,20,617,18],[689,22,617,20,"s3"],[689,24,617,22],[690,6,619,4,"s0"],[690,8,619,6],[690,11,619,9,"peg$currPos"],[690,22,619,20],[691,6,620,4,"s1"],[691,8,620,6],[691,11,620,9,"peg$parsecomment"],[691,27,620,25],[691,28,620,26],[691,29,620,27],[692,6,621,4],[692,10,621,8,"s1"],[692,12,621,10],[692,17,621,15,"peg$FAILED"],[692,27,621,25],[692,29,621,27],[693,8,622,6,"s1"],[693,10,622,8],[693,13,622,11],[693,17,622,15],[694,6,623,4],[695,6,624,4,"s2"],[695,8,624,6],[695,11,624,9],[695,13,624,11],[696,6,625,4,"s3"],[696,8,625,6],[696,11,625,9,"peg$parsemove"],[696,24,625,22],[696,25,625,23],[696,26,625,24],[697,6,626,4],[697,13,626,11,"s3"],[697,15,626,13],[697,20,626,18,"peg$FAILED"],[697,30,626,28],[697,32,626,30],[698,8,627,6,"s2"],[698,10,627,8],[698,11,627,9,"push"],[698,15,627,13],[698,16,627,14,"s3"],[698,18,627,16],[698,19,627,17],[699,8,628,6,"s3"],[699,10,628,8],[699,13,628,11,"peg$parsemove"],[699,26,628,24],[699,27,628,25],[699,28,628,26],[700,6,629,4],[701,6,630,4,"s0"],[701,8,630,6],[701,11,630,9,"peg$f4"],[701,17,630,15],[701,18,630,16,"s1"],[701,20,630,18],[701,22,630,20,"s2"],[701,24,630,22],[701,25,630,23],[702,6,632,4],[702,13,632,11,"s0"],[702,15,632,13],[703,4,633,2],[704,4,635,2],[704,13,635,11,"peg$parsemove"],[704,26,635,24,"peg$parsemove"],[704,27,635,24],[704,29,635,27],[705,6,636,4],[705,10,636,8,"s0"],[705,12,636,10],[705,14,636,12,"s4"],[705,16,636,14],[705,18,636,16,"s5"],[705,20,636,18],[705,22,636,20,"s6"],[705,24,636,22],[705,26,636,24,"s7"],[705,28,636,26],[705,30,636,28,"s8"],[705,32,636,30],[705,34,636,32,"s9"],[705,36,636,34],[705,38,636,36,"s10"],[705,41,636,39],[706,6,638,4,"s0"],[706,8,638,6],[706,11,638,9,"peg$currPos"],[706,22,638,20],[707,6,639,4,"peg$parse_"],[707,16,639,14],[707,17,639,15],[707,18,639,16],[708,6,640,4,"peg$parsemoveNumber"],[708,25,640,23],[708,26,640,24],[708,27,640,25],[709,6,641,4,"peg$parse_"],[709,16,641,14],[709,17,641,15],[709,18,641,16],[710,6,642,4,"s4"],[710,8,642,6],[710,11,642,9,"peg$parsesan"],[710,23,642,21],[710,24,642,22],[710,25,642,23],[711,6,643,4],[711,10,643,8,"s4"],[711,12,643,10],[711,17,643,15,"peg$FAILED"],[711,27,643,25],[711,29,643,27],[712,8,644,6,"s5"],[712,10,644,8],[712,13,644,11,"peg$parsesuffixAnnotation"],[712,38,644,36],[712,39,644,37],[712,40,644,38],[713,8,645,6],[713,12,645,10,"s5"],[713,14,645,12],[713,19,645,17,"peg$FAILED"],[713,29,645,27],[713,31,645,29],[714,10,646,8,"s5"],[714,12,646,10],[714,15,646,13],[714,19,646,17],[715,8,647,6],[716,8,648,6,"s6"],[716,10,648,8],[716,13,648,11],[716,15,648,13],[717,8,649,6,"s7"],[717,10,649,8],[717,13,649,11,"peg$parsenag"],[717,25,649,23],[717,26,649,24],[717,27,649,25],[718,8,650,6],[718,15,650,13,"s7"],[718,17,650,15],[718,22,650,20,"peg$FAILED"],[718,32,650,30],[718,34,650,32],[719,10,651,8,"s6"],[719,12,651,10],[719,13,651,11,"push"],[719,17,651,15],[719,18,651,16,"s7"],[719,20,651,18],[719,21,651,19],[720,10,652,8,"s7"],[720,12,652,10],[720,15,652,13,"peg$parsenag"],[720,27,652,25],[720,28,652,26],[720,29,652,27],[721,8,653,6],[722,8,654,6,"s7"],[722,10,654,8],[722,13,654,11,"peg$parse_"],[722,23,654,21],[722,24,654,22],[722,25,654,23],[723,8,655,6,"s8"],[723,10,655,8],[723,13,655,11,"peg$parsecomment"],[723,29,655,27],[723,30,655,28],[723,31,655,29],[724,8,656,6],[724,12,656,10,"s8"],[724,14,656,12],[724,19,656,17,"peg$FAILED"],[724,29,656,27],[724,31,656,29],[725,10,657,8,"s8"],[725,12,657,10],[725,15,657,13],[725,19,657,17],[726,8,658,6],[727,8,659,6,"s9"],[727,10,659,8],[727,13,659,11],[727,15,659,13],[728,8,660,6,"s10"],[728,11,660,9],[728,14,660,12,"peg$parsevariation"],[728,32,660,30],[728,33,660,31],[728,34,660,32],[729,8,661,6],[729,15,661,13,"s10"],[729,18,661,16],[729,23,661,21,"peg$FAILED"],[729,33,661,31],[729,35,661,33],[730,10,662,8,"s9"],[730,12,662,10],[730,13,662,11,"push"],[730,17,662,15],[730,18,662,16,"s10"],[730,21,662,19],[730,22,662,20],[731,10,663,8,"s10"],[731,13,663,11],[731,16,663,14,"peg$parsevariation"],[731,34,663,32],[731,35,663,33],[731,36,663,34],[732,8,664,6],[733,8,665,6,"s0"],[733,10,665,8],[733,13,665,11,"peg$f5"],[733,19,665,17],[733,20,665,18,"s4"],[733,22,665,20],[733,24,665,22,"s5"],[733,26,665,24],[733,28,665,26,"s6"],[733,30,665,28],[733,32,665,30,"s8"],[733,34,665,32],[733,36,665,34,"s9"],[733,38,665,36],[733,39,665,37],[734,6,666,4],[734,7,666,5],[734,13,666,11],[735,8,667,6,"peg$currPos"],[735,19,667,17],[735,22,667,20,"s0"],[735,24,667,22],[736,8,668,6,"s0"],[736,10,668,8],[736,13,668,11,"peg$FAILED"],[736,23,668,21],[737,6,669,4],[738,6,671,4],[738,13,671,11,"s0"],[738,15,671,13],[739,4,672,2],[740,4,674,2],[740,13,674,11,"peg$parsemoveNumber"],[740,32,674,30,"peg$parsemoveNumber"],[740,33,674,30],[740,35,674,33],[741,6,675,4],[741,10,675,8,"s0"],[741,12,675,10],[741,14,675,12,"s1"],[741,16,675,14],[741,18,675,16,"s2"],[741,20,675,18],[741,22,675,20,"s3"],[741,24,675,22],[741,26,675,24,"s4"],[741,28,675,26],[741,30,675,28,"s5"],[741,32,675,30],[742,6,677,4,"peg$silentFails"],[742,21,677,19],[742,23,677,21],[743,6,678,4,"s0"],[743,8,678,6],[743,11,678,9,"peg$currPos"],[743,22,678,20],[744,6,679,4,"s1"],[744,8,679,6],[744,11,679,9],[744,13,679,11],[745,6,680,4,"s2"],[745,8,680,6],[745,11,680,9,"input"],[745,16,680,14],[745,17,680,15,"charAt"],[745,23,680,21],[745,24,680,22,"peg$currPos"],[745,35,680,33],[745,36,680,34],[746,6,681,4],[746,10,681,8,"peg$r2"],[746,16,681,14],[746,17,681,15,"test"],[746,21,681,19],[746,22,681,20,"s2"],[746,24,681,22],[746,25,681,23],[746,27,681,25],[747,8,682,6,"peg$currPos"],[747,19,682,17],[747,21,682,19],[748,6,683,4],[748,7,683,5],[748,13,683,11],[749,8,684,6,"s2"],[749,10,684,8],[749,13,684,11,"peg$FAILED"],[749,23,684,21],[750,8,685,6],[750,12,685,10,"peg$silentFails"],[750,27,685,25],[750,32,685,30],[750,33,685,31],[750,35,685,33],[751,10,685,35,"peg$fail"],[751,18,685,43],[751,19,685,44,"peg$e9"],[751,25,685,50],[751,26,685,51],[752,8,685,53],[753,6,686,4],[754,6,687,4],[754,13,687,11,"s2"],[754,15,687,13],[754,20,687,18,"peg$FAILED"],[754,30,687,28],[754,32,687,30],[755,8,688,6,"s1"],[755,10,688,8],[755,11,688,9,"push"],[755,15,688,13],[755,16,688,14,"s2"],[755,18,688,16],[755,19,688,17],[756,8,689,6,"s2"],[756,10,689,8],[756,13,689,11,"input"],[756,18,689,16],[756,19,689,17,"charAt"],[756,25,689,23],[756,26,689,24,"peg$currPos"],[756,37,689,35],[756,38,689,36],[757,8,690,6],[757,12,690,10,"peg$r2"],[757,18,690,16],[757,19,690,17,"test"],[757,23,690,21],[757,24,690,22,"s2"],[757,26,690,24],[757,27,690,25],[757,29,690,27],[758,10,691,8,"peg$currPos"],[758,21,691,19],[758,23,691,21],[759,8,692,6],[759,9,692,7],[759,15,692,13],[760,10,693,8,"s2"],[760,12,693,10],[760,15,693,13,"peg$FAILED"],[760,25,693,23],[761,10,694,8],[761,14,694,12,"peg$silentFails"],[761,29,694,27],[761,34,694,32],[761,35,694,33],[761,37,694,35],[762,12,694,37,"peg$fail"],[762,20,694,45],[762,21,694,46,"peg$e9"],[762,27,694,52],[762,28,694,53],[763,10,694,55],[764,8,695,6],[765,6,696,4],[766,6,697,4],[766,10,697,8,"input"],[766,15,697,13],[766,16,697,14,"charCodeAt"],[766,26,697,24],[766,27,697,25,"peg$currPos"],[766,38,697,36],[766,39,697,37],[766,44,697,42],[766,46,697,44],[766,48,697,46],[767,8,698,6,"s2"],[767,10,698,8],[767,13,698,11,"peg$c3"],[767,19,698,17],[768,8,699,6,"peg$currPos"],[768,19,699,17],[768,21,699,19],[769,6,700,4],[769,7,700,5],[769,13,700,11],[770,8,701,6,"s2"],[770,10,701,8],[770,13,701,11,"peg$FAILED"],[770,23,701,21],[771,8,702,6],[771,12,702,10,"peg$silentFails"],[771,27,702,25],[771,32,702,30],[771,33,702,31],[771,35,702,33],[772,10,702,35,"peg$fail"],[772,18,702,43],[772,19,702,44,"peg$e10"],[772,26,702,51],[772,27,702,52],[773,8,702,54],[774,6,703,4],[775,6,704,4],[775,10,704,8,"s2"],[775,12,704,10],[775,17,704,15,"peg$FAILED"],[775,27,704,25],[775,29,704,27],[776,8,705,6,"s3"],[776,10,705,8],[776,13,705,11,"peg$parse_"],[776,23,705,21],[776,24,705,22],[776,25,705,23],[777,8,706,6,"s4"],[777,10,706,8],[777,13,706,11],[777,15,706,13],[778,8,707,6,"s5"],[778,10,707,8],[778,13,707,11,"input"],[778,18,707,16],[778,19,707,17,"charAt"],[778,25,707,23],[778,26,707,24,"peg$currPos"],[778,37,707,35],[778,38,707,36],[779,8,708,6],[779,12,708,10,"peg$r3"],[779,18,708,16],[779,19,708,17,"test"],[779,23,708,21],[779,24,708,22,"s5"],[779,26,708,24],[779,27,708,25],[779,29,708,27],[780,10,709,8,"peg$currPos"],[780,21,709,19],[780,23,709,21],[781,8,710,6],[781,9,710,7],[781,15,710,13],[782,10,711,8,"s5"],[782,12,711,10],[782,15,711,13,"peg$FAILED"],[782,25,711,23],[783,10,712,8],[783,14,712,12,"peg$silentFails"],[783,29,712,27],[783,34,712,32],[783,35,712,33],[783,37,712,35],[784,12,712,37,"peg$fail"],[784,20,712,45],[784,21,712,46,"peg$e11"],[784,28,712,53],[784,29,712,54],[785,10,712,56],[786,8,713,6],[787,8,714,6],[787,15,714,13,"s5"],[787,17,714,15],[787,22,714,20,"peg$FAILED"],[787,32,714,30],[787,34,714,32],[788,10,715,8,"s4"],[788,12,715,10],[788,13,715,11,"push"],[788,17,715,15],[788,18,715,16,"s5"],[788,20,715,18],[788,21,715,19],[789,10,716,8,"s5"],[789,12,716,10],[789,15,716,13,"input"],[789,20,716,18],[789,21,716,19,"charAt"],[789,27,716,25],[789,28,716,26,"peg$currPos"],[789,39,716,37],[789,40,716,38],[790,10,717,8],[790,14,717,12,"peg$r3"],[790,20,717,18],[790,21,717,19,"test"],[790,25,717,23],[790,26,717,24,"s5"],[790,28,717,26],[790,29,717,27],[790,31,717,29],[791,12,718,10,"peg$currPos"],[791,23,718,21],[791,25,718,23],[792,10,719,8],[792,11,719,9],[792,17,719,15],[793,12,720,10,"s5"],[793,14,720,12],[793,17,720,15,"peg$FAILED"],[793,27,720,25],[794,12,721,10],[794,16,721,14,"peg$silentFails"],[794,31,721,29],[794,36,721,34],[794,37,721,35],[794,39,721,37],[795,14,721,39,"peg$fail"],[795,22,721,47],[795,23,721,48,"peg$e11"],[795,30,721,55],[795,31,721,56],[796,12,721,58],[797,10,722,8],[798,8,723,6],[799,8,724,6,"s1"],[799,10,724,8],[799,13,724,11],[799,14,724,12,"s1"],[799,16,724,14],[799,18,724,16,"s2"],[799,20,724,18],[799,22,724,20,"s3"],[799,24,724,22],[799,26,724,24,"s4"],[799,28,724,26],[799,29,724,27],[800,8,725,6,"s0"],[800,10,725,8],[800,13,725,11,"s1"],[800,15,725,13],[801,6,726,4],[801,7,726,5],[801,13,726,11],[802,8,727,6,"peg$currPos"],[802,19,727,17],[802,22,727,20,"s0"],[802,24,727,22],[803,8,728,6,"s0"],[803,10,728,8],[803,13,728,11,"peg$FAILED"],[803,23,728,21],[804,6,729,4],[805,6,730,4,"peg$silentFails"],[805,21,730,19],[805,23,730,21],[806,6,731,4],[806,10,731,8,"s0"],[806,12,731,10],[806,17,731,15,"peg$FAILED"],[806,27,731,25],[806,29,731,27],[807,8,732,6,"s1"],[807,10,732,8],[807,13,732,11,"peg$FAILED"],[807,23,732,21],[808,8,733,6],[808,12,733,10,"peg$silentFails"],[808,27,733,25],[808,32,733,30],[808,33,733,31],[808,35,733,33],[809,10,733,35,"peg$fail"],[809,18,733,43],[809,19,733,44,"peg$e8"],[809,25,733,50],[809,26,733,51],[810,8,733,53],[811,6,734,4],[812,6,736,4],[812,13,736,11,"s0"],[812,15,736,13],[813,4,737,2],[814,4,739,2],[814,13,739,11,"peg$parsesan"],[814,25,739,23,"peg$parsesan"],[814,26,739,23],[814,28,739,26],[815,6,740,4],[815,10,740,8,"s0"],[815,12,740,10],[815,14,740,12,"s1"],[815,16,740,14],[815,18,740,16,"s2"],[815,20,740,18],[815,22,740,20,"s3"],[815,24,740,22],[815,26,740,24,"s4"],[815,28,740,26],[815,30,740,28,"s5"],[815,32,740,30],[816,6,742,4,"peg$silentFails"],[816,21,742,19],[816,23,742,21],[817,6,743,4,"s0"],[817,8,743,6],[817,11,743,9,"peg$currPos"],[817,22,743,20],[818,6,744,4,"s1"],[818,8,744,6],[818,11,744,9,"peg$currPos"],[818,22,744,20],[819,6,745,4],[819,10,745,8,"input"],[819,15,745,13],[819,16,745,14,"substr"],[819,22,745,20],[819,23,745,21,"peg$currPos"],[819,34,745,32],[819,36,745,34],[819,37,745,35],[819,38,745,36],[819,43,745,41,"peg$c4"],[819,49,745,47],[819,51,745,49],[820,8,746,6,"s2"],[820,10,746,8],[820,13,746,11,"peg$c4"],[820,19,746,17],[821,8,747,6,"peg$currPos"],[821,19,747,17],[821,23,747,21],[821,24,747,22],[822,6,748,4],[822,7,748,5],[822,13,748,11],[823,8,749,6,"s2"],[823,10,749,8],[823,13,749,11,"peg$FAILED"],[823,23,749,21],[824,8,750,6],[824,12,750,10,"peg$silentFails"],[824,27,750,25],[824,32,750,30],[824,33,750,31],[824,35,750,33],[825,10,750,35,"peg$fail"],[825,18,750,43],[825,19,750,44,"peg$e13"],[825,26,750,51],[825,27,750,52],[826,8,750,54],[827,6,751,4],[828,6,752,4],[828,10,752,8,"s2"],[828,12,752,10],[828,17,752,15,"peg$FAILED"],[828,27,752,25],[828,29,752,27],[829,8,753,6],[829,12,753,10,"input"],[829,17,753,15],[829,18,753,16,"substr"],[829,24,753,22],[829,25,753,23,"peg$currPos"],[829,36,753,34],[829,38,753,36],[829,39,753,37],[829,40,753,38],[829,45,753,43,"peg$c5"],[829,51,753,49],[829,53,753,51],[830,10,754,8,"s2"],[830,12,754,10],[830,15,754,13,"peg$c5"],[830,21,754,19],[831,10,755,8,"peg$currPos"],[831,21,755,19],[831,25,755,23],[831,26,755,24],[832,8,756,6],[832,9,756,7],[832,15,756,13],[833,10,757,8,"s2"],[833,12,757,10],[833,15,757,13,"peg$FAILED"],[833,25,757,23],[834,10,758,8],[834,14,758,12,"peg$silentFails"],[834,29,758,27],[834,34,758,32],[834,35,758,33],[834,37,758,35],[835,12,758,37,"peg$fail"],[835,20,758,45],[835,21,758,46,"peg$e14"],[835,28,758,53],[835,29,758,54],[836,10,758,56],[837,8,759,6],[838,8,760,6],[838,12,760,10,"s2"],[838,14,760,12],[838,19,760,17,"peg$FAILED"],[838,29,760,27],[838,31,760,29],[839,10,761,8],[839,14,761,12,"input"],[839,19,761,17],[839,20,761,18,"substr"],[839,26,761,24],[839,27,761,25,"peg$currPos"],[839,38,761,36],[839,40,761,38],[839,41,761,39],[839,42,761,40],[839,47,761,45,"peg$c6"],[839,53,761,51],[839,55,761,53],[840,12,762,10,"s2"],[840,14,762,12],[840,17,762,15,"peg$c6"],[840,23,762,21],[841,12,763,10,"peg$currPos"],[841,23,763,21],[841,27,763,25],[841,28,763,26],[842,10,764,8],[842,11,764,9],[842,17,764,15],[843,12,765,10,"s2"],[843,14,765,12],[843,17,765,15,"peg$FAILED"],[843,27,765,25],[844,12,766,10],[844,16,766,14,"peg$silentFails"],[844,31,766,29],[844,36,766,34],[844,37,766,35],[844,39,766,37],[845,14,766,39,"peg$fail"],[845,22,766,47],[845,23,766,48,"peg$e15"],[845,30,766,55],[845,31,766,56],[846,12,766,58],[847,10,767,8],[848,10,768,8],[848,14,768,12,"s2"],[848,16,768,14],[848,21,768,19,"peg$FAILED"],[848,31,768,29],[848,33,768,31],[849,12,769,10],[849,16,769,14,"input"],[849,21,769,19],[849,22,769,20,"substr"],[849,28,769,26],[849,29,769,27,"peg$currPos"],[849,40,769,38],[849,42,769,40],[849,43,769,41],[849,44,769,42],[849,49,769,47,"peg$c7"],[849,55,769,53],[849,57,769,55],[850,14,770,12,"s2"],[850,16,770,14],[850,19,770,17,"peg$c7"],[850,25,770,23],[851,14,771,12,"peg$currPos"],[851,25,771,23],[851,29,771,27],[851,30,771,28],[852,12,772,10],[852,13,772,11],[852,19,772,17],[853,14,773,12,"s2"],[853,16,773,14],[853,19,773,17,"peg$FAILED"],[853,29,773,27],[854,14,774,12],[854,18,774,16,"peg$silentFails"],[854,33,774,31],[854,38,774,36],[854,39,774,37],[854,41,774,39],[855,16,774,41,"peg$fail"],[855,24,774,49],[855,25,774,50,"peg$e16"],[855,32,774,57],[855,33,774,58],[856,14,774,60],[857,12,775,10],[858,12,776,10],[858,16,776,14,"s2"],[858,18,776,16],[858,23,776,21,"peg$FAILED"],[858,33,776,31],[858,35,776,33],[859,14,777,12,"s2"],[859,16,777,14],[859,19,777,17,"peg$currPos"],[859,30,777,28],[860,14,778,12,"s3"],[860,16,778,14],[860,19,778,17,"input"],[860,24,778,22],[860,25,778,23,"charAt"],[860,31,778,29],[860,32,778,30,"peg$currPos"],[860,43,778,41],[860,44,778,42],[861,14,779,12],[861,18,779,16,"peg$r0"],[861,24,779,22],[861,25,779,23,"test"],[861,29,779,27],[861,30,779,28,"s3"],[861,32,779,30],[861,33,779,31],[861,35,779,33],[862,16,780,14,"peg$currPos"],[862,27,780,25],[862,29,780,27],[863,14,781,12],[863,15,781,13],[863,21,781,19],[864,16,782,14,"s3"],[864,18,782,16],[864,21,782,19,"peg$FAILED"],[864,31,782,29],[865,16,783,14],[865,20,783,18,"peg$silentFails"],[865,35,783,33],[865,40,783,38],[865,41,783,39],[865,43,783,41],[866,18,783,43,"peg$fail"],[866,26,783,51],[866,27,783,52,"peg$e5"],[866,33,783,58],[866,34,783,59],[867,16,783,61],[868,14,784,12],[869,14,785,12],[869,18,785,16,"s3"],[869,20,785,18],[869,25,785,23,"peg$FAILED"],[869,35,785,33],[869,37,785,35],[870,16,786,14,"s4"],[870,18,786,16],[870,21,786,19],[870,23,786,21],[871,16,787,14,"s5"],[871,18,787,16],[871,21,787,19,"input"],[871,26,787,24],[871,27,787,25,"charAt"],[871,33,787,31],[871,34,787,32,"peg$currPos"],[871,45,787,43],[871,46,787,44],[872,16,788,14],[872,20,788,18,"peg$r4"],[872,26,788,24],[872,27,788,25,"test"],[872,31,788,29],[872,32,788,30,"s5"],[872,34,788,32],[872,35,788,33],[872,37,788,35],[873,18,789,16,"peg$currPos"],[873,29,789,27],[873,31,789,29],[874,16,790,14],[874,17,790,15],[874,23,790,21],[875,18,791,16,"s5"],[875,20,791,18],[875,23,791,21,"peg$FAILED"],[875,33,791,31],[876,18,792,16],[876,22,792,20,"peg$silentFails"],[876,37,792,35],[876,42,792,40],[876,43,792,41],[876,45,792,43],[877,20,792,45,"peg$fail"],[877,28,792,53],[877,29,792,54,"peg$e17"],[877,36,792,61],[877,37,792,62],[878,18,792,64],[879,16,793,14],[880,16,794,14],[880,20,794,18,"s5"],[880,22,794,20],[880,27,794,25,"peg$FAILED"],[880,37,794,35],[880,39,794,37],[881,18,795,16],[881,25,795,23,"s5"],[881,27,795,25],[881,32,795,30,"peg$FAILED"],[881,42,795,40],[881,44,795,42],[882,20,796,18,"s4"],[882,22,796,20],[882,23,796,21,"push"],[882,27,796,25],[882,28,796,26,"s5"],[882,30,796,28],[882,31,796,29],[883,20,797,18,"s5"],[883,22,797,20],[883,25,797,23,"input"],[883,30,797,28],[883,31,797,29,"charAt"],[883,37,797,35],[883,38,797,36,"peg$currPos"],[883,49,797,47],[883,50,797,48],[884,20,798,18],[884,24,798,22,"peg$r4"],[884,30,798,28],[884,31,798,29,"test"],[884,35,798,33],[884,36,798,34,"s5"],[884,38,798,36],[884,39,798,37],[884,41,798,39],[885,22,799,20,"peg$currPos"],[885,33,799,31],[885,35,799,33],[886,20,800,18],[886,21,800,19],[886,27,800,25],[887,22,801,20,"s5"],[887,24,801,22],[887,27,801,25,"peg$FAILED"],[887,37,801,35],[888,22,802,20],[888,26,802,24,"peg$silentFails"],[888,41,802,39],[888,46,802,44],[888,47,802,45],[888,49,802,47],[889,24,802,49,"peg$fail"],[889,32,802,57],[889,33,802,58,"peg$e17"],[889,40,802,65],[889,41,802,66],[890,22,802,68],[891,20,803,18],[892,18,804,16],[893,16,805,14],[893,17,805,15],[893,23,805,21],[894,18,806,16,"s4"],[894,20,806,18],[894,23,806,21,"peg$FAILED"],[894,33,806,31],[895,16,807,14],[896,16,808,14],[896,20,808,18,"s4"],[896,22,808,20],[896,27,808,25,"peg$FAILED"],[896,37,808,35],[896,39,808,37],[897,18,809,16,"s3"],[897,20,809,18],[897,23,809,21],[897,24,809,22,"s3"],[897,26,809,24],[897,28,809,26,"s4"],[897,30,809,28],[897,31,809,29],[898,18,810,16,"s2"],[898,20,810,18],[898,23,810,21,"s3"],[898,25,810,23],[899,16,811,14],[899,17,811,15],[899,23,811,21],[900,18,812,16,"peg$currPos"],[900,29,812,27],[900,32,812,30,"s2"],[900,34,812,32],[901,18,813,16,"s2"],[901,20,813,18],[901,23,813,21,"peg$FAILED"],[901,33,813,31],[902,16,814,14],[903,14,815,12],[903,15,815,13],[903,21,815,19],[904,16,816,14,"peg$currPos"],[904,27,816,25],[904,30,816,28,"s2"],[904,32,816,30],[905,16,817,14,"s2"],[905,18,817,16],[905,21,817,19,"peg$FAILED"],[905,31,817,29],[906,14,818,12],[907,12,819,10],[908,10,820,8],[909,8,821,6],[910,6,822,4],[911,6,823,4],[911,10,823,8,"s2"],[911,12,823,10],[911,17,823,15,"peg$FAILED"],[911,27,823,25],[911,29,823,27],[912,8,824,6,"s3"],[912,10,824,8],[912,13,824,11,"input"],[912,18,824,16],[912,19,824,17,"charAt"],[912,25,824,23],[912,26,824,24,"peg$currPos"],[912,37,824,35],[912,38,824,36],[913,8,825,6],[913,12,825,10,"peg$r5"],[913,18,825,16],[913,19,825,17,"test"],[913,23,825,21],[913,24,825,22,"s3"],[913,26,825,24],[913,27,825,25],[913,29,825,27],[914,10,826,8,"peg$currPos"],[914,21,826,19],[914,23,826,21],[915,8,827,6],[915,9,827,7],[915,15,827,13],[916,10,828,8,"s3"],[916,12,828,10],[916,15,828,13,"peg$FAILED"],[916,25,828,23],[917,10,829,8],[917,14,829,12,"peg$silentFails"],[917,29,829,27],[917,34,829,32],[917,35,829,33],[917,37,829,35],[918,12,829,37,"peg$fail"],[918,20,829,45],[918,21,829,46,"peg$e18"],[918,28,829,53],[918,29,829,54],[919,10,829,56],[920,8,830,6],[921,8,831,6],[921,12,831,10,"s3"],[921,14,831,12],[921,19,831,17,"peg$FAILED"],[921,29,831,27],[921,31,831,29],[922,10,832,8,"s3"],[922,12,832,10],[922,15,832,13],[922,19,832,17],[923,8,833,6],[924,8,834,6,"s2"],[924,10,834,8],[924,13,834,11],[924,14,834,12,"s2"],[924,16,834,14],[924,18,834,16,"s3"],[924,20,834,18],[924,21,834,19],[925,8,835,6,"s1"],[925,10,835,8],[925,13,835,11,"s2"],[925,15,835,13],[926,6,836,4],[926,7,836,5],[926,13,836,11],[927,8,837,6,"peg$currPos"],[927,19,837,17],[927,22,837,20,"s1"],[927,24,837,22],[928,8,838,6,"s1"],[928,10,838,8],[928,13,838,11,"peg$FAILED"],[928,23,838,21],[929,6,839,4],[930,6,840,4],[930,10,840,8,"s1"],[930,12,840,10],[930,17,840,15,"peg$FAILED"],[930,27,840,25],[930,29,840,27],[931,8,841,6,"s0"],[931,10,841,8],[931,13,841,11,"input"],[931,18,841,16],[931,19,841,17,"substring"],[931,28,841,26],[931,29,841,27,"s0"],[931,31,841,29],[931,33,841,31,"peg$currPos"],[931,44,841,42],[931,45,841,43],[932,6,842,4],[932,7,842,5],[932,13,842,11],[933,8,843,6,"s0"],[933,10,843,8],[933,13,843,11,"s1"],[933,15,843,13],[934,6,844,4],[935,6,845,4,"peg$silentFails"],[935,21,845,19],[935,23,845,21],[936,6,846,4],[936,10,846,8,"s0"],[936,12,846,10],[936,17,846,15,"peg$FAILED"],[936,27,846,25],[936,29,846,27],[937,8,847,6,"s1"],[937,10,847,8],[937,13,847,11,"peg$FAILED"],[937,23,847,21],[938,8,848,6],[938,12,848,10,"peg$silentFails"],[938,27,848,25],[938,32,848,30],[938,33,848,31],[938,35,848,33],[939,10,848,35,"peg$fail"],[939,18,848,43],[939,19,848,44,"peg$e12"],[939,26,848,51],[939,27,848,52],[940,8,848,54],[941,6,849,4],[942,6,851,4],[942,13,851,11,"s0"],[942,15,851,13],[943,4,852,2],[944,4,854,2],[944,13,854,11,"peg$parsesuffixAnnotation"],[944,38,854,36,"peg$parsesuffixAnnotation"],[944,39,854,36],[944,41,854,39],[945,6,855,4],[945,10,855,8,"s0"],[945,12,855,10],[945,14,855,12,"s1"],[945,16,855,14],[945,18,855,16,"s2"],[945,20,855,18],[946,6,857,4,"peg$silentFails"],[946,21,857,19],[946,23,857,21],[947,6,858,4,"s0"],[947,8,858,6],[947,11,858,9,"peg$currPos"],[947,22,858,20],[948,6,859,4,"s1"],[948,8,859,6],[948,11,859,9],[948,13,859,11],[949,6,860,4,"s2"],[949,8,860,6],[949,11,860,9,"input"],[949,16,860,14],[949,17,860,15,"charAt"],[949,23,860,21],[949,24,860,22,"peg$currPos"],[949,35,860,33],[949,36,860,34],[950,6,861,4],[950,10,861,8,"peg$r6"],[950,16,861,14],[950,17,861,15,"test"],[950,21,861,19],[950,22,861,20,"s2"],[950,24,861,22],[950,25,861,23],[950,27,861,25],[951,8,862,6,"peg$currPos"],[951,19,862,17],[951,21,862,19],[952,6,863,4],[952,7,863,5],[952,13,863,11],[953,8,864,6,"s2"],[953,10,864,8],[953,13,864,11,"peg$FAILED"],[953,23,864,21],[954,8,865,6],[954,12,865,10,"peg$silentFails"],[954,27,865,25],[954,32,865,30],[954,33,865,31],[954,35,865,33],[955,10,865,35,"peg$fail"],[955,18,865,43],[955,19,865,44,"peg$e20"],[955,26,865,51],[955,27,865,52],[956,8,865,54],[957,6,866,4],[958,6,867,4],[958,13,867,11,"s2"],[958,15,867,13],[958,20,867,18,"peg$FAILED"],[958,30,867,28],[958,32,867,30],[959,8,868,6,"s1"],[959,10,868,8],[959,11,868,9,"push"],[959,15,868,13],[959,16,868,14,"s2"],[959,18,868,16],[959,19,868,17],[960,8,869,6],[960,12,869,10,"s1"],[960,14,869,12],[960,15,869,13,"length"],[960,21,869,19],[960,25,869,23],[960,26,869,24],[960,28,869,26],[961,10,870,8,"s2"],[961,12,870,10],[961,15,870,13,"peg$FAILED"],[961,25,870,23],[962,8,871,6],[962,9,871,7],[962,15,871,13],[963,10,872,8,"s2"],[963,12,872,10],[963,15,872,13,"input"],[963,20,872,18],[963,21,872,19,"charAt"],[963,27,872,25],[963,28,872,26,"peg$currPos"],[963,39,872,37],[963,40,872,38],[964,10,873,8],[964,14,873,12,"peg$r6"],[964,20,873,18],[964,21,873,19,"test"],[964,25,873,23],[964,26,873,24,"s2"],[964,28,873,26],[964,29,873,27],[964,31,873,29],[965,12,874,10,"peg$currPos"],[965,23,874,21],[965,25,874,23],[966,10,875,8],[966,11,875,9],[966,17,875,15],[967,12,876,10,"s2"],[967,14,876,12],[967,17,876,15,"peg$FAILED"],[967,27,876,25],[968,12,877,10],[968,16,877,14,"peg$silentFails"],[968,31,877,29],[968,36,877,34],[968,37,877,35],[968,39,877,37],[969,14,877,39,"peg$fail"],[969,22,877,47],[969,23,877,48,"peg$e20"],[969,30,877,55],[969,31,877,56],[970,12,877,58],[971,10,878,8],[972,8,879,6],[973,6,880,4],[974,6,881,4],[974,10,881,8,"s1"],[974,12,881,10],[974,13,881,11,"length"],[974,19,881,17],[974,22,881,20],[974,23,881,21],[974,25,881,23],[975,8,882,6,"peg$currPos"],[975,19,882,17],[975,22,882,20,"s0"],[975,24,882,22],[976,8,883,6,"s0"],[976,10,883,8],[976,13,883,11,"peg$FAILED"],[976,23,883,21],[977,6,884,4],[977,7,884,5],[977,13,884,11],[978,8,885,6,"s0"],[978,10,885,8],[978,13,885,11,"s1"],[978,15,885,13],[979,6,886,4],[980,6,887,4,"peg$silentFails"],[980,21,887,19],[980,23,887,21],[981,6,888,4],[981,10,888,8,"s0"],[981,12,888,10],[981,17,888,15,"peg$FAILED"],[981,27,888,25],[981,29,888,27],[982,8,889,6,"s1"],[982,10,889,8],[982,13,889,11,"peg$FAILED"],[982,23,889,21],[983,8,890,6],[983,12,890,10,"peg$silentFails"],[983,27,890,25],[983,32,890,30],[983,33,890,31],[983,35,890,33],[984,10,890,35,"peg$fail"],[984,18,890,43],[984,19,890,44,"peg$e19"],[984,26,890,51],[984,27,890,52],[985,8,890,54],[986,6,891,4],[987,6,893,4],[987,13,893,11,"s0"],[987,15,893,13],[988,4,894,2],[989,4,896,2],[989,13,896,11,"peg$parsenag"],[989,25,896,23,"peg$parsenag"],[989,26,896,23],[989,28,896,26],[990,6,897,4],[990,10,897,8,"s0"],[990,12,897,10],[990,14,897,12,"s2"],[990,16,897,14],[990,18,897,16,"s3"],[990,20,897,18],[990,22,897,20,"s4"],[990,24,897,22],[990,26,897,24,"s5"],[990,28,897,26],[991,6,899,4,"peg$silentFails"],[991,21,899,19],[991,23,899,21],[992,6,900,4,"s0"],[992,8,900,6],[992,11,900,9,"peg$currPos"],[992,22,900,20],[993,6,901,4,"peg$parse_"],[993,16,901,14],[993,17,901,15],[993,18,901,16],[994,6,902,4],[994,10,902,8,"input"],[994,15,902,13],[994,16,902,14,"charCodeAt"],[994,26,902,24],[994,27,902,25,"peg$currPos"],[994,38,902,36],[994,39,902,37],[994,44,902,42],[994,46,902,44],[994,48,902,46],[995,8,903,6,"s2"],[995,10,903,8],[995,13,903,11,"peg$c8"],[995,19,903,17],[996,8,904,6,"peg$currPos"],[996,19,904,17],[996,21,904,19],[997,6,905,4],[997,7,905,5],[997,13,905,11],[998,8,906,6,"s2"],[998,10,906,8],[998,13,906,11,"peg$FAILED"],[998,23,906,21],[999,8,907,6],[999,12,907,10,"peg$silentFails"],[999,27,907,25],[999,32,907,30],[999,33,907,31],[999,35,907,33],[1000,10,907,35,"peg$fail"],[1000,18,907,43],[1000,19,907,44,"peg$e22"],[1000,26,907,51],[1000,27,907,52],[1001,8,907,54],[1002,6,908,4],[1003,6,909,4],[1003,10,909,8,"s2"],[1003,12,909,10],[1003,17,909,15,"peg$FAILED"],[1003,27,909,25],[1003,29,909,27],[1004,8,910,6,"s3"],[1004,10,910,8],[1004,13,910,11,"peg$currPos"],[1004,24,910,22],[1005,8,911,6,"s4"],[1005,10,911,8],[1005,13,911,11],[1005,15,911,13],[1006,8,912,6,"s5"],[1006,10,912,8],[1006,13,912,11,"input"],[1006,18,912,16],[1006,19,912,17,"charAt"],[1006,25,912,23],[1006,26,912,24,"peg$currPos"],[1006,37,912,35],[1006,38,912,36],[1007,8,913,6],[1007,12,913,10,"peg$r2"],[1007,18,913,16],[1007,19,913,17,"test"],[1007,23,913,21],[1007,24,913,22,"s5"],[1007,26,913,24],[1007,27,913,25],[1007,29,913,27],[1008,10,914,8,"peg$currPos"],[1008,21,914,19],[1008,23,914,21],[1009,8,915,6],[1009,9,915,7],[1009,15,915,13],[1010,10,916,8,"s5"],[1010,12,916,10],[1010,15,916,13,"peg$FAILED"],[1010,25,916,23],[1011,10,917,8],[1011,14,917,12,"peg$silentFails"],[1011,29,917,27],[1011,34,917,32],[1011,35,917,33],[1011,37,917,35],[1012,12,917,37,"peg$fail"],[1012,20,917,45],[1012,21,917,46,"peg$e9"],[1012,27,917,52],[1012,28,917,53],[1013,10,917,55],[1014,8,918,6],[1015,8,919,6],[1015,12,919,10,"s5"],[1015,14,919,12],[1015,19,919,17,"peg$FAILED"],[1015,29,919,27],[1015,31,919,29],[1016,10,920,8],[1016,17,920,15,"s5"],[1016,19,920,17],[1016,24,920,22,"peg$FAILED"],[1016,34,920,32],[1016,36,920,34],[1017,12,921,10,"s4"],[1017,14,921,12],[1017,15,921,13,"push"],[1017,19,921,17],[1017,20,921,18,"s5"],[1017,22,921,20],[1017,23,921,21],[1018,12,922,10,"s5"],[1018,14,922,12],[1018,17,922,15,"input"],[1018,22,922,20],[1018,23,922,21,"charAt"],[1018,29,922,27],[1018,30,922,28,"peg$currPos"],[1018,41,922,39],[1018,42,922,40],[1019,12,923,10],[1019,16,923,14,"peg$r2"],[1019,22,923,20],[1019,23,923,21,"test"],[1019,27,923,25],[1019,28,923,26,"s5"],[1019,30,923,28],[1019,31,923,29],[1019,33,923,31],[1020,14,924,12,"peg$currPos"],[1020,25,924,23],[1020,27,924,25],[1021,12,925,10],[1021,13,925,11],[1021,19,925,17],[1022,14,926,12,"s5"],[1022,16,926,14],[1022,19,926,17,"peg$FAILED"],[1022,29,926,27],[1023,14,927,12],[1023,18,927,16,"peg$silentFails"],[1023,33,927,31],[1023,38,927,36],[1023,39,927,37],[1023,41,927,39],[1024,16,927,41,"peg$fail"],[1024,24,927,49],[1024,25,927,50,"peg$e9"],[1024,31,927,56],[1024,32,927,57],[1025,14,927,59],[1026,12,928,10],[1027,10,929,8],[1028,8,930,6],[1028,9,930,7],[1028,15,930,13],[1029,10,931,8,"s4"],[1029,12,931,10],[1029,15,931,13,"peg$FAILED"],[1029,25,931,23],[1030,8,932,6],[1031,8,933,6],[1031,12,933,10,"s4"],[1031,14,933,12],[1031,19,933,17,"peg$FAILED"],[1031,29,933,27],[1031,31,933,29],[1032,10,934,8,"s3"],[1032,12,934,10],[1032,15,934,13,"input"],[1032,20,934,18],[1032,21,934,19,"substring"],[1032,30,934,28],[1032,31,934,29,"s3"],[1032,33,934,31],[1032,35,934,33,"peg$currPos"],[1032,46,934,44],[1032,47,934,45],[1033,8,935,6],[1033,9,935,7],[1033,15,935,13],[1034,10,936,8,"s3"],[1034,12,936,10],[1034,15,936,13,"s4"],[1034,17,936,15],[1035,8,937,6],[1036,8,938,6],[1036,12,938,10,"s3"],[1036,14,938,12],[1036,19,938,17,"peg$FAILED"],[1036,29,938,27],[1036,31,938,29],[1037,10,939,8,"s0"],[1037,12,939,10],[1037,15,939,13,"peg$f6"],[1037,21,939,19],[1037,22,939,20,"s3"],[1037,24,939,22],[1037,25,939,23],[1038,8,940,6],[1038,9,940,7],[1038,15,940,13],[1039,10,941,8,"peg$currPos"],[1039,21,941,19],[1039,24,941,22,"s0"],[1039,26,941,24],[1040,10,942,8,"s0"],[1040,12,942,10],[1040,15,942,13,"peg$FAILED"],[1040,25,942,23],[1041,8,943,6],[1042,6,944,4],[1042,7,944,5],[1042,13,944,11],[1043,8,945,6,"peg$currPos"],[1043,19,945,17],[1043,22,945,20,"s0"],[1043,24,945,22],[1044,8,946,6,"s0"],[1044,10,946,8],[1044,13,946,11,"peg$FAILED"],[1044,23,946,21],[1045,6,947,4],[1046,6,948,4,"peg$silentFails"],[1046,21,948,19],[1046,23,948,21],[1047,6,949,4],[1047,10,949,8,"s0"],[1047,12,949,10],[1047,17,949,15,"peg$FAILED"],[1047,27,949,25],[1047,29,949,27],[1048,8,950,6],[1048,12,950,10,"peg$silentFails"],[1048,27,950,25],[1048,32,950,30],[1048,33,950,31],[1048,35,950,33],[1049,10,950,35,"peg$fail"],[1049,18,950,43],[1049,19,950,44,"peg$e21"],[1049,26,950,51],[1049,27,950,52],[1050,8,950,54],[1051,6,951,4],[1052,6,953,4],[1052,13,953,11,"s0"],[1052,15,953,13],[1053,4,954,2],[1054,4,956,2],[1054,13,956,11,"peg$parsecomment"],[1054,29,956,27,"peg$parsecomment"],[1054,30,956,27],[1054,32,956,30],[1055,6,957,4],[1055,10,957,8,"s0"],[1055,12,957,10],[1056,6,959,4,"s0"],[1056,8,959,6],[1056,11,959,9,"peg$parsebraceComment"],[1056,32,959,30],[1056,33,959,31],[1056,34,959,32],[1057,6,960,4],[1057,10,960,8,"s0"],[1057,12,960,10],[1057,17,960,15,"peg$FAILED"],[1057,27,960,25],[1057,29,960,27],[1058,8,961,6,"s0"],[1058,10,961,8],[1058,13,961,11,"peg$parserestOfLineComment"],[1058,39,961,37],[1058,40,961,38],[1058,41,961,39],[1059,6,962,4],[1060,6,964,4],[1060,13,964,11,"s0"],[1060,15,964,13],[1061,4,965,2],[1062,4,967,2],[1062,13,967,11,"peg$parsebraceComment"],[1062,34,967,32,"peg$parsebraceComment"],[1062,35,967,32],[1062,37,967,35],[1063,6,968,4],[1063,10,968,8,"s0"],[1063,12,968,10],[1063,14,968,12,"s1"],[1063,16,968,14],[1063,18,968,16,"s2"],[1063,20,968,18],[1063,22,968,20,"s3"],[1063,24,968,22],[1063,26,968,24,"s4"],[1063,28,968,26],[1064,6,970,4,"peg$silentFails"],[1064,21,970,19],[1064,23,970,21],[1065,6,971,4,"s0"],[1065,8,971,6],[1065,11,971,9,"peg$currPos"],[1065,22,971,20],[1066,6,972,4],[1066,10,972,8,"input"],[1066,15,972,13],[1066,16,972,14,"charCodeAt"],[1066,26,972,24],[1066,27,972,25,"peg$currPos"],[1066,38,972,36],[1066,39,972,37],[1066,44,972,42],[1066,47,972,45],[1066,49,972,47],[1067,8,973,6,"s1"],[1067,10,973,8],[1067,13,973,11,"peg$c9"],[1067,19,973,17],[1068,8,974,6,"peg$currPos"],[1068,19,974,17],[1068,21,974,19],[1069,6,975,4],[1069,7,975,5],[1069,13,975,11],[1070,8,976,6,"s1"],[1070,10,976,8],[1070,13,976,11,"peg$FAILED"],[1070,23,976,21],[1071,8,977,6],[1071,12,977,10,"peg$silentFails"],[1071,27,977,25],[1071,32,977,30],[1071,33,977,31],[1071,35,977,33],[1072,10,977,35,"peg$fail"],[1072,18,977,43],[1072,19,977,44,"peg$e24"],[1072,26,977,51],[1072,27,977,52],[1073,8,977,54],[1074,6,978,4],[1075,6,979,4],[1075,10,979,8,"s1"],[1075,12,979,10],[1075,17,979,15,"peg$FAILED"],[1075,27,979,25],[1075,29,979,27],[1076,8,980,6,"s2"],[1076,10,980,8],[1076,13,980,11,"peg$currPos"],[1076,24,980,22],[1077,8,981,6,"s3"],[1077,10,981,8],[1077,13,981,11],[1077,15,981,13],[1078,8,982,6,"s4"],[1078,10,982,8],[1078,13,982,11,"input"],[1078,18,982,16],[1078,19,982,17,"charAt"],[1078,25,982,23],[1078,26,982,24,"peg$currPos"],[1078,37,982,35],[1078,38,982,36],[1079,8,983,6],[1079,12,983,10,"peg$r7"],[1079,18,983,16],[1079,19,983,17,"test"],[1079,23,983,21],[1079,24,983,22,"s4"],[1079,26,983,24],[1079,27,983,25],[1079,29,983,27],[1080,10,984,8,"peg$currPos"],[1080,21,984,19],[1080,23,984,21],[1081,8,985,6],[1081,9,985,7],[1081,15,985,13],[1082,10,986,8,"s4"],[1082,12,986,10],[1082,15,986,13,"peg$FAILED"],[1082,25,986,23],[1083,10,987,8],[1083,14,987,12,"peg$silentFails"],[1083,29,987,27],[1083,34,987,32],[1083,35,987,33],[1083,37,987,35],[1084,12,987,37,"peg$fail"],[1084,20,987,45],[1084,21,987,46,"peg$e25"],[1084,28,987,53],[1084,29,987,54],[1085,10,987,56],[1086,8,988,6],[1087,8,989,6],[1087,15,989,13,"s4"],[1087,17,989,15],[1087,22,989,20,"peg$FAILED"],[1087,32,989,30],[1087,34,989,32],[1088,10,990,8,"s3"],[1088,12,990,10],[1088,13,990,11,"push"],[1088,17,990,15],[1088,18,990,16,"s4"],[1088,20,990,18],[1088,21,990,19],[1089,10,991,8,"s4"],[1089,12,991,10],[1089,15,991,13,"input"],[1089,20,991,18],[1089,21,991,19,"charAt"],[1089,27,991,25],[1089,28,991,26,"peg$currPos"],[1089,39,991,37],[1089,40,991,38],[1090,10,992,8],[1090,14,992,12,"peg$r7"],[1090,20,992,18],[1090,21,992,19,"test"],[1090,25,992,23],[1090,26,992,24,"s4"],[1090,28,992,26],[1090,29,992,27],[1090,31,992,29],[1091,12,993,10,"peg$currPos"],[1091,23,993,21],[1091,25,993,23],[1092,10,994,8],[1092,11,994,9],[1092,17,994,15],[1093,12,995,10,"s4"],[1093,14,995,12],[1093,17,995,15,"peg$FAILED"],[1093,27,995,25],[1094,12,996,10],[1094,16,996,14,"peg$silentFails"],[1094,31,996,29],[1094,36,996,34],[1094,37,996,35],[1094,39,996,37],[1095,14,996,39,"peg$fail"],[1095,22,996,47],[1095,23,996,48,"peg$e25"],[1095,30,996,55],[1095,31,996,56],[1096,12,996,58],[1097,10,997,8],[1098,8,998,6],[1099,8,999,6,"s2"],[1099,10,999,8],[1099,13,999,11,"input"],[1099,18,999,16],[1099,19,999,17,"substring"],[1099,28,999,26],[1099,29,999,27,"s2"],[1099,31,999,29],[1099,33,999,31,"peg$currPos"],[1099,44,999,42],[1099,45,999,43],[1100,8,1000,6],[1100,12,1000,10,"input"],[1100,17,1000,15],[1100,18,1000,16,"charCodeAt"],[1100,28,1000,26],[1100,29,1000,27,"peg$currPos"],[1100,40,1000,38],[1100,41,1000,39],[1100,46,1000,44],[1100,49,1000,47],[1100,51,1000,49],[1101,10,1001,8,"s3"],[1101,12,1001,10],[1101,15,1001,13,"peg$c10"],[1101,22,1001,20],[1102,10,1002,8,"peg$currPos"],[1102,21,1002,19],[1102,23,1002,21],[1103,8,1003,6],[1103,9,1003,7],[1103,15,1003,13],[1104,10,1004,8,"s3"],[1104,12,1004,10],[1104,15,1004,13,"peg$FAILED"],[1104,25,1004,23],[1105,10,1005,8],[1105,14,1005,12,"peg$silentFails"],[1105,29,1005,27],[1105,34,1005,32],[1105,35,1005,33],[1105,37,1005,35],[1106,12,1005,37,"peg$fail"],[1106,20,1005,45],[1106,21,1005,46,"peg$e26"],[1106,28,1005,53],[1106,29,1005,54],[1107,10,1005,56],[1108,8,1006,6],[1109,8,1007,6],[1109,12,1007,10,"s3"],[1109,14,1007,12],[1109,19,1007,17,"peg$FAILED"],[1109,29,1007,27],[1109,31,1007,29],[1110,10,1008,8,"s0"],[1110,12,1008,10],[1110,15,1008,13,"peg$f7"],[1110,21,1008,19],[1110,22,1008,20,"s2"],[1110,24,1008,22],[1110,25,1008,23],[1111,8,1009,6],[1111,9,1009,7],[1111,15,1009,13],[1112,10,1010,8,"peg$currPos"],[1112,21,1010,19],[1112,24,1010,22,"s0"],[1112,26,1010,24],[1113,10,1011,8,"s0"],[1113,12,1011,10],[1113,15,1011,13,"peg$FAILED"],[1113,25,1011,23],[1114,8,1012,6],[1115,6,1013,4],[1115,7,1013,5],[1115,13,1013,11],[1116,8,1014,6,"peg$currPos"],[1116,19,1014,17],[1116,22,1014,20,"s0"],[1116,24,1014,22],[1117,8,1015,6,"s0"],[1117,10,1015,8],[1117,13,1015,11,"peg$FAILED"],[1117,23,1015,21],[1118,6,1016,4],[1119,6,1017,4,"peg$silentFails"],[1119,21,1017,19],[1119,23,1017,21],[1120,6,1018,4],[1120,10,1018,8,"s0"],[1120,12,1018,10],[1120,17,1018,15,"peg$FAILED"],[1120,27,1018,25],[1120,29,1018,27],[1121,8,1019,6,"s1"],[1121,10,1019,8],[1121,13,1019,11,"peg$FAILED"],[1121,23,1019,21],[1122,8,1020,6],[1122,12,1020,10,"peg$silentFails"],[1122,27,1020,25],[1122,32,1020,30],[1122,33,1020,31],[1122,35,1020,33],[1123,10,1020,35,"peg$fail"],[1123,18,1020,43],[1123,19,1020,44,"peg$e23"],[1123,26,1020,51],[1123,27,1020,52],[1124,8,1020,54],[1125,6,1021,4],[1126,6,1023,4],[1126,13,1023,11,"s0"],[1126,15,1023,13],[1127,4,1024,2],[1128,4,1026,2],[1128,13,1026,11,"peg$parserestOfLineComment"],[1128,39,1026,37,"peg$parserestOfLineComment"],[1128,40,1026,37],[1128,42,1026,40],[1129,6,1027,4],[1129,10,1027,8,"s0"],[1129,12,1027,10],[1129,14,1027,12,"s1"],[1129,16,1027,14],[1129,18,1027,16,"s2"],[1129,20,1027,18],[1129,22,1027,20,"s3"],[1129,24,1027,22],[1129,26,1027,24,"s4"],[1129,28,1027,26],[1130,6,1029,4,"peg$silentFails"],[1130,21,1029,19],[1130,23,1029,21],[1131,6,1030,4,"s0"],[1131,8,1030,6],[1131,11,1030,9,"peg$currPos"],[1131,22,1030,20],[1132,6,1031,4],[1132,10,1031,8,"input"],[1132,15,1031,13],[1132,16,1031,14,"charCodeAt"],[1132,26,1031,24],[1132,27,1031,25,"peg$currPos"],[1132,38,1031,36],[1132,39,1031,37],[1132,44,1031,42],[1132,46,1031,44],[1132,48,1031,46],[1133,8,1032,6,"s1"],[1133,10,1032,8],[1133,13,1032,11,"peg$c11"],[1133,20,1032,18],[1134,8,1033,6,"peg$currPos"],[1134,19,1033,17],[1134,21,1033,19],[1135,6,1034,4],[1135,7,1034,5],[1135,13,1034,11],[1136,8,1035,6,"s1"],[1136,10,1035,8],[1136,13,1035,11,"peg$FAILED"],[1136,23,1035,21],[1137,8,1036,6],[1137,12,1036,10,"peg$silentFails"],[1137,27,1036,25],[1137,32,1036,30],[1137,33,1036,31],[1137,35,1036,33],[1138,10,1036,35,"peg$fail"],[1138,18,1036,43],[1138,19,1036,44,"peg$e28"],[1138,26,1036,51],[1138,27,1036,52],[1139,8,1036,54],[1140,6,1037,4],[1141,6,1038,4],[1141,10,1038,8,"s1"],[1141,12,1038,10],[1141,17,1038,15,"peg$FAILED"],[1141,27,1038,25],[1141,29,1038,27],[1142,8,1039,6,"s2"],[1142,10,1039,8],[1142,13,1039,11,"peg$currPos"],[1142,24,1039,22],[1143,8,1040,6,"s3"],[1143,10,1040,8],[1143,13,1040,11],[1143,15,1040,13],[1144,8,1041,6,"s4"],[1144,10,1041,8],[1144,13,1041,11,"input"],[1144,18,1041,16],[1144,19,1041,17,"charAt"],[1144,25,1041,23],[1144,26,1041,24,"peg$currPos"],[1144,37,1041,35],[1144,38,1041,36],[1145,8,1042,6],[1145,12,1042,10,"peg$r8"],[1145,18,1042,16],[1145,19,1042,17,"test"],[1145,23,1042,21],[1145,24,1042,22,"s4"],[1145,26,1042,24],[1145,27,1042,25],[1145,29,1042,27],[1146,10,1043,8,"peg$currPos"],[1146,21,1043,19],[1146,23,1043,21],[1147,8,1044,6],[1147,9,1044,7],[1147,15,1044,13],[1148,10,1045,8,"s4"],[1148,12,1045,10],[1148,15,1045,13,"peg$FAILED"],[1148,25,1045,23],[1149,10,1046,8],[1149,14,1046,12,"peg$silentFails"],[1149,29,1046,27],[1149,34,1046,32],[1149,35,1046,33],[1149,37,1046,35],[1150,12,1046,37,"peg$fail"],[1150,20,1046,45],[1150,21,1046,46,"peg$e29"],[1150,28,1046,53],[1150,29,1046,54],[1151,10,1046,56],[1152,8,1047,6],[1153,8,1048,6],[1153,15,1048,13,"s4"],[1153,17,1048,15],[1153,22,1048,20,"peg$FAILED"],[1153,32,1048,30],[1153,34,1048,32],[1154,10,1049,8,"s3"],[1154,12,1049,10],[1154,13,1049,11,"push"],[1154,17,1049,15],[1154,18,1049,16,"s4"],[1154,20,1049,18],[1154,21,1049,19],[1155,10,1050,8,"s4"],[1155,12,1050,10],[1155,15,1050,13,"input"],[1155,20,1050,18],[1155,21,1050,19,"charAt"],[1155,27,1050,25],[1155,28,1050,26,"peg$currPos"],[1155,39,1050,37],[1155,40,1050,38],[1156,10,1051,8],[1156,14,1051,12,"peg$r8"],[1156,20,1051,18],[1156,21,1051,19,"test"],[1156,25,1051,23],[1156,26,1051,24,"s4"],[1156,28,1051,26],[1156,29,1051,27],[1156,31,1051,29],[1157,12,1052,10,"peg$currPos"],[1157,23,1052,21],[1157,25,1052,23],[1158,10,1053,8],[1158,11,1053,9],[1158,17,1053,15],[1159,12,1054,10,"s4"],[1159,14,1054,12],[1159,17,1054,15,"peg$FAILED"],[1159,27,1054,25],[1160,12,1055,10],[1160,16,1055,14,"peg$silentFails"],[1160,31,1055,29],[1160,36,1055,34],[1160,37,1055,35],[1160,39,1055,37],[1161,14,1055,39,"peg$fail"],[1161,22,1055,47],[1161,23,1055,48,"peg$e29"],[1161,30,1055,55],[1161,31,1055,56],[1162,12,1055,58],[1163,10,1056,8],[1164,8,1057,6],[1165,8,1058,6,"s2"],[1165,10,1058,8],[1165,13,1058,11,"input"],[1165,18,1058,16],[1165,19,1058,17,"substring"],[1165,28,1058,26],[1165,29,1058,27,"s2"],[1165,31,1058,29],[1165,33,1058,31,"peg$currPos"],[1165,44,1058,42],[1165,45,1058,43],[1166,8,1059,6,"s0"],[1166,10,1059,8],[1166,13,1059,11,"peg$f8"],[1166,19,1059,17],[1166,20,1059,18,"s2"],[1166,22,1059,20],[1166,23,1059,21],[1167,6,1060,4],[1167,7,1060,5],[1167,13,1060,11],[1168,8,1061,6,"peg$currPos"],[1168,19,1061,17],[1168,22,1061,20,"s0"],[1168,24,1061,22],[1169,8,1062,6,"s0"],[1169,10,1062,8],[1169,13,1062,11,"peg$FAILED"],[1169,23,1062,21],[1170,6,1063,4],[1171,6,1064,4,"peg$silentFails"],[1171,21,1064,19],[1171,23,1064,21],[1172,6,1065,4],[1172,10,1065,8,"s0"],[1172,12,1065,10],[1172,17,1065,15,"peg$FAILED"],[1172,27,1065,25],[1172,29,1065,27],[1173,8,1066,6,"s1"],[1173,10,1066,8],[1173,13,1066,11,"peg$FAILED"],[1173,23,1066,21],[1174,8,1067,6],[1174,12,1067,10,"peg$silentFails"],[1174,27,1067,25],[1174,32,1067,30],[1174,33,1067,31],[1174,35,1067,33],[1175,10,1067,35,"peg$fail"],[1175,18,1067,43],[1175,19,1067,44,"peg$e27"],[1175,26,1067,51],[1175,27,1067,52],[1176,8,1067,54],[1177,6,1068,4],[1178,6,1070,4],[1178,13,1070,11,"s0"],[1178,15,1070,13],[1179,4,1071,2],[1180,4,1073,2],[1180,13,1073,11,"peg$parsevariation"],[1180,31,1073,29,"peg$parsevariation"],[1180,32,1073,29],[1180,34,1073,32],[1181,6,1074,4],[1181,10,1074,8,"s0"],[1181,12,1074,10],[1181,14,1074,12,"s2"],[1181,16,1074,14],[1181,18,1074,16,"s3"],[1181,20,1074,18],[1181,22,1074,20,"s5"],[1181,24,1074,22],[1182,6,1076,4,"peg$silentFails"],[1182,21,1076,19],[1182,23,1076,21],[1183,6,1077,4,"s0"],[1183,8,1077,6],[1183,11,1077,9,"peg$currPos"],[1183,22,1077,20],[1184,6,1078,4,"peg$parse_"],[1184,16,1078,14],[1184,17,1078,15],[1184,18,1078,16],[1185,6,1079,4],[1185,10,1079,8,"input"],[1185,15,1079,13],[1185,16,1079,14,"charCodeAt"],[1185,26,1079,24],[1185,27,1079,25,"peg$currPos"],[1185,38,1079,36],[1185,39,1079,37],[1185,44,1079,42],[1185,46,1079,44],[1185,48,1079,46],[1186,8,1080,6,"s2"],[1186,10,1080,8],[1186,13,1080,11,"peg$c12"],[1186,20,1080,18],[1187,8,1081,6,"peg$currPos"],[1187,19,1081,17],[1187,21,1081,19],[1188,6,1082,4],[1188,7,1082,5],[1188,13,1082,11],[1189,8,1083,6,"s2"],[1189,10,1083,8],[1189,13,1083,11,"peg$FAILED"],[1189,23,1083,21],[1190,8,1084,6],[1190,12,1084,10,"peg$silentFails"],[1190,27,1084,25],[1190,32,1084,30],[1190,33,1084,31],[1190,35,1084,33],[1191,10,1084,35,"peg$fail"],[1191,18,1084,43],[1191,19,1084,44,"peg$e31"],[1191,26,1084,51],[1191,27,1084,52],[1192,8,1084,54],[1193,6,1085,4],[1194,6,1086,4],[1194,10,1086,8,"s2"],[1194,12,1086,10],[1194,17,1086,15,"peg$FAILED"],[1194,27,1086,25],[1194,29,1086,27],[1195,8,1087,6,"s3"],[1195,10,1087,8],[1195,13,1087,11,"peg$parseline"],[1195,26,1087,24],[1195,27,1087,25],[1195,28,1087,26],[1196,8,1088,6],[1196,12,1088,10,"s3"],[1196,14,1088,12],[1196,19,1088,17,"peg$FAILED"],[1196,29,1088,27],[1196,31,1088,29],[1197,10,1089,8,"peg$parse_"],[1197,20,1089,18],[1197,21,1089,19],[1197,22,1089,20],[1198,10,1090,8],[1198,14,1090,12,"input"],[1198,19,1090,17],[1198,20,1090,18,"charCodeAt"],[1198,30,1090,28],[1198,31,1090,29,"peg$currPos"],[1198,42,1090,40],[1198,43,1090,41],[1198,48,1090,46],[1198,50,1090,48],[1198,52,1090,50],[1199,12,1091,10,"s5"],[1199,14,1091,12],[1199,17,1091,15,"peg$c13"],[1199,24,1091,22],[1200,12,1092,10,"peg$currPos"],[1200,23,1092,21],[1200,25,1092,23],[1201,10,1093,8],[1201,11,1093,9],[1201,17,1093,15],[1202,12,1094,10,"s5"],[1202,14,1094,12],[1202,17,1094,15,"peg$FAILED"],[1202,27,1094,25],[1203,12,1095,10],[1203,16,1095,14,"peg$silentFails"],[1203,31,1095,29],[1203,36,1095,34],[1203,37,1095,35],[1203,39,1095,37],[1204,14,1095,39,"peg$fail"],[1204,22,1095,47],[1204,23,1095,48,"peg$e32"],[1204,30,1095,55],[1204,31,1095,56],[1205,12,1095,58],[1206,10,1096,8],[1207,10,1097,8],[1207,14,1097,12,"s5"],[1207,16,1097,14],[1207,21,1097,19,"peg$FAILED"],[1207,31,1097,29],[1207,33,1097,31],[1208,12,1098,10,"s0"],[1208,14,1098,12],[1208,17,1098,15,"peg$f9"],[1208,23,1098,21],[1208,24,1098,22,"s3"],[1208,26,1098,24],[1208,27,1098,25],[1209,10,1099,8],[1209,11,1099,9],[1209,17,1099,15],[1210,12,1100,10,"peg$currPos"],[1210,23,1100,21],[1210,26,1100,24,"s0"],[1210,28,1100,26],[1211,12,1101,10,"s0"],[1211,14,1101,12],[1211,17,1101,15,"peg$FAILED"],[1211,27,1101,25],[1212,10,1102,8],[1213,8,1103,6],[1213,9,1103,7],[1213,15,1103,13],[1214,10,1104,8,"peg$currPos"],[1214,21,1104,19],[1214,24,1104,22,"s0"],[1214,26,1104,24],[1215,10,1105,8,"s0"],[1215,12,1105,10],[1215,15,1105,13,"peg$FAILED"],[1215,25,1105,23],[1216,8,1106,6],[1217,6,1107,4],[1217,7,1107,5],[1217,13,1107,11],[1218,8,1108,6,"peg$currPos"],[1218,19,1108,17],[1218,22,1108,20,"s0"],[1218,24,1108,22],[1219,8,1109,6,"s0"],[1219,10,1109,8],[1219,13,1109,11,"peg$FAILED"],[1219,23,1109,21],[1220,6,1110,4],[1221,6,1111,4,"peg$silentFails"],[1221,21,1111,19],[1221,23,1111,21],[1222,6,1112,4],[1222,10,1112,8,"s0"],[1222,12,1112,10],[1222,17,1112,15,"peg$FAILED"],[1222,27,1112,25],[1222,29,1112,27],[1223,8,1113,6],[1223,12,1113,10,"peg$silentFails"],[1223,27,1113,25],[1223,32,1113,30],[1223,33,1113,31],[1223,35,1113,33],[1224,10,1113,35,"peg$fail"],[1224,18,1113,43],[1224,19,1113,44,"peg$e30"],[1224,26,1113,51],[1224,27,1113,52],[1225,8,1113,54],[1226,6,1114,4],[1227,6,1116,4],[1227,13,1116,11,"s0"],[1227,15,1116,13],[1228,4,1117,2],[1229,4,1119,2],[1229,13,1119,11,"peg$parsegameTerminationMarker"],[1229,43,1119,41,"peg$parsegameTerminationMarker"],[1229,44,1119,41],[1229,46,1119,44],[1230,6,1120,4],[1230,10,1120,8,"s0"],[1230,12,1120,10],[1230,14,1120,12,"s1"],[1230,16,1120,14],[1230,18,1120,16,"s3"],[1230,20,1120,18],[1231,6,1122,4,"peg$silentFails"],[1231,21,1122,19],[1231,23,1122,21],[1232,6,1123,4,"s0"],[1232,8,1123,6],[1232,11,1123,9,"peg$currPos"],[1232,22,1123,20],[1233,6,1124,4],[1233,10,1124,8,"input"],[1233,15,1124,13],[1233,16,1124,14,"substr"],[1233,22,1124,20],[1233,23,1124,21,"peg$currPos"],[1233,34,1124,32],[1233,36,1124,34],[1233,37,1124,35],[1233,38,1124,36],[1233,43,1124,41,"peg$c14"],[1233,50,1124,48],[1233,52,1124,50],[1234,8,1125,6,"s1"],[1234,10,1125,8],[1234,13,1125,11,"peg$c14"],[1234,20,1125,18],[1235,8,1126,6,"peg$currPos"],[1235,19,1126,17],[1235,23,1126,21],[1235,24,1126,22],[1236,6,1127,4],[1236,7,1127,5],[1236,13,1127,11],[1237,8,1128,6,"s1"],[1237,10,1128,8],[1237,13,1128,11,"peg$FAILED"],[1237,23,1128,21],[1238,8,1129,6],[1238,12,1129,10,"peg$silentFails"],[1238,27,1129,25],[1238,32,1129,30],[1238,33,1129,31],[1238,35,1129,33],[1239,10,1129,35,"peg$fail"],[1239,18,1129,43],[1239,19,1129,44,"peg$e34"],[1239,26,1129,51],[1239,27,1129,52],[1240,8,1129,54],[1241,6,1130,4],[1242,6,1131,4],[1242,10,1131,8,"s1"],[1242,12,1131,10],[1242,17,1131,15,"peg$FAILED"],[1242,27,1131,25],[1242,29,1131,27],[1243,8,1132,6],[1243,12,1132,10,"input"],[1243,17,1132,15],[1243,18,1132,16,"substr"],[1243,24,1132,22],[1243,25,1132,23,"peg$currPos"],[1243,36,1132,34],[1243,38,1132,36],[1243,39,1132,37],[1243,40,1132,38],[1243,45,1132,43,"peg$c15"],[1243,52,1132,50],[1243,54,1132,52],[1244,10,1133,8,"s1"],[1244,12,1133,10],[1244,15,1133,13,"peg$c15"],[1244,22,1133,20],[1245,10,1134,8,"peg$currPos"],[1245,21,1134,19],[1245,25,1134,23],[1245,26,1134,24],[1246,8,1135,6],[1246,9,1135,7],[1246,15,1135,13],[1247,10,1136,8,"s1"],[1247,12,1136,10],[1247,15,1136,13,"peg$FAILED"],[1247,25,1136,23],[1248,10,1137,8],[1248,14,1137,12,"peg$silentFails"],[1248,29,1137,27],[1248,34,1137,32],[1248,35,1137,33],[1248,37,1137,35],[1249,12,1137,37,"peg$fail"],[1249,20,1137,45],[1249,21,1137,46,"peg$e35"],[1249,28,1137,53],[1249,29,1137,54],[1250,10,1137,56],[1251,8,1138,6],[1252,8,1139,6],[1252,12,1139,10,"s1"],[1252,14,1139,12],[1252,19,1139,17,"peg$FAILED"],[1252,29,1139,27],[1252,31,1139,29],[1253,10,1140,8],[1253,14,1140,12,"input"],[1253,19,1140,17],[1253,20,1140,18,"substr"],[1253,26,1140,24],[1253,27,1140,25,"peg$currPos"],[1253,38,1140,36],[1253,40,1140,38],[1253,41,1140,39],[1253,42,1140,40],[1253,47,1140,45,"peg$c16"],[1253,54,1140,52],[1253,56,1140,54],[1254,12,1141,10,"s1"],[1254,14,1141,12],[1254,17,1141,15,"peg$c16"],[1254,24,1141,22],[1255,12,1142,10,"peg$currPos"],[1255,23,1142,21],[1255,27,1142,25],[1255,28,1142,26],[1256,10,1143,8],[1256,11,1143,9],[1256,17,1143,15],[1257,12,1144,10,"s1"],[1257,14,1144,12],[1257,17,1144,15,"peg$FAILED"],[1257,27,1144,25],[1258,12,1145,10],[1258,16,1145,14,"peg$silentFails"],[1258,31,1145,29],[1258,36,1145,34],[1258,37,1145,35],[1258,39,1145,37],[1259,14,1145,39,"peg$fail"],[1259,22,1145,47],[1259,23,1145,48,"peg$e36"],[1259,30,1145,55],[1259,31,1145,56],[1260,12,1145,58],[1261,10,1146,8],[1262,10,1147,8],[1262,14,1147,12,"s1"],[1262,16,1147,14],[1262,21,1147,19,"peg$FAILED"],[1262,31,1147,29],[1262,33,1147,31],[1263,12,1148,10],[1263,16,1148,14,"input"],[1263,21,1148,19],[1263,22,1148,20,"charCodeAt"],[1263,32,1148,30],[1263,33,1148,31,"peg$currPos"],[1263,44,1148,42],[1263,45,1148,43],[1263,50,1148,48],[1263,52,1148,50],[1263,54,1148,52],[1264,14,1149,12,"s1"],[1264,16,1149,14],[1264,19,1149,17,"peg$c17"],[1264,26,1149,24],[1265,14,1150,12,"peg$currPos"],[1265,25,1150,23],[1265,27,1150,25],[1266,12,1151,10],[1266,13,1151,11],[1266,19,1151,17],[1267,14,1152,12,"s1"],[1267,16,1152,14],[1267,19,1152,17,"peg$FAILED"],[1267,29,1152,27],[1268,14,1153,12],[1268,18,1153,16,"peg$silentFails"],[1268,33,1153,31],[1268,38,1153,36],[1268,39,1153,37],[1268,41,1153,39],[1269,16,1153,41,"peg$fail"],[1269,24,1153,49],[1269,25,1153,50,"peg$e37"],[1269,32,1153,57],[1269,33,1153,58],[1270,14,1153,60],[1271,12,1154,10],[1272,10,1155,8],[1273,8,1156,6],[1274,6,1157,4],[1275,6,1158,4],[1275,10,1158,8,"s1"],[1275,12,1158,10],[1275,17,1158,15,"peg$FAILED"],[1275,27,1158,25],[1275,29,1158,27],[1276,8,1159,6,"peg$parse_"],[1276,18,1159,16],[1276,19,1159,17],[1276,20,1159,18],[1277,8,1160,6,"s3"],[1277,10,1160,8],[1277,13,1160,11,"peg$parsecomment"],[1277,29,1160,27],[1277,30,1160,28],[1277,31,1160,29],[1278,8,1161,6],[1278,12,1161,10,"s3"],[1278,14,1161,12],[1278,19,1161,17,"peg$FAILED"],[1278,29,1161,27],[1278,31,1161,29],[1279,10,1162,8,"s3"],[1279,12,1162,10],[1279,15,1162,13],[1279,19,1162,17],[1280,8,1163,6],[1281,8,1164,6,"s0"],[1281,10,1164,8],[1281,13,1164,11,"peg$f10"],[1281,20,1164,18],[1281,21,1164,19,"s1"],[1281,23,1164,21],[1281,25,1164,23,"s3"],[1281,27,1164,25],[1281,28,1164,26],[1282,6,1165,4],[1282,7,1165,5],[1282,13,1165,11],[1283,8,1166,6,"peg$currPos"],[1283,19,1166,17],[1283,22,1166,20,"s0"],[1283,24,1166,22],[1284,8,1167,6,"s0"],[1284,10,1167,8],[1284,13,1167,11,"peg$FAILED"],[1284,23,1167,21],[1285,6,1168,4],[1286,6,1169,4,"peg$silentFails"],[1286,21,1169,19],[1286,23,1169,21],[1287,6,1170,4],[1287,10,1170,8,"s0"],[1287,12,1170,10],[1287,17,1170,15,"peg$FAILED"],[1287,27,1170,25],[1287,29,1170,27],[1288,8,1171,6,"s1"],[1288,10,1171,8],[1288,13,1171,11,"peg$FAILED"],[1288,23,1171,21],[1289,8,1172,6],[1289,12,1172,10,"peg$silentFails"],[1289,27,1172,25],[1289,32,1172,30],[1289,33,1172,31],[1289,35,1172,33],[1290,10,1172,35,"peg$fail"],[1290,18,1172,43],[1290,19,1172,44,"peg$e33"],[1290,26,1172,51],[1290,27,1172,52],[1291,8,1172,54],[1292,6,1173,4],[1293,6,1175,4],[1293,13,1175,11,"s0"],[1293,15,1175,13],[1294,4,1176,2],[1295,4,1178,2],[1295,13,1178,11,"peg$parse_"],[1295,23,1178,21,"peg$parse_"],[1295,24,1178,21],[1295,26,1178,24],[1296,6,1179,4],[1296,10,1179,8,"s0"],[1296,12,1179,10],[1296,14,1179,12,"s1"],[1296,16,1179,14],[1297,6,1181,4,"peg$silentFails"],[1297,21,1181,19],[1297,23,1181,21],[1298,6,1182,4,"s0"],[1298,8,1182,6],[1298,11,1182,9],[1298,13,1182,11],[1299,6,1183,4,"s1"],[1299,8,1183,6],[1299,11,1183,9,"input"],[1299,16,1183,14],[1299,17,1183,15,"charAt"],[1299,23,1183,21],[1299,24,1183,22,"peg$currPos"],[1299,35,1183,33],[1299,36,1183,34],[1300,6,1184,4],[1300,10,1184,8,"peg$r9"],[1300,16,1184,14],[1300,17,1184,15,"test"],[1300,21,1184,19],[1300,22,1184,20,"s1"],[1300,24,1184,22],[1300,25,1184,23],[1300,27,1184,25],[1301,8,1185,6,"peg$currPos"],[1301,19,1185,17],[1301,21,1185,19],[1302,6,1186,4],[1302,7,1186,5],[1302,13,1186,11],[1303,8,1187,6,"s1"],[1303,10,1187,8],[1303,13,1187,11,"peg$FAILED"],[1303,23,1187,21],[1304,8,1188,6],[1304,12,1188,10,"peg$silentFails"],[1304,27,1188,25],[1304,32,1188,30],[1304,33,1188,31],[1304,35,1188,33],[1305,10,1188,35,"peg$fail"],[1305,18,1188,43],[1305,19,1188,44,"peg$e39"],[1305,26,1188,51],[1305,27,1188,52],[1306,8,1188,54],[1307,6,1189,4],[1308,6,1190,4],[1308,13,1190,11,"s1"],[1308,15,1190,13],[1308,20,1190,18,"peg$FAILED"],[1308,30,1190,28],[1308,32,1190,30],[1309,8,1191,6,"s0"],[1309,10,1191,8],[1309,11,1191,9,"push"],[1309,15,1191,13],[1309,16,1191,14,"s1"],[1309,18,1191,16],[1309,19,1191,17],[1310,8,1192,6,"s1"],[1310,10,1192,8],[1310,13,1192,11,"input"],[1310,18,1192,16],[1310,19,1192,17,"charAt"],[1310,25,1192,23],[1310,26,1192,24,"peg$currPos"],[1310,37,1192,35],[1310,38,1192,36],[1311,8,1193,6],[1311,12,1193,10,"peg$r9"],[1311,18,1193,16],[1311,19,1193,17,"test"],[1311,23,1193,21],[1311,24,1193,22,"s1"],[1311,26,1193,24],[1311,27,1193,25],[1311,29,1193,27],[1312,10,1194,8,"peg$currPos"],[1312,21,1194,19],[1312,23,1194,21],[1313,8,1195,6],[1313,9,1195,7],[1313,15,1195,13],[1314,10,1196,8,"s1"],[1314,12,1196,10],[1314,15,1196,13,"peg$FAILED"],[1314,25,1196,23],[1315,10,1197,8],[1315,14,1197,12,"peg$silentFails"],[1315,29,1197,27],[1315,34,1197,32],[1315,35,1197,33],[1315,37,1197,35],[1316,12,1197,37,"peg$fail"],[1316,20,1197,45],[1316,21,1197,46,"peg$e39"],[1316,28,1197,53],[1316,29,1197,54],[1317,10,1197,56],[1318,8,1198,6],[1319,6,1199,4],[1320,6,1200,4,"peg$silentFails"],[1320,21,1200,19],[1320,23,1200,21],[1321,6,1201,4,"s1"],[1321,8,1201,6],[1321,11,1201,9,"peg$FAILED"],[1321,21,1201,19],[1322,6,1202,4],[1322,10,1202,8,"peg$silentFails"],[1322,25,1202,23],[1322,30,1202,28],[1322,31,1202,29],[1322,33,1202,31],[1323,8,1202,33,"peg$fail"],[1323,16,1202,41],[1323,17,1202,42,"peg$e38"],[1323,24,1202,49],[1323,25,1202,50],[1324,6,1202,52],[1325,6,1204,4],[1325,13,1204,11,"s0"],[1325,15,1204,13],[1326,4,1205,2],[1327,4,1207,2,"peg$result"],[1327,14,1207,12],[1327,17,1207,15,"peg$startRuleFunction"],[1327,38,1207,36],[1327,39,1207,37],[1327,40,1207,38],[1328,4,1209,2],[1328,8,1209,6,"options"],[1328,15,1209,13],[1328,16,1209,14,"peg$library"],[1328,27,1209,25],[1328,29,1209,27],[1329,6,1210,4],[1329,13,1210,11],[1329,31,1210,31],[1330,8,1211,6,"peg$result"],[1330,18,1211,16],[1331,8,1212,6,"peg$currPos"],[1331,19,1212,17],[1332,8,1213,6,"peg$FAILED"],[1332,18,1213,16],[1333,8,1214,6,"peg$maxFailExpected"],[1333,27,1214,25],[1334,8,1215,6,"peg$maxFailPos"],[1335,6,1216,4],[1335,7,1216,5],[1336,4,1217,2],[1337,4,1218,2],[1337,8,1218,6,"peg$result"],[1337,18,1218,16],[1337,23,1218,21,"peg$FAILED"],[1337,33,1218,31],[1337,37,1218,35,"peg$currPos"],[1337,48,1218,46],[1337,53,1218,51,"input"],[1337,58,1218,56],[1337,59,1218,57,"length"],[1337,65,1218,63],[1337,67,1218,65],[1338,6,1219,4],[1338,13,1219,11,"peg$result"],[1338,23,1219,21],[1339,4,1220,2],[1339,5,1220,3],[1339,11,1220,9],[1340,6,1221,4],[1340,10,1221,8,"peg$result"],[1340,20,1221,18],[1340,25,1221,23,"peg$FAILED"],[1340,35,1221,33],[1340,39,1221,37,"peg$currPos"],[1340,50,1221,48],[1340,53,1221,51,"input"],[1340,58,1221,56],[1340,59,1221,57,"length"],[1340,65,1221,63],[1340,67,1221,65],[1341,8,1222,6,"peg$fail"],[1341,16,1222,14],[1341,17,1222,15,"peg$endExpectation"],[1341,35,1222,33],[1341,36,1222,34],[1341,37,1222,35],[1341,38,1222,36],[1342,6,1223,4],[1343,6,1225,4],[1343,12,1225,10,"peg$buildStructuredError"],[1343,36,1225,34],[1343,37,1226,6,"peg$maxFailExpected"],[1343,56,1226,25],[1343,58,1227,6,"peg$maxFailPos"],[1343,72,1227,20],[1343,75,1227,23,"input"],[1343,80,1227,28],[1343,81,1227,29,"length"],[1343,87,1227,35],[1343,90,1227,38,"input"],[1343,95,1227,43],[1343,96,1227,44,"charAt"],[1343,102,1227,50],[1343,103,1227,51,"peg$maxFailPos"],[1343,117,1227,65],[1343,118,1227,66],[1343,121,1227,69],[1343,125,1227,73],[1343,127,1228,6,"peg$maxFailPos"],[1343,141,1228,20],[1343,144,1228,23,"input"],[1343,149,1228,28],[1343,150,1228,29,"length"],[1343,156,1228,35],[1343,159,1229,10,"peg$computeLocation"],[1343,178,1229,29],[1343,179,1229,30,"peg$maxFailPos"],[1343,193,1229,44],[1343,195,1229,46,"peg$maxFailPos"],[1343,209,1229,60],[1343,212,1229,63],[1343,213,1229,64],[1343,214,1229,65],[1343,217,1230,10,"peg$computeLocation"],[1343,236,1230,29],[1343,237,1230,30,"peg$maxFailPos"],[1343,251,1230,44],[1343,253,1230,46,"peg$maxFailPos"],[1343,267,1230,60],[1343,268,1231,4],[1343,269,1231,5],[1344,4,1232,2],[1345,2,1233,0],[1347,2,1235,0],[1348,0,1236,0],[1349,0,1237,0],[1350,0,1238,0],[1351,0,1239,0],[1352,0,1240,0],[1353,0,1241,0],[1354,0,1242,0],[1355,0,1243,0],[1356,0,1244,0],[1357,0,1245,0],[1358,0,1246,0],[1359,0,1247,0],[1360,0,1248,0],[1361,0,1249,0],[1362,0,1250,0],[1363,0,1251,0],[1364,0,1252,0],[1365,0,1253,0],[1366,0,1254,0],[1367,0,1255,0],[1368,0,1256,0],[1369,0,1257,0],[1370,0,1258,0],[1371,0,1259,0],[1372,0,1260,0],[1373,2,1261,0],[1373,8,1261,6,"MASK64"],[1373,14,1261,12],[1373,17,1261,15],[1373,36,1261,34],[1374,2,1262,0],[1374,11,1262,9,"rotl"],[1374,15,1262,13,"rotl"],[1374,16,1262,14,"x"],[1374,17,1262,15],[1374,19,1262,17,"k"],[1374,20,1262,18],[1374,22,1262,20],[1375,4,1263,4],[1375,11,1263,11],[1375,12,1263,13,"x"],[1375,13,1263,14],[1375,17,1263,18,"k"],[1375,18,1263,19],[1375,21,1263,24,"x"],[1375,22,1263,25],[1375,26,1263,30],[1375,29,1263,33],[1375,32,1263,36,"k"],[1375,33,1263,39],[1375,37,1263,43],[1375,56,1263,62],[1376,2,1264,0],[1377,2,1265,0],[1377,11,1265,9,"wrappingMul"],[1377,22,1265,20,"wrappingMul"],[1377,23,1265,21,"x"],[1377,24,1265,22],[1377,26,1265,24,"y"],[1377,27,1265,25],[1377,29,1265,27],[1378,4,1266,4],[1378,11,1266,12,"x"],[1378,12,1266,13],[1378,15,1266,16,"y"],[1378,16,1266,17],[1378,19,1266,21,"MASK64"],[1378,25,1266,27],[1379,2,1267,0],[1380,2,1268,0],[1381,2,1269,0],[1381,11,1269,9,"xoroshiro128"],[1381,23,1269,21,"xoroshiro128"],[1381,24,1269,22,"state"],[1381,29,1269,27],[1381,31,1269,29],[1382,4,1270,4],[1382,11,1270,11],[1382,23,1270,23],[1383,6,1271,8],[1383,10,1271,12,"s0"],[1383,12,1271,14],[1383,15,1271,17,"BigInt"],[1383,21,1271,23],[1383,22,1271,24,"state"],[1383,27,1271,29],[1383,30,1271,32,"MASK64"],[1383,36,1271,38],[1383,37,1271,39],[1384,6,1272,8],[1384,10,1272,12,"s1"],[1384,12,1272,14],[1384,15,1272,17,"BigInt"],[1384,21,1272,23],[1384,22,1272,25,"state"],[1384,27,1272,30],[1384,31,1272,34],[1384,34,1272,37],[1384,37,1272,41,"MASK64"],[1384,43,1272,47],[1384,44,1272,48],[1385,6,1273,8],[1385,12,1273,14,"result"],[1385,18,1273,20],[1385,21,1273,23,"wrappingMul"],[1385,32,1273,34],[1385,33,1273,35,"rotl"],[1385,37,1273,39],[1385,38,1273,40,"wrappingMul"],[1385,49,1273,51],[1385,50,1273,52,"s0"],[1385,52,1273,54],[1385,54,1273,56],[1385,56,1273,58],[1385,57,1273,59],[1385,59,1273,61],[1385,61,1273,63],[1385,62,1273,64],[1385,64,1273,66],[1385,66,1273,68],[1385,67,1273,69],[1386,6,1274,8,"s1"],[1386,8,1274,10],[1386,12,1274,14,"s0"],[1386,14,1274,16],[1387,6,1275,8,"s0"],[1387,8,1275,10],[1387,11,1275,13],[1387,12,1275,14,"rotl"],[1387,16,1275,18],[1387,17,1275,19,"s0"],[1387,19,1275,21],[1387,21,1275,23],[1387,24,1275,26],[1387,25,1275,27],[1387,28,1275,30,"s1"],[1387,30,1275,32],[1387,33,1275,36,"s1"],[1387,35,1275,38],[1387,39,1275,42],[1387,42,1275,46],[1387,46,1275,50,"MASK64"],[1387,52,1275,56],[1388,6,1276,8,"s1"],[1388,8,1276,10],[1388,11,1276,13,"rotl"],[1388,15,1276,17],[1388,16,1276,18,"s1"],[1388,18,1276,20],[1388,20,1276,22],[1388,23,1276,25],[1388,24,1276,26],[1389,6,1277,8,"state"],[1389,11,1277,13],[1389,14,1277,17,"s1"],[1389,16,1277,19],[1389,20,1277,23],[1389,23,1277,26],[1389,26,1277,30,"s0"],[1389,28,1277,32],[1390,6,1278,8],[1390,13,1278,15,"result"],[1390,19,1278,21],[1391,4,1279,4],[1391,5,1279,5],[1392,2,1280,0],[1393,2,1281,0],[1393,8,1281,6,"rand"],[1393,12,1281,10],[1393,15,1281,13,"xoroshiro128"],[1393,27,1281,25],[1393,28,1281,26],[1393,63,1281,61],[1393,64,1281,62],[1394,2,1282,0],[1394,8,1282,6,"PIECE_KEYS"],[1394,18,1282,16],[1394,21,1282,19,"Array"],[1394,26,1282,24],[1394,27,1282,25,"from"],[1394,31,1282,29],[1394,32,1282,30],[1395,4,1282,32,"length"],[1395,10,1282,38],[1395,12,1282,40],[1396,2,1282,42],[1396,3,1282,43],[1396,5,1282,45],[1396,11,1282,51,"Array"],[1396,16,1282,56],[1396,17,1282,57,"from"],[1396,21,1282,61],[1396,22,1282,62],[1397,4,1282,64,"length"],[1397,10,1282,70],[1397,12,1282,72],[1398,2,1282,74],[1398,3,1282,75],[1398,5,1282,77],[1398,11,1282,83,"Array"],[1398,16,1282,88],[1398,17,1282,89,"from"],[1398,21,1282,93],[1398,22,1282,94],[1399,4,1282,96,"length"],[1399,10,1282,102],[1399,12,1282,104],[1400,2,1282,108],[1400,3,1282,109],[1400,5,1282,111],[1400,11,1282,117,"rand"],[1400,15,1282,121],[1400,16,1282,122],[1400,17,1282,123],[1400,18,1282,124],[1400,19,1282,125],[1400,20,1282,126],[1401,2,1283,0],[1401,8,1283,6,"EP_KEYS"],[1401,15,1283,13],[1401,18,1283,16,"Array"],[1401,23,1283,21],[1401,24,1283,22,"from"],[1401,28,1283,26],[1401,29,1283,27],[1402,4,1283,29,"length"],[1402,10,1283,35],[1402,12,1283,37],[1403,2,1283,39],[1403,3,1283,40],[1403,5,1283,42],[1403,11,1283,48,"rand"],[1403,15,1283,52],[1403,16,1283,53],[1403,17,1283,54],[1403,18,1283,55],[1404,2,1284,0],[1404,8,1284,6,"CASTLING_KEYS"],[1404,21,1284,19],[1404,24,1284,22,"Array"],[1404,29,1284,27],[1404,30,1284,28,"from"],[1404,34,1284,32],[1404,35,1284,33],[1405,4,1284,35,"length"],[1405,10,1284,41],[1405,12,1284,43],[1406,2,1284,46],[1406,3,1284,47],[1406,5,1284,49],[1406,11,1284,55,"rand"],[1406,15,1284,59],[1406,16,1284,60],[1406,17,1284,61],[1406,18,1284,62],[1407,2,1285,0],[1407,8,1285,6,"SIDE_KEY"],[1407,16,1285,14],[1407,19,1285,17,"rand"],[1407,23,1285,21],[1407,24,1285,22],[1407,25,1285,23],[1408,2,1286,0],[1408,8,1286,6,"WHITE"],[1408,13,1286,11],[1408,16,1286,14],[1408,19,1286,17],[1409,2,1287,0],[1409,8,1287,6,"BLACK"],[1409,13,1287,11],[1409,16,1287,14],[1409,19,1287,17],[1410,2,1288,0],[1410,8,1288,6,"PAWN"],[1410,12,1288,10],[1410,15,1288,13],[1410,18,1288,16],[1411,2,1289,0],[1411,8,1289,6,"KNIGHT"],[1411,14,1289,12],[1411,17,1289,15],[1411,20,1289,18],[1412,2,1290,0],[1412,8,1290,6,"BISHOP"],[1412,14,1290,12],[1412,17,1290,15],[1412,20,1290,18],[1413,2,1291,0],[1413,8,1291,6,"ROOK"],[1413,12,1291,10],[1413,15,1291,13],[1413,18,1291,16],[1414,2,1292,0],[1414,8,1292,6,"QUEEN"],[1414,13,1292,11],[1414,16,1292,14],[1414,19,1292,17],[1415,2,1293,0],[1415,8,1293,6,"KING"],[1415,12,1293,10],[1415,15,1293,13],[1415,18,1293,16],[1416,2,1294,0],[1416,8,1294,6,"DEFAULT_POSITION"],[1416,24,1294,22],[1416,27,1294,25],[1416,85,1294,83],[1417,2,1295,0],[1417,8,1295,6,"Move"],[1417,12,1295,10],[1417,13,1295,11],[1418,4,1302,4],[1419,0,1303,0],[1420,0,1304,0],[1421,0,1305,0],[1422,0,1306,0],[1423,0,1307,0],[1425,4,1313,4,"constructor"],[1425,15,1313,15,"constructor"],[1425,16,1313,16,"chess"],[1425,21,1313,21],[1425,23,1313,23,"internal"],[1425,31,1313,31],[1425,33,1313,33],[1426,6,1314,8],[1426,12,1314,14],[1427,8,1314,16,"color"],[1427,13,1314,21],[1428,8,1314,23,"piece"],[1428,13,1314,28],[1429,8,1314,30,"from"],[1429,12,1314,34],[1430,8,1314,36,"to"],[1430,10,1314,38],[1431,8,1314,40,"flags"],[1431,13,1314,45],[1432,8,1314,47,"captured"],[1432,16,1314,55],[1433,8,1314,57,"promotion"],[1434,6,1314,67],[1434,7,1314,68],[1434,10,1314,71,"internal"],[1434,18,1314,79],[1435,6,1315,8],[1435,12,1315,14,"fromAlgebraic"],[1435,25,1315,27],[1435,28,1315,30,"algebraic"],[1435,37,1315,39],[1435,38,1315,40,"from"],[1435,42,1315,44],[1435,43,1315,45],[1436,6,1316,8],[1436,12,1316,14,"toAlgebraic"],[1436,23,1316,25],[1436,26,1316,28,"algebraic"],[1436,35,1316,37],[1436,36,1316,38,"to"],[1436,38,1316,40],[1436,39,1316,41],[1437,6,1317,8],[1437,10,1317,12],[1437,11,1317,13,"color"],[1437,16,1317,18],[1437,19,1317,21,"color"],[1437,24,1317,26],[1438,6,1318,8],[1438,10,1318,12],[1438,11,1318,13,"piece"],[1438,16,1318,18],[1438,19,1318,21,"piece"],[1438,24,1318,26],[1439,6,1319,8],[1439,10,1319,12],[1439,11,1319,13,"from"],[1439,15,1319,17],[1439,18,1319,20,"fromAlgebraic"],[1439,31,1319,33],[1440,6,1320,8],[1440,10,1320,12],[1440,11,1320,13,"to"],[1440,13,1320,15],[1440,16,1320,18,"toAlgebraic"],[1440,27,1320,29],[1441,6,1321,8],[1442,0,1322,0],[1443,0,1323,0],[1444,0,1324,0],[1445,0,1325,0],[1446,6,1326,8],[1446,10,1326,12],[1446,11,1326,13,"san"],[1446,14,1326,16],[1446,17,1326,19,"chess"],[1446,22,1326,24],[1446,23,1326,25],[1446,35,1326,37],[1446,36,1326,38],[1446,37,1326,39,"internal"],[1446,45,1326,47],[1446,47,1326,49,"chess"],[1446,52,1326,54],[1446,53,1326,55],[1446,61,1326,63],[1446,62,1326,64],[1446,63,1326,65],[1447,8,1326,67,"legal"],[1447,13,1326,72],[1447,15,1326,74],[1448,6,1326,79],[1448,7,1326,80],[1448,8,1326,81],[1448,9,1326,82],[1449,6,1327,8],[1449,10,1327,12],[1449,11,1327,13,"lan"],[1449,14,1327,16],[1449,17,1327,19,"fromAlgebraic"],[1449,30,1327,32],[1449,33,1327,35,"toAlgebraic"],[1449,44,1327,46],[1450,6,1328,8],[1450,10,1328,12],[1450,11,1328,13,"before"],[1450,17,1328,19],[1450,20,1328,22,"chess"],[1450,25,1328,27],[1450,26,1328,28,"fen"],[1450,29,1328,31],[1450,30,1328,32],[1450,31,1328,33],[1451,6,1329,8],[1452,6,1330,8,"chess"],[1452,11,1330,13],[1452,12,1330,14],[1452,23,1330,25],[1452,24,1330,26],[1452,25,1330,27,"internal"],[1452,33,1330,35],[1452,34,1330,36],[1453,6,1331,8],[1453,10,1331,12],[1453,11,1331,13,"after"],[1453,16,1331,18],[1453,19,1331,21,"chess"],[1453,24,1331,26],[1453,25,1331,27,"fen"],[1453,28,1331,30],[1453,29,1331,31],[1453,30,1331,32],[1454,6,1332,8,"chess"],[1454,11,1332,13],[1454,12,1332,14],[1454,23,1332,25],[1454,24,1332,26],[1454,25,1332,27],[1454,26,1332,28],[1455,6,1333,8],[1456,6,1334,8],[1456,10,1334,12],[1456,11,1334,13,"flags"],[1456,16,1334,18],[1456,19,1334,21],[1456,21,1334,23],[1457,6,1335,8],[1457,11,1335,13],[1457,17,1335,19,"flag"],[1457,21,1335,23],[1457,25,1335,27,"BITS"],[1457,29,1335,31],[1457,31,1335,33],[1458,8,1336,12],[1458,12,1336,16,"BITS"],[1458,16,1336,20],[1458,17,1336,21,"flag"],[1458,21,1336,25],[1458,22,1336,26],[1458,25,1336,29,"flags"],[1458,30,1336,34],[1458,32,1336,36],[1459,10,1337,16],[1459,14,1337,20],[1459,15,1337,21,"flags"],[1459,20,1337,26],[1459,24,1337,30,"FLAGS"],[1459,29,1337,35],[1459,30,1337,36,"flag"],[1459,34,1337,40],[1459,35,1337,41],[1460,8,1338,12],[1461,6,1339,8],[1462,6,1340,8],[1462,10,1340,12,"captured"],[1462,18,1340,20],[1462,20,1340,22],[1463,8,1341,12],[1463,12,1341,16],[1463,13,1341,17,"captured"],[1463,21,1341,25],[1463,24,1341,28,"captured"],[1463,32,1341,36],[1464,6,1342,8],[1465,6,1343,8],[1465,10,1343,12,"promotion"],[1465,19,1343,21],[1465,21,1343,23],[1466,8,1344,12],[1466,12,1344,16],[1466,13,1344,17,"promotion"],[1466,22,1344,26],[1466,25,1344,29,"promotion"],[1466,34,1344,38],[1467,8,1345,12],[1467,12,1345,16],[1467,13,1345,17,"lan"],[1467,16,1345,20],[1467,20,1345,24,"promotion"],[1467,29,1345,33],[1468,6,1346,8],[1469,4,1347,4],[1470,4,1348,4,"isCapture"],[1470,13,1348,13,"isCapture"],[1470,14,1348,13],[1470,16,1348,16],[1471,6,1349,8],[1471,13,1349,15],[1471,17,1349,19],[1471,18,1349,20,"flags"],[1471,23,1349,25],[1471,24,1349,26,"indexOf"],[1471,31,1349,33],[1471,32,1349,34,"FLAGS"],[1471,37,1349,39],[1471,38,1349,40],[1471,47,1349,49],[1471,48,1349,50],[1471,49,1349,51],[1471,52,1349,54],[1471,53,1349,55],[1471,54,1349,56],[1472,4,1350,4],[1473,4,1351,4,"isPromotion"],[1473,15,1351,15,"isPromotion"],[1473,16,1351,15],[1473,18,1351,18],[1474,6,1352,8],[1474,13,1352,15],[1474,17,1352,19],[1474,18,1352,20,"flags"],[1474,23,1352,25],[1474,24,1352,26,"indexOf"],[1474,31,1352,33],[1474,32,1352,34,"FLAGS"],[1474,37,1352,39],[1474,38,1352,40],[1474,49,1352,51],[1474,50,1352,52],[1474,51,1352,53],[1474,54,1352,56],[1474,55,1352,57],[1474,56,1352,58],[1475,4,1353,4],[1476,4,1354,4,"isEnPassant"],[1476,15,1354,15,"isEnPassant"],[1476,16,1354,15],[1476,18,1354,18],[1477,6,1355,8],[1477,13,1355,15],[1477,17,1355,19],[1477,18,1355,20,"flags"],[1477,23,1355,25],[1477,24,1355,26,"indexOf"],[1477,31,1355,33],[1477,32,1355,34,"FLAGS"],[1477,37,1355,39],[1477,38,1355,40],[1477,50,1355,52],[1477,51,1355,53],[1477,52,1355,54],[1477,55,1355,57],[1477,56,1355,58],[1477,57,1355,59],[1478,4,1356,4],[1479,4,1357,4,"isKingsideCastle"],[1479,20,1357,20,"isKingsideCastle"],[1479,21,1357,20],[1479,23,1357,23],[1480,6,1358,8],[1480,13,1358,15],[1480,17,1358,19],[1480,18,1358,20,"flags"],[1480,23,1358,25],[1480,24,1358,26,"indexOf"],[1480,31,1358,33],[1480,32,1358,34,"FLAGS"],[1480,37,1358,39],[1480,38,1358,40],[1480,52,1358,54],[1480,53,1358,55],[1480,54,1358,56],[1480,57,1358,59],[1480,58,1358,60],[1480,59,1358,61],[1481,4,1359,4],[1482,4,1360,4,"isQueensideCastle"],[1482,21,1360,21,"isQueensideCastle"],[1482,22,1360,21],[1482,24,1360,24],[1483,6,1361,8],[1483,13,1361,15],[1483,17,1361,19],[1483,18,1361,20,"flags"],[1483,23,1361,25],[1483,24,1361,26,"indexOf"],[1483,31,1361,33],[1483,32,1361,34,"FLAGS"],[1483,37,1361,39],[1483,38,1361,40],[1483,52,1361,54],[1483,53,1361,55],[1483,54,1361,56],[1483,57,1361,59],[1483,58,1361,60],[1483,59,1361,61],[1484,4,1362,4],[1485,4,1363,4,"isBigPawn"],[1485,13,1363,13,"isBigPawn"],[1485,14,1363,13],[1485,16,1363,16],[1486,6,1364,8],[1486,13,1364,15],[1486,17,1364,19],[1486,18,1364,20,"flags"],[1486,23,1364,25],[1486,24,1364,26,"indexOf"],[1486,31,1364,33],[1486,32,1364,34,"FLAGS"],[1486,37,1364,39],[1486,38,1364,40],[1486,48,1364,50],[1486,49,1364,51],[1486,50,1364,52],[1486,53,1364,55],[1486,54,1364,56],[1486,55,1364,57],[1487,4,1365,4],[1488,2,1366,0],[1489,2,1367,0],[1489,8,1367,6,"EMPTY"],[1489,13,1367,11],[1489,16,1367,14],[1489,17,1367,15],[1489,18,1367,16],[1490,2,1368,0],[1490,8,1368,6,"FLAGS"],[1490,13,1368,11],[1490,16,1368,14],[1491,4,1369,4,"NORMAL"],[1491,10,1369,10],[1491,12,1369,12],[1491,15,1369,15],[1492,4,1370,4,"CAPTURE"],[1492,11,1370,11],[1492,13,1370,13],[1492,16,1370,16],[1493,4,1371,4,"BIG_PAWN"],[1493,12,1371,12],[1493,14,1371,14],[1493,17,1371,17],[1494,4,1372,4,"EP_CAPTURE"],[1494,14,1372,14],[1494,16,1372,16],[1494,19,1372,19],[1495,4,1373,4,"PROMOTION"],[1495,13,1373,13],[1495,15,1373,15],[1495,18,1373,18],[1496,4,1374,4,"KSIDE_CASTLE"],[1496,16,1374,16],[1496,18,1374,18],[1496,21,1374,21],[1497,4,1375,4,"QSIDE_CASTLE"],[1497,16,1375,16],[1497,18,1375,18],[1497,21,1375,21],[1498,4,1376,4,"NULL_MOVE"],[1498,13,1376,13],[1498,15,1376,15],[1499,2,1377,0],[1499,3,1377,1],[1500,2,1378,0],[1501,2,1379,0],[1501,8,1379,6,"SQUARES"],[1501,15,1379,13],[1501,18,1379,16],[1501,19,1380,4],[1501,23,1380,8],[1501,25,1380,10],[1501,29,1380,14],[1501,31,1380,16],[1501,35,1380,20],[1501,37,1380,22],[1501,41,1380,26],[1501,43,1380,28],[1501,47,1380,32],[1501,49,1380,34],[1501,53,1380,38],[1501,55,1380,40],[1501,59,1380,44],[1501,61,1380,46],[1501,65,1380,50],[1501,67,1381,4],[1501,71,1381,8],[1501,73,1381,10],[1501,77,1381,14],[1501,79,1381,16],[1501,83,1381,20],[1501,85,1381,22],[1501,89,1381,26],[1501,91,1381,28],[1501,95,1381,32],[1501,97,1381,34],[1501,101,1381,38],[1501,103,1381,40],[1501,107,1381,44],[1501,109,1381,46],[1501,113,1381,50],[1501,115,1382,4],[1501,119,1382,8],[1501,121,1382,10],[1501,125,1382,14],[1501,127,1382,16],[1501,131,1382,20],[1501,133,1382,22],[1501,137,1382,26],[1501,139,1382,28],[1501,143,1382,32],[1501,145,1382,34],[1501,149,1382,38],[1501,151,1382,40],[1501,155,1382,44],[1501,157,1382,46],[1501,161,1382,50],[1501,163,1383,4],[1501,167,1383,8],[1501,169,1383,10],[1501,173,1383,14],[1501,175,1383,16],[1501,179,1383,20],[1501,181,1383,22],[1501,185,1383,26],[1501,187,1383,28],[1501,191,1383,32],[1501,193,1383,34],[1501,197,1383,38],[1501,199,1383,40],[1501,203,1383,44],[1501,205,1383,46],[1501,209,1383,50],[1501,211,1384,4],[1501,215,1384,8],[1501,217,1384,10],[1501,221,1384,14],[1501,223,1384,16],[1501,227,1384,20],[1501,229,1384,22],[1501,233,1384,26],[1501,235,1384,28],[1501,239,1384,32],[1501,241,1384,34],[1501,245,1384,38],[1501,247,1384,40],[1501,251,1384,44],[1501,253,1384,46],[1501,257,1384,50],[1501,259,1385,4],[1501,263,1385,8],[1501,265,1385,10],[1501,269,1385,14],[1501,271,1385,16],[1501,275,1385,20],[1501,277,1385,22],[1501,281,1385,26],[1501,283,1385,28],[1501,287,1385,32],[1501,289,1385,34],[1501,293,1385,38],[1501,295,1385,40],[1501,299,1385,44],[1501,301,1385,46],[1501,305,1385,50],[1501,307,1386,4],[1501,311,1386,8],[1501,313,1386,10],[1501,317,1386,14],[1501,319,1386,16],[1501,323,1386,20],[1501,325,1386,22],[1501,329,1386,26],[1501,331,1386,28],[1501,335,1386,32],[1501,337,1386,34],[1501,341,1386,38],[1501,343,1386,40],[1501,347,1386,44],[1501,349,1386,46],[1501,353,1386,50],[1501,355,1387,4],[1501,359,1387,8],[1501,361,1387,10],[1501,365,1387,14],[1501,367,1387,16],[1501,371,1387,20],[1501,373,1387,22],[1501,377,1387,26],[1501,379,1387,28],[1501,383,1387,32],[1501,385,1387,34],[1501,389,1387,38],[1501,391,1387,40],[1501,395,1387,44],[1501,397,1387,46],[1501,401,1387,50],[1501,402,1388,1],[1502,2,1389,0],[1502,8,1389,6,"BITS"],[1502,12,1389,10],[1502,15,1389,13],[1503,4,1390,4,"NORMAL"],[1503,10,1390,10],[1503,12,1390,12],[1503,13,1390,13],[1504,4,1391,4,"CAPTURE"],[1504,11,1391,11],[1504,13,1391,13],[1504,14,1391,14],[1505,4,1392,4,"BIG_PAWN"],[1505,12,1392,12],[1505,14,1392,14],[1505,15,1392,15],[1506,4,1393,4,"EP_CAPTURE"],[1506,14,1393,14],[1506,16,1393,16],[1506,17,1393,17],[1507,4,1394,4,"PROMOTION"],[1507,13,1394,13],[1507,15,1394,15],[1507,17,1394,17],[1508,4,1395,4,"KSIDE_CASTLE"],[1508,16,1395,16],[1508,18,1395,18],[1508,20,1395,20],[1509,4,1396,4,"QSIDE_CASTLE"],[1509,16,1396,16],[1509,18,1396,18],[1509,20,1396,20],[1510,4,1397,4,"NULL_MOVE"],[1510,13,1397,13],[1510,15,1397,15],[1511,2,1398,0],[1511,3,1398,1],[1512,2,1399,0],[1513,2,1400,0],[1514,2,1401,0],[1514,8,1401,6,"SEVEN_TAG_ROSTER"],[1514,24,1401,22],[1514,27,1401,25],[1515,4,1402,4,"Event"],[1515,9,1402,9],[1515,11,1402,11],[1515,14,1402,14],[1516,4,1403,4,"Site"],[1516,8,1403,8],[1516,10,1403,10],[1516,13,1403,13],[1517,4,1404,4,"Date"],[1517,8,1404,8],[1517,10,1404,10],[1517,22,1404,22],[1518,4,1405,4,"Round"],[1518,9,1405,9],[1518,11,1405,11],[1518,14,1405,14],[1519,4,1406,4,"White"],[1519,9,1406,9],[1519,11,1406,11],[1519,14,1406,14],[1520,4,1407,4,"Black"],[1520,9,1407,9],[1520,11,1407,11],[1520,14,1407,14],[1521,4,1408,4,"Result"],[1521,10,1408,10],[1521,12,1408,12],[1522,2,1409,0],[1522,3,1409,1],[1523,2,1410,0],[1524,0,1411,0],[1525,0,1412,0],[1526,0,1413,0],[1527,2,1414,0],[1527,8,1414,6,"SUPLEMENTAL_TAGS"],[1527,24,1414,22],[1527,27,1414,25],[1528,4,1415,4,"WhiteTitle"],[1528,14,1415,14],[1528,16,1415,16],[1528,20,1415,20],[1529,4,1416,4,"BlackTitle"],[1529,14,1416,14],[1529,16,1416,16],[1529,20,1416,20],[1530,4,1417,4,"WhiteElo"],[1530,12,1417,12],[1530,14,1417,14],[1530,18,1417,18],[1531,4,1418,4,"BlackElo"],[1531,12,1418,12],[1531,14,1418,14],[1531,18,1418,18],[1532,4,1419,4,"WhiteUSCF"],[1532,13,1419,13],[1532,15,1419,15],[1532,19,1419,19],[1533,4,1420,4,"BlackUSCF"],[1533,13,1420,13],[1533,15,1420,15],[1533,19,1420,19],[1534,4,1421,4,"WhiteNA"],[1534,11,1421,11],[1534,13,1421,13],[1534,17,1421,17],[1535,4,1422,4,"BlackNA"],[1535,11,1422,11],[1535,13,1422,13],[1535,17,1422,17],[1536,4,1423,4,"WhiteType"],[1536,13,1423,13],[1536,15,1423,15],[1536,19,1423,19],[1537,4,1424,4,"BlackType"],[1537,13,1424,13],[1537,15,1424,15],[1537,19,1424,19],[1538,4,1425,4,"EventDate"],[1538,13,1425,13],[1538,15,1425,15],[1538,19,1425,19],[1539,4,1426,4,"EventSponsor"],[1539,16,1426,16],[1539,18,1426,18],[1539,22,1426,22],[1540,4,1427,4,"Section"],[1540,11,1427,11],[1540,13,1427,13],[1540,17,1427,17],[1541,4,1428,4,"Stage"],[1541,9,1428,9],[1541,11,1428,11],[1541,15,1428,15],[1542,4,1429,4,"Board"],[1542,9,1429,9],[1542,11,1429,11],[1542,15,1429,15],[1543,4,1430,4,"Opening"],[1543,11,1430,11],[1543,13,1430,13],[1543,17,1430,17],[1544,4,1431,4,"Variation"],[1544,13,1431,13],[1544,15,1431,15],[1544,19,1431,19],[1545,4,1432,4,"SubVariation"],[1545,16,1432,16],[1545,18,1432,18],[1545,22,1432,22],[1546,4,1433,4,"ECO"],[1546,7,1433,7],[1546,9,1433,9],[1546,13,1433,13],[1547,4,1434,4,"NIC"],[1547,7,1434,7],[1547,9,1434,9],[1547,13,1434,13],[1548,4,1435,4,"Time"],[1548,8,1435,8],[1548,10,1435,10],[1548,14,1435,14],[1549,4,1436,4,"UTCTime"],[1549,11,1436,11],[1549,13,1436,13],[1549,17,1436,17],[1550,4,1437,4,"UTCDate"],[1550,11,1437,11],[1550,13,1437,13],[1550,17,1437,17],[1551,4,1438,4,"TimeControl"],[1551,15,1438,15],[1551,17,1438,17],[1551,21,1438,21],[1552,4,1439,4,"SetUp"],[1552,9,1439,9],[1552,11,1439,11],[1552,15,1439,15],[1553,4,1440,4,"FEN"],[1553,7,1440,7],[1553,9,1440,9],[1553,13,1440,13],[1554,4,1441,4,"Termination"],[1554,15,1441,15],[1554,17,1441,17],[1554,21,1441,21],[1555,4,1442,4,"Annotator"],[1555,13,1442,13],[1555,15,1442,15],[1555,19,1442,19],[1556,4,1443,4,"Mode"],[1556,8,1443,8],[1556,10,1443,10],[1556,14,1443,14],[1557,4,1444,4,"PlyCount"],[1557,12,1444,12],[1557,14,1444,14],[1558,2,1445,0],[1558,3,1445,1],[1559,2,1446,0],[1559,8,1446,6,"HEADER_TEMPLATE"],[1559,23,1446,21],[1559,26,1446,21,"Object"],[1559,32,1446,21],[1559,33,1446,21,"assign"],[1559,39,1446,21],[1559,44,1447,7,"SEVEN_TAG_ROSTER"],[1559,60,1447,23],[1559,62,1448,7,"SUPLEMENTAL_TAGS"],[1559,78,1448,23],[1559,79,1449,1],[1560,2,1450,0],[1561,2,1451,0],[1562,0,1452,0],[1563,0,1453,0],[1564,0,1454,0],[1565,0,1455,0],[1566,0,1456,0],[1567,0,1457,0],[1568,0,1458,0],[1569,0,1459,0],[1570,0,1460,0],[1571,0,1461,0],[1572,0,1462,0],[1573,0,1463,0],[1574,0,1464,0],[1575,0,1465,0],[1576,0,1466,0],[1577,0,1467,0],[1578,0,1468,0],[1579,0,1469,0],[1580,0,1470,0],[1581,0,1471,0],[1582,0,1472,0],[1583,0,1473,0],[1584,0,1474,0],[1585,0,1475,0],[1586,0,1476,0],[1587,0,1477,0],[1588,0,1478,0],[1589,0,1479,0],[1590,0,1480,0],[1591,0,1481,0],[1592,0,1482,0],[1593,0,1483,0],[1594,0,1484,0],[1595,0,1485,0],[1596,0,1486,0],[1597,0,1487,0],[1598,0,1488,0],[1599,2,1489,0],[1600,2,1490,0],[1601,2,1491,0],[1601,8,1491,6,"Ox88"],[1601,12,1491,10],[1601,15,1491,13],[1602,4,1492,4,"a8"],[1602,6,1492,6],[1602,8,1492,8],[1602,9,1492,9],[1603,4,1492,11,"b8"],[1603,6,1492,13],[1603,8,1492,15],[1603,9,1492,16],[1604,4,1492,18,"c8"],[1604,6,1492,20],[1604,8,1492,22],[1604,9,1492,23],[1605,4,1492,25,"d8"],[1605,6,1492,27],[1605,8,1492,29],[1605,9,1492,30],[1606,4,1492,32,"e8"],[1606,6,1492,34],[1606,8,1492,36],[1606,9,1492,37],[1607,4,1492,39,"f8"],[1607,6,1492,41],[1607,8,1492,43],[1607,9,1492,44],[1608,4,1492,46,"g8"],[1608,6,1492,48],[1608,8,1492,50],[1608,9,1492,51],[1609,4,1492,53,"h8"],[1609,6,1492,55],[1609,8,1492,57],[1609,9,1492,58],[1610,4,1493,4,"a7"],[1610,6,1493,6],[1610,8,1493,8],[1610,10,1493,10],[1611,4,1493,12,"b7"],[1611,6,1493,14],[1611,8,1493,16],[1611,10,1493,18],[1612,4,1493,20,"c7"],[1612,6,1493,22],[1612,8,1493,24],[1612,10,1493,26],[1613,4,1493,28,"d7"],[1613,6,1493,30],[1613,8,1493,32],[1613,10,1493,34],[1614,4,1493,36,"e7"],[1614,6,1493,38],[1614,8,1493,40],[1614,10,1493,42],[1615,4,1493,44,"f7"],[1615,6,1493,46],[1615,8,1493,48],[1615,10,1493,50],[1616,4,1493,52,"g7"],[1616,6,1493,54],[1616,8,1493,56],[1616,10,1493,58],[1617,4,1493,60,"h7"],[1617,6,1493,62],[1617,8,1493,64],[1617,10,1493,66],[1618,4,1494,4,"a6"],[1618,6,1494,6],[1618,8,1494,8],[1618,10,1494,10],[1619,4,1494,12,"b6"],[1619,6,1494,14],[1619,8,1494,16],[1619,10,1494,18],[1620,4,1494,20,"c6"],[1620,6,1494,22],[1620,8,1494,24],[1620,10,1494,26],[1621,4,1494,28,"d6"],[1621,6,1494,30],[1621,8,1494,32],[1621,10,1494,34],[1622,4,1494,36,"e6"],[1622,6,1494,38],[1622,8,1494,40],[1622,10,1494,42],[1623,4,1494,44,"f6"],[1623,6,1494,46],[1623,8,1494,48],[1623,10,1494,50],[1624,4,1494,52,"g6"],[1624,6,1494,54],[1624,8,1494,56],[1624,10,1494,58],[1625,4,1494,60,"h6"],[1625,6,1494,62],[1625,8,1494,64],[1625,10,1494,66],[1626,4,1495,4,"a5"],[1626,6,1495,6],[1626,8,1495,8],[1626,10,1495,10],[1627,4,1495,12,"b5"],[1627,6,1495,14],[1627,8,1495,16],[1627,10,1495,18],[1628,4,1495,20,"c5"],[1628,6,1495,22],[1628,8,1495,24],[1628,10,1495,26],[1629,4,1495,28,"d5"],[1629,6,1495,30],[1629,8,1495,32],[1629,10,1495,34],[1630,4,1495,36,"e5"],[1630,6,1495,38],[1630,8,1495,40],[1630,10,1495,42],[1631,4,1495,44,"f5"],[1631,6,1495,46],[1631,8,1495,48],[1631,10,1495,50],[1632,4,1495,52,"g5"],[1632,6,1495,54],[1632,8,1495,56],[1632,10,1495,58],[1633,4,1495,60,"h5"],[1633,6,1495,62],[1633,8,1495,64],[1633,10,1495,66],[1634,4,1496,4,"a4"],[1634,6,1496,6],[1634,8,1496,8],[1634,10,1496,10],[1635,4,1496,12,"b4"],[1635,6,1496,14],[1635,8,1496,16],[1635,10,1496,18],[1636,4,1496,20,"c4"],[1636,6,1496,22],[1636,8,1496,24],[1636,10,1496,26],[1637,4,1496,28,"d4"],[1637,6,1496,30],[1637,8,1496,32],[1637,10,1496,34],[1638,4,1496,36,"e4"],[1638,6,1496,38],[1638,8,1496,40],[1638,10,1496,42],[1639,4,1496,44,"f4"],[1639,6,1496,46],[1639,8,1496,48],[1639,10,1496,50],[1640,4,1496,52,"g4"],[1640,6,1496,54],[1640,8,1496,56],[1640,10,1496,58],[1641,4,1496,60,"h4"],[1641,6,1496,62],[1641,8,1496,64],[1641,10,1496,66],[1642,4,1497,4,"a3"],[1642,6,1497,6],[1642,8,1497,8],[1642,10,1497,10],[1643,4,1497,12,"b3"],[1643,6,1497,14],[1643,8,1497,16],[1643,10,1497,18],[1644,4,1497,20,"c3"],[1644,6,1497,22],[1644,8,1497,24],[1644,10,1497,26],[1645,4,1497,28,"d3"],[1645,6,1497,30],[1645,8,1497,32],[1645,10,1497,34],[1646,4,1497,36,"e3"],[1646,6,1497,38],[1646,8,1497,40],[1646,10,1497,42],[1647,4,1497,44,"f3"],[1647,6,1497,46],[1647,8,1497,48],[1647,10,1497,50],[1648,4,1497,52,"g3"],[1648,6,1497,54],[1648,8,1497,56],[1648,10,1497,58],[1649,4,1497,60,"h3"],[1649,6,1497,62],[1649,8,1497,64],[1649,10,1497,66],[1650,4,1498,4,"a2"],[1650,6,1498,6],[1650,8,1498,8],[1650,10,1498,10],[1651,4,1498,12,"b2"],[1651,6,1498,14],[1651,8,1498,16],[1651,10,1498,18],[1652,4,1498,20,"c2"],[1652,6,1498,22],[1652,8,1498,24],[1652,10,1498,26],[1653,4,1498,28,"d2"],[1653,6,1498,30],[1653,8,1498,32],[1653,10,1498,34],[1654,4,1498,36,"e2"],[1654,6,1498,38],[1654,8,1498,40],[1654,11,1498,43],[1655,4,1498,45,"f2"],[1655,6,1498,47],[1655,8,1498,49],[1655,11,1498,52],[1656,4,1498,54,"g2"],[1656,6,1498,56],[1656,8,1498,58],[1656,11,1498,61],[1657,4,1498,63,"h2"],[1657,6,1498,65],[1657,8,1498,67],[1657,11,1498,70],[1658,4,1499,4,"a1"],[1658,6,1499,6],[1658,8,1499,8],[1658,11,1499,11],[1659,4,1499,13,"b1"],[1659,6,1499,15],[1659,8,1499,17],[1659,11,1499,20],[1660,4,1499,22,"c1"],[1660,6,1499,24],[1660,8,1499,26],[1660,11,1499,29],[1661,4,1499,31,"d1"],[1661,6,1499,33],[1661,8,1499,35],[1661,11,1499,38],[1662,4,1499,40,"e1"],[1662,6,1499,42],[1662,8,1499,44],[1662,11,1499,47],[1663,4,1499,49,"f1"],[1663,6,1499,51],[1663,8,1499,53],[1663,11,1499,56],[1664,4,1499,58,"g1"],[1664,6,1499,60],[1664,8,1499,62],[1664,11,1499,65],[1665,4,1499,67,"h1"],[1665,6,1499,69],[1665,8,1499,71],[1666,2,1500,0],[1666,3,1500,1],[1667,2,1501,0],[1667,8,1501,6,"PAWN_OFFSETS"],[1667,20,1501,18],[1667,23,1501,21],[1668,4,1502,4,"b"],[1668,5,1502,5],[1668,7,1502,7],[1668,8,1502,8],[1668,10,1502,10],[1668,12,1502,12],[1668,14,1502,14],[1668,16,1502,16],[1668,18,1502,18],[1668,20,1502,20],[1668,22,1502,22],[1668,23,1502,23],[1669,4,1503,4,"w"],[1669,5,1503,5],[1669,7,1503,7],[1669,8,1503,8],[1669,9,1503,9],[1669,11,1503,11],[1669,13,1503,13],[1669,14,1503,14],[1669,16,1503,16],[1669,18,1503,18],[1669,19,1503,19],[1669,21,1503,21],[1669,23,1503,23],[1669,24,1503,24],[1669,26,1503,26],[1670,2,1504,0],[1670,3,1504,1],[1671,2,1505,0],[1671,8,1505,6,"PIECE_OFFSETS"],[1671,21,1505,19],[1671,24,1505,22],[1672,4,1506,4,"n"],[1672,5,1506,5],[1672,7,1506,7],[1672,8,1506,8],[1672,9,1506,9],[1672,11,1506,11],[1672,13,1506,13],[1672,14,1506,14],[1672,16,1506,16],[1672,18,1506,18],[1672,19,1506,19],[1672,21,1506,21],[1672,23,1506,23],[1672,24,1506,24],[1672,26,1506,26],[1672,28,1506,28],[1672,30,1506,30],[1672,32,1506,32],[1672,34,1506,34],[1672,36,1506,36],[1672,38,1506,38],[1672,40,1506,40],[1672,42,1506,42],[1672,43,1506,43],[1673,4,1507,4,"b"],[1673,5,1507,5],[1673,7,1507,7],[1673,8,1507,8],[1673,9,1507,9],[1673,11,1507,11],[1673,13,1507,13],[1673,14,1507,14],[1673,16,1507,16],[1673,18,1507,18],[1673,20,1507,20],[1673,22,1507,22],[1673,24,1507,24],[1673,25,1507,25],[1674,4,1508,4,"r"],[1674,5,1508,5],[1674,7,1508,7],[1674,8,1508,8],[1674,9,1508,9],[1674,11,1508,11],[1674,13,1508,13],[1674,14,1508,14],[1674,16,1508,16],[1674,18,1508,18],[1674,20,1508,20],[1674,21,1508,21],[1674,22,1508,22],[1674,23,1508,23],[1675,4,1509,4,"q"],[1675,5,1509,5],[1675,7,1509,7],[1675,8,1509,8],[1675,9,1509,9],[1675,11,1509,11],[1675,13,1509,13],[1675,14,1509,14],[1675,16,1509,16],[1675,18,1509,18],[1675,19,1509,19],[1675,21,1509,21],[1675,23,1509,23],[1675,24,1509,24],[1675,26,1509,26],[1675,28,1509,28],[1675,30,1509,30],[1675,32,1509,32],[1675,34,1509,34],[1675,36,1509,36],[1675,38,1509,38],[1675,39,1509,39],[1675,40,1509,40],[1675,41,1509,41],[1676,4,1510,4,"k"],[1676,5,1510,5],[1676,7,1510,7],[1676,8,1510,8],[1676,9,1510,9],[1676,11,1510,11],[1676,13,1510,13],[1676,14,1510,14],[1676,16,1510,16],[1676,18,1510,18],[1676,19,1510,19],[1676,21,1510,21],[1676,23,1510,23],[1676,24,1510,24],[1676,26,1510,26],[1676,28,1510,28],[1676,30,1510,30],[1676,32,1510,32],[1676,34,1510,34],[1676,36,1510,36],[1676,38,1510,38],[1676,39,1510,39],[1676,40,1510,40],[1677,2,1511,0],[1677,3,1511,1],[1678,2,1512,0],[1679,2,1513,0],[1679,8,1513,6,"ATTACKS"],[1679,15,1513,13],[1679,18,1513,16],[1679,19,1514,4],[1679,21,1514,6],[1679,23,1514,8],[1679,24,1514,9],[1679,26,1514,11],[1679,27,1514,12],[1679,29,1514,14],[1679,30,1514,15],[1679,32,1514,17],[1679,33,1514,18],[1679,35,1514,20],[1679,36,1514,21],[1679,38,1514,23],[1679,39,1514,24],[1679,41,1514,26],[1679,43,1514,28],[1679,45,1514,30],[1679,46,1514,31],[1679,48,1514,33],[1679,49,1514,34],[1679,51,1514,36],[1679,52,1514,37],[1679,54,1514,39],[1679,55,1514,40],[1679,57,1514,42],[1679,58,1514,43],[1679,60,1514,45],[1679,61,1514,46],[1679,63,1514,48],[1679,65,1514,50],[1679,67,1514,52],[1679,68,1514,53],[1679,70,1515,4],[1679,71,1515,5],[1679,73,1515,7],[1679,75,1515,9],[1679,77,1515,11],[1679,78,1515,12],[1679,80,1515,14],[1679,81,1515,15],[1679,83,1515,17],[1679,84,1515,18],[1679,86,1515,20],[1679,87,1515,21],[1679,89,1515,23],[1679,90,1515,24],[1679,92,1515,26],[1679,94,1515,28],[1679,96,1515,30],[1679,97,1515,31],[1679,99,1515,33],[1679,100,1515,34],[1679,102,1515,36],[1679,103,1515,37],[1679,105,1515,39],[1679,106,1515,40],[1679,108,1515,42],[1679,109,1515,43],[1679,111,1515,45],[1679,113,1515,47],[1679,115,1515,49],[1679,116,1515,50],[1679,118,1515,52],[1679,119,1515,53],[1679,121,1516,4],[1679,122,1516,5],[1679,124,1516,7],[1679,125,1516,8],[1679,127,1516,10],[1679,129,1516,12],[1679,131,1516,14],[1679,132,1516,15],[1679,134,1516,17],[1679,135,1516,18],[1679,137,1516,20],[1679,138,1516,21],[1679,140,1516,23],[1679,141,1516,24],[1679,143,1516,26],[1679,145,1516,28],[1679,147,1516,30],[1679,148,1516,31],[1679,150,1516,33],[1679,151,1516,34],[1679,153,1516,36],[1679,154,1516,37],[1679,156,1516,39],[1679,157,1516,40],[1679,159,1516,42],[1679,161,1516,44],[1679,163,1516,46],[1679,164,1516,47],[1679,166,1516,49],[1679,167,1516,50],[1679,169,1516,52],[1679,170,1516,53],[1679,172,1517,4],[1679,173,1517,5],[1679,175,1517,7],[1679,176,1517,8],[1679,178,1517,10],[1679,179,1517,11],[1679,181,1517,13],[1679,183,1517,15],[1679,185,1517,17],[1679,186,1517,18],[1679,188,1517,20],[1679,189,1517,21],[1679,191,1517,23],[1679,192,1517,24],[1679,194,1517,26],[1679,196,1517,28],[1679,198,1517,30],[1679,199,1517,31],[1679,201,1517,33],[1679,202,1517,34],[1679,204,1517,36],[1679,205,1517,37],[1679,207,1517,39],[1679,209,1517,41],[1679,211,1517,43],[1679,212,1517,44],[1679,214,1517,46],[1679,215,1517,47],[1679,217,1517,49],[1679,218,1517,50],[1679,220,1517,52],[1679,221,1517,53],[1679,223,1518,4],[1679,224,1518,5],[1679,226,1518,7],[1679,227,1518,8],[1679,229,1518,10],[1679,230,1518,11],[1679,232,1518,13],[1679,233,1518,14],[1679,235,1518,16],[1679,237,1518,18],[1679,239,1518,20],[1679,240,1518,21],[1679,242,1518,23],[1679,243,1518,24],[1679,245,1518,26],[1679,247,1518,28],[1679,249,1518,30],[1679,250,1518,31],[1679,252,1518,33],[1679,253,1518,34],[1679,255,1518,36],[1679,257,1518,38],[1679,259,1518,40],[1679,260,1518,41],[1679,262,1518,43],[1679,263,1518,44],[1679,265,1518,46],[1679,266,1518,47],[1679,268,1518,49],[1679,269,1518,50],[1679,271,1518,52],[1679,272,1518,53],[1679,274,1519,4],[1679,275,1519,5],[1679,277,1519,7],[1679,278,1519,8],[1679,280,1519,10],[1679,281,1519,11],[1679,283,1519,13],[1679,284,1519,14],[1679,286,1519,16],[1679,287,1519,17],[1679,289,1519,19],[1679,291,1519,21],[1679,293,1519,23],[1679,294,1519,24],[1679,296,1519,26],[1679,298,1519,28],[1679,300,1519,30],[1679,301,1519,31],[1679,303,1519,33],[1679,305,1519,35],[1679,307,1519,37],[1679,308,1519,38],[1679,310,1519,40],[1679,311,1519,41],[1679,313,1519,43],[1679,314,1519,44],[1679,316,1519,46],[1679,317,1519,47],[1679,319,1519,49],[1679,320,1519,50],[1679,322,1519,52],[1679,323,1519,53],[1679,325,1520,4],[1679,326,1520,5],[1679,328,1520,7],[1679,329,1520,8],[1679,331,1520,10],[1679,332,1520,11],[1679,334,1520,13],[1679,335,1520,14],[1679,337,1520,16],[1679,338,1520,17],[1679,340,1520,19],[1679,341,1520,20],[1679,343,1520,22],[1679,345,1520,24],[1679,347,1520,26],[1679,349,1520,28],[1679,351,1520,30],[1679,353,1520,32],[1679,355,1520,34],[1679,356,1520,35],[1679,358,1520,37],[1679,359,1520,38],[1679,361,1520,40],[1679,362,1520,41],[1679,364,1520,43],[1679,365,1520,44],[1679,367,1520,46],[1679,368,1520,47],[1679,370,1520,49],[1679,371,1520,50],[1679,373,1520,52],[1679,374,1520,53],[1679,376,1521,4],[1679,378,1521,6],[1679,380,1521,8],[1679,382,1521,10],[1679,384,1521,12],[1679,386,1521,14],[1679,388,1521,16],[1679,390,1521,18],[1679,392,1521,20],[1679,394,1521,22],[1679,396,1521,24],[1679,398,1521,26],[1679,400,1521,28],[1679,402,1521,30],[1679,404,1521,32],[1679,405,1521,33],[1679,407,1521,35],[1679,409,1521,37],[1679,411,1521,39],[1679,413,1521,41],[1679,415,1521,43],[1679,417,1521,45],[1679,419,1521,47],[1679,421,1521,49],[1679,423,1521,51],[1679,425,1521,53],[1679,427,1521,55],[1679,429,1521,57],[1679,431,1521,59],[1679,433,1521,61],[1679,435,1521,63],[1679,436,1521,64],[1679,438,1522,4],[1679,439,1522,5],[1679,441,1522,7],[1679,442,1522,8],[1679,444,1522,10],[1679,445,1522,11],[1679,447,1522,13],[1679,448,1522,14],[1679,450,1522,16],[1679,451,1522,17],[1679,453,1522,19],[1679,454,1522,20],[1679,456,1522,22],[1679,458,1522,24],[1679,460,1522,26],[1679,462,1522,28],[1679,464,1522,30],[1679,466,1522,32],[1679,468,1522,34],[1679,469,1522,35],[1679,471,1522,37],[1679,472,1522,38],[1679,474,1522,40],[1679,475,1522,41],[1679,477,1522,43],[1679,478,1522,44],[1679,480,1522,46],[1679,481,1522,47],[1679,483,1522,49],[1679,484,1522,50],[1679,486,1522,52],[1679,487,1522,53],[1679,489,1523,4],[1679,490,1523,5],[1679,492,1523,7],[1679,493,1523,8],[1679,495,1523,10],[1679,496,1523,11],[1679,498,1523,13],[1679,499,1523,14],[1679,501,1523,16],[1679,502,1523,17],[1679,504,1523,19],[1679,506,1523,21],[1679,508,1523,23],[1679,509,1523,24],[1679,511,1523,26],[1679,513,1523,28],[1679,515,1523,30],[1679,516,1523,31],[1679,518,1523,33],[1679,520,1523,35],[1679,522,1523,37],[1679,523,1523,38],[1679,525,1523,40],[1679,526,1523,41],[1679,528,1523,43],[1679,529,1523,44],[1679,531,1523,46],[1679,532,1523,47],[1679,534,1523,49],[1679,535,1523,50],[1679,537,1523,52],[1679,538,1523,53],[1679,540,1524,4],[1679,541,1524,5],[1679,543,1524,7],[1679,544,1524,8],[1679,546,1524,10],[1679,547,1524,11],[1679,549,1524,13],[1679,550,1524,14],[1679,552,1524,16],[1679,554,1524,18],[1679,556,1524,20],[1679,557,1524,21],[1679,559,1524,23],[1679,560,1524,24],[1679,562,1524,26],[1679,564,1524,28],[1679,566,1524,30],[1679,567,1524,31],[1679,569,1524,33],[1679,570,1524,34],[1679,572,1524,36],[1679,574,1524,38],[1679,576,1524,40],[1679,577,1524,41],[1679,579,1524,43],[1679,580,1524,44],[1679,582,1524,46],[1679,583,1524,47],[1679,585,1524,49],[1679,586,1524,50],[1679,588,1524,52],[1679,589,1524,53],[1679,591,1525,4],[1679,592,1525,5],[1679,594,1525,7],[1679,595,1525,8],[1679,597,1525,10],[1679,598,1525,11],[1679,600,1525,13],[1679,602,1525,15],[1679,604,1525,17],[1679,605,1525,18],[1679,607,1525,20],[1679,608,1525,21],[1679,610,1525,23],[1679,611,1525,24],[1679,613,1525,26],[1679,615,1525,28],[1679,617,1525,30],[1679,618,1525,31],[1679,620,1525,33],[1679,621,1525,34],[1679,623,1525,36],[1679,624,1525,37],[1679,626,1525,39],[1679,628,1525,41],[1679,630,1525,43],[1679,631,1525,44],[1679,633,1525,46],[1679,634,1525,47],[1679,636,1525,49],[1679,637,1525,50],[1679,639,1525,52],[1679,640,1525,53],[1679,642,1526,4],[1679,643,1526,5],[1679,645,1526,7],[1679,646,1526,8],[1679,648,1526,10],[1679,650,1526,12],[1679,652,1526,14],[1679,653,1526,15],[1679,655,1526,17],[1679,656,1526,18],[1679,658,1526,20],[1679,659,1526,21],[1679,661,1526,23],[1679,662,1526,24],[1679,664,1526,26],[1679,666,1526,28],[1679,668,1526,30],[1679,669,1526,31],[1679,671,1526,33],[1679,672,1526,34],[1679,674,1526,36],[1679,675,1526,37],[1679,677,1526,39],[1679,678,1526,40],[1679,680,1526,42],[1679,682,1526,44],[1679,684,1526,46],[1679,685,1526,47],[1679,687,1526,49],[1679,688,1526,50],[1679,690,1526,52],[1679,691,1526,53],[1679,693,1527,4],[1679,694,1527,5],[1679,696,1527,7],[1679,698,1527,9],[1679,700,1527,11],[1679,701,1527,12],[1679,703,1527,14],[1679,704,1527,15],[1679,706,1527,17],[1679,707,1527,18],[1679,709,1527,20],[1679,710,1527,21],[1679,712,1527,23],[1679,713,1527,24],[1679,715,1527,26],[1679,717,1527,28],[1679,719,1527,30],[1679,720,1527,31],[1679,722,1527,33],[1679,723,1527,34],[1679,725,1527,36],[1679,726,1527,37],[1679,728,1527,39],[1679,729,1527,40],[1679,731,1527,42],[1679,732,1527,43],[1679,734,1527,45],[1679,736,1527,47],[1679,738,1527,49],[1679,739,1527,50],[1679,741,1527,52],[1679,742,1527,53],[1679,744,1528,4],[1679,746,1528,6],[1679,748,1528,8],[1679,749,1528,9],[1679,751,1528,11],[1679,752,1528,12],[1679,754,1528,14],[1679,755,1528,15],[1679,757,1528,17],[1679,758,1528,18],[1679,760,1528,20],[1679,761,1528,21],[1679,763,1528,23],[1679,764,1528,24],[1679,766,1528,26],[1679,768,1528,28],[1679,770,1528,30],[1679,771,1528,31],[1679,773,1528,33],[1679,774,1528,34],[1679,776,1528,36],[1679,777,1528,37],[1679,779,1528,39],[1679,780,1528,40],[1679,782,1528,42],[1679,783,1528,43],[1679,785,1528,45],[1679,786,1528,46],[1679,788,1528,48],[1679,790,1528,50],[1679,791,1529,1],[1680,2,1530,0],[1681,2,1531,0],[1681,8,1531,6,"RAYS"],[1681,12,1531,10],[1681,15,1531,13],[1681,16,1532,4],[1681,18,1532,6],[1681,20,1532,8],[1681,21,1532,9],[1681,23,1532,11],[1681,24,1532,12],[1681,26,1532,14],[1681,27,1532,15],[1681,29,1532,17],[1681,30,1532,18],[1681,32,1532,20],[1681,33,1532,21],[1681,35,1532,23],[1681,36,1532,24],[1681,38,1532,26],[1681,40,1532,28],[1681,42,1532,30],[1681,43,1532,31],[1681,45,1532,33],[1681,46,1532,34],[1681,48,1532,36],[1681,49,1532,37],[1681,51,1532,39],[1681,52,1532,40],[1681,54,1532,42],[1681,55,1532,43],[1681,57,1532,45],[1681,58,1532,46],[1681,60,1532,48],[1681,62,1532,50],[1681,64,1532,52],[1681,65,1532,53],[1681,67,1533,4],[1681,68,1533,5],[1681,70,1533,7],[1681,72,1533,9],[1681,74,1533,11],[1681,75,1533,12],[1681,77,1533,14],[1681,78,1533,15],[1681,80,1533,17],[1681,81,1533,18],[1681,83,1533,20],[1681,84,1533,21],[1681,86,1533,23],[1681,87,1533,24],[1681,89,1533,26],[1681,91,1533,28],[1681,93,1533,30],[1681,94,1533,31],[1681,96,1533,33],[1681,97,1533,34],[1681,99,1533,36],[1681,100,1533,37],[1681,102,1533,39],[1681,103,1533,40],[1681,105,1533,42],[1681,106,1533,43],[1681,108,1533,45],[1681,110,1533,47],[1681,112,1533,49],[1681,113,1533,50],[1681,115,1533,52],[1681,116,1533,53],[1681,118,1534,4],[1681,119,1534,5],[1681,121,1534,7],[1681,122,1534,8],[1681,124,1534,10],[1681,126,1534,12],[1681,128,1534,14],[1681,129,1534,15],[1681,131,1534,17],[1681,132,1534,18],[1681,134,1534,20],[1681,135,1534,21],[1681,137,1534,23],[1681,138,1534,24],[1681,140,1534,26],[1681,142,1534,28],[1681,144,1534,30],[1681,145,1534,31],[1681,147,1534,33],[1681,148,1534,34],[1681,150,1534,36],[1681,151,1534,37],[1681,153,1534,39],[1681,154,1534,40],[1681,156,1534,42],[1681,158,1534,44],[1681,160,1534,46],[1681,161,1534,47],[1681,163,1534,49],[1681,164,1534,50],[1681,166,1534,52],[1681,167,1534,53],[1681,169,1535,4],[1681,170,1535,5],[1681,172,1535,7],[1681,173,1535,8],[1681,175,1535,10],[1681,176,1535,11],[1681,178,1535,13],[1681,180,1535,15],[1681,182,1535,17],[1681,183,1535,18],[1681,185,1535,20],[1681,186,1535,21],[1681,188,1535,23],[1681,189,1535,24],[1681,191,1535,26],[1681,193,1535,28],[1681,195,1535,30],[1681,196,1535,31],[1681,198,1535,33],[1681,199,1535,34],[1681,201,1535,36],[1681,202,1535,37],[1681,204,1535,39],[1681,206,1535,41],[1681,208,1535,43],[1681,209,1535,44],[1681,211,1535,46],[1681,212,1535,47],[1681,214,1535,49],[1681,215,1535,50],[1681,217,1535,52],[1681,218,1535,53],[1681,220,1536,4],[1681,221,1536,5],[1681,223,1536,7],[1681,224,1536,8],[1681,226,1536,10],[1681,227,1536,11],[1681,229,1536,13],[1681,230,1536,14],[1681,232,1536,16],[1681,234,1536,18],[1681,236,1536,20],[1681,237,1536,21],[1681,239,1536,23],[1681,240,1536,24],[1681,242,1536,26],[1681,244,1536,28],[1681,246,1536,30],[1681,247,1536,31],[1681,249,1536,33],[1681,250,1536,34],[1681,252,1536,36],[1681,254,1536,38],[1681,256,1536,40],[1681,257,1536,41],[1681,259,1536,43],[1681,260,1536,44],[1681,262,1536,46],[1681,263,1536,47],[1681,265,1536,49],[1681,266,1536,50],[1681,268,1536,52],[1681,269,1536,53],[1681,271,1537,4],[1681,272,1537,5],[1681,274,1537,7],[1681,275,1537,8],[1681,277,1537,10],[1681,278,1537,11],[1681,280,1537,13],[1681,281,1537,14],[1681,283,1537,16],[1681,284,1537,17],[1681,286,1537,19],[1681,288,1537,21],[1681,290,1537,23],[1681,291,1537,24],[1681,293,1537,26],[1681,295,1537,28],[1681,297,1537,30],[1681,298,1537,31],[1681,300,1537,33],[1681,302,1537,35],[1681,304,1537,37],[1681,305,1537,38],[1681,307,1537,40],[1681,308,1537,41],[1681,310,1537,43],[1681,311,1537,44],[1681,313,1537,46],[1681,314,1537,47],[1681,316,1537,49],[1681,317,1537,50],[1681,319,1537,52],[1681,320,1537,53],[1681,322,1538,4],[1681,323,1538,5],[1681,325,1538,7],[1681,326,1538,8],[1681,328,1538,10],[1681,329,1538,11],[1681,331,1538,13],[1681,332,1538,14],[1681,334,1538,16],[1681,335,1538,17],[1681,337,1538,19],[1681,338,1538,20],[1681,340,1538,22],[1681,342,1538,24],[1681,344,1538,26],[1681,346,1538,28],[1681,348,1538,30],[1681,350,1538,32],[1681,352,1538,34],[1681,353,1538,35],[1681,355,1538,37],[1681,356,1538,38],[1681,358,1538,40],[1681,359,1538,41],[1681,361,1538,43],[1681,362,1538,44],[1681,364,1538,46],[1681,365,1538,47],[1681,367,1538,49],[1681,368,1538,50],[1681,370,1538,52],[1681,371,1538,53],[1681,373,1539,4],[1681,374,1539,5],[1681,376,1539,7],[1681,377,1539,8],[1681,379,1539,10],[1681,380,1539,11],[1681,382,1539,13],[1681,383,1539,14],[1681,385,1539,16],[1681,386,1539,17],[1681,388,1539,19],[1681,389,1539,20],[1681,391,1539,22],[1681,392,1539,23],[1681,394,1539,25],[1681,395,1539,26],[1681,397,1539,28],[1681,398,1539,29],[1681,399,1539,30],[1681,401,1539,32],[1681,402,1539,33],[1681,403,1539,34],[1681,405,1539,36],[1681,406,1539,37],[1681,407,1539,38],[1681,409,1539,40],[1681,410,1539,41],[1681,411,1539,42],[1681,413,1539,44],[1681,414,1539,45],[1681,415,1539,46],[1681,417,1539,48],[1681,418,1539,49],[1681,419,1539,50],[1681,421,1539,52],[1681,422,1539,53],[1681,423,1539,54],[1681,425,1539,56],[1681,426,1539,57],[1681,428,1540,4],[1681,429,1540,5],[1681,431,1540,7],[1681,432,1540,8],[1681,434,1540,10],[1681,435,1540,11],[1681,437,1540,13],[1681,438,1540,14],[1681,440,1540,16],[1681,441,1540,17],[1681,443,1540,19],[1681,444,1540,20],[1681,446,1540,22],[1681,447,1540,23],[1681,449,1540,25],[1681,451,1540,27],[1681,452,1540,28],[1681,454,1540,30],[1681,456,1540,32],[1681,457,1540,33],[1681,459,1540,35],[1681,461,1540,37],[1681,462,1540,38],[1681,464,1540,40],[1681,465,1540,41],[1681,467,1540,43],[1681,468,1540,44],[1681,470,1540,46],[1681,471,1540,47],[1681,473,1540,49],[1681,474,1540,50],[1681,476,1540,52],[1681,477,1540,53],[1681,479,1540,55],[1681,480,1540,56],[1681,482,1541,4],[1681,483,1541,5],[1681,485,1541,7],[1681,486,1541,8],[1681,488,1541,10],[1681,489,1541,11],[1681,491,1541,13],[1681,492,1541,14],[1681,494,1541,16],[1681,495,1541,17],[1681,497,1541,19],[1681,498,1541,20],[1681,500,1541,22],[1681,502,1541,24],[1681,503,1541,25],[1681,505,1541,27],[1681,506,1541,28],[1681,508,1541,30],[1681,510,1541,32],[1681,511,1541,33],[1681,513,1541,35],[1681,514,1541,36],[1681,516,1541,38],[1681,518,1541,40],[1681,519,1541,41],[1681,521,1541,43],[1681,522,1541,44],[1681,524,1541,46],[1681,525,1541,47],[1681,527,1541,49],[1681,528,1541,50],[1681,530,1541,52],[1681,531,1541,53],[1681,533,1541,55],[1681,534,1541,56],[1681,536,1542,4],[1681,537,1542,5],[1681,539,1542,7],[1681,540,1542,8],[1681,542,1542,10],[1681,543,1542,11],[1681,545,1542,13],[1681,546,1542,14],[1681,548,1542,16],[1681,549,1542,17],[1681,551,1542,19],[1681,553,1542,21],[1681,554,1542,22],[1681,556,1542,24],[1681,557,1542,25],[1681,559,1542,27],[1681,560,1542,28],[1681,562,1542,30],[1681,564,1542,32],[1681,565,1542,33],[1681,567,1542,35],[1681,568,1542,36],[1681,570,1542,38],[1681,571,1542,39],[1681,573,1542,41],[1681,575,1542,43],[1681,576,1542,44],[1681,578,1542,46],[1681,579,1542,47],[1681,581,1542,49],[1681,582,1542,50],[1681,584,1542,52],[1681,585,1542,53],[1681,587,1542,55],[1681,588,1542,56],[1681,590,1543,4],[1681,591,1543,5],[1681,593,1543,7],[1681,594,1543,8],[1681,596,1543,10],[1681,597,1543,11],[1681,599,1543,13],[1681,600,1543,14],[1681,602,1543,16],[1681,604,1543,18],[1681,605,1543,19],[1681,607,1543,21],[1681,608,1543,22],[1681,610,1543,24],[1681,611,1543,25],[1681,613,1543,27],[1681,614,1543,28],[1681,616,1543,30],[1681,618,1543,32],[1681,619,1543,33],[1681,621,1543,35],[1681,622,1543,36],[1681,624,1543,38],[1681,625,1543,39],[1681,627,1543,41],[1681,628,1543,42],[1681,630,1543,44],[1681,632,1543,46],[1681,633,1543,47],[1681,635,1543,49],[1681,636,1543,50],[1681,638,1543,52],[1681,639,1543,53],[1681,641,1543,55],[1681,642,1543,56],[1681,644,1544,4],[1681,645,1544,5],[1681,647,1544,7],[1681,648,1544,8],[1681,650,1544,10],[1681,651,1544,11],[1681,653,1544,13],[1681,655,1544,15],[1681,656,1544,16],[1681,658,1544,18],[1681,659,1544,19],[1681,661,1544,21],[1681,662,1544,22],[1681,664,1544,24],[1681,665,1544,25],[1681,667,1544,27],[1681,668,1544,28],[1681,670,1544,30],[1681,672,1544,32],[1681,673,1544,33],[1681,675,1544,35],[1681,676,1544,36],[1681,678,1544,38],[1681,679,1544,39],[1681,681,1544,41],[1681,682,1544,42],[1681,684,1544,44],[1681,685,1544,45],[1681,687,1544,47],[1681,689,1544,49],[1681,690,1544,50],[1681,692,1544,52],[1681,693,1544,53],[1681,695,1544,55],[1681,696,1544,56],[1681,698,1545,4],[1681,699,1545,5],[1681,701,1545,7],[1681,702,1545,8],[1681,704,1545,10],[1681,706,1545,12],[1681,707,1545,13],[1681,709,1545,15],[1681,710,1545,16],[1681,712,1545,18],[1681,713,1545,19],[1681,715,1545,21],[1681,716,1545,22],[1681,718,1545,24],[1681,719,1545,25],[1681,721,1545,27],[1681,722,1545,28],[1681,724,1545,30],[1681,726,1545,32],[1681,727,1545,33],[1681,729,1545,35],[1681,730,1545,36],[1681,732,1545,38],[1681,733,1545,39],[1681,735,1545,41],[1681,736,1545,42],[1681,738,1545,44],[1681,739,1545,45],[1681,741,1545,47],[1681,742,1545,48],[1681,744,1545,50],[1681,746,1545,52],[1681,747,1545,53],[1681,749,1545,55],[1681,750,1545,56],[1681,752,1546,4],[1681,753,1546,5],[1681,755,1546,7],[1681,757,1546,9],[1681,758,1546,10],[1681,760,1546,12],[1681,761,1546,13],[1681,763,1546,15],[1681,764,1546,16],[1681,766,1546,18],[1681,767,1546,19],[1681,769,1546,21],[1681,770,1546,22],[1681,772,1546,24],[1681,773,1546,25],[1681,775,1546,27],[1681,776,1546,28],[1681,778,1546,30],[1681,780,1546,32],[1681,781,1546,33],[1681,783,1546,35],[1681,784,1546,36],[1681,786,1546,38],[1681,787,1546,39],[1681,789,1546,41],[1681,790,1546,42],[1681,792,1546,44],[1681,793,1546,45],[1681,795,1546,47],[1681,796,1546,48],[1681,798,1546,50],[1681,799,1546,51],[1681,801,1546,53],[1681,802,1547,1],[1682,2,1548,0],[1682,8,1548,6,"PIECE_MASKS"],[1682,19,1548,17],[1682,22,1548,20],[1683,4,1548,22,"p"],[1683,5,1548,23],[1683,7,1548,25],[1683,10,1548,28],[1684,4,1548,30,"n"],[1684,5,1548,31],[1684,7,1548,33],[1684,10,1548,36],[1685,4,1548,38,"b"],[1685,5,1548,39],[1685,7,1548,41],[1685,10,1548,44],[1686,4,1548,46,"r"],[1686,5,1548,47],[1686,7,1548,49],[1686,10,1548,52],[1687,4,1548,54,"q"],[1687,5,1548,55],[1687,7,1548,57],[1687,11,1548,61],[1688,4,1548,63,"k"],[1688,5,1548,64],[1688,7,1548,66],[1689,2,1548,71],[1689,3,1548,72],[1690,2,1549,0],[1690,8,1549,6,"SYMBOLS"],[1690,15,1549,13],[1690,18,1549,16],[1690,32,1549,30],[1691,2,1550,0],[1691,8,1550,6,"PROMOTIONS"],[1691,18,1550,16],[1691,21,1550,19],[1691,22,1550,20,"KNIGHT"],[1691,28,1550,26],[1691,30,1550,28,"BISHOP"],[1691,36,1550,34],[1691,38,1550,36,"ROOK"],[1691,42,1550,40],[1691,44,1550,42,"QUEEN"],[1691,49,1550,47],[1691,50,1550,48],[1692,2,1551,0],[1692,8,1551,6,"RANK_1"],[1692,14,1551,12],[1692,17,1551,15],[1692,18,1551,16],[1693,2,1552,0],[1693,8,1552,6,"RANK_2"],[1693,14,1552,12],[1693,17,1552,15],[1693,18,1552,16],[1694,2,1553,0],[1695,0,1554,0],[1696,0,1555,0],[1697,0,1556,0],[1698,0,1557,0],[1699,0,1558,0],[1700,2,1559,0],[1700,8,1559,6,"RANK_7"],[1700,14,1559,12],[1700,17,1559,15],[1700,18,1559,16],[1701,2,1560,0],[1701,8,1560,6,"RANK_8"],[1701,14,1560,12],[1701,17,1560,15],[1701,18,1560,16],[1702,2,1561,0],[1702,8,1561,6,"SIDES"],[1702,13,1561,11],[1702,16,1561,14],[1703,4,1562,4],[1703,5,1562,5,"KING"],[1703,9,1562,9],[1703,12,1562,12,"BITS"],[1703,16,1562,16],[1703,17,1562,17,"KSIDE_CASTLE"],[1703,29,1562,29],[1704,4,1563,4],[1704,5,1563,5,"QUEEN"],[1704,10,1563,10],[1704,13,1563,13,"BITS"],[1704,17,1563,17],[1704,18,1563,18,"QSIDE_CASTLE"],[1705,2,1564,0],[1705,3,1564,1],[1706,2,1565,0],[1706,8,1565,6,"ROOKS"],[1706,13,1565,11],[1706,16,1565,14],[1707,4,1566,4,"w"],[1707,5,1566,5],[1707,7,1566,7],[1707,8,1567,8],[1708,6,1567,10,"square"],[1708,12,1567,16],[1708,14,1567,18,"Ox88"],[1708,18,1567,22],[1708,19,1567,23,"a1"],[1708,21,1567,25],[1709,6,1567,27,"flag"],[1709,10,1567,31],[1709,12,1567,33,"BITS"],[1709,16,1567,37],[1709,17,1567,38,"QSIDE_CASTLE"],[1710,4,1567,51],[1710,5,1567,52],[1710,7,1568,8],[1711,6,1568,10,"square"],[1711,12,1568,16],[1711,14,1568,18,"Ox88"],[1711,18,1568,22],[1711,19,1568,23,"h1"],[1711,21,1568,25],[1712,6,1568,27,"flag"],[1712,10,1568,31],[1712,12,1568,33,"BITS"],[1712,16,1568,37],[1712,17,1568,38,"KSIDE_CASTLE"],[1713,4,1568,51],[1713,5,1568,52],[1713,6,1569,5],[1714,4,1570,4,"b"],[1714,5,1570,5],[1714,7,1570,7],[1714,8,1571,8],[1715,6,1571,10,"square"],[1715,12,1571,16],[1715,14,1571,18,"Ox88"],[1715,18,1571,22],[1715,19,1571,23,"a8"],[1715,21,1571,25],[1716,6,1571,27,"flag"],[1716,10,1571,31],[1716,12,1571,33,"BITS"],[1716,16,1571,37],[1716,17,1571,38,"QSIDE_CASTLE"],[1717,4,1571,51],[1717,5,1571,52],[1717,7,1572,8],[1718,6,1572,10,"square"],[1718,12,1572,16],[1718,14,1572,18,"Ox88"],[1718,18,1572,22],[1718,19,1572,23,"h8"],[1718,21,1572,25],[1719,6,1572,27,"flag"],[1719,10,1572,31],[1719,12,1572,33,"BITS"],[1719,16,1572,37],[1719,17,1572,38,"KSIDE_CASTLE"],[1720,4,1572,51],[1720,5,1572,52],[1721,2,1574,0],[1721,3,1574,1],[1722,2,1575,0],[1722,8,1575,6,"SECOND_RANK"],[1722,19,1575,17],[1722,22,1575,20],[1723,4,1575,22,"b"],[1723,5,1575,23],[1723,7,1575,25,"RANK_7"],[1723,13,1575,31],[1724,4,1575,33,"w"],[1724,5,1575,34],[1724,7,1575,36,"RANK_2"],[1725,2,1575,43],[1725,3,1575,44],[1726,2,1576,0],[1726,8,1576,6,"SAN_NULLMOVE"],[1726,20,1576,18],[1726,23,1576,21],[1726,27,1576,25],[1727,2,1577,0],[1728,2,1578,0],[1728,11,1578,9,"rank"],[1728,15,1578,13,"rank"],[1728,16,1578,14,"square"],[1728,22,1578,20],[1728,24,1578,22],[1729,4,1579,4],[1729,11,1579,11,"square"],[1729,17,1579,17],[1729,21,1579,21],[1729,22,1579,22],[1730,2,1580,0],[1731,2,1581,0],[1732,2,1582,0],[1732,11,1582,9,"file"],[1732,15,1582,13,"file"],[1732,16,1582,14,"square"],[1732,22,1582,20],[1732,24,1582,22],[1733,4,1583,4],[1733,11,1583,11,"square"],[1733,17,1583,17],[1733,20,1583,20],[1733,23,1583,23],[1734,2,1584,0],[1735,2,1585,0],[1735,11,1585,9,"isDigit"],[1735,18,1585,16,"isDigit"],[1735,19,1585,17,"c"],[1735,20,1585,18],[1735,22,1585,20],[1736,4,1586,4],[1736,11,1586,11],[1736,23,1586,23],[1736,24,1586,24,"indexOf"],[1736,31,1586,31],[1736,32,1586,32,"c"],[1736,33,1586,33],[1736,34,1586,34],[1736,39,1586,39],[1736,40,1586,40],[1736,41,1586,41],[1737,2,1587,0],[1738,2,1588,0],[1739,2,1589,0],[1739,11,1589,9,"algebraic"],[1739,20,1589,18,"algebraic"],[1739,21,1589,19,"square"],[1739,27,1589,25],[1739,29,1589,27],[1740,4,1590,4],[1740,10,1590,10,"f"],[1740,11,1590,11],[1740,14,1590,14,"file"],[1740,18,1590,18],[1740,19,1590,19,"square"],[1740,25,1590,25],[1740,26,1590,26],[1741,4,1591,4],[1741,10,1591,10,"r"],[1741,11,1591,11],[1741,14,1591,14,"rank"],[1741,18,1591,18],[1741,19,1591,19,"square"],[1741,25,1591,25],[1741,26,1591,26],[1742,4,1592,4],[1742,11,1592,12],[1742,21,1592,22],[1742,22,1592,23,"substring"],[1742,31,1592,32],[1742,32,1592,33,"f"],[1742,33,1592,34],[1742,35,1592,36,"f"],[1742,36,1592,37],[1742,39,1592,40],[1742,40,1592,41],[1742,41,1592,42],[1742,44,1593,8],[1742,54,1593,18],[1742,55,1593,19,"substring"],[1742,64,1593,28],[1742,65,1593,29,"r"],[1742,66,1593,30],[1742,68,1593,32,"r"],[1742,69,1593,33],[1742,72,1593,36],[1742,73,1593,37],[1742,74,1593,38],[1743,2,1594,0],[1744,2,1595,0],[1744,11,1595,9,"swapColor"],[1744,20,1595,18,"swapColor"],[1744,21,1595,19,"color"],[1744,26,1595,24],[1744,28,1595,26],[1745,4,1596,4],[1745,11,1596,11,"color"],[1745,16,1596,16],[1745,21,1596,21,"WHITE"],[1745,26,1596,26],[1745,29,1596,29,"BLACK"],[1745,34,1596,34],[1745,37,1596,37,"WHITE"],[1745,42,1596,42],[1746,2,1597,0],[1747,2,1598,0],[1747,11,1598,9,"validateFen"],[1747,22,1598,20,"validateFen"],[1747,23,1598,21,"fen"],[1747,26,1598,24],[1747,28,1598,26],[1748,4,1599,4],[1749,4,1600,4],[1749,10,1600,10,"tokens"],[1749,16,1600,16],[1749,19,1600,19,"fen"],[1749,22,1600,22],[1749,23,1600,23,"split"],[1749,28,1600,28],[1749,29,1600,29],[1749,34,1600,34],[1749,35,1600,35],[1750,4,1601,4],[1750,8,1601,8,"tokens"],[1750,14,1601,14],[1750,15,1601,15,"length"],[1750,21,1601,21],[1750,26,1601,26],[1750,27,1601,27],[1750,29,1601,29],[1751,6,1602,8],[1751,13,1602,15],[1752,8,1603,12,"ok"],[1752,10,1603,14],[1752,12,1603,16],[1752,17,1603,21],[1753,8,1604,12,"error"],[1753,13,1604,17],[1753,15,1604,19],[1754,6,1605,8],[1754,7,1605,9],[1755,4,1606,4],[1756,4,1607,4],[1757,4,1608,4],[1757,10,1608,10,"moveNumber"],[1757,20,1608,20],[1757,23,1608,23,"parseInt"],[1757,31,1608,31],[1757,32,1608,32,"tokens"],[1757,38,1608,38],[1757,39,1608,39],[1757,40,1608,40],[1757,41,1608,41],[1757,43,1608,43],[1757,45,1608,45],[1757,46,1608,46],[1758,4,1609,4],[1758,8,1609,8,"isNaN"],[1758,13,1609,13],[1758,14,1609,14,"moveNumber"],[1758,24,1609,24],[1758,25,1609,25],[1758,29,1609,29,"moveNumber"],[1758,39,1609,39],[1758,43,1609,43],[1758,44,1609,44],[1758,46,1609,46],[1759,6,1610,8],[1759,13,1610,15],[1760,8,1611,12,"ok"],[1760,10,1611,14],[1760,12,1611,16],[1760,17,1611,21],[1761,8,1612,12,"error"],[1761,13,1612,17],[1761,15,1612,19],[1762,6,1613,8],[1762,7,1613,9],[1763,4,1614,4],[1764,4,1615,4],[1765,4,1616,4],[1765,10,1616,10,"halfMoves"],[1765,19,1616,19],[1765,22,1616,22,"parseInt"],[1765,30,1616,30],[1765,31,1616,31,"tokens"],[1765,37,1616,37],[1765,38,1616,38],[1765,39,1616,39],[1765,40,1616,40],[1765,42,1616,42],[1765,44,1616,44],[1765,45,1616,45],[1766,4,1617,4],[1766,8,1617,8,"isNaN"],[1766,13,1617,13],[1766,14,1617,14,"halfMoves"],[1766,23,1617,23],[1766,24,1617,24],[1766,28,1617,28,"halfMoves"],[1766,37,1617,37],[1766,40,1617,40],[1766,41,1617,41],[1766,43,1617,43],[1767,6,1618,8],[1767,13,1618,15],[1768,8,1619,12,"ok"],[1768,10,1619,14],[1768,12,1619,16],[1768,17,1619,21],[1769,8,1620,12,"error"],[1769,13,1620,17],[1769,15,1620,19],[1770,6,1621,8],[1770,7,1621,9],[1771,4,1622,4],[1772,4,1623,4],[1773,4,1624,4],[1773,8,1624,8],[1773,9,1624,9],[1773,31,1624,31],[1773,32,1624,32,"test"],[1773,36,1624,36],[1773,37,1624,37,"tokens"],[1773,43,1624,43],[1773,44,1624,44],[1773,45,1624,45],[1773,46,1624,46],[1773,47,1624,47],[1773,49,1624,49],[1774,6,1625,8],[1774,13,1625,15],[1775,8,1625,17,"ok"],[1775,10,1625,19],[1775,12,1625,21],[1775,17,1625,26],[1776,8,1625,28,"error"],[1776,13,1625,33],[1776,15,1625,35],[1777,6,1625,79],[1777,7,1625,80],[1778,4,1626,4],[1779,4,1627,4],[1780,4,1628,4],[1780,8,1628,8],[1780,18,1628,18],[1780,19,1628,19,"test"],[1780,23,1628,23],[1780,24,1628,24,"tokens"],[1780,30,1628,30],[1780,31,1628,31],[1780,32,1628,32],[1780,33,1628,33],[1780,34,1628,34],[1780,36,1628,36],[1781,6,1629,8],[1781,13,1629,15],[1782,8,1629,17,"ok"],[1782,10,1629,19],[1782,12,1629,21],[1782,17,1629,26],[1783,8,1629,28,"error"],[1783,13,1629,33],[1783,15,1629,35],[1784,6,1629,83],[1784,7,1629,84],[1785,4,1630,4],[1786,4,1631,4],[1787,4,1632,4],[1787,8,1632,8],[1787,9,1632,9],[1787,18,1632,18],[1787,19,1632,19,"test"],[1787,23,1632,23],[1787,24,1632,24,"tokens"],[1787,30,1632,30],[1787,31,1632,31],[1787,32,1632,32],[1787,33,1632,33],[1787,34,1632,34],[1787,36,1632,36],[1788,6,1633,8],[1788,13,1633,15],[1789,8,1633,17,"ok"],[1789,10,1633,19],[1789,12,1633,21],[1789,17,1633,26],[1790,8,1633,28,"error"],[1790,13,1633,33],[1790,15,1633,35],[1791,6,1633,74],[1791,7,1633,75],[1792,4,1634,4],[1793,4,1635,4],[1794,4,1636,4],[1794,10,1636,10,"rows"],[1794,14,1636,14],[1794,17,1636,17,"tokens"],[1794,23,1636,23],[1794,24,1636,24],[1794,25,1636,25],[1794,26,1636,26],[1794,27,1636,27,"split"],[1794,32,1636,32],[1794,33,1636,33],[1794,36,1636,36],[1794,37,1636,37],[1795,4,1637,4],[1795,8,1637,8,"rows"],[1795,12,1637,12],[1795,13,1637,13,"length"],[1795,19,1637,19],[1795,24,1637,24],[1795,25,1637,25],[1795,27,1637,27],[1796,6,1638,8],[1796,13,1638,15],[1797,8,1639,12,"ok"],[1797,10,1639,14],[1797,12,1639,16],[1797,17,1639,21],[1798,8,1640,12,"error"],[1798,13,1640,17],[1798,15,1640,19],[1799,6,1641,8],[1799,7,1641,9],[1800,4,1642,4],[1801,4,1643,4],[1802,4,1644,4],[1802,9,1644,9],[1802,13,1644,13,"i"],[1802,14,1644,14],[1802,17,1644,17],[1802,18,1644,18],[1802,20,1644,20,"i"],[1802,21,1644,21],[1802,24,1644,24,"rows"],[1802,28,1644,28],[1802,29,1644,29,"length"],[1802,35,1644,35],[1802,37,1644,37,"i"],[1802,38,1644,38],[1802,40,1644,40],[1802,42,1644,42],[1803,6,1645,8],[1804,6,1646,8],[1804,10,1646,12,"sumFields"],[1804,19,1646,21],[1804,22,1646,24],[1804,23,1646,25],[1805,6,1647,8],[1805,10,1647,12,"previousWasNumber"],[1805,27,1647,29],[1805,30,1647,32],[1805,35,1647,37],[1806,6,1648,8],[1806,11,1648,13],[1806,15,1648,17,"k"],[1806,16,1648,18],[1806,19,1648,21],[1806,20,1648,22],[1806,22,1648,24,"k"],[1806,23,1648,25],[1806,26,1648,28,"rows"],[1806,30,1648,32],[1806,31,1648,33,"i"],[1806,32,1648,34],[1806,33,1648,35],[1806,34,1648,36,"length"],[1806,40,1648,42],[1806,42,1648,44,"k"],[1806,43,1648,45],[1806,45,1648,47],[1806,47,1648,49],[1807,8,1649,12],[1807,12,1649,16,"isDigit"],[1807,19,1649,23],[1807,20,1649,24,"rows"],[1807,24,1649,28],[1807,25,1649,29,"i"],[1807,26,1649,30],[1807,27,1649,31],[1807,28,1649,32,"k"],[1807,29,1649,33],[1807,30,1649,34],[1807,31,1649,35],[1807,33,1649,37],[1808,10,1650,16],[1808,14,1650,20,"previousWasNumber"],[1808,31,1650,37],[1808,33,1650,39],[1809,12,1651,20],[1809,19,1651,27],[1810,14,1652,24,"ok"],[1810,16,1652,26],[1810,18,1652,28],[1810,23,1652,33],[1811,14,1653,24,"error"],[1811,19,1653,29],[1811,21,1653,31],[1812,12,1654,20],[1812,13,1654,21],[1813,10,1655,16],[1814,10,1656,16,"sumFields"],[1814,19,1656,25],[1814,23,1656,29,"parseInt"],[1814,31,1656,37],[1814,32,1656,38,"rows"],[1814,36,1656,42],[1814,37,1656,43,"i"],[1814,38,1656,44],[1814,39,1656,45],[1814,40,1656,46,"k"],[1814,41,1656,47],[1814,42,1656,48],[1814,44,1656,50],[1814,46,1656,52],[1814,47,1656,53],[1815,10,1657,16,"previousWasNumber"],[1815,27,1657,33],[1815,30,1657,36],[1815,34,1657,40],[1816,8,1658,12],[1816,9,1658,13],[1816,15,1659,17],[1817,10,1660,16],[1817,14,1660,20],[1817,15,1660,21],[1817,33,1660,39],[1817,34,1660,40,"test"],[1817,38,1660,44],[1817,39,1660,45,"rows"],[1817,43,1660,49],[1817,44,1660,50,"i"],[1817,45,1660,51],[1817,46,1660,52],[1817,47,1660,53,"k"],[1817,48,1660,54],[1817,49,1660,55],[1817,50,1660,56],[1817,52,1660,58],[1818,12,1661,20],[1818,19,1661,27],[1819,14,1662,24,"ok"],[1819,16,1662,26],[1819,18,1662,28],[1819,23,1662,33],[1820,14,1663,24,"error"],[1820,19,1663,29],[1820,21,1663,31],[1821,12,1664,20],[1821,13,1664,21],[1822,10,1665,16],[1823,10,1666,16,"sumFields"],[1823,19,1666,25],[1823,23,1666,29],[1823,24,1666,30],[1824,10,1667,16,"previousWasNumber"],[1824,27,1667,33],[1824,30,1667,36],[1824,35,1667,41],[1825,8,1668,12],[1826,6,1669,8],[1827,6,1670,8],[1827,10,1670,12,"sumFields"],[1827,19,1670,21],[1827,24,1670,26],[1827,25,1670,27],[1827,27,1670,29],[1828,8,1671,12],[1828,15,1671,19],[1829,10,1672,16,"ok"],[1829,12,1672,18],[1829,14,1672,20],[1829,19,1672,25],[1830,10,1673,16,"error"],[1830,15,1673,21],[1830,17,1673,23],[1831,8,1674,12],[1831,9,1674,13],[1832,6,1675,8],[1833,4,1676,4],[1834,4,1677,4],[1835,4,1678,4],[1835,8,1678,9,"tokens"],[1835,14,1678,15],[1835,15,1678,16],[1835,16,1678,17],[1835,17,1678,18],[1835,18,1678,19],[1835,19,1678,20],[1835,20,1678,21],[1835,24,1678,25],[1835,27,1678,28],[1835,31,1678,32,"tokens"],[1835,37,1678,38],[1835,38,1678,39],[1835,39,1678,40],[1835,40,1678,41],[1835,44,1678,45],[1835,47,1678,48],[1835,51,1679,9,"tokens"],[1835,57,1679,15],[1835,58,1679,16],[1835,59,1679,17],[1835,60,1679,18],[1835,61,1679,19],[1835,62,1679,20],[1835,63,1679,21],[1835,67,1679,25],[1835,70,1679,28],[1835,74,1679,32,"tokens"],[1835,80,1679,38],[1835,81,1679,39],[1835,82,1679,40],[1835,83,1679,41],[1835,87,1679,45],[1835,90,1679,49],[1835,92,1679,51],[1836,6,1680,8],[1836,13,1680,15],[1837,8,1680,17,"ok"],[1837,10,1680,19],[1837,12,1680,21],[1837,17,1680,26],[1838,8,1680,28,"error"],[1838,13,1680,33],[1838,15,1680,35],[1839,6,1680,76],[1839,7,1680,77],[1840,4,1681,4],[1841,4,1682,4],[1842,4,1683,4],[1842,10,1683,10,"kings"],[1842,15,1683,15],[1842,18,1683,18],[1842,19,1684,8],[1843,6,1684,10,"color"],[1843,11,1684,15],[1843,13,1684,17],[1843,20,1684,24],[1844,6,1684,26,"regex"],[1844,11,1684,31],[1844,13,1684,33],[1845,4,1684,38],[1845,5,1684,39],[1845,7,1685,8],[1846,6,1685,10,"color"],[1846,11,1685,15],[1846,13,1685,17],[1846,20,1685,24],[1847,6,1685,26,"regex"],[1847,11,1685,31],[1847,13,1685,33],[1848,4,1685,38],[1848,5,1685,39],[1848,6,1686,5],[1849,4,1687,4],[1849,9,1687,9],[1849,15,1687,15],[1850,6,1687,17,"color"],[1850,11,1687,22],[1851,6,1687,24,"regex"],[1852,4,1687,30],[1852,5,1687,31],[1852,9,1687,35,"kings"],[1852,14,1687,40],[1852,16,1687,42],[1853,6,1688,8],[1853,10,1688,12],[1853,11,1688,13,"regex"],[1853,16,1688,18],[1853,17,1688,19,"test"],[1853,21,1688,23],[1853,22,1688,24,"tokens"],[1853,28,1688,30],[1853,29,1688,31],[1853,30,1688,32],[1853,31,1688,33],[1853,32,1688,34],[1853,34,1688,36],[1854,8,1689,12],[1854,15,1689,19],[1855,10,1689,21,"ok"],[1855,12,1689,23],[1855,14,1689,25],[1855,19,1689,30],[1856,10,1689,32,"error"],[1856,15,1689,37],[1856,17,1689,39],[1856,41,1689,63,"color"],[1856,46,1689,68],[1857,8,1689,76],[1857,9,1689,77],[1858,6,1690,8],[1859,6,1691,8],[1859,10,1691,12],[1859,11,1691,13,"tokens"],[1859,17,1691,19],[1859,18,1691,20],[1859,19,1691,21],[1859,20,1691,22],[1859,21,1691,23,"match"],[1859,26,1691,28],[1859,27,1691,29,"regex"],[1859,32,1691,34],[1859,33,1691,35],[1859,37,1691,39],[1859,39,1691,41],[1859,41,1691,43,"length"],[1859,47,1691,49],[1859,50,1691,52],[1859,51,1691,53],[1859,53,1691,55],[1860,8,1692,12],[1860,15,1692,19],[1861,10,1692,21,"ok"],[1861,12,1692,23],[1861,14,1692,25],[1861,19,1692,30],[1862,10,1692,32,"error"],[1862,15,1692,37],[1862,17,1692,39],[1862,42,1692,64,"color"],[1862,47,1692,69],[1863,8,1692,78],[1863,9,1692,79],[1864,6,1693,8],[1865,4,1694,4],[1866,4,1695,4],[1867,4,1696,4],[1867,8,1696,8,"Array"],[1867,13,1696,13],[1867,14,1696,14,"from"],[1867,18,1696,18],[1867,19,1696,19,"rows"],[1867,23,1696,23],[1867,24,1696,24],[1867,25,1696,25],[1867,26,1696,26],[1867,29,1696,29,"rows"],[1867,33,1696,33],[1867,34,1696,34],[1867,35,1696,35],[1867,36,1696,36],[1867,37,1696,37],[1867,38,1696,38,"some"],[1867,42,1696,42],[1867,43,1696,44,"char"],[1867,47,1696,48],[1867,51,1696,53,"char"],[1867,55,1696,57],[1867,56,1696,58,"toUpperCase"],[1867,67,1696,69],[1867,68,1696,70],[1867,69,1696,71],[1867,74,1696,76],[1867,77,1696,79],[1867,78,1696,80],[1867,80,1696,82],[1868,6,1697,8],[1868,13,1697,15],[1869,8,1698,12,"ok"],[1869,10,1698,14],[1869,12,1698,16],[1869,17,1698,21],[1870,8,1699,12,"error"],[1870,13,1699,17],[1870,15,1699,19],[1871,6,1700,8],[1871,7,1700,9],[1872,4,1701,4],[1873,4,1702,4],[1873,11,1702,11],[1874,6,1702,13,"ok"],[1874,8,1702,15],[1874,10,1702,17],[1875,4,1702,22],[1875,5,1702,23],[1876,2,1703,0],[1877,2,1704,0],[1878,2,1705,0],[1878,11,1705,9,"getDisambiguator"],[1878,27,1705,25,"getDisambiguator"],[1878,28,1705,26,"move"],[1878,32,1705,30],[1878,34,1705,32,"moves"],[1878,39,1705,37],[1878,41,1705,39],[1879,4,1706,4],[1879,10,1706,10,"from"],[1879,14,1706,14],[1879,17,1706,17,"move"],[1879,21,1706,21],[1879,22,1706,22,"from"],[1879,26,1706,26],[1880,4,1707,4],[1880,10,1707,10,"to"],[1880,12,1707,12],[1880,15,1707,15,"move"],[1880,19,1707,19],[1880,20,1707,20,"to"],[1880,22,1707,22],[1881,4,1708,4],[1881,10,1708,10,"piece"],[1881,15,1708,15],[1881,18,1708,18,"move"],[1881,22,1708,22],[1881,23,1708,23,"piece"],[1881,28,1708,28],[1882,4,1709,4],[1882,8,1709,8,"ambiguities"],[1882,19,1709,19],[1882,22,1709,22],[1882,23,1709,23],[1883,4,1710,4],[1883,8,1710,8,"sameRank"],[1883,16,1710,16],[1883,19,1710,19],[1883,20,1710,20],[1884,4,1711,4],[1884,8,1711,8,"sameFile"],[1884,16,1711,16],[1884,19,1711,19],[1884,20,1711,20],[1885,4,1712,4],[1885,9,1712,9],[1885,13,1712,13,"i"],[1885,14,1712,14],[1885,17,1712,17],[1885,18,1712,18],[1885,20,1712,20,"len"],[1885,23,1712,23],[1885,26,1712,26,"moves"],[1885,31,1712,31],[1885,32,1712,32,"length"],[1885,38,1712,38],[1885,40,1712,40,"i"],[1885,41,1712,41],[1885,44,1712,44,"len"],[1885,47,1712,47],[1885,49,1712,49,"i"],[1885,50,1712,50],[1885,52,1712,52],[1885,54,1712,54],[1886,6,1713,8],[1886,12,1713,14,"ambigFrom"],[1886,21,1713,23],[1886,24,1713,26,"moves"],[1886,29,1713,31],[1886,30,1713,32,"i"],[1886,31,1713,33],[1886,32,1713,34],[1886,33,1713,35,"from"],[1886,37,1713,39],[1887,6,1714,8],[1887,12,1714,14,"ambigTo"],[1887,19,1714,21],[1887,22,1714,24,"moves"],[1887,27,1714,29],[1887,28,1714,30,"i"],[1887,29,1714,31],[1887,30,1714,32],[1887,31,1714,33,"to"],[1887,33,1714,35],[1888,6,1715,8],[1888,12,1715,14,"ambigPiece"],[1888,22,1715,24],[1888,25,1715,27,"moves"],[1888,30,1715,32],[1888,31,1715,33,"i"],[1888,32,1715,34],[1888,33,1715,35],[1888,34,1715,36,"piece"],[1888,39,1715,41],[1889,6,1716,8],[1890,0,1717,0],[1891,0,1718,0],[1892,0,1719,0],[1893,6,1720,8],[1893,10,1720,12,"piece"],[1893,15,1720,17],[1893,20,1720,22,"ambigPiece"],[1893,30,1720,32],[1893,34,1720,36,"from"],[1893,38,1720,40],[1893,43,1720,45,"ambigFrom"],[1893,52,1720,54],[1893,56,1720,58,"to"],[1893,58,1720,60],[1893,63,1720,65,"ambigTo"],[1893,70,1720,72],[1893,72,1720,74],[1894,8,1721,12,"ambiguities"],[1894,19,1721,23],[1894,21,1721,25],[1895,8,1722,12],[1895,12,1722,16,"rank"],[1895,16,1722,20],[1895,17,1722,21,"from"],[1895,21,1722,25],[1895,22,1722,26],[1895,27,1722,31,"rank"],[1895,31,1722,35],[1895,32,1722,36,"ambigFrom"],[1895,41,1722,45],[1895,42,1722,46],[1895,44,1722,48],[1896,10,1723,16,"sameRank"],[1896,18,1723,24],[1896,20,1723,26],[1897,8,1724,12],[1898,8,1725,12],[1898,12,1725,16,"file"],[1898,16,1725,20],[1898,17,1725,21,"from"],[1898,21,1725,25],[1898,22,1725,26],[1898,27,1725,31,"file"],[1898,31,1725,35],[1898,32,1725,36,"ambigFrom"],[1898,41,1725,45],[1898,42,1725,46],[1898,44,1725,48],[1899,10,1726,16,"sameFile"],[1899,18,1726,24],[1899,20,1726,26],[1900,8,1727,12],[1901,6,1728,8],[1902,4,1729,4],[1903,4,1730,4],[1903,8,1730,8,"ambiguities"],[1903,19,1730,19],[1903,22,1730,22],[1903,23,1730,23],[1903,25,1730,25],[1904,6,1731,8],[1904,10,1731,12,"sameRank"],[1904,18,1731,20],[1904,21,1731,23],[1904,22,1731,24],[1904,26,1731,28,"sameFile"],[1904,34,1731,36],[1904,37,1731,39],[1904,38,1731,40],[1904,40,1731,42],[1905,8,1732,12],[1906,0,1733,0],[1907,0,1734,0],[1908,0,1735,0],[1909,8,1736,12],[1909,15,1736,19,"algebraic"],[1909,24,1736,28],[1909,25,1736,29,"from"],[1909,29,1736,33],[1909,30,1736,34],[1910,6,1737,8],[1910,7,1737,9],[1910,13,1738,13],[1910,17,1738,17,"sameFile"],[1910,25,1738,25],[1910,28,1738,28],[1910,29,1738,29],[1910,31,1738,31],[1911,8,1739,12],[1912,0,1740,0],[1913,0,1741,0],[1914,0,1742,0],[1915,8,1743,12],[1915,15,1743,19,"algebraic"],[1915,24,1743,28],[1915,25,1743,29,"from"],[1915,29,1743,33],[1915,30,1743,34],[1915,31,1743,35,"charAt"],[1915,37,1743,41],[1915,38,1743,42],[1915,39,1743,43],[1915,40,1743,44],[1916,6,1744,8],[1916,7,1744,9],[1916,13,1745,13],[1917,8,1746,12],[1918,8,1747,12],[1918,15,1747,19,"algebraic"],[1918,24,1747,28],[1918,25,1747,29,"from"],[1918,29,1747,33],[1918,30,1747,34],[1918,31,1747,35,"charAt"],[1918,37,1747,41],[1918,38,1747,42],[1918,39,1747,43],[1918,40,1747,44],[1919,6,1748,8],[1920,4,1749,4],[1921,4,1750,4],[1921,11,1750,11],[1921,13,1750,13],[1922,2,1751,0],[1923,2,1752,0],[1923,11,1752,9,"addMove"],[1923,18,1752,16,"addMove"],[1923,19,1752,17,"moves"],[1923,24,1752,22],[1923,26,1752,24,"color"],[1923,31,1752,29],[1923,33,1752,31,"from"],[1923,37,1752,35],[1923,39,1752,37,"to"],[1923,41,1752,39],[1923,43,1752,41,"piece"],[1923,48,1752,46],[1923,50,1752,48,"captured"],[1923,58,1752,56],[1923,61,1752,59,"undefined"],[1923,70,1752,68],[1923,72,1752,70,"flags"],[1923,77,1752,75],[1923,80,1752,78,"BITS"],[1923,84,1752,82],[1923,85,1752,83,"NORMAL"],[1923,91,1752,89],[1923,93,1752,91],[1924,4,1753,4],[1924,10,1753,10,"r"],[1924,11,1753,11],[1924,14,1753,14,"rank"],[1924,18,1753,18],[1924,19,1753,19,"to"],[1924,21,1753,21],[1924,22,1753,22],[1925,4,1754,4],[1925,8,1754,8,"piece"],[1925,13,1754,13],[1925,18,1754,18,"PAWN"],[1925,22,1754,22],[1925,27,1754,27,"r"],[1925,28,1754,28],[1925,33,1754,33,"RANK_1"],[1925,39,1754,39],[1925,43,1754,43,"r"],[1925,44,1754,44],[1925,49,1754,49,"RANK_8"],[1925,55,1754,55],[1925,56,1754,56],[1925,58,1754,58],[1926,6,1755,8],[1926,11,1755,13],[1926,15,1755,17,"i"],[1926,16,1755,18],[1926,19,1755,21],[1926,20,1755,22],[1926,22,1755,24,"i"],[1926,23,1755,25],[1926,26,1755,28,"PROMOTIONS"],[1926,36,1755,38],[1926,37,1755,39,"length"],[1926,43,1755,45],[1926,45,1755,47,"i"],[1926,46,1755,48],[1926,48,1755,50],[1926,50,1755,52],[1927,8,1756,12],[1927,14,1756,18,"promotion"],[1927,23,1756,27],[1927,26,1756,30,"PROMOTIONS"],[1927,36,1756,40],[1927,37,1756,41,"i"],[1927,38,1756,42],[1927,39,1756,43],[1928,8,1757,12,"moves"],[1928,13,1757,17],[1928,14,1757,18,"push"],[1928,18,1757,22],[1928,19,1757,23],[1929,10,1758,16,"color"],[1929,15,1758,21],[1930,10,1759,16,"from"],[1930,14,1759,20],[1931,10,1760,16,"to"],[1931,12,1760,18],[1932,10,1761,16,"piece"],[1932,15,1761,21],[1933,10,1762,16,"captured"],[1933,18,1762,24],[1934,10,1763,16,"promotion"],[1934,19,1763,25],[1935,10,1764,16,"flags"],[1935,15,1764,21],[1935,17,1764,23,"flags"],[1935,22,1764,28],[1935,25,1764,31,"BITS"],[1935,29,1764,35],[1935,30,1764,36,"PROMOTION"],[1936,8,1765,12],[1936,9,1765,13],[1936,10,1765,14],[1937,6,1766,8],[1938,4,1767,4],[1938,5,1767,5],[1938,11,1768,9],[1939,6,1769,8,"moves"],[1939,11,1769,13],[1939,12,1769,14,"push"],[1939,16,1769,18],[1939,17,1769,19],[1940,8,1770,12,"color"],[1940,13,1770,17],[1941,8,1771,12,"from"],[1941,12,1771,16],[1942,8,1772,12,"to"],[1942,10,1772,14],[1943,8,1773,12,"piece"],[1943,13,1773,17],[1944,8,1774,12,"captured"],[1944,16,1774,20],[1945,8,1775,12,"flags"],[1946,6,1776,8],[1946,7,1776,9],[1946,8,1776,10],[1947,4,1777,4],[1948,2,1778,0],[1949,2,1779,0],[1949,11,1779,9,"inferPieceType"],[1949,25,1779,23,"inferPieceType"],[1949,26,1779,24,"san"],[1949,29,1779,27],[1949,31,1779,29],[1950,4,1780,4],[1950,8,1780,8,"pieceType"],[1950,17,1780,17],[1950,20,1780,20,"san"],[1950,23,1780,23],[1950,24,1780,24,"charAt"],[1950,30,1780,30],[1950,31,1780,31],[1950,32,1780,32],[1950,33,1780,33],[1951,4,1781,4],[1951,8,1781,8,"pieceType"],[1951,17,1781,17],[1951,21,1781,21],[1951,24,1781,24],[1951,28,1781,28,"pieceType"],[1951,37,1781,37],[1951,41,1781,41],[1951,44,1781,44],[1951,46,1781,46],[1952,6,1782,8],[1952,12,1782,14,"matches"],[1952,19,1782,21],[1952,22,1782,24,"san"],[1952,25,1782,27],[1952,26,1782,28,"match"],[1952,31,1782,33],[1952,32,1782,34],[1952,50,1782,52],[1952,51,1782,53],[1953,6,1783,8],[1953,10,1783,12,"matches"],[1953,17,1783,19],[1953,19,1783,21],[1954,8,1784,12],[1954,15,1784,19,"undefined"],[1954,24,1784,28],[1955,6,1785,8],[1956,6,1786,8],[1956,13,1786,15,"PAWN"],[1956,17,1786,19],[1957,4,1787,4],[1958,4,1788,4,"pieceType"],[1958,13,1788,13],[1958,16,1788,16,"pieceType"],[1958,25,1788,25],[1958,26,1788,26,"toLowerCase"],[1958,37,1788,37],[1958,38,1788,38],[1958,39,1788,39],[1959,4,1789,4],[1959,8,1789,8,"pieceType"],[1959,17,1789,17],[1959,22,1789,22],[1959,25,1789,25],[1959,27,1789,27],[1960,6,1790,8],[1960,13,1790,15,"KING"],[1960,17,1790,19],[1961,4,1791,4],[1962,4,1792,4],[1962,11,1792,11,"pieceType"],[1962,20,1792,20],[1963,2,1793,0],[1964,2,1794,0],[1965,2,1795,0],[1965,11,1795,9,"strippedSan"],[1965,22,1795,20,"strippedSan"],[1965,23,1795,21,"move"],[1965,27,1795,25],[1965,29,1795,27],[1966,4,1796,4],[1966,11,1796,11,"move"],[1966,15,1796,15],[1966,16,1796,16,"replace"],[1966,23,1796,23],[1966,24,1796,24],[1966,27,1796,27],[1966,29,1796,29],[1966,31,1796,31],[1966,32,1796,32],[1966,33,1796,33,"replace"],[1966,40,1796,40],[1966,41,1796,41],[1966,54,1796,54],[1966,56,1796,56],[1966,58,1796,58],[1966,59,1796,59],[1967,2,1797,0],[1968,2,1798,0],[1968,8,1798,6,"Chess"],[1968,13,1798,11],[1968,14,1798,12],[1969,4,1799,4,"_board"],[1969,10,1799,10],[1969,13,1799,13],[1969,17,1799,17,"Array"],[1969,22,1799,22],[1969,23,1799,23],[1969,26,1799,26],[1969,27,1799,27],[1970,4,1800,4,"_turn"],[1970,9,1800,9],[1970,12,1800,12,"WHITE"],[1970,17,1800,17],[1971,4,1801,4,"_header"],[1971,11,1801,11],[1971,14,1801,14],[1971,15,1801,15],[1971,16,1801,16],[1972,4,1802,4,"_kings"],[1972,10,1802,10],[1972,13,1802,13],[1973,6,1802,15,"w"],[1973,7,1802,16],[1973,9,1802,18,"EMPTY"],[1973,14,1802,23],[1974,6,1802,25,"b"],[1974,7,1802,26],[1974,9,1802,28,"EMPTY"],[1975,4,1802,34],[1975,5,1802,35],[1976,4,1803,4,"_epSquare"],[1976,13,1803,13],[1976,16,1803,16],[1976,17,1803,17],[1976,18,1803,18],[1977,4,1804,4,"_halfMoves"],[1977,14,1804,14],[1977,17,1804,17],[1977,18,1804,18],[1978,4,1805,4,"_moveNumber"],[1978,15,1805,15],[1978,18,1805,18],[1978,19,1805,19],[1979,4,1806,4,"_history"],[1979,12,1806,12],[1979,15,1806,15],[1979,17,1806,17],[1980,4,1807,4,"_comments"],[1980,13,1807,13],[1980,16,1807,16],[1980,17,1807,17],[1980,18,1807,18],[1981,4,1808,4,"_castling"],[1981,13,1808,13],[1981,16,1808,16],[1982,6,1808,18,"w"],[1982,7,1808,19],[1982,9,1808,21],[1982,10,1808,22],[1983,6,1808,24,"b"],[1983,7,1808,25],[1983,9,1808,27],[1984,4,1808,29],[1984,5,1808,30],[1985,4,1809,4,"_hash"],[1985,9,1809,9],[1985,12,1809,12],[1985,14,1809,14],[1986,4,1810,4],[1987,4,1811,4,"_positionCount"],[1987,18,1811,18],[1987,21,1811,21],[1987,25,1811,25,"Map"],[1987,28,1811,28],[1987,29,1811,29],[1987,30,1811,30],[1988,4,1812,4,"constructor"],[1988,15,1812,15,"constructor"],[1988,16,1812,16,"fen"],[1988,19,1812,19],[1988,22,1812,22,"DEFAULT_POSITION"],[1988,38,1812,38],[1988,40,1812,40],[1989,6,1812,42,"skipValidation"],[1989,20,1812,56],[1989,23,1812,59],[1990,4,1812,65],[1990,5,1812,66],[1990,8,1812,69],[1990,9,1812,70],[1990,10,1812,71],[1990,12,1812,73],[1991,6,1813,8],[1991,10,1813,12],[1991,11,1813,13,"load"],[1991,15,1813,17],[1991,16,1813,18,"fen"],[1991,19,1813,21],[1991,21,1813,23],[1992,8,1813,25,"skipValidation"],[1993,6,1813,40],[1993,7,1813,41],[1993,8,1813,42],[1994,4,1814,4],[1995,4,1815,4,"clear"],[1995,9,1815,9,"clear"],[1995,10,1815,10],[1996,6,1815,12,"preserveHeaders"],[1996,21,1815,27],[1996,24,1815,30],[1997,4,1815,36],[1997,5,1815,37],[1997,8,1815,40],[1997,9,1815,41],[1997,10,1815,42],[1997,12,1815,44],[1998,6,1816,8],[1998,10,1816,12],[1998,11,1816,13,"_board"],[1998,17,1816,19],[1998,20,1816,22],[1998,24,1816,26,"Array"],[1998,29,1816,31],[1998,30,1816,32],[1998,33,1816,35],[1998,34,1816,36],[1999,6,1817,8],[1999,10,1817,12],[1999,11,1817,13,"_kings"],[1999,17,1817,19],[1999,20,1817,22],[2000,8,1817,24,"w"],[2000,9,1817,25],[2000,11,1817,27,"EMPTY"],[2000,16,1817,32],[2001,8,1817,34,"b"],[2001,9,1817,35],[2001,11,1817,37,"EMPTY"],[2002,6,1817,43],[2002,7,1817,44],[2003,6,1818,8],[2003,10,1818,12],[2003,11,1818,13,"_turn"],[2003,16,1818,18],[2003,19,1818,21,"WHITE"],[2003,24,1818,26],[2004,6,1819,8],[2004,10,1819,12],[2004,11,1819,13,"_castling"],[2004,20,1819,22],[2004,23,1819,25],[2005,8,1819,27,"w"],[2005,9,1819,28],[2005,11,1819,30],[2005,12,1819,31],[2006,8,1819,33,"b"],[2006,9,1819,34],[2006,11,1819,36],[2007,6,1819,38],[2007,7,1819,39],[2008,6,1820,8],[2008,10,1820,12],[2008,11,1820,13,"_epSquare"],[2008,20,1820,22],[2008,23,1820,25,"EMPTY"],[2008,28,1820,30],[2009,6,1821,8],[2009,10,1821,12],[2009,11,1821,13,"_halfMoves"],[2009,21,1821,23],[2009,24,1821,26],[2009,25,1821,27],[2010,6,1822,8],[2010,10,1822,12],[2010,11,1822,13,"_moveNumber"],[2010,22,1822,24],[2010,25,1822,27],[2010,26,1822,28],[2011,6,1823,8],[2011,10,1823,12],[2011,11,1823,13,"_history"],[2011,19,1823,21],[2011,22,1823,24],[2011,24,1823,26],[2012,6,1824,8],[2012,10,1824,12],[2012,11,1824,13,"_comments"],[2012,20,1824,22],[2012,23,1824,25],[2012,24,1824,26],[2012,25,1824,27],[2013,6,1825,8],[2013,10,1825,12],[2013,11,1825,13,"_header"],[2013,18,1825,20],[2013,21,1825,23,"preserveHeaders"],[2013,36,1825,38],[2013,39,1825,41],[2013,43,1825,45],[2013,44,1825,46,"_header"],[2013,51,1825,53],[2013,54,1825,53,"Object"],[2013,60,1825,53],[2013,61,1825,53,"assign"],[2013,67,1825,53],[2013,72,1825,61,"HEADER_TEMPLATE"],[2013,87,1825,76],[2013,88,1825,78],[2014,6,1826,8],[2014,10,1826,12],[2014,11,1826,13,"_hash"],[2014,16,1826,18],[2014,19,1826,21],[2014,23,1826,25],[2014,24,1826,26,"_computeHash"],[2014,36,1826,38],[2014,37,1826,39],[2014,38,1826,40],[2015,6,1827,8],[2015,10,1827,12],[2015,11,1827,13,"_positionCount"],[2015,25,1827,27],[2015,28,1827,30],[2015,32,1827,34,"Map"],[2015,35,1827,37],[2015,36,1827,38],[2015,37,1827,39],[2016,6,1828,8],[2017,0,1829,0],[2018,0,1830,0],[2019,0,1831,0],[2020,0,1832,0],[2021,6,1833,8],[2021,10,1833,12],[2021,11,1833,13,"_header"],[2021,18,1833,20],[2021,19,1833,21],[2021,26,1833,28],[2021,27,1833,29],[2021,30,1833,32],[2021,34,1833,36],[2022,6,1834,8],[2022,10,1834,12],[2022,11,1834,13,"_header"],[2022,18,1834,20],[2022,19,1834,21],[2022,24,1834,26],[2022,25,1834,27],[2022,28,1834,30],[2022,32,1834,34],[2023,4,1835,4],[2024,4,1836,4,"load"],[2024,8,1836,8,"load"],[2024,9,1836,9,"fen"],[2024,12,1836,12],[2024,14,1836,14],[2025,6,1836,16,"skipValidation"],[2025,20,1836,30],[2025,23,1836,33],[2025,28,1836,38],[2026,6,1836,40,"preserveHeaders"],[2026,21,1836,55],[2026,24,1836,58],[2027,4,1836,64],[2027,5,1836,65],[2027,8,1836,68],[2027,9,1836,69],[2027,10,1836,70],[2027,12,1836,72],[2028,6,1837,8],[2028,10,1837,12,"tokens"],[2028,16,1837,18],[2028,19,1837,21,"fen"],[2028,22,1837,24],[2028,23,1837,25,"split"],[2028,28,1837,30],[2028,29,1837,31],[2028,34,1837,36],[2028,35,1837,37],[2029,6,1838,8],[2030,6,1839,8],[2030,10,1839,12,"tokens"],[2030,16,1839,18],[2030,17,1839,19,"length"],[2030,23,1839,25],[2030,27,1839,29],[2030,28,1839,30],[2030,32,1839,34,"tokens"],[2030,38,1839,40],[2030,39,1839,41,"length"],[2030,45,1839,47],[2030,48,1839,50],[2030,49,1839,51],[2030,51,1839,53],[2031,8,1840,12],[2031,14,1840,18,"adjustments"],[2031,25,1840,29],[2031,28,1840,32],[2031,29,1840,33],[2031,32,1840,36],[2031,34,1840,38],[2031,37,1840,41],[2031,39,1840,43],[2031,42,1840,46],[2031,44,1840,48],[2031,47,1840,51],[2031,48,1840,52],[2032,8,1841,12,"fen"],[2032,11,1841,15],[2032,14,1841,18,"tokens"],[2032,20,1841,24],[2032,21,1841,25,"concat"],[2032,27,1841,31],[2032,28,1841,32,"adjustments"],[2032,39,1841,43],[2032,40,1841,44,"slice"],[2032,45,1841,49],[2032,46,1841,50],[2032,48,1841,52],[2032,49,1841,53],[2032,52,1841,56,"tokens"],[2032,58,1841,62],[2032,59,1841,63,"length"],[2032,65,1841,69],[2032,66,1841,70],[2032,67,1841,71],[2032,68,1841,72],[2032,69,1841,73,"join"],[2032,73,1841,77],[2032,74,1841,78],[2032,77,1841,81],[2032,78,1841,82],[2033,6,1842,8],[2034,6,1843,8,"tokens"],[2034,12,1843,14],[2034,15,1843,17,"fen"],[2034,18,1843,20],[2034,19,1843,21,"split"],[2034,24,1843,26],[2034,25,1843,27],[2034,30,1843,32],[2034,31,1843,33],[2035,6,1844,8],[2035,10,1844,12],[2035,11,1844,13,"skipValidation"],[2035,25,1844,27],[2035,27,1844,29],[2036,8,1845,12],[2036,14,1845,18],[2037,10,1845,20,"ok"],[2037,12,1845,22],[2038,10,1845,24,"error"],[2039,8,1845,30],[2039,9,1845,31],[2039,12,1845,34,"validateFen"],[2039,23,1845,45],[2039,24,1845,46,"fen"],[2039,27,1845,49],[2039,28,1845,50],[2040,8,1846,12],[2040,12,1846,16],[2040,13,1846,17,"ok"],[2040,15,1846,19],[2040,17,1846,21],[2041,10,1847,16],[2041,16,1847,22],[2041,20,1847,26,"Error"],[2041,25,1847,31],[2041,26,1847,32,"error"],[2041,31,1847,37],[2041,32,1847,38],[2042,8,1848,12],[2043,6,1849,8],[2044,6,1850,8],[2044,12,1850,14,"position"],[2044,20,1850,22],[2044,23,1850,25,"tokens"],[2044,29,1850,31],[2044,30,1850,32],[2044,31,1850,33],[2044,32,1850,34],[2045,6,1851,8],[2045,10,1851,12,"square"],[2045,16,1851,18],[2045,19,1851,21],[2045,20,1851,22],[2046,6,1852,8],[2046,10,1852,12],[2046,11,1852,13,"clear"],[2046,16,1852,18],[2046,17,1852,19],[2047,8,1852,21,"preserveHeaders"],[2048,6,1852,37],[2048,7,1852,38],[2048,8,1852,39],[2049,6,1853,8],[2049,11,1853,13],[2049,15,1853,17,"i"],[2049,16,1853,18],[2049,19,1853,21],[2049,20,1853,22],[2049,22,1853,24,"i"],[2049,23,1853,25],[2049,26,1853,28,"position"],[2049,34,1853,36],[2049,35,1853,37,"length"],[2049,41,1853,43],[2049,43,1853,45,"i"],[2049,44,1853,46],[2049,46,1853,48],[2049,48,1853,50],[2050,8,1854,12],[2050,14,1854,18,"piece"],[2050,19,1854,23],[2050,22,1854,26,"position"],[2050,30,1854,34],[2050,31,1854,35,"charAt"],[2050,37,1854,41],[2050,38,1854,42,"i"],[2050,39,1854,43],[2050,40,1854,44],[2051,8,1855,12],[2051,12,1855,16,"piece"],[2051,17,1855,21],[2051,22,1855,26],[2051,25,1855,29],[2051,27,1855,31],[2052,10,1856,16,"square"],[2052,16,1856,22],[2052,20,1856,26],[2052,21,1856,27],[2053,8,1857,12],[2053,9,1857,13],[2053,15,1858,17],[2053,19,1858,21,"isDigit"],[2053,26,1858,28],[2053,27,1858,29,"piece"],[2053,32,1858,34],[2053,33,1858,35],[2053,35,1858,37],[2054,10,1859,16,"square"],[2054,16,1859,22],[2054,20,1859,26,"parseInt"],[2054,28,1859,34],[2054,29,1859,35,"piece"],[2054,34,1859,40],[2054,36,1859,42],[2054,38,1859,44],[2054,39,1859,45],[2055,8,1860,12],[2055,9,1860,13],[2055,15,1861,17],[2056,10,1862,16],[2056,16,1862,22,"color"],[2056,21,1862,27],[2056,24,1862,30,"piece"],[2056,29,1862,35],[2056,32,1862,38],[2056,35,1862,41],[2056,38,1862,44,"WHITE"],[2056,43,1862,49],[2056,46,1862,52,"BLACK"],[2056,51,1862,57],[2057,10,1863,16],[2057,14,1863,20],[2057,15,1863,21,"_put"],[2057,19,1863,25],[2057,20,1863,26],[2058,12,1863,28,"type"],[2058,16,1863,32],[2058,18,1863,34,"piece"],[2058,23,1863,39],[2058,24,1863,40,"toLowerCase"],[2058,35,1863,51],[2058,36,1863,52],[2058,37,1863,53],[2059,12,1863,55,"color"],[2060,10,1863,61],[2060,11,1863,62],[2060,13,1863,64,"algebraic"],[2060,22,1863,73],[2060,23,1863,74,"square"],[2060,29,1863,80],[2060,30,1863,81],[2060,31,1863,82],[2061,10,1864,16,"square"],[2061,16,1864,22],[2061,18,1864,24],[2062,8,1865,12],[2063,6,1866,8],[2064,6,1867,8],[2064,10,1867,12],[2064,11,1867,13,"_turn"],[2064,16,1867,18],[2064,19,1867,21,"tokens"],[2064,25,1867,27],[2064,26,1867,28],[2064,27,1867,29],[2064,28,1867,30],[2065,6,1868,8],[2065,10,1868,12,"tokens"],[2065,16,1868,18],[2065,17,1868,19],[2065,18,1868,20],[2065,19,1868,21],[2065,20,1868,22,"indexOf"],[2065,27,1868,29],[2065,28,1868,30],[2065,31,1868,33],[2065,32,1868,34],[2065,35,1868,37],[2065,36,1868,38],[2065,37,1868,39],[2065,39,1868,41],[2066,8,1869,12],[2066,12,1869,16],[2066,13,1869,17,"_castling"],[2066,22,1869,26],[2066,23,1869,27,"w"],[2066,24,1869,28],[2066,28,1869,32,"BITS"],[2066,32,1869,36],[2066,33,1869,37,"KSIDE_CASTLE"],[2066,45,1869,49],[2067,6,1870,8],[2068,6,1871,8],[2068,10,1871,12,"tokens"],[2068,16,1871,18],[2068,17,1871,19],[2068,18,1871,20],[2068,19,1871,21],[2068,20,1871,22,"indexOf"],[2068,27,1871,29],[2068,28,1871,30],[2068,31,1871,33],[2068,32,1871,34],[2068,35,1871,37],[2068,36,1871,38],[2068,37,1871,39],[2068,39,1871,41],[2069,8,1872,12],[2069,12,1872,16],[2069,13,1872,17,"_castling"],[2069,22,1872,26],[2069,23,1872,27,"w"],[2069,24,1872,28],[2069,28,1872,32,"BITS"],[2069,32,1872,36],[2069,33,1872,37,"QSIDE_CASTLE"],[2069,45,1872,49],[2070,6,1873,8],[2071,6,1874,8],[2071,10,1874,12,"tokens"],[2071,16,1874,18],[2071,17,1874,19],[2071,18,1874,20],[2071,19,1874,21],[2071,20,1874,22,"indexOf"],[2071,27,1874,29],[2071,28,1874,30],[2071,31,1874,33],[2071,32,1874,34],[2071,35,1874,37],[2071,36,1874,38],[2071,37,1874,39],[2071,39,1874,41],[2072,8,1875,12],[2072,12,1875,16],[2072,13,1875,17,"_castling"],[2072,22,1875,26],[2072,23,1875,27,"b"],[2072,24,1875,28],[2072,28,1875,32,"BITS"],[2072,32,1875,36],[2072,33,1875,37,"KSIDE_CASTLE"],[2072,45,1875,49],[2073,6,1876,8],[2074,6,1877,8],[2074,10,1877,12,"tokens"],[2074,16,1877,18],[2074,17,1877,19],[2074,18,1877,20],[2074,19,1877,21],[2074,20,1877,22,"indexOf"],[2074,27,1877,29],[2074,28,1877,30],[2074,31,1877,33],[2074,32,1877,34],[2074,35,1877,37],[2074,36,1877,38],[2074,37,1877,39],[2074,39,1877,41],[2075,8,1878,12],[2075,12,1878,16],[2075,13,1878,17,"_castling"],[2075,22,1878,26],[2075,23,1878,27,"b"],[2075,24,1878,28],[2075,28,1878,32,"BITS"],[2075,32,1878,36],[2075,33,1878,37,"QSIDE_CASTLE"],[2075,45,1878,49],[2076,6,1879,8],[2077,6,1880,8],[2077,10,1880,12],[2077,11,1880,13,"_epSquare"],[2077,20,1880,22],[2077,23,1880,25,"tokens"],[2077,29,1880,31],[2077,30,1880,32],[2077,31,1880,33],[2077,32,1880,34],[2077,37,1880,39],[2077,40,1880,42],[2077,43,1880,45,"EMPTY"],[2077,48,1880,50],[2077,51,1880,53,"Ox88"],[2077,55,1880,57],[2077,56,1880,58,"tokens"],[2077,62,1880,64],[2077,63,1880,65],[2077,64,1880,66],[2077,65,1880,67],[2077,66,1880,68],[2078,6,1881,8],[2078,10,1881,12],[2078,11,1881,13,"_halfMoves"],[2078,21,1881,23],[2078,24,1881,26,"parseInt"],[2078,32,1881,34],[2078,33,1881,35,"tokens"],[2078,39,1881,41],[2078,40,1881,42],[2078,41,1881,43],[2078,42,1881,44],[2078,44,1881,46],[2078,46,1881,48],[2078,47,1881,49],[2079,6,1882,8],[2079,10,1882,12],[2079,11,1882,13,"_moveNumber"],[2079,22,1882,24],[2079,25,1882,27,"parseInt"],[2079,33,1882,35],[2079,34,1882,36,"tokens"],[2079,40,1882,42],[2079,41,1882,43],[2079,42,1882,44],[2079,43,1882,45],[2079,45,1882,47],[2079,47,1882,49],[2079,48,1882,50],[2080,6,1883,8],[2080,10,1883,12],[2080,11,1883,13,"_hash"],[2080,16,1883,18],[2080,19,1883,21],[2080,23,1883,25],[2080,24,1883,26,"_computeHash"],[2080,36,1883,38],[2080,37,1883,39],[2080,38,1883,40],[2081,6,1884,8],[2081,10,1884,12],[2081,11,1884,13,"_updateSetup"],[2081,23,1884,25],[2081,24,1884,26,"fen"],[2081,27,1884,29],[2081,28,1884,30],[2082,6,1885,8],[2082,10,1885,12],[2082,11,1885,13,"_incPositionCount"],[2082,28,1885,30],[2082,29,1885,31],[2082,30,1885,32],[2083,4,1886,4],[2084,4,1887,4,"fen"],[2084,7,1887,7,"fen"],[2084,8,1887,8],[2085,6,1887,10,"forceEnpassantSquare"],[2085,26,1887,30],[2085,29,1887,33],[2086,4,1887,40],[2086,5,1887,41],[2086,8,1887,44],[2086,9,1887,45],[2086,10,1887,46],[2086,12,1887,48],[2087,6,1888,8],[2087,10,1888,12,"empty"],[2087,15,1888,17],[2087,18,1888,20],[2087,19,1888,21],[2088,6,1889,8],[2088,10,1889,12,"fen"],[2088,13,1889,15],[2088,16,1889,18],[2088,18,1889,20],[2089,6,1890,8],[2089,11,1890,13],[2089,15,1890,17,"i"],[2089,16,1890,18],[2089,19,1890,21,"Ox88"],[2089,23,1890,25],[2089,24,1890,26,"a8"],[2089,26,1890,28],[2089,28,1890,30,"i"],[2089,29,1890,31],[2089,33,1890,35,"Ox88"],[2089,37,1890,39],[2089,38,1890,40,"h1"],[2089,40,1890,42],[2089,42,1890,44,"i"],[2089,43,1890,45],[2089,45,1890,47],[2089,47,1890,49],[2090,8,1891,12],[2090,12,1891,16],[2090,16,1891,20],[2090,17,1891,21,"_board"],[2090,23,1891,27],[2090,24,1891,28,"i"],[2090,25,1891,29],[2090,26,1891,30],[2090,28,1891,32],[2091,10,1892,16],[2091,14,1892,20,"empty"],[2091,19,1892,25],[2091,22,1892,28],[2091,23,1892,29],[2091,25,1892,31],[2092,12,1893,20,"fen"],[2092,15,1893,23],[2092,19,1893,27,"empty"],[2092,24,1893,32],[2093,12,1894,20,"empty"],[2093,17,1894,25],[2093,20,1894,28],[2093,21,1894,29],[2094,10,1895,16],[2095,10,1896,16],[2095,16,1896,22],[2096,12,1896,24,"color"],[2096,17,1896,29],[2097,12,1896,31,"type"],[2097,16,1896,35],[2097,18,1896,37,"piece"],[2098,10,1896,43],[2098,11,1896,44],[2098,14,1896,47],[2098,18,1896,51],[2098,19,1896,52,"_board"],[2098,25,1896,58],[2098,26,1896,59,"i"],[2098,27,1896,60],[2098,28,1896,61],[2099,10,1897,16,"fen"],[2099,13,1897,19],[2099,17,1897,23,"color"],[2099,22,1897,28],[2099,27,1897,33,"WHITE"],[2099,32,1897,38],[2099,35,1897,41,"piece"],[2099,40,1897,46],[2099,41,1897,47,"toUpperCase"],[2099,52,1897,58],[2099,53,1897,59],[2099,54,1897,60],[2099,57,1897,63,"piece"],[2099,62,1897,68],[2099,63,1897,69,"toLowerCase"],[2099,74,1897,80],[2099,75,1897,81],[2099,76,1897,82],[2100,8,1898,12],[2100,9,1898,13],[2100,15,1899,17],[2101,10,1900,16,"empty"],[2101,15,1900,21],[2101,17,1900,23],[2102,8,1901,12],[2103,8,1902,12],[2103,12,1902,17,"i"],[2103,13,1902,18],[2103,16,1902,21],[2103,17,1902,22],[2103,20,1902,26],[2103,24,1902,30],[2103,26,1902,32],[2104,10,1903,16],[2104,14,1903,20,"empty"],[2104,19,1903,25],[2104,22,1903,28],[2104,23,1903,29],[2104,25,1903,31],[2105,12,1904,20,"fen"],[2105,15,1904,23],[2105,19,1904,27,"empty"],[2105,24,1904,32],[2106,10,1905,16],[2107,10,1906,16],[2107,14,1906,20,"i"],[2107,15,1906,21],[2107,20,1906,26,"Ox88"],[2107,24,1906,30],[2107,25,1906,31,"h1"],[2107,27,1906,33],[2107,29,1906,35],[2108,12,1907,20,"fen"],[2108,15,1907,23],[2108,19,1907,27],[2108,22,1907,30],[2109,10,1908,16],[2110,10,1909,16,"empty"],[2110,15,1909,21],[2110,18,1909,24],[2110,19,1909,25],[2111,10,1910,16,"i"],[2111,11,1910,17],[2111,15,1910,21],[2111,16,1910,22],[2112,8,1911,12],[2113,6,1912,8],[2114,6,1913,8],[2114,10,1913,12,"castling"],[2114,18,1913,20],[2114,21,1913,23],[2114,23,1913,25],[2115,6,1914,8],[2115,10,1914,12],[2115,14,1914,16],[2115,15,1914,17,"_castling"],[2115,24,1914,26],[2115,25,1914,27,"WHITE"],[2115,30,1914,32],[2115,31,1914,33],[2115,34,1914,36,"BITS"],[2115,38,1914,40],[2115,39,1914,41,"KSIDE_CASTLE"],[2115,51,1914,53],[2115,53,1914,55],[2116,8,1915,12,"castling"],[2116,16,1915,20],[2116,20,1915,24],[2116,23,1915,27],[2117,6,1916,8],[2118,6,1917,8],[2118,10,1917,12],[2118,14,1917,16],[2118,15,1917,17,"_castling"],[2118,24,1917,26],[2118,25,1917,27,"WHITE"],[2118,30,1917,32],[2118,31,1917,33],[2118,34,1917,36,"BITS"],[2118,38,1917,40],[2118,39,1917,41,"QSIDE_CASTLE"],[2118,51,1917,53],[2118,53,1917,55],[2119,8,1918,12,"castling"],[2119,16,1918,20],[2119,20,1918,24],[2119,23,1918,27],[2120,6,1919,8],[2121,6,1920,8],[2121,10,1920,12],[2121,14,1920,16],[2121,15,1920,17,"_castling"],[2121,24,1920,26],[2121,25,1920,27,"BLACK"],[2121,30,1920,32],[2121,31,1920,33],[2121,34,1920,36,"BITS"],[2121,38,1920,40],[2121,39,1920,41,"KSIDE_CASTLE"],[2121,51,1920,53],[2121,53,1920,55],[2122,8,1921,12,"castling"],[2122,16,1921,20],[2122,20,1921,24],[2122,23,1921,27],[2123,6,1922,8],[2124,6,1923,8],[2124,10,1923,12],[2124,14,1923,16],[2124,15,1923,17,"_castling"],[2124,24,1923,26],[2124,25,1923,27,"BLACK"],[2124,30,1923,32],[2124,31,1923,33],[2124,34,1923,36,"BITS"],[2124,38,1923,40],[2124,39,1923,41,"QSIDE_CASTLE"],[2124,51,1923,53],[2124,53,1923,55],[2125,8,1924,12,"castling"],[2125,16,1924,20],[2125,20,1924,24],[2125,23,1924,27],[2126,6,1925,8],[2127,6,1926,8],[2128,6,1927,8,"castling"],[2128,14,1927,16],[2128,17,1927,19,"castling"],[2128,25,1927,27],[2128,29,1927,31],[2128,32,1927,34],[2129,6,1928,8],[2129,10,1928,12,"epSquare"],[2129,18,1928,20],[2129,21,1928,23],[2129,24,1928,26],[2130,6,1929,8],[2131,0,1930,0],[2132,0,1931,0],[2133,0,1932,0],[2134,6,1933,8],[2134,10,1933,12],[2134,14,1933,16],[2134,15,1933,17,"_epSquare"],[2134,24,1933,26],[2134,29,1933,31,"EMPTY"],[2134,34,1933,36],[2134,36,1933,38],[2135,8,1934,12],[2135,12,1934,16,"forceEnpassantSquare"],[2135,32,1934,36],[2135,34,1934,38],[2136,10,1935,16,"epSquare"],[2136,18,1935,24],[2136,21,1935,27,"algebraic"],[2136,30,1935,36],[2136,31,1935,37],[2136,35,1935,41],[2136,36,1935,42,"_epSquare"],[2136,45,1935,51],[2136,46,1935,52],[2137,8,1936,12],[2137,9,1936,13],[2137,15,1937,17],[2138,10,1938,16],[2138,16,1938,22,"bigPawnSquare"],[2138,29,1938,35],[2138,32,1938,38],[2138,36,1938,42],[2138,37,1938,43,"_epSquare"],[2138,46,1938,52],[2138,50,1938,56],[2138,54,1938,60],[2138,55,1938,61,"_turn"],[2138,60,1938,66],[2138,65,1938,71,"WHITE"],[2138,70,1938,76],[2138,73,1938,79],[2138,75,1938,81],[2138,78,1938,84],[2138,79,1938,85],[2138,81,1938,87],[2138,82,1938,88],[2139,10,1939,16],[2139,16,1939,22,"squares"],[2139,23,1939,29],[2139,26,1939,32],[2139,27,1939,33,"bigPawnSquare"],[2139,40,1939,46],[2139,43,1939,49],[2139,44,1939,50],[2139,46,1939,52,"bigPawnSquare"],[2139,59,1939,65],[2139,62,1939,68],[2139,63,1939,69],[2139,64,1939,70],[2140,10,1940,16],[2140,15,1940,21],[2140,21,1940,27,"square"],[2140,27,1940,33],[2140,31,1940,37,"squares"],[2140,38,1940,44],[2140,40,1940,46],[2141,12,1941,20],[2142,12,1942,20],[2142,16,1942,24,"square"],[2142,22,1942,30],[2142,25,1942,33],[2142,29,1942,37],[2142,31,1942,39],[2143,14,1943,24],[2144,12,1944,20],[2145,12,1945,20],[2145,18,1945,26,"color"],[2145,23,1945,31],[2145,26,1945,34],[2145,30,1945,38],[2145,31,1945,39,"_turn"],[2145,36,1945,44],[2146,12,1946,20],[2147,12,1947,20],[2147,16,1947,24],[2147,20,1947,28],[2147,21,1947,29,"_board"],[2147,27,1947,35],[2147,28,1947,36,"square"],[2147,34,1947,42],[2147,35,1947,43],[2147,37,1947,45,"color"],[2147,42,1947,50],[2147,47,1947,55,"color"],[2147,52,1947,60],[2147,56,1948,24],[2147,60,1948,28],[2147,61,1948,29,"_board"],[2147,67,1948,35],[2147,68,1948,36,"square"],[2147,74,1948,42],[2147,75,1948,43],[2147,77,1948,45,"type"],[2147,81,1948,49],[2147,86,1948,54,"PAWN"],[2147,90,1948,58],[2147,92,1948,60],[2148,14,1949,24],[2149,14,1950,24],[2149,18,1950,28],[2149,19,1950,29,"_makeMove"],[2149,28,1950,38],[2149,29,1950,39],[2150,16,1951,28,"color"],[2150,21,1951,33],[2151,16,1952,28,"from"],[2151,20,1952,32],[2151,22,1952,34,"square"],[2151,28,1952,40],[2152,16,1953,28,"to"],[2152,18,1953,30],[2152,20,1953,32],[2152,24,1953,36],[2152,25,1953,37,"_epSquare"],[2152,34,1953,46],[2153,16,1954,28,"piece"],[2153,21,1954,33],[2153,23,1954,35,"PAWN"],[2153,27,1954,39],[2154,16,1955,28,"captured"],[2154,24,1955,36],[2154,26,1955,38,"PAWN"],[2154,30,1955,42],[2155,16,1956,28,"flags"],[2155,21,1956,33],[2155,23,1956,35,"BITS"],[2155,27,1956,39],[2155,28,1956,40,"EP_CAPTURE"],[2156,14,1957,24],[2156,15,1957,25],[2156,16,1957,26],[2157,14,1958,24],[2157,20,1958,30,"isLegal"],[2157,27,1958,37],[2157,30,1958,40],[2157,31,1958,41],[2157,35,1958,45],[2157,36,1958,46,"_isKingAttacked"],[2157,51,1958,61],[2157,52,1958,62,"color"],[2157,57,1958,67],[2157,58,1958,68],[2158,14,1959,24],[2158,18,1959,28],[2158,19,1959,29,"_undoMove"],[2158,28,1959,38],[2158,29,1959,39],[2158,30,1959,40],[2159,14,1960,24],[2160,14,1961,24],[2160,18,1961,28,"isLegal"],[2160,25,1961,35],[2160,27,1961,37],[2161,16,1962,28,"epSquare"],[2161,24,1962,36],[2161,27,1962,39,"algebraic"],[2161,36,1962,48],[2161,37,1962,49],[2161,41,1962,53],[2161,42,1962,54,"_epSquare"],[2161,51,1962,63],[2161,52,1962,64],[2162,16,1963,28],[2163,14,1964,24],[2164,12,1965,20],[2165,10,1966,16],[2166,8,1967,12],[2167,6,1968,8],[2168,6,1969,8],[2168,13,1969,15],[2168,14,1970,12,"fen"],[2168,17,1970,15],[2168,19,1971,12],[2168,23,1971,16],[2168,24,1971,17,"_turn"],[2168,29,1971,22],[2168,31,1972,12,"castling"],[2168,39,1972,20],[2168,41,1973,12,"epSquare"],[2168,49,1973,20],[2168,51,1974,12],[2168,55,1974,16],[2168,56,1974,17,"_halfMoves"],[2168,66,1974,27],[2168,68,1975,12],[2168,72,1975,16],[2168,73,1975,17,"_moveNumber"],[2168,84,1975,28],[2168,85,1976,9],[2168,86,1976,10,"join"],[2168,90,1976,14],[2168,91,1976,15],[2168,94,1976,18],[2168,95,1976,19],[2169,4,1977,4],[2170,4,1978,4,"_pieceKey"],[2170,13,1978,13,"_pieceKey"],[2170,14,1978,14,"i"],[2170,15,1978,15],[2170,17,1978,17],[2171,6,1979,8],[2171,10,1979,12],[2171,11,1979,13],[2171,15,1979,17],[2171,16,1979,18,"_board"],[2171,22,1979,24],[2171,23,1979,25,"i"],[2171,24,1979,26],[2171,25,1979,27],[2171,27,1979,29],[2172,8,1980,12],[2172,15,1980,19],[2172,17,1980,21],[2173,6,1981,8],[2174,6,1982,8],[2174,12,1982,14],[2175,8,1982,16,"color"],[2175,13,1982,21],[2176,8,1982,23,"type"],[2177,6,1982,28],[2177,7,1982,29],[2177,10,1982,32],[2177,14,1982,36],[2177,15,1982,37,"_board"],[2177,21,1982,43],[2177,22,1982,44,"i"],[2177,23,1982,45],[2177,24,1982,46],[2178,6,1983,8],[2178,12,1983,14,"colorIndex"],[2178,22,1983,24],[2178,25,1983,27],[2179,8,1984,12,"w"],[2179,9,1984,13],[2179,11,1984,15],[2179,12,1984,16],[2180,8,1985,12,"b"],[2180,9,1985,13],[2180,11,1985,15],[2181,6,1986,8],[2181,7,1986,9],[2181,8,1986,10,"color"],[2181,13,1986,15],[2181,14,1986,16],[2182,6,1987,8],[2182,12,1987,14,"typeIndex"],[2182,21,1987,23],[2182,24,1987,26],[2183,8,1988,12,"p"],[2183,9,1988,13],[2183,11,1988,15],[2183,12,1988,16],[2184,8,1989,12,"n"],[2184,9,1989,13],[2184,11,1989,15],[2184,12,1989,16],[2185,8,1990,12,"b"],[2185,9,1990,13],[2185,11,1990,15],[2185,12,1990,16],[2186,8,1991,12,"r"],[2186,9,1991,13],[2186,11,1991,15],[2186,12,1991,16],[2187,8,1992,12,"q"],[2187,9,1992,13],[2187,11,1992,15],[2187,12,1992,16],[2188,8,1993,12,"k"],[2188,9,1993,13],[2188,11,1993,15],[2189,6,1994,8],[2189,7,1994,9],[2189,8,1994,10,"type"],[2189,12,1994,14],[2189,13,1994,15],[2190,6,1995,8],[2190,13,1995,15,"PIECE_KEYS"],[2190,23,1995,25],[2190,24,1995,26,"colorIndex"],[2190,34,1995,36],[2190,35,1995,37],[2190,36,1995,38,"typeIndex"],[2190,45,1995,47],[2190,46,1995,48],[2190,47,1995,49,"i"],[2190,48,1995,50],[2190,49,1995,51],[2191,4,1996,4],[2192,4,1997,4,"_epKey"],[2192,10,1997,10,"_epKey"],[2192,11,1997,10],[2192,13,1997,13],[2193,6,1998,8],[2193,13,1998,15],[2193,17,1998,19],[2193,18,1998,20,"_epSquare"],[2193,27,1998,29],[2193,32,1998,34,"EMPTY"],[2193,37,1998,39],[2193,40,1998,42],[2193,42,1998,44],[2193,45,1998,47,"EP_KEYS"],[2193,52,1998,54],[2193,53,1998,55],[2193,57,1998,59],[2193,58,1998,60,"_epSquare"],[2193,67,1998,69],[2193,70,1998,72],[2193,71,1998,73],[2193,72,1998,74],[2194,4,1999,4],[2195,4,2000,4,"_castlingKey"],[2195,16,2000,16,"_castlingKey"],[2195,17,2000,16],[2195,19,2000,19],[2196,6,2001,8],[2196,12,2001,14,"index"],[2196,17,2001,19],[2196,20,2001,23],[2196,24,2001,27],[2196,25,2001,28,"_castling"],[2196,34,2001,37],[2196,35,2001,38,"w"],[2196,36,2001,39],[2196,40,2001,43],[2196,41,2001,44],[2196,44,2001,49],[2196,48,2001,53],[2196,49,2001,54,"_castling"],[2196,58,2001,63],[2196,59,2001,64,"b"],[2196,60,2001,65],[2196,64,2001,69],[2196,65,2001,71],[2197,6,2002,8],[2197,13,2002,15,"CASTLING_KEYS"],[2197,26,2002,28],[2197,27,2002,29,"index"],[2197,32,2002,34],[2197,33,2002,35],[2198,4,2003,4],[2199,4,2004,4,"_computeHash"],[2199,16,2004,16,"_computeHash"],[2199,17,2004,16],[2199,19,2004,19],[2200,6,2005,8],[2200,10,2005,12,"hash"],[2200,14,2005,16],[2200,17,2005,19],[2200,19,2005,21],[2201,6,2006,8],[2201,11,2006,13],[2201,15,2006,17,"i"],[2201,16,2006,18],[2201,19,2006,21,"Ox88"],[2201,23,2006,25],[2201,24,2006,26,"a8"],[2201,26,2006,28],[2201,28,2006,30,"i"],[2201,29,2006,31],[2201,33,2006,35,"Ox88"],[2201,37,2006,39],[2201,38,2006,40,"h1"],[2201,40,2006,42],[2201,42,2006,44,"i"],[2201,43,2006,45],[2201,45,2006,47],[2201,47,2006,49],[2202,8,2007,12],[2203,8,2008,12],[2203,12,2008,16,"i"],[2203,13,2008,17],[2203,16,2008,20],[2203,20,2008,24],[2203,22,2008,26],[2204,10,2009,16,"i"],[2204,11,2009,17],[2204,15,2009,21],[2204,16,2009,22],[2205,10,2010,16],[2206,8,2011,12],[2207,8,2012,12],[2207,12,2012,16],[2207,16,2012,20],[2207,17,2012,21,"_board"],[2207,23,2012,27],[2207,24,2012,28,"i"],[2207,25,2012,29],[2207,26,2012,30],[2207,28,2012,32],[2208,10,2013,16,"hash"],[2208,14,2013,20],[2208,18,2013,24],[2208,22,2013,28],[2208,23,2013,29,"_pieceKey"],[2208,32,2013,38],[2208,33,2013,39,"i"],[2208,34,2013,40],[2208,35,2013,41],[2209,8,2014,12],[2210,6,2015,8],[2211,6,2016,8,"hash"],[2211,10,2016,12],[2211,14,2016,16],[2211,18,2016,20],[2211,19,2016,21,"_epKey"],[2211,25,2016,27],[2211,26,2016,28],[2211,27,2016,29],[2212,6,2017,8,"hash"],[2212,10,2017,12],[2212,14,2017,16],[2212,18,2017,20],[2212,19,2017,21,"_castlingKey"],[2212,31,2017,33],[2212,32,2017,34],[2212,33,2017,35],[2213,6,2018,8],[2213,10,2018,12],[2213,14,2018,16],[2213,15,2018,17,"_turn"],[2213,20,2018,22],[2213,25,2018,27],[2213,28,2018,30],[2213,30,2018,32],[2214,8,2019,12,"hash"],[2214,12,2019,16],[2214,16,2019,20,"SIDE_KEY"],[2214,24,2019,28],[2215,6,2020,8],[2216,6,2021,8],[2216,13,2021,15,"hash"],[2216,17,2021,19],[2217,4,2022,4],[2218,4,2023,4],[2219,0,2024,0],[2220,0,2025,0],[2221,0,2026,0],[2222,0,2027,0],[2223,0,2028,0],[2224,4,2029,4,"_updateSetup"],[2224,16,2029,16,"_updateSetup"],[2224,17,2029,17,"fen"],[2224,20,2029,20],[2224,22,2029,22],[2225,6,2030,8],[2225,10,2030,12],[2225,14,2030,16],[2225,15,2030,17,"_history"],[2225,23,2030,25],[2225,24,2030,26,"length"],[2225,30,2030,32],[2225,33,2030,35],[2225,34,2030,36],[2225,36,2031,12],[2226,6,2032,8],[2226,10,2032,12,"fen"],[2226,13,2032,15],[2226,18,2032,20,"DEFAULT_POSITION"],[2226,34,2032,36],[2226,36,2032,38],[2227,8,2033,12],[2227,12,2033,16],[2227,13,2033,17,"_header"],[2227,20,2033,24],[2227,21,2033,25],[2227,28,2033,32],[2227,29,2033,33],[2227,32,2033,36],[2227,35,2033,39],[2228,8,2034,12],[2228,12,2034,16],[2228,13,2034,17,"_header"],[2228,20,2034,24],[2228,21,2034,25],[2228,26,2034,30],[2228,27,2034,31],[2228,30,2034,34,"fen"],[2228,33,2034,37],[2229,6,2035,8],[2229,7,2035,9],[2229,13,2036,13],[2230,8,2037,12],[2230,12,2037,16],[2230,13,2037,17,"_header"],[2230,20,2037,24],[2230,21,2037,25],[2230,28,2037,32],[2230,29,2037,33],[2230,32,2037,36],[2230,36,2037,40],[2231,8,2038,12],[2231,12,2038,16],[2231,13,2038,17,"_header"],[2231,20,2038,24],[2231,21,2038,25],[2231,26,2038,30],[2231,27,2038,31],[2231,30,2038,34],[2231,34,2038,38],[2232,6,2039,8],[2233,4,2040,4],[2234,4,2041,4,"reset"],[2234,9,2041,9,"reset"],[2234,10,2041,9],[2234,12,2041,12],[2235,6,2042,8],[2235,10,2042,12],[2235,11,2042,13,"load"],[2235,15,2042,17],[2235,16,2042,18,"DEFAULT_POSITION"],[2235,32,2042,34],[2235,33,2042,35],[2236,4,2043,4],[2237,4,2044,4,"get"],[2237,7,2044,7,"get"],[2237,8,2044,8,"square"],[2237,14,2044,14],[2237,16,2044,16],[2238,6,2045,8],[2238,13,2045,15],[2238,17,2045,19],[2238,18,2045,20,"_board"],[2238,24,2045,26],[2238,25,2045,27,"Ox88"],[2238,29,2045,31],[2238,30,2045,32,"square"],[2238,36,2045,38],[2238,37,2045,39],[2238,38,2045,40],[2239,4,2046,4],[2240,4,2047,4,"findPiece"],[2240,13,2047,13,"findPiece"],[2240,14,2047,14,"piece"],[2240,19,2047,19],[2240,21,2047,21],[2241,6,2048,8],[2241,12,2048,14,"squares"],[2241,19,2048,21],[2241,22,2048,24],[2241,24,2048,26],[2242,6,2049,8],[2242,11,2049,13],[2242,15,2049,17,"i"],[2242,16,2049,18],[2242,19,2049,21,"Ox88"],[2242,23,2049,25],[2242,24,2049,26,"a8"],[2242,26,2049,28],[2242,28,2049,30,"i"],[2242,29,2049,31],[2242,33,2049,35,"Ox88"],[2242,37,2049,39],[2242,38,2049,40,"h1"],[2242,40,2049,42],[2242,42,2049,44,"i"],[2242,43,2049,45],[2242,45,2049,47],[2242,47,2049,49],[2243,8,2050,12],[2244,8,2051,12],[2244,12,2051,16,"i"],[2244,13,2051,17],[2244,16,2051,20],[2244,20,2051,24],[2244,22,2051,26],[2245,10,2052,16,"i"],[2245,11,2052,17],[2245,15,2052,21],[2245,16,2052,22],[2246,10,2053,16],[2247,8,2054,12],[2248,8,2055,12],[2249,8,2056,12],[2249,12,2056,16],[2249,13,2056,17],[2249,17,2056,21],[2249,18,2056,22,"_board"],[2249,24,2056,28],[2249,25,2056,29,"i"],[2249,26,2056,30],[2249,27,2056,31],[2249,31,2056,35],[2249,35,2056,39],[2249,36,2056,40,"_board"],[2249,42,2056,46],[2249,43,2056,47,"i"],[2249,44,2056,48],[2249,45,2056,49],[2249,47,2056,51,"color"],[2249,52,2056,56],[2249,57,2056,61,"piece"],[2249,62,2056,66],[2249,63,2056,67,"color"],[2249,68,2056,72],[2249,70,2056,74],[2250,10,2057,16],[2251,8,2058,12],[2252,8,2059,12],[2253,8,2060,12],[2253,12,2060,16],[2253,16,2060,20],[2253,17,2060,21,"_board"],[2253,23,2060,27],[2253,24,2060,28,"i"],[2253,25,2060,29],[2253,26,2060,30],[2253,27,2060,31,"color"],[2253,32,2060,36],[2253,37,2060,41,"piece"],[2253,42,2060,46],[2253,43,2060,47,"color"],[2253,48,2060,52],[2253,52,2061,16],[2253,56,2061,20],[2253,57,2061,21,"_board"],[2253,63,2061,27],[2253,64,2061,28,"i"],[2253,65,2061,29],[2253,66,2061,30],[2253,67,2061,31,"type"],[2253,71,2061,35],[2253,76,2061,40,"piece"],[2253,81,2061,45],[2253,82,2061,46,"type"],[2253,86,2061,50],[2253,88,2061,52],[2254,10,2062,16,"squares"],[2254,17,2062,23],[2254,18,2062,24,"push"],[2254,22,2062,28],[2254,23,2062,29,"algebraic"],[2254,32,2062,38],[2254,33,2062,39,"i"],[2254,34,2062,40],[2254,35,2062,41],[2254,36,2062,42],[2255,8,2063,12],[2256,6,2064,8],[2257,6,2065,8],[2257,13,2065,15,"squares"],[2257,20,2065,22],[2258,4,2066,4],[2259,4,2067,4,"put"],[2259,7,2067,7,"put"],[2259,8,2067,8],[2260,6,2067,10,"type"],[2260,10,2067,14],[2261,6,2067,16,"color"],[2262,4,2067,22],[2262,5,2067,23],[2262,7,2067,25,"square"],[2262,13,2067,31],[2262,15,2067,33],[2263,6,2068,8],[2263,10,2068,12],[2263,14,2068,16],[2263,15,2068,17,"_put"],[2263,19,2068,21],[2263,20,2068,22],[2264,8,2068,24,"type"],[2264,12,2068,28],[2265,8,2068,30,"color"],[2266,6,2068,36],[2266,7,2068,37],[2266,9,2068,39,"square"],[2266,15,2068,45],[2266,16,2068,46],[2266,18,2068,48],[2267,8,2069,12],[2267,12,2069,16],[2267,13,2069,17,"_updateCastlingRights"],[2267,34,2069,38],[2267,35,2069,39],[2267,36,2069,40],[2268,8,2070,12],[2268,12,2070,16],[2268,13,2070,17,"_updateEnPassantSquare"],[2268,35,2070,39],[2268,36,2070,40],[2268,37,2070,41],[2269,8,2071,12],[2269,12,2071,16],[2269,13,2071,17,"_updateSetup"],[2269,25,2071,29],[2269,26,2071,30],[2269,30,2071,34],[2269,31,2071,35,"fen"],[2269,34,2071,38],[2269,35,2071,39],[2269,36,2071,40],[2269,37,2071,41],[2270,8,2072,12],[2270,15,2072,19],[2270,19,2072,23],[2271,6,2073,8],[2272,6,2074,8],[2272,13,2074,15],[2272,18,2074,20],[2273,4,2075,4],[2274,4,2076,4,"_set"],[2274,8,2076,8,"_set"],[2274,9,2076,9,"sq"],[2274,11,2076,11],[2274,13,2076,13,"piece"],[2274,18,2076,18],[2274,20,2076,20],[2275,6,2077,8],[2275,10,2077,12],[2275,11,2077,13,"_hash"],[2275,16,2077,18],[2275,20,2077,22],[2275,24,2077,26],[2275,25,2077,27,"_pieceKey"],[2275,34,2077,36],[2275,35,2077,37,"sq"],[2275,37,2077,39],[2275,38,2077,40],[2276,6,2078,8],[2276,10,2078,12],[2276,11,2078,13,"_board"],[2276,17,2078,19],[2276,18,2078,20,"sq"],[2276,20,2078,22],[2276,21,2078,23],[2276,24,2078,26,"piece"],[2276,29,2078,31],[2277,6,2079,8],[2277,10,2079,12],[2277,11,2079,13,"_hash"],[2277,16,2079,18],[2277,20,2079,22],[2277,24,2079,26],[2277,25,2079,27,"_pieceKey"],[2277,34,2079,36],[2277,35,2079,37,"sq"],[2277,37,2079,39],[2277,38,2079,40],[2278,4,2080,4],[2279,4,2081,4,"_put"],[2279,8,2081,8,"_put"],[2279,9,2081,9],[2280,6,2081,11,"type"],[2280,10,2081,15],[2281,6,2081,17,"color"],[2282,4,2081,23],[2282,5,2081,24],[2282,7,2081,26,"square"],[2282,13,2081,32],[2282,15,2081,34],[2283,6,2082,8],[2284,6,2083,8],[2284,10,2083,12,"SYMBOLS"],[2284,17,2083,19],[2284,18,2083,20,"indexOf"],[2284,25,2083,27],[2284,26,2083,28,"type"],[2284,30,2083,32],[2284,31,2083,33,"toLowerCase"],[2284,42,2083,44],[2284,43,2083,45],[2284,44,2083,46],[2284,45,2083,47],[2284,50,2083,52],[2284,51,2083,53],[2284,52,2083,54],[2284,54,2083,56],[2285,8,2084,12],[2285,15,2084,19],[2285,20,2084,24],[2286,6,2085,8],[2287,6,2086,8],[2288,6,2087,8],[2288,10,2087,12],[2288,12,2087,14,"square"],[2288,18,2087,20],[2288,22,2087,24,"Ox88"],[2288,26,2087,28],[2288,27,2087,29],[2288,29,2087,31],[2289,8,2088,12],[2289,15,2088,19],[2289,20,2088,24],[2290,6,2089,8],[2291,6,2090,8],[2291,12,2090,14,"sq"],[2291,14,2090,16],[2291,17,2090,19,"Ox88"],[2291,21,2090,23],[2291,22,2090,24,"square"],[2291,28,2090,30],[2291,29,2090,31],[2292,6,2091,8],[2293,6,2092,8],[2293,10,2092,12,"type"],[2293,14,2092,16],[2293,18,2092,20,"KING"],[2293,22,2092,24],[2293,26,2093,12],[2293,28,2093,14],[2293,32,2093,18],[2293,33,2093,19,"_kings"],[2293,39,2093,25],[2293,40,2093,26,"color"],[2293,45,2093,31],[2293,46,2093,32],[2293,50,2093,36,"EMPTY"],[2293,55,2093,41],[2293,59,2093,45],[2293,63,2093,49],[2293,64,2093,50,"_kings"],[2293,70,2093,56],[2293,71,2093,57,"color"],[2293,76,2093,62],[2293,77,2093,63],[2293,81,2093,67,"sq"],[2293,83,2093,69],[2293,84,2093,70],[2293,86,2093,72],[2294,8,2094,12],[2294,15,2094,19],[2294,20,2094,24],[2295,6,2095,8],[2296,6,2096,8],[2296,12,2096,14,"currentPieceOnSquare"],[2296,32,2096,34],[2296,35,2096,37],[2296,39,2096,41],[2296,40,2096,42,"_board"],[2296,46,2096,48],[2296,47,2096,49,"sq"],[2296,49,2096,51],[2296,50,2096,52],[2297,6,2097,8],[2298,6,2098,8],[2298,10,2098,12,"currentPieceOnSquare"],[2298,30,2098,32],[2298,34,2098,36,"currentPieceOnSquare"],[2298,54,2098,56],[2298,55,2098,57,"type"],[2298,59,2098,61],[2298,64,2098,66,"KING"],[2298,68,2098,70],[2298,70,2098,72],[2299,8,2099,12],[2299,12,2099,16],[2299,13,2099,17,"_kings"],[2299,19,2099,23],[2299,20,2099,24,"currentPieceOnSquare"],[2299,40,2099,44],[2299,41,2099,45,"color"],[2299,46,2099,50],[2299,47,2099,51],[2299,50,2099,54,"EMPTY"],[2299,55,2099,59],[2300,6,2100,8],[2301,6,2101,8],[2301,10,2101,12],[2301,11,2101,13,"_set"],[2301,15,2101,17],[2301,16,2101,18,"sq"],[2301,18,2101,20],[2301,20,2101,22],[2302,8,2101,24,"type"],[2302,12,2101,28],[2302,14,2101,30,"type"],[2302,18,2101,34],[2303,8,2101,36,"color"],[2303,13,2101,41],[2303,15,2101,43,"color"],[2304,6,2101,49],[2304,7,2101,50],[2304,8,2101,51],[2305,6,2102,8],[2305,10,2102,12,"type"],[2305,14,2102,16],[2305,19,2102,21,"KING"],[2305,23,2102,25],[2305,25,2102,27],[2306,8,2103,12],[2306,12,2103,16],[2306,13,2103,17,"_kings"],[2306,19,2103,23],[2306,20,2103,24,"color"],[2306,25,2103,29],[2306,26,2103,30],[2306,29,2103,33,"sq"],[2306,31,2103,35],[2307,6,2104,8],[2308,6,2105,8],[2308,13,2105,15],[2308,17,2105,19],[2309,4,2106,4],[2310,4,2107,4,"_clear"],[2310,10,2107,10,"_clear"],[2310,11,2107,11,"sq"],[2310,13,2107,13],[2310,15,2107,15],[2311,6,2108,8],[2311,10,2108,12],[2311,11,2108,13,"_hash"],[2311,16,2108,18],[2311,20,2108,22],[2311,24,2108,26],[2311,25,2108,27,"_pieceKey"],[2311,34,2108,36],[2311,35,2108,37,"sq"],[2311,37,2108,39],[2311,38,2108,40],[2312,6,2109,8],[2312,13,2109,15],[2312,17,2109,19],[2312,18,2109,20,"_board"],[2312,24,2109,26],[2312,25,2109,27,"sq"],[2312,27,2109,29],[2312,28,2109,30],[2313,4,2110,4],[2314,4,2111,4,"remove"],[2314,10,2111,10,"remove"],[2314,11,2111,11,"square"],[2314,17,2111,17],[2314,19,2111,19],[2315,6,2112,8],[2315,12,2112,14,"piece"],[2315,17,2112,19],[2315,20,2112,22],[2315,24,2112,26],[2315,25,2112,27,"get"],[2315,28,2112,30],[2315,29,2112,31,"square"],[2315,35,2112,37],[2315,36,2112,38],[2316,6,2113,8],[2316,10,2113,12],[2316,11,2113,13,"_clear"],[2316,17,2113,19],[2316,18,2113,20,"Ox88"],[2316,22,2113,24],[2316,23,2113,25,"square"],[2316,29,2113,31],[2316,30,2113,32],[2316,31,2113,33],[2317,6,2114,8],[2317,10,2114,12,"piece"],[2317,15,2114,17],[2317,19,2114,21,"piece"],[2317,24,2114,26],[2317,25,2114,27,"type"],[2317,29,2114,31],[2317,34,2114,36,"KING"],[2317,38,2114,40],[2317,40,2114,42],[2318,8,2115,12],[2318,12,2115,16],[2318,13,2115,17,"_kings"],[2318,19,2115,23],[2318,20,2115,24,"piece"],[2318,25,2115,29],[2318,26,2115,30,"color"],[2318,31,2115,35],[2318,32,2115,36],[2318,35,2115,39,"EMPTY"],[2318,40,2115,44],[2319,6,2116,8],[2320,6,2117,8],[2320,10,2117,12],[2320,11,2117,13,"_updateCastlingRights"],[2320,32,2117,34],[2320,33,2117,35],[2320,34,2117,36],[2321,6,2118,8],[2321,10,2118,12],[2321,11,2118,13,"_updateEnPassantSquare"],[2321,33,2118,35],[2321,34,2118,36],[2321,35,2118,37],[2322,6,2119,8],[2322,10,2119,12],[2322,11,2119,13,"_updateSetup"],[2322,23,2119,25],[2322,24,2119,26],[2322,28,2119,30],[2322,29,2119,31,"fen"],[2322,32,2119,34],[2322,33,2119,35],[2322,34,2119,36],[2322,35,2119,37],[2323,6,2120,8],[2323,13,2120,15,"piece"],[2323,18,2120,20],[2324,4,2121,4],[2325,4,2122,4,"_updateCastlingRights"],[2325,25,2122,25,"_updateCastlingRights"],[2325,26,2122,25],[2325,28,2122,28],[2326,6,2123,8],[2326,10,2123,12],[2326,11,2123,13,"_hash"],[2326,16,2123,18],[2326,20,2123,22],[2326,24,2123,26],[2326,25,2123,27,"_castlingKey"],[2326,37,2123,39],[2326,38,2123,40],[2326,39,2123,41],[2327,6,2124,8],[2327,12,2124,14,"whiteKingInPlace"],[2327,28,2124,30],[2327,31,2124,33],[2327,35,2124,37],[2327,36,2124,38,"_board"],[2327,42,2124,44],[2327,43,2124,45,"Ox88"],[2327,47,2124,49],[2327,48,2124,50,"e1"],[2327,50,2124,52],[2327,51,2124,53],[2327,53,2124,55,"type"],[2327,57,2124,59],[2327,62,2124,64,"KING"],[2327,66,2124,68],[2327,70,2125,12],[2327,74,2125,16],[2327,75,2125,17,"_board"],[2327,81,2125,23],[2327,82,2125,24,"Ox88"],[2327,86,2125,28],[2327,87,2125,29,"e1"],[2327,89,2125,31],[2327,90,2125,32],[2327,92,2125,34,"color"],[2327,97,2125,39],[2327,102,2125,44,"WHITE"],[2327,107,2125,49],[2328,6,2126,8],[2328,12,2126,14,"blackKingInPlace"],[2328,28,2126,30],[2328,31,2126,33],[2328,35,2126,37],[2328,36,2126,38,"_board"],[2328,42,2126,44],[2328,43,2126,45,"Ox88"],[2328,47,2126,49],[2328,48,2126,50,"e8"],[2328,50,2126,52],[2328,51,2126,53],[2328,53,2126,55,"type"],[2328,57,2126,59],[2328,62,2126,64,"KING"],[2328,66,2126,68],[2328,70,2127,12],[2328,74,2127,16],[2328,75,2127,17,"_board"],[2328,81,2127,23],[2328,82,2127,24,"Ox88"],[2328,86,2127,28],[2328,87,2127,29,"e8"],[2328,89,2127,31],[2328,90,2127,32],[2328,92,2127,34,"color"],[2328,97,2127,39],[2328,102,2127,44,"BLACK"],[2328,107,2127,49],[2329,6,2128,8],[2329,10,2128,12],[2329,11,2128,13,"whiteKingInPlace"],[2329,27,2128,29],[2329,31,2129,12],[2329,35,2129,16],[2329,36,2129,17,"_board"],[2329,42,2129,23],[2329,43,2129,24,"Ox88"],[2329,47,2129,28],[2329,48,2129,29,"a1"],[2329,50,2129,31],[2329,51,2129,32],[2329,53,2129,34,"type"],[2329,57,2129,38],[2329,62,2129,43,"ROOK"],[2329,66,2129,47],[2329,70,2130,12],[2329,74,2130,16],[2329,75,2130,17,"_board"],[2329,81,2130,23],[2329,82,2130,24,"Ox88"],[2329,86,2130,28],[2329,87,2130,29,"a1"],[2329,89,2130,31],[2329,90,2130,32],[2329,92,2130,34,"color"],[2329,97,2130,39],[2329,102,2130,44,"WHITE"],[2329,107,2130,49],[2329,109,2130,51],[2330,8,2131,12],[2330,12,2131,16],[2330,13,2131,17,"_castling"],[2330,22,2131,26],[2330,23,2131,27,"w"],[2330,24,2131,28],[2330,28,2131,32],[2330,29,2131,33],[2330,31,2131,35],[2331,6,2132,8],[2332,6,2133,8],[2332,10,2133,12],[2332,11,2133,13,"whiteKingInPlace"],[2332,27,2133,29],[2332,31,2134,12],[2332,35,2134,16],[2332,36,2134,17,"_board"],[2332,42,2134,23],[2332,43,2134,24,"Ox88"],[2332,47,2134,28],[2332,48,2134,29,"h1"],[2332,50,2134,31],[2332,51,2134,32],[2332,53,2134,34,"type"],[2332,57,2134,38],[2332,62,2134,43,"ROOK"],[2332,66,2134,47],[2332,70,2135,12],[2332,74,2135,16],[2332,75,2135,17,"_board"],[2332,81,2135,23],[2332,82,2135,24,"Ox88"],[2332,86,2135,28],[2332,87,2135,29,"h1"],[2332,89,2135,31],[2332,90,2135,32],[2332,92,2135,34,"color"],[2332,97,2135,39],[2332,102,2135,44,"WHITE"],[2332,107,2135,49],[2332,109,2135,51],[2333,8,2136,12],[2333,12,2136,16],[2333,13,2136,17,"_castling"],[2333,22,2136,26],[2333,23,2136,27,"w"],[2333,24,2136,28],[2333,28,2136,32],[2333,29,2136,33],[2333,31,2136,35],[2334,6,2137,8],[2335,6,2138,8],[2335,10,2138,12],[2335,11,2138,13,"blackKingInPlace"],[2335,27,2138,29],[2335,31,2139,12],[2335,35,2139,16],[2335,36,2139,17,"_board"],[2335,42,2139,23],[2335,43,2139,24,"Ox88"],[2335,47,2139,28],[2335,48,2139,29,"a8"],[2335,50,2139,31],[2335,51,2139,32],[2335,53,2139,34,"type"],[2335,57,2139,38],[2335,62,2139,43,"ROOK"],[2335,66,2139,47],[2335,70,2140,12],[2335,74,2140,16],[2335,75,2140,17,"_board"],[2335,81,2140,23],[2335,82,2140,24,"Ox88"],[2335,86,2140,28],[2335,87,2140,29,"a8"],[2335,89,2140,31],[2335,90,2140,32],[2335,92,2140,34,"color"],[2335,97,2140,39],[2335,102,2140,44,"BLACK"],[2335,107,2140,49],[2335,109,2140,51],[2336,8,2141,12],[2336,12,2141,16],[2336,13,2141,17,"_castling"],[2336,22,2141,26],[2336,23,2141,27,"b"],[2336,24,2141,28],[2336,28,2141,32],[2336,29,2141,33],[2336,31,2141,35],[2337,6,2142,8],[2338,6,2143,8],[2338,10,2143,12],[2338,11,2143,13,"blackKingInPlace"],[2338,27,2143,29],[2338,31,2144,12],[2338,35,2144,16],[2338,36,2144,17,"_board"],[2338,42,2144,23],[2338,43,2144,24,"Ox88"],[2338,47,2144,28],[2338,48,2144,29,"h8"],[2338,50,2144,31],[2338,51,2144,32],[2338,53,2144,34,"type"],[2338,57,2144,38],[2338,62,2144,43,"ROOK"],[2338,66,2144,47],[2338,70,2145,12],[2338,74,2145,16],[2338,75,2145,17,"_board"],[2338,81,2145,23],[2338,82,2145,24,"Ox88"],[2338,86,2145,28],[2338,87,2145,29,"h8"],[2338,89,2145,31],[2338,90,2145,32],[2338,92,2145,34,"color"],[2338,97,2145,39],[2338,102,2145,44,"BLACK"],[2338,107,2145,49],[2338,109,2145,51],[2339,8,2146,12],[2339,12,2146,16],[2339,13,2146,17,"_castling"],[2339,22,2146,26],[2339,23,2146,27,"b"],[2339,24,2146,28],[2339,28,2146,32],[2339,29,2146,33],[2339,31,2146,35],[2340,6,2147,8],[2341,6,2148,8],[2341,10,2148,12],[2341,11,2148,13,"_hash"],[2341,16,2148,18],[2341,20,2148,22],[2341,24,2148,26],[2341,25,2148,27,"_castlingKey"],[2341,37,2148,39],[2341,38,2148,40],[2341,39,2148,41],[2342,4,2149,4],[2343,4,2150,4,"_updateEnPassantSquare"],[2343,26,2150,26,"_updateEnPassantSquare"],[2343,27,2150,26],[2343,29,2150,29],[2344,6,2151,8],[2344,10,2151,12],[2344,14,2151,16],[2344,15,2151,17,"_epSquare"],[2344,24,2151,26],[2344,29,2151,31,"EMPTY"],[2344,34,2151,36],[2344,36,2151,38],[2345,8,2152,12],[2346,6,2153,8],[2347,6,2154,8],[2347,12,2154,14,"startSquare"],[2347,23,2154,25],[2347,26,2154,28],[2347,30,2154,32],[2347,31,2154,33,"_epSquare"],[2347,40,2154,42],[2347,44,2154,46],[2347,48,2154,50],[2347,49,2154,51,"_turn"],[2347,54,2154,56],[2347,59,2154,61,"WHITE"],[2347,64,2154,66],[2347,67,2154,69],[2347,68,2154,70],[2347,70,2154,72],[2347,73,2154,75],[2347,75,2154,77],[2347,76,2154,78],[2348,6,2155,8],[2348,12,2155,14,"currentSquare"],[2348,25,2155,27],[2348,28,2155,30],[2348,32,2155,34],[2348,33,2155,35,"_epSquare"],[2348,42,2155,44],[2348,46,2155,48],[2348,50,2155,52],[2348,51,2155,53,"_turn"],[2348,56,2155,58],[2348,61,2155,63,"WHITE"],[2348,66,2155,68],[2348,69,2155,71],[2348,71,2155,73],[2348,74,2155,76],[2348,75,2155,77],[2348,77,2155,79],[2348,78,2155,80],[2349,6,2156,8],[2349,12,2156,14,"attackers"],[2349,21,2156,23],[2349,24,2156,26],[2349,25,2156,27,"currentSquare"],[2349,38,2156,40],[2349,41,2156,43],[2349,42,2156,44],[2349,44,2156,46,"currentSquare"],[2349,57,2156,59],[2349,60,2156,62],[2349,61,2156,63],[2349,62,2156,64],[2350,6,2157,8],[2350,10,2157,12],[2350,14,2157,16],[2350,15,2157,17,"_board"],[2350,21,2157,23],[2350,22,2157,24,"startSquare"],[2350,33,2157,35],[2350,34,2157,36],[2350,39,2157,41],[2350,43,2157,45],[2350,47,2158,12],[2350,51,2158,16],[2350,52,2158,17,"_board"],[2350,58,2158,23],[2350,59,2158,24],[2350,63,2158,28],[2350,64,2158,29,"_epSquare"],[2350,73,2158,38],[2350,74,2158,39],[2350,79,2158,44],[2350,83,2158,48],[2350,87,2159,12],[2350,91,2159,16],[2350,92,2159,17,"_board"],[2350,98,2159,23],[2350,99,2159,24,"currentSquare"],[2350,112,2159,37],[2350,113,2159,38],[2350,115,2159,40,"color"],[2350,120,2159,45],[2350,125,2159,50,"swapColor"],[2350,134,2159,59],[2350,135,2159,60],[2350,139,2159,64],[2350,140,2159,65,"_turn"],[2350,145,2159,70],[2350,146,2159,71],[2350,150,2160,12],[2350,154,2160,16],[2350,155,2160,17,"_board"],[2350,161,2160,23],[2350,162,2160,24,"currentSquare"],[2350,175,2160,37],[2350,176,2160,38],[2350,178,2160,40,"type"],[2350,182,2160,44],[2350,187,2160,49,"PAWN"],[2350,191,2160,53],[2350,193,2160,55],[2351,8,2161,12],[2351,12,2161,16],[2351,13,2161,17,"_hash"],[2351,18,2161,22],[2351,22,2161,26],[2351,26,2161,30],[2351,27,2161,31,"_epKey"],[2351,33,2161,37],[2351,34,2161,38],[2351,35,2161,39],[2352,8,2162,12],[2352,12,2162,16],[2352,13,2162,17,"_epSquare"],[2352,22,2162,26],[2352,25,2162,29,"EMPTY"],[2352,30,2162,34],[2353,8,2163,12],[2354,6,2164,8],[2355,6,2165,8],[2355,12,2165,14,"canCapture"],[2355,22,2165,24],[2355,25,2165,28,"square"],[2355,31,2165,34],[2355,35,2165,39],[2355,37,2165,41,"square"],[2355,43,2165,47],[2355,46,2165,50],[2355,50,2165,54],[2355,51,2165,55],[2355,55,2166,12],[2355,59,2166,16],[2355,60,2166,17,"_board"],[2355,66,2166,23],[2355,67,2166,24,"square"],[2355,73,2166,30],[2355,74,2166,31],[2355,76,2166,33,"color"],[2355,81,2166,38],[2355,86,2166,43],[2355,90,2166,47],[2355,91,2166,48,"_turn"],[2355,96,2166,53],[2355,100,2167,12],[2355,104,2167,16],[2355,105,2167,17,"_board"],[2355,111,2167,23],[2355,112,2167,24,"square"],[2355,118,2167,30],[2355,119,2167,31],[2355,121,2167,33,"type"],[2355,125,2167,37],[2355,130,2167,42,"PAWN"],[2355,134,2167,46],[2356,6,2168,8],[2356,10,2168,12],[2356,11,2168,13,"attackers"],[2356,20,2168,22],[2356,21,2168,23,"some"],[2356,25,2168,27],[2356,26,2168,28,"canCapture"],[2356,36,2168,38],[2356,37,2168,39],[2356,39,2168,41],[2357,8,2169,12],[2357,12,2169,16],[2357,13,2169,17,"_hash"],[2357,18,2169,22],[2357,22,2169,26],[2357,26,2169,30],[2357,27,2169,31,"_epKey"],[2357,33,2169,37],[2357,34,2169,38],[2357,35,2169,39],[2358,8,2170,12],[2358,12,2170,16],[2358,13,2170,17,"_epSquare"],[2358,22,2170,26],[2358,25,2170,29,"EMPTY"],[2358,30,2170,34],[2359,6,2171,8],[2360,4,2172,4],[2361,4,2173,4,"_attacked"],[2361,13,2173,13,"_attacked"],[2361,14,2173,14,"color"],[2361,19,2173,19],[2361,21,2173,21,"square"],[2361,27,2173,27],[2361,29,2173,29,"verbose"],[2361,36,2173,36],[2361,38,2173,38],[2362,6,2174,8],[2362,12,2174,14,"attackers"],[2362,21,2174,23],[2362,24,2174,26],[2362,26,2174,28],[2363,6,2175,8],[2363,11,2175,13],[2363,15,2175,17,"i"],[2363,16,2175,18],[2363,19,2175,21,"Ox88"],[2363,23,2175,25],[2363,24,2175,26,"a8"],[2363,26,2175,28],[2363,28,2175,30,"i"],[2363,29,2175,31],[2363,33,2175,35,"Ox88"],[2363,37,2175,39],[2363,38,2175,40,"h1"],[2363,40,2175,42],[2363,42,2175,44,"i"],[2363,43,2175,45],[2363,45,2175,47],[2363,47,2175,49],[2364,8,2176,12],[2365,8,2177,12],[2365,12,2177,16,"i"],[2365,13,2177,17],[2365,16,2177,20],[2365,20,2177,24],[2365,22,2177,26],[2366,10,2178,16,"i"],[2366,11,2178,17],[2366,15,2178,21],[2366,16,2178,22],[2367,10,2179,16],[2368,8,2180,12],[2369,8,2181,12],[2370,8,2182,12],[2370,12,2182,16],[2370,16,2182,20],[2370,17,2182,21,"_board"],[2370,23,2182,27],[2370,24,2182,28,"i"],[2370,25,2182,29],[2370,26,2182,30],[2370,31,2182,35,"undefined"],[2370,40,2182,44],[2370,44,2182,48],[2370,48,2182,52],[2370,49,2182,53,"_board"],[2370,55,2182,59],[2370,56,2182,60,"i"],[2370,57,2182,61],[2370,58,2182,62],[2370,59,2182,63,"color"],[2370,64,2182,68],[2370,69,2182,73,"color"],[2370,74,2182,78],[2370,76,2182,80],[2371,10,2183,16],[2372,8,2184,12],[2373,8,2185,12],[2373,14,2185,18,"piece"],[2373,19,2185,23],[2373,22,2185,26],[2373,26,2185,30],[2373,27,2185,31,"_board"],[2373,33,2185,37],[2373,34,2185,38,"i"],[2373,35,2185,39],[2373,36,2185,40],[2374,8,2186,12],[2374,14,2186,18,"difference"],[2374,24,2186,28],[2374,27,2186,31,"i"],[2374,28,2186,32],[2374,31,2186,35,"square"],[2374,37,2186,41],[2375,8,2187,12],[2376,8,2188,12],[2376,12,2188,16,"difference"],[2376,22,2188,26],[2376,27,2188,31],[2376,28,2188,32],[2376,30,2188,34],[2377,10,2189,16],[2378,8,2190,12],[2379,8,2191,12],[2379,14,2191,18,"index"],[2379,19,2191,23],[2379,22,2191,26,"difference"],[2379,32,2191,36],[2379,35,2191,39],[2379,38,2191,42],[2380,8,2192,12],[2380,12,2192,16,"ATTACKS"],[2380,19,2192,23],[2380,20,2192,24,"index"],[2380,25,2192,29],[2380,26,2192,30],[2380,29,2192,33,"PIECE_MASKS"],[2380,40,2192,44],[2380,41,2192,45,"piece"],[2380,46,2192,50],[2380,47,2192,51,"type"],[2380,51,2192,55],[2380,52,2192,56],[2380,54,2192,58],[2381,10,2193,16],[2381,14,2193,20,"piece"],[2381,19,2193,25],[2381,20,2193,26,"type"],[2381,24,2193,30],[2381,29,2193,35,"PAWN"],[2381,33,2193,39],[2381,35,2193,41],[2382,12,2194,20],[2382,16,2194,25,"difference"],[2382,26,2194,35],[2382,29,2194,38],[2382,30,2194,39],[2382,34,2194,43,"piece"],[2382,39,2194,48],[2382,40,2194,49,"color"],[2382,45,2194,54],[2382,50,2194,59,"WHITE"],[2382,55,2194,64],[2382,59,2195,25,"difference"],[2382,69,2195,35],[2382,73,2195,39],[2382,74,2195,40],[2382,78,2195,44,"piece"],[2382,83,2195,49],[2382,84,2195,50,"color"],[2382,89,2195,55],[2382,94,2195,60,"BLACK"],[2382,99,2195,66],[2382,101,2195,68],[2383,14,2196,24],[2383,18,2196,28],[2383,19,2196,29,"verbose"],[2383,26,2196,36],[2383,28,2196,38],[2384,16,2197,28],[2384,23,2197,35],[2384,27,2197,39],[2385,14,2198,24],[2385,15,2198,25],[2385,21,2199,29],[2386,16,2200,28,"attackers"],[2386,25,2200,37],[2386,26,2200,38,"push"],[2386,30,2200,42],[2386,31,2200,43,"algebraic"],[2386,40,2200,52],[2386,41,2200,53,"i"],[2386,42,2200,54],[2386,43,2200,55],[2386,44,2200,56],[2387,14,2201,24],[2388,12,2202,20],[2389,12,2203,20],[2390,10,2204,16],[2391,10,2205,16],[2392,10,2206,16],[2392,14,2206,20,"piece"],[2392,19,2206,25],[2392,20,2206,26,"type"],[2392,24,2206,30],[2392,29,2206,35],[2392,32,2206,38],[2392,36,2206,42,"piece"],[2392,41,2206,47],[2392,42,2206,48,"type"],[2392,46,2206,52],[2392,51,2206,57],[2392,54,2206,60],[2392,56,2206,62],[2393,12,2207,20],[2393,16,2207,24],[2393,17,2207,25,"verbose"],[2393,24,2207,32],[2393,26,2207,34],[2394,14,2208,24],[2394,21,2208,31],[2394,25,2208,35],[2395,12,2209,20],[2395,13,2209,21],[2395,19,2210,25],[2396,14,2211,24,"attackers"],[2396,23,2211,33],[2396,24,2211,34,"push"],[2396,28,2211,38],[2396,29,2211,39,"algebraic"],[2396,38,2211,48],[2396,39,2211,49,"i"],[2396,40,2211,50],[2396,41,2211,51],[2396,42,2211,52],[2397,14,2212,24],[2398,12,2213,20],[2399,10,2214,16],[2400,10,2215,16],[2400,16,2215,22,"offset"],[2400,22,2215,28],[2400,25,2215,31,"RAYS"],[2400,29,2215,35],[2400,30,2215,36,"index"],[2400,35,2215,41],[2400,36,2215,42],[2401,10,2216,16],[2401,14,2216,20,"j"],[2401,15,2216,21],[2401,18,2216,24,"i"],[2401,19,2216,25],[2401,22,2216,28,"offset"],[2401,28,2216,34],[2402,10,2217,16],[2402,14,2217,20,"blocked"],[2402,21,2217,27],[2402,24,2217,30],[2402,29,2217,35],[2403,10,2218,16],[2403,17,2218,23,"j"],[2403,18,2218,24],[2403,23,2218,29,"square"],[2403,29,2218,35],[2403,31,2218,37],[2404,12,2219,20],[2404,16,2219,24],[2404,20,2219,28],[2404,21,2219,29,"_board"],[2404,27,2219,35],[2404,28,2219,36,"j"],[2404,29,2219,37],[2404,30,2219,38],[2404,34,2219,42],[2404,38,2219,46],[2404,40,2219,48],[2405,14,2220,24,"blocked"],[2405,21,2220,31],[2405,24,2220,34],[2405,28,2220,38],[2406,14,2221,24],[2407,12,2222,20],[2408,12,2223,20,"j"],[2408,13,2223,21],[2408,17,2223,25,"offset"],[2408,23,2223,31],[2409,10,2224,16],[2410,10,2225,16],[2410,14,2225,20],[2410,15,2225,21,"blocked"],[2410,22,2225,28],[2410,24,2225,30],[2411,12,2226,20],[2411,16,2226,24],[2411,17,2226,25,"verbose"],[2411,24,2226,32],[2411,26,2226,34],[2412,14,2227,24],[2412,21,2227,31],[2412,25,2227,35],[2413,12,2228,20],[2413,13,2228,21],[2413,19,2229,25],[2414,14,2230,24,"attackers"],[2414,23,2230,33],[2414,24,2230,34,"push"],[2414,28,2230,38],[2414,29,2230,39,"algebraic"],[2414,38,2230,48],[2414,39,2230,49,"i"],[2414,40,2230,50],[2414,41,2230,51],[2414,42,2230,52],[2415,14,2231,24],[2416,12,2232,20],[2417,10,2233,16],[2418,8,2234,12],[2419,6,2235,8],[2420,6,2236,8],[2420,10,2236,12,"verbose"],[2420,17,2236,19],[2420,19,2236,21],[2421,8,2237,12],[2421,15,2237,19,"attackers"],[2421,24,2237,28],[2422,6,2238,8],[2422,7,2238,9],[2422,13,2239,13],[2423,8,2240,12],[2423,15,2240,19],[2423,20,2240,24],[2424,6,2241,8],[2425,4,2242,4],[2426,4,2243,4,"attackers"],[2426,13,2243,13,"attackers"],[2426,14,2243,14,"square"],[2426,20,2243,20],[2426,22,2243,22,"attackedBy"],[2426,32,2243,32],[2426,34,2243,34],[2427,6,2244,8],[2427,10,2244,12],[2427,11,2244,13,"attackedBy"],[2427,21,2244,23],[2427,23,2244,25],[2428,8,2245,12],[2428,15,2245,19],[2428,19,2245,23],[2428,20,2245,24,"_attacked"],[2428,29,2245,33],[2428,30,2245,34],[2428,34,2245,38],[2428,35,2245,39,"_turn"],[2428,40,2245,44],[2428,42,2245,46,"Ox88"],[2428,46,2245,50],[2428,47,2245,51,"square"],[2428,53,2245,57],[2428,54,2245,58],[2428,56,2245,60],[2428,60,2245,64],[2428,61,2245,65],[2429,6,2246,8],[2429,7,2246,9],[2429,13,2247,13],[2430,8,2248,12],[2430,15,2248,19],[2430,19,2248,23],[2430,20,2248,24,"_attacked"],[2430,29,2248,33],[2430,30,2248,34,"attackedBy"],[2430,40,2248,44],[2430,42,2248,46,"Ox88"],[2430,46,2248,50],[2430,47,2248,51,"square"],[2430,53,2248,57],[2430,54,2248,58],[2430,56,2248,60],[2430,60,2248,64],[2430,61,2248,65],[2431,6,2249,8],[2432,4,2250,4],[2433,4,2251,4,"_isKingAttacked"],[2433,19,2251,19,"_isKingAttacked"],[2433,20,2251,20,"color"],[2433,25,2251,25],[2433,27,2251,27],[2434,6,2252,8],[2434,12,2252,14,"square"],[2434,18,2252,20],[2434,21,2252,23],[2434,25,2252,27],[2434,26,2252,28,"_kings"],[2434,32,2252,34],[2434,33,2252,35,"color"],[2434,38,2252,40],[2434,39,2252,41],[2435,6,2253,8],[2435,13,2253,15,"square"],[2435,19,2253,21],[2435,24,2253,26],[2435,25,2253,27],[2435,26,2253,28],[2435,29,2253,31],[2435,34,2253,36],[2435,37,2253,39],[2435,41,2253,43],[2435,42,2253,44,"_attacked"],[2435,51,2253,53],[2435,52,2253,54,"swapColor"],[2435,61,2253,63],[2435,62,2253,64,"color"],[2435,67,2253,69],[2435,68,2253,70],[2435,70,2253,72,"square"],[2435,76,2253,78],[2435,77,2253,79],[2436,4,2254,4],[2437,4,2255,4,"hash"],[2437,8,2255,8,"hash"],[2437,9,2255,8],[2437,11,2255,11],[2438,6,2256,8],[2438,13,2256,15],[2438,17,2256,19],[2438,18,2256,20,"_hash"],[2438,23,2256,25],[2438,24,2256,26,"toString"],[2438,32,2256,34],[2438,33,2256,35],[2438,35,2256,37],[2438,36,2256,38],[2439,4,2257,4],[2440,4,2258,4,"isAttacked"],[2440,14,2258,14,"isAttacked"],[2440,15,2258,15,"square"],[2440,21,2258,21],[2440,23,2258,23,"attackedBy"],[2440,33,2258,33],[2440,35,2258,35],[2441,6,2259,8],[2441,13,2259,15],[2441,17,2259,19],[2441,18,2259,20,"_attacked"],[2441,27,2259,29],[2441,28,2259,30,"attackedBy"],[2441,38,2259,40],[2441,40,2259,42,"Ox88"],[2441,44,2259,46],[2441,45,2259,47,"square"],[2441,51,2259,53],[2441,52,2259,54],[2441,53,2259,55],[2442,4,2260,4],[2443,4,2261,4,"isCheck"],[2443,11,2261,11,"isCheck"],[2443,12,2261,11],[2443,14,2261,14],[2444,6,2262,8],[2444,13,2262,15],[2444,17,2262,19],[2444,18,2262,20,"_isKingAttacked"],[2444,33,2262,35],[2444,34,2262,36],[2444,38,2262,40],[2444,39,2262,41,"_turn"],[2444,44,2262,46],[2444,45,2262,47],[2445,4,2263,4],[2446,4,2264,4,"inCheck"],[2446,11,2264,11,"inCheck"],[2446,12,2264,11],[2446,14,2264,14],[2447,6,2265,8],[2447,13,2265,15],[2447,17,2265,19],[2447,18,2265,20,"isCheck"],[2447,25,2265,27],[2447,26,2265,28],[2447,27,2265,29],[2448,4,2266,4],[2449,4,2267,4,"isCheckmate"],[2449,15,2267,15,"isCheckmate"],[2449,16,2267,15],[2449,18,2267,18],[2450,6,2268,8],[2450,13,2268,15],[2450,17,2268,19],[2450,18,2268,20,"isCheck"],[2450,25,2268,27],[2450,26,2268,28],[2450,27,2268,29],[2450,31,2268,33],[2450,35,2268,37],[2450,36,2268,38,"_moves"],[2450,42,2268,44],[2450,43,2268,45],[2450,44,2268,46],[2450,45,2268,47,"length"],[2450,51,2268,53],[2450,56,2268,58],[2450,57,2268,59],[2451,4,2269,4],[2452,4,2270,4,"isStalemate"],[2452,15,2270,15,"isStalemate"],[2452,16,2270,15],[2452,18,2270,18],[2453,6,2271,8],[2453,13,2271,15],[2453,14,2271,16],[2453,18,2271,20],[2453,19,2271,21,"isCheck"],[2453,26,2271,28],[2453,27,2271,29],[2453,28,2271,30],[2453,32,2271,34],[2453,36,2271,38],[2453,37,2271,39,"_moves"],[2453,43,2271,45],[2453,44,2271,46],[2453,45,2271,47],[2453,46,2271,48,"length"],[2453,52,2271,54],[2453,57,2271,59],[2453,58,2271,60],[2454,4,2272,4],[2455,4,2273,4,"isInsufficientMaterial"],[2455,26,2273,26,"isInsufficientMaterial"],[2455,27,2273,26],[2455,29,2273,29],[2456,6,2274,8],[2457,0,2275,0],[2458,0,2276,0],[2459,0,2277,0],[2460,0,2278,0],[2461,0,2279,0],[2462,0,2280,0],[2463,6,2281,8],[2463,12,2281,14,"pieces"],[2463,18,2281,20],[2463,21,2281,23],[2464,8,2282,12,"b"],[2464,9,2282,13],[2464,11,2282,15],[2464,12,2282,16],[2465,8,2283,12,"n"],[2465,9,2283,13],[2465,11,2283,15],[2465,12,2283,16],[2466,8,2284,12,"r"],[2466,9,2284,13],[2466,11,2284,15],[2466,12,2284,16],[2467,8,2285,12,"q"],[2467,9,2285,13],[2467,11,2285,15],[2467,12,2285,16],[2468,8,2286,12,"k"],[2468,9,2286,13],[2468,11,2286,15],[2468,12,2286,16],[2469,8,2287,12,"p"],[2469,9,2287,13],[2469,11,2287,15],[2470,6,2288,8],[2470,7,2288,9],[2471,6,2289,8],[2471,12,2289,14,"bishops"],[2471,19,2289,21],[2471,22,2289,24],[2471,24,2289,26],[2472,6,2290,8],[2472,10,2290,12,"numPieces"],[2472,19,2290,21],[2472,22,2290,24],[2472,23,2290,25],[2473,6,2291,8],[2473,10,2291,12,"squareColor"],[2473,21,2291,23],[2473,24,2291,26],[2473,25,2291,27],[2474,6,2292,8],[2474,11,2292,13],[2474,15,2292,17,"i"],[2474,16,2292,18],[2474,19,2292,21,"Ox88"],[2474,23,2292,25],[2474,24,2292,26,"a8"],[2474,26,2292,28],[2474,28,2292,30,"i"],[2474,29,2292,31],[2474,33,2292,35,"Ox88"],[2474,37,2292,39],[2474,38,2292,40,"h1"],[2474,40,2292,42],[2474,42,2292,44,"i"],[2474,43,2292,45],[2474,45,2292,47],[2474,47,2292,49],[2475,8,2293,12,"squareColor"],[2475,19,2293,23],[2475,22,2293,26],[2475,23,2293,27,"squareColor"],[2475,34,2293,38],[2475,37,2293,41],[2475,38,2293,42],[2475,42,2293,46],[2475,43,2293,47],[2476,8,2294,12],[2476,12,2294,16,"i"],[2476,13,2294,17],[2476,16,2294,20],[2476,20,2294,24],[2476,22,2294,26],[2477,10,2295,16,"i"],[2477,11,2295,17],[2477,15,2295,21],[2477,16,2295,22],[2478,10,2296,16],[2479,8,2297,12],[2480,8,2298,12],[2480,14,2298,18,"piece"],[2480,19,2298,23],[2480,22,2298,26],[2480,26,2298,30],[2480,27,2298,31,"_board"],[2480,33,2298,37],[2480,34,2298,38,"i"],[2480,35,2298,39],[2480,36,2298,40],[2481,8,2299,12],[2481,12,2299,16,"piece"],[2481,17,2299,21],[2481,19,2299,23],[2482,10,2300,16,"pieces"],[2482,16,2300,22],[2482,17,2300,23,"piece"],[2482,22,2300,28],[2482,23,2300,29,"type"],[2482,27,2300,33],[2482,28,2300,34],[2482,31,2300,37,"piece"],[2482,36,2300,42],[2482,37,2300,43,"type"],[2482,41,2300,47],[2482,45,2300,51,"pieces"],[2482,51,2300,57],[2482,54,2300,60,"pieces"],[2482,60,2300,66],[2482,61,2300,67,"piece"],[2482,66,2300,72],[2482,67,2300,73,"type"],[2482,71,2300,77],[2482,72,2300,78],[2482,75,2300,81],[2482,76,2300,82],[2482,79,2300,85],[2482,80,2300,86],[2483,10,2301,16],[2483,14,2301,20,"piece"],[2483,19,2301,25],[2483,20,2301,26,"type"],[2483,24,2301,30],[2483,29,2301,35,"BISHOP"],[2483,35,2301,41],[2483,37,2301,43],[2484,12,2302,20,"bishops"],[2484,19,2302,27],[2484,20,2302,28,"push"],[2484,24,2302,32],[2484,25,2302,33,"squareColor"],[2484,36,2302,44],[2484,37,2302,45],[2485,10,2303,16],[2486,10,2304,16,"numPieces"],[2486,19,2304,25],[2486,21,2304,27],[2487,8,2305,12],[2488,6,2306,8],[2489,6,2307,8],[2490,6,2308,8],[2490,10,2308,12,"numPieces"],[2490,19,2308,21],[2490,24,2308,26],[2490,25,2308,27],[2490,27,2308,29],[2491,8,2309,12],[2491,15,2309,19],[2491,19,2309,23],[2492,6,2310,8],[2492,7,2310,9],[2492,13,2311,13],[2493,6,2312,8],[2494,6,2313,8,"numPieces"],[2494,15,2313,17],[2494,20,2313,22],[2494,21,2313,23],[2494,26,2314,13,"pieces"],[2494,32,2314,19],[2494,33,2314,20,"BISHOP"],[2494,39,2314,26],[2494,40,2314,27],[2494,45,2314,32],[2494,46,2314,33],[2494,50,2314,37,"pieces"],[2494,56,2314,43],[2494,57,2314,44,"KNIGHT"],[2494,63,2314,50],[2494,64,2314,51],[2494,69,2314,56],[2494,70,2314,57],[2494,71,2314,58],[2494,73,2314,60],[2495,8,2315,12],[2495,15,2315,19],[2495,19,2315,23],[2496,6,2316,8],[2496,7,2316,9],[2496,13,2317,13],[2496,17,2317,17,"numPieces"],[2496,26,2317,26],[2496,31,2317,31,"pieces"],[2496,37,2317,37],[2496,38,2317,38,"BISHOP"],[2496,44,2317,44],[2496,45,2317,45],[2496,48,2317,48],[2496,49,2317,49],[2496,51,2317,51],[2497,8,2318,12],[2498,8,2319,12],[2498,12,2319,16,"sum"],[2498,15,2319,19],[2498,18,2319,22],[2498,19,2319,23],[2499,8,2320,12],[2499,14,2320,18,"len"],[2499,17,2320,21],[2499,20,2320,24,"bishops"],[2499,27,2320,31],[2499,28,2320,32,"length"],[2499,34,2320,38],[2500,8,2321,12],[2500,13,2321,17],[2500,17,2321,21,"i"],[2500,18,2321,22],[2500,21,2321,25],[2500,22,2321,26],[2500,24,2321,28,"i"],[2500,25,2321,29],[2500,28,2321,32,"len"],[2500,31,2321,35],[2500,33,2321,37,"i"],[2500,34,2321,38],[2500,36,2321,40],[2500,38,2321,42],[2501,10,2322,16,"sum"],[2501,13,2322,19],[2501,17,2322,23,"bishops"],[2501,24,2322,30],[2501,25,2322,31,"i"],[2501,26,2322,32],[2501,27,2322,33],[2502,8,2323,12],[2503,8,2324,12],[2503,12,2324,16,"sum"],[2503,15,2324,19],[2503,20,2324,24],[2503,21,2324,25],[2503,25,2324,29,"sum"],[2503,28,2324,32],[2503,33,2324,37,"len"],[2503,36,2324,40],[2503,38,2324,42],[2504,10,2325,16],[2504,17,2325,23],[2504,21,2325,27],[2505,8,2326,12],[2506,6,2327,8],[2507,6,2328,8],[2507,13,2328,15],[2507,18,2328,20],[2508,4,2329,4],[2509,4,2330,4,"isThreefoldRepetition"],[2509,25,2330,25,"isThreefoldRepetition"],[2509,26,2330,25],[2509,28,2330,28],[2510,6,2331,8],[2510,13,2331,15],[2510,17,2331,19],[2510,18,2331,20,"_getPositionCount"],[2510,35,2331,37],[2510,36,2331,38],[2510,40,2331,42],[2510,41,2331,43,"_hash"],[2510,46,2331,48],[2510,47,2331,49],[2510,51,2331,53],[2510,52,2331,54],[2511,4,2332,4],[2512,4,2333,4,"isDrawByFiftyMoves"],[2512,22,2333,22,"isDrawByFiftyMoves"],[2512,23,2333,22],[2512,25,2333,25],[2513,6,2334,8],[2513,13,2334,15],[2513,17,2334,19],[2513,18,2334,20,"_halfMoves"],[2513,28,2334,30],[2513,32,2334,34],[2513,35,2334,37],[2513,36,2334,38],[2513,37,2334,39],[2514,4,2335,4],[2515,4,2336,4,"isDraw"],[2515,10,2336,10,"isDraw"],[2515,11,2336,10],[2515,13,2336,13],[2516,6,2337,8],[2516,13,2337,16],[2516,17,2337,20],[2516,18,2337,21,"isDrawByFiftyMoves"],[2516,36,2337,39],[2516,37,2337,40],[2516,38,2337,41],[2516,42,2338,12],[2516,46,2338,16],[2516,47,2338,17,"isStalemate"],[2516,58,2338,28],[2516,59,2338,29],[2516,60,2338,30],[2516,64,2339,12],[2516,68,2339,16],[2516,69,2339,17,"isInsufficientMaterial"],[2516,91,2339,39],[2516,92,2339,40],[2516,93,2339,41],[2516,97,2340,12],[2516,101,2340,16],[2516,102,2340,17,"isThreefoldRepetition"],[2516,123,2340,38],[2516,124,2340,39],[2516,125,2340,40],[2517,4,2341,4],[2518,4,2342,4,"isGameOver"],[2518,14,2342,14,"isGameOver"],[2518,15,2342,14],[2518,17,2342,17],[2519,6,2343,8],[2519,13,2343,15],[2519,17,2343,19],[2519,18,2343,20,"isCheckmate"],[2519,29,2343,31],[2519,30,2343,32],[2519,31,2343,33],[2519,35,2343,37],[2519,39,2343,41],[2519,40,2343,42,"isDraw"],[2519,46,2343,48],[2519,47,2343,49],[2519,48,2343,50],[2520,4,2344,4],[2521,4,2345,4,"moves"],[2521,9,2345,9,"moves"],[2521,10,2345,10],[2522,6,2345,12,"verbose"],[2522,13,2345,19],[2522,16,2345,22],[2522,21,2345,27],[2523,6,2345,29,"square"],[2523,12,2345,35],[2523,15,2345,38,"undefined"],[2523,24,2345,47],[2524,6,2345,49,"piece"],[2524,11,2345,54],[2524,14,2345,57,"undefined"],[2525,4,2345,68],[2525,5,2345,69],[2525,8,2345,72],[2525,9,2345,73],[2525,10,2345,74],[2525,12,2345,76],[2526,6,2346,8],[2526,12,2346,14,"moves"],[2526,17,2346,19],[2526,20,2346,22],[2526,24,2346,26],[2526,25,2346,27,"_moves"],[2526,31,2346,33],[2526,32,2346,34],[2527,8,2346,36,"square"],[2527,14,2346,42],[2528,8,2346,44,"piece"],[2529,6,2346,50],[2529,7,2346,51],[2529,8,2346,52],[2530,6,2347,8],[2530,10,2347,12,"verbose"],[2530,17,2347,19],[2530,19,2347,21],[2531,8,2348,12],[2531,15,2348,19,"moves"],[2531,20,2348,24],[2531,21,2348,25,"map"],[2531,24,2348,28],[2531,25,2348,30,"move"],[2531,29,2348,34],[2531,33,2348,39],[2531,37,2348,43,"Move"],[2531,41,2348,47],[2531,42,2348,48],[2531,46,2348,52],[2531,48,2348,54,"move"],[2531,52,2348,58],[2531,53,2348,59],[2531,54,2348,60],[2532,6,2349,8],[2532,7,2349,9],[2532,13,2350,13],[2533,8,2351,12],[2533,15,2351,19,"moves"],[2533,20,2351,24],[2533,21,2351,25,"map"],[2533,24,2351,28],[2533,25,2351,30,"move"],[2533,29,2351,34],[2533,33,2351,39],[2533,37,2351,43],[2533,38,2351,44,"_moveToSan"],[2533,48,2351,54],[2533,49,2351,55,"move"],[2533,53,2351,59],[2533,55,2351,61,"moves"],[2533,60,2351,66],[2533,61,2351,67],[2533,62,2351,68],[2534,6,2352,8],[2535,4,2353,4],[2536,4,2354,4,"_moves"],[2536,10,2354,10,"_moves"],[2536,11,2354,11],[2537,6,2354,13,"legal"],[2537,11,2354,18],[2537,14,2354,21],[2537,18,2354,25],[2538,6,2354,27,"piece"],[2538,11,2354,32],[2538,14,2354,35,"undefined"],[2538,23,2354,44],[2539,6,2354,46,"square"],[2539,12,2354,52],[2539,15,2354,55,"undefined"],[2540,4,2354,66],[2540,5,2354,67],[2540,8,2354,70],[2540,9,2354,71],[2540,10,2354,72],[2540,12,2354,74],[2541,6,2355,8],[2541,12,2355,14,"forSquare"],[2541,21,2355,23],[2541,24,2355,26,"square"],[2541,30,2355,32],[2541,33,2355,35,"square"],[2541,39,2355,41],[2541,40,2355,42,"toLowerCase"],[2541,51,2355,53],[2541,52,2355,54],[2541,53,2355,55],[2541,56,2355,58,"undefined"],[2541,65,2355,67],[2542,6,2356,8],[2542,12,2356,14,"forPiece"],[2542,20,2356,22],[2542,23,2356,25,"piece"],[2542,28,2356,30],[2542,30,2356,32,"toLowerCase"],[2542,41,2356,43],[2542,42,2356,44],[2542,43,2356,45],[2543,6,2357,8],[2543,12,2357,14,"moves"],[2543,17,2357,19],[2543,20,2357,22],[2543,22,2357,24],[2544,6,2358,8],[2544,12,2358,14,"us"],[2544,14,2358,16],[2544,17,2358,19],[2544,21,2358,23],[2544,22,2358,24,"_turn"],[2544,27,2358,29],[2545,6,2359,8],[2545,12,2359,14,"them"],[2545,16,2359,18],[2545,19,2359,21,"swapColor"],[2545,28,2359,30],[2545,29,2359,31,"us"],[2545,31,2359,33],[2545,32,2359,34],[2546,6,2360,8],[2546,10,2360,12,"firstSquare"],[2546,21,2360,23],[2546,24,2360,26,"Ox88"],[2546,28,2360,30],[2546,29,2360,31,"a8"],[2546,31,2360,33],[2547,6,2361,8],[2547,10,2361,12,"lastSquare"],[2547,20,2361,22],[2547,23,2361,25,"Ox88"],[2547,27,2361,29],[2547,28,2361,30,"h1"],[2547,30,2361,32],[2548,6,2362,8],[2548,10,2362,12,"singleSquare"],[2548,22,2362,24],[2548,25,2362,27],[2548,30,2362,32],[2549,6,2363,8],[2550,6,2364,8],[2550,10,2364,12,"forSquare"],[2550,19,2364,21],[2550,21,2364,23],[2551,8,2365,12],[2552,8,2366,12],[2552,12,2366,16],[2552,14,2366,18,"forSquare"],[2552,23,2366,27],[2552,27,2366,31,"Ox88"],[2552,31,2366,35],[2552,32,2366,36],[2552,34,2366,38],[2553,10,2367,16],[2553,17,2367,23],[2553,19,2367,25],[2554,8,2368,12],[2554,9,2368,13],[2554,15,2369,17],[2555,10,2370,16,"firstSquare"],[2555,21,2370,27],[2555,24,2370,30,"lastSquare"],[2555,34,2370,40],[2555,37,2370,43,"Ox88"],[2555,41,2370,47],[2555,42,2370,48,"forSquare"],[2555,51,2370,57],[2555,52,2370,58],[2556,10,2371,16,"singleSquare"],[2556,22,2371,28],[2556,25,2371,31],[2556,29,2371,35],[2557,8,2372,12],[2558,6,2373,8],[2559,6,2374,8],[2559,11,2374,13],[2559,15,2374,17,"from"],[2559,19,2374,21],[2559,22,2374,24,"firstSquare"],[2559,33,2374,35],[2559,35,2374,37,"from"],[2559,39,2374,41],[2559,43,2374,45,"lastSquare"],[2559,53,2374,55],[2559,55,2374,57,"from"],[2559,59,2374,61],[2559,61,2374,63],[2559,63,2374,65],[2560,8,2375,12],[2561,8,2376,12],[2561,12,2376,16,"from"],[2561,16,2376,20],[2561,19,2376,23],[2561,23,2376,27],[2561,25,2376,29],[2562,10,2377,16,"from"],[2562,14,2377,20],[2562,18,2377,24],[2562,19,2377,25],[2563,10,2378,16],[2564,8,2379,12],[2565,8,2380,12],[2566,8,2381,12],[2566,12,2381,16],[2566,13,2381,17],[2566,17,2381,21],[2566,18,2381,22,"_board"],[2566,24,2381,28],[2566,25,2381,29,"from"],[2566,29,2381,33],[2566,30,2381,34],[2566,34,2381,38],[2566,38,2381,42],[2566,39,2381,43,"_board"],[2566,45,2381,49],[2566,46,2381,50,"from"],[2566,50,2381,54],[2566,51,2381,55],[2566,52,2381,56,"color"],[2566,57,2381,61],[2566,62,2381,66,"them"],[2566,66,2381,70],[2566,68,2381,72],[2567,10,2382,16],[2568,8,2383,12],[2569,8,2384,12],[2569,14,2384,18],[2570,10,2384,20,"type"],[2571,8,2384,25],[2571,9,2384,26],[2571,12,2384,29],[2571,16,2384,33],[2571,17,2384,34,"_board"],[2571,23,2384,40],[2571,24,2384,41,"from"],[2571,28,2384,45],[2571,29,2384,46],[2572,8,2385,12],[2572,12,2385,16,"to"],[2572,14,2385,18],[2573,8,2386,12],[2573,12,2386,16,"type"],[2573,16,2386,20],[2573,21,2386,25,"PAWN"],[2573,25,2386,29],[2573,27,2386,31],[2574,10,2387,16],[2574,14,2387,20,"forPiece"],[2574,22,2387,28],[2574,26,2387,32,"forPiece"],[2574,34,2387,40],[2574,39,2387,45,"type"],[2574,43,2387,49],[2574,45,2388,20],[2575,10,2389,16],[2576,10,2390,16,"to"],[2576,12,2390,18],[2576,15,2390,21,"from"],[2576,19,2390,25],[2576,22,2390,28,"PAWN_OFFSETS"],[2576,34,2390,40],[2576,35,2390,41,"us"],[2576,37,2390,43],[2576,38,2390,44],[2576,39,2390,45],[2576,40,2390,46],[2576,41,2390,47],[2577,10,2391,16],[2577,14,2391,20],[2577,15,2391,21],[2577,19,2391,25],[2577,20,2391,26,"_board"],[2577,26,2391,32],[2577,27,2391,33,"to"],[2577,29,2391,35],[2577,30,2391,36],[2577,32,2391,38],[2578,12,2392,20,"addMove"],[2578,19,2392,27],[2578,20,2392,28,"moves"],[2578,25,2392,33],[2578,27,2392,35,"us"],[2578,29,2392,37],[2578,31,2392,39,"from"],[2578,35,2392,43],[2578,37,2392,45,"to"],[2578,39,2392,47],[2578,41,2392,49,"PAWN"],[2578,45,2392,53],[2578,46,2392,54],[2579,12,2393,20],[2580,12,2394,20,"to"],[2580,14,2394,22],[2580,17,2394,25,"from"],[2580,21,2394,29],[2580,24,2394,32,"PAWN_OFFSETS"],[2580,36,2394,44],[2580,37,2394,45,"us"],[2580,39,2394,47],[2580,40,2394,48],[2580,41,2394,49],[2580,42,2394,50],[2580,43,2394,51],[2581,12,2395,20],[2581,16,2395,24,"SECOND_RANK"],[2581,27,2395,35],[2581,28,2395,36,"us"],[2581,30,2395,38],[2581,31,2395,39],[2581,36,2395,44,"rank"],[2581,40,2395,48],[2581,41,2395,49,"from"],[2581,45,2395,53],[2581,46,2395,54],[2581,50,2395,58],[2581,51,2395,59],[2581,55,2395,63],[2581,56,2395,64,"_board"],[2581,62,2395,70],[2581,63,2395,71,"to"],[2581,65,2395,73],[2581,66,2395,74],[2581,68,2395,76],[2582,14,2396,24,"addMove"],[2582,21,2396,31],[2582,22,2396,32,"moves"],[2582,27,2396,37],[2582,29,2396,39,"us"],[2582,31,2396,41],[2582,33,2396,43,"from"],[2582,37,2396,47],[2582,39,2396,49,"to"],[2582,41,2396,51],[2582,43,2396,53,"PAWN"],[2582,47,2396,57],[2582,49,2396,59,"undefined"],[2582,58,2396,68],[2582,60,2396,70,"BITS"],[2582,64,2396,74],[2582,65,2396,75,"BIG_PAWN"],[2582,73,2396,83],[2582,74,2396,84],[2583,12,2397,20],[2584,10,2398,16],[2585,10,2399,16],[2586,10,2400,16],[2586,15,2400,21],[2586,19,2400,25,"j"],[2586,20,2400,26],[2586,23,2400,29],[2586,24,2400,30],[2586,26,2400,32,"j"],[2586,27,2400,33],[2586,30,2400,36],[2586,31,2400,37],[2586,33,2400,39,"j"],[2586,34,2400,40],[2586,36,2400,42],[2586,38,2400,44],[2587,12,2401,20,"to"],[2587,14,2401,22],[2587,17,2401,25,"from"],[2587,21,2401,29],[2587,24,2401,32,"PAWN_OFFSETS"],[2587,36,2401,44],[2587,37,2401,45,"us"],[2587,39,2401,47],[2587,40,2401,48],[2587,41,2401,49,"j"],[2587,42,2401,50],[2587,43,2401,51],[2588,12,2402,20],[2588,16,2402,24,"to"],[2588,18,2402,26],[2588,21,2402,29],[2588,25,2402,33],[2588,27,2403,24],[2589,12,2404,20],[2589,16,2404,24],[2589,20,2404,28],[2589,21,2404,29,"_board"],[2589,27,2404,35],[2589,28,2404,36,"to"],[2589,30,2404,38],[2589,31,2404,39],[2589,33,2404,41,"color"],[2589,38,2404,46],[2589,43,2404,51,"them"],[2589,47,2404,55],[2589,49,2404,57],[2590,14,2405,24,"addMove"],[2590,21,2405,31],[2590,22,2405,32,"moves"],[2590,27,2405,37],[2590,29,2405,39,"us"],[2590,31,2405,41],[2590,33,2405,43,"from"],[2590,37,2405,47],[2590,39,2405,49,"to"],[2590,41,2405,51],[2590,43,2405,53,"PAWN"],[2590,47,2405,57],[2590,49,2405,59],[2590,53,2405,63],[2590,54,2405,64,"_board"],[2590,60,2405,70],[2590,61,2405,71,"to"],[2590,63,2405,73],[2590,64,2405,74],[2590,65,2405,75,"type"],[2590,69,2405,79],[2590,71,2405,81,"BITS"],[2590,75,2405,85],[2590,76,2405,86,"CAPTURE"],[2590,83,2405,93],[2590,84,2405,94],[2591,12,2406,20],[2591,13,2406,21],[2591,19,2407,25],[2591,23,2407,29,"to"],[2591,25,2407,31],[2591,30,2407,36],[2591,34,2407,40],[2591,35,2407,41,"_epSquare"],[2591,44,2407,50],[2591,46,2407,52],[2592,14,2408,24,"addMove"],[2592,21,2408,31],[2592,22,2408,32,"moves"],[2592,27,2408,37],[2592,29,2408,39,"us"],[2592,31,2408,41],[2592,33,2408,43,"from"],[2592,37,2408,47],[2592,39,2408,49,"to"],[2592,41,2408,51],[2592,43,2408,53,"PAWN"],[2592,47,2408,57],[2592,49,2408,59,"PAWN"],[2592,53,2408,63],[2592,55,2408,65,"BITS"],[2592,59,2408,69],[2592,60,2408,70,"EP_CAPTURE"],[2592,70,2408,80],[2592,71,2408,81],[2593,12,2409,20],[2594,10,2410,16],[2595,8,2411,12],[2595,9,2411,13],[2595,15,2412,17],[2596,10,2413,16],[2596,14,2413,20,"forPiece"],[2596,22,2413,28],[2596,26,2413,32,"forPiece"],[2596,34,2413,40],[2596,39,2413,45,"type"],[2596,43,2413,49],[2596,45,2414,20],[2597,10,2415,16],[2597,15,2415,21],[2597,19,2415,25,"j"],[2597,20,2415,26],[2597,23,2415,29],[2597,24,2415,30],[2597,26,2415,32,"len"],[2597,29,2415,35],[2597,32,2415,38,"PIECE_OFFSETS"],[2597,45,2415,51],[2597,46,2415,52,"type"],[2597,50,2415,56],[2597,51,2415,57],[2597,52,2415,58,"length"],[2597,58,2415,64],[2597,60,2415,66,"j"],[2597,61,2415,67],[2597,64,2415,70,"len"],[2597,67,2415,73],[2597,69,2415,75,"j"],[2597,70,2415,76],[2597,72,2415,78],[2597,74,2415,80],[2598,12,2416,20],[2598,18,2416,26,"offset"],[2598,24,2416,32],[2598,27,2416,35,"PIECE_OFFSETS"],[2598,40,2416,48],[2598,41,2416,49,"type"],[2598,45,2416,53],[2598,46,2416,54],[2598,47,2416,55,"j"],[2598,48,2416,56],[2598,49,2416,57],[2599,12,2417,20,"to"],[2599,14,2417,22],[2599,17,2417,25,"from"],[2599,21,2417,29],[2600,12,2418,20],[2600,19,2418,27],[2600,23,2418,31],[2600,25,2418,33],[2601,14,2419,24,"to"],[2601,16,2419,26],[2601,20,2419,30,"offset"],[2601,26,2419,36],[2602,14,2420,24],[2602,18,2420,28,"to"],[2602,20,2420,30],[2602,23,2420,33],[2602,27,2420,37],[2602,29,2421,28],[2603,14,2422,24],[2603,18,2422,28],[2603,19,2422,29],[2603,23,2422,33],[2603,24,2422,34,"_board"],[2603,30,2422,40],[2603,31,2422,41,"to"],[2603,33,2422,43],[2603,34,2422,44],[2603,36,2422,46],[2604,16,2423,28,"addMove"],[2604,23,2423,35],[2604,24,2423,36,"moves"],[2604,29,2423,41],[2604,31,2423,43,"us"],[2604,33,2423,45],[2604,35,2423,47,"from"],[2604,39,2423,51],[2604,41,2423,53,"to"],[2604,43,2423,55],[2604,45,2423,57,"type"],[2604,49,2423,61],[2604,50,2423,62],[2605,14,2424,24],[2605,15,2424,25],[2605,21,2425,29],[2606,16,2426,28],[2607,16,2427,28],[2607,20,2427,32],[2607,24,2427,36],[2607,25,2427,37,"_board"],[2607,31,2427,43],[2607,32,2427,44,"to"],[2607,34,2427,46],[2607,35,2427,47],[2607,36,2427,48,"color"],[2607,41,2427,53],[2607,46,2427,58,"us"],[2607,48,2427,60],[2607,50,2428,32],[2608,16,2429,28,"addMove"],[2608,23,2429,35],[2608,24,2429,36,"moves"],[2608,29,2429,41],[2608,31,2429,43,"us"],[2608,33,2429,45],[2608,35,2429,47,"from"],[2608,39,2429,51],[2608,41,2429,53,"to"],[2608,43,2429,55],[2608,45,2429,57,"type"],[2608,49,2429,61],[2608,51,2429,63],[2608,55,2429,67],[2608,56,2429,68,"_board"],[2608,62,2429,74],[2608,63,2429,75,"to"],[2608,65,2429,77],[2608,66,2429,78],[2608,67,2429,79,"type"],[2608,71,2429,83],[2608,73,2429,85,"BITS"],[2608,77,2429,89],[2608,78,2429,90,"CAPTURE"],[2608,85,2429,97],[2608,86,2429,98],[2609,16,2430,28],[2610,14,2431,24],[2611,14,2432,24],[2612,14,2433,24],[2612,18,2433,28,"type"],[2612,22,2433,32],[2612,27,2433,37,"KNIGHT"],[2612,33,2433,43],[2612,37,2433,47,"type"],[2612,41,2433,51],[2612,46,2433,56,"KING"],[2612,50,2433,60],[2612,52,2434,28],[2613,12,2435,20],[2614,10,2436,16],[2615,8,2437,12],[2616,6,2438,8],[2617,6,2439,8],[2618,0,2440,0],[2619,0,2441,0],[2620,0,2442,0],[2621,0,2443,0],[2622,6,2444,8],[2622,10,2444,12,"forPiece"],[2622,18,2444,20],[2622,23,2444,25,"undefined"],[2622,32,2444,34],[2622,36,2444,38,"forPiece"],[2622,44,2444,46],[2622,49,2444,51,"KING"],[2622,53,2444,55],[2622,55,2444,57],[2623,8,2445,12],[2623,12,2445,16],[2623,13,2445,17,"singleSquare"],[2623,25,2445,29],[2623,29,2445,33,"lastSquare"],[2623,39,2445,43],[2623,44,2445,48],[2623,48,2445,52],[2623,49,2445,53,"_kings"],[2623,55,2445,59],[2623,56,2445,60,"us"],[2623,58,2445,62],[2623,59,2445,63],[2623,61,2445,65],[2624,10,2446,16],[2625,10,2447,16],[2625,14,2447,20],[2625,18,2447,24],[2625,19,2447,25,"_castling"],[2625,28,2447,34],[2625,29,2447,35,"us"],[2625,31,2447,37],[2625,32,2447,38],[2625,35,2447,41,"BITS"],[2625,39,2447,45],[2625,40,2447,46,"KSIDE_CASTLE"],[2625,52,2447,58],[2625,54,2447,60],[2626,12,2448,20],[2626,18,2448,26,"castlingFrom"],[2626,30,2448,38],[2626,33,2448,41],[2626,37,2448,45],[2626,38,2448,46,"_kings"],[2626,44,2448,52],[2626,45,2448,53,"us"],[2626,47,2448,55],[2626,48,2448,56],[2627,12,2449,20],[2627,18,2449,26,"castlingTo"],[2627,28,2449,36],[2627,31,2449,39,"castlingFrom"],[2627,43,2449,51],[2627,46,2449,54],[2627,47,2449,55],[2628,12,2450,20],[2628,16,2450,24],[2628,17,2450,25],[2628,21,2450,29],[2628,22,2450,30,"_board"],[2628,28,2450,36],[2628,29,2450,37,"castlingFrom"],[2628,41,2450,49],[2628,44,2450,52],[2628,45,2450,53],[2628,46,2450,54],[2628,50,2451,24],[2628,51,2451,25],[2628,55,2451,29],[2628,56,2451,30,"_board"],[2628,62,2451,36],[2628,63,2451,37,"castlingTo"],[2628,73,2451,47],[2628,74,2451,48],[2628,78,2452,24],[2628,79,2452,25],[2628,83,2452,29],[2628,84,2452,30,"_attacked"],[2628,93,2452,39],[2628,94,2452,40,"them"],[2628,98,2452,44],[2628,100,2452,46],[2628,104,2452,50],[2628,105,2452,51,"_kings"],[2628,111,2452,57],[2628,112,2452,58,"us"],[2628,114,2452,60],[2628,115,2452,61],[2628,116,2452,62],[2628,120,2453,24],[2628,121,2453,25],[2628,125,2453,29],[2628,126,2453,30,"_attacked"],[2628,135,2453,39],[2628,136,2453,40,"them"],[2628,140,2453,44],[2628,142,2453,46,"castlingFrom"],[2628,154,2453,58],[2628,157,2453,61],[2628,158,2453,62],[2628,159,2453,63],[2628,163,2454,24],[2628,164,2454,25],[2628,168,2454,29],[2628,169,2454,30,"_attacked"],[2628,178,2454,39],[2628,179,2454,40,"them"],[2628,183,2454,44],[2628,185,2454,46,"castlingTo"],[2628,195,2454,56],[2628,196,2454,57],[2628,198,2454,59],[2629,14,2455,24,"addMove"],[2629,21,2455,31],[2629,22,2455,32,"moves"],[2629,27,2455,37],[2629,29,2455,39,"us"],[2629,31,2455,41],[2629,33,2455,43],[2629,37,2455,47],[2629,38,2455,48,"_kings"],[2629,44,2455,54],[2629,45,2455,55,"us"],[2629,47,2455,57],[2629,48,2455,58],[2629,50,2455,60,"castlingTo"],[2629,60,2455,70],[2629,62,2455,72,"KING"],[2629,66,2455,76],[2629,68,2455,78,"undefined"],[2629,77,2455,87],[2629,79,2455,89,"BITS"],[2629,83,2455,93],[2629,84,2455,94,"KSIDE_CASTLE"],[2629,96,2455,106],[2629,97,2455,107],[2630,12,2456,20],[2631,10,2457,16],[2632,10,2458,16],[2633,10,2459,16],[2633,14,2459,20],[2633,18,2459,24],[2633,19,2459,25,"_castling"],[2633,28,2459,34],[2633,29,2459,35,"us"],[2633,31,2459,37],[2633,32,2459,38],[2633,35,2459,41,"BITS"],[2633,39,2459,45],[2633,40,2459,46,"QSIDE_CASTLE"],[2633,52,2459,58],[2633,54,2459,60],[2634,12,2460,20],[2634,18,2460,26,"castlingFrom"],[2634,30,2460,38],[2634,33,2460,41],[2634,37,2460,45],[2634,38,2460,46,"_kings"],[2634,44,2460,52],[2634,45,2460,53,"us"],[2634,47,2460,55],[2634,48,2460,56],[2635,12,2461,20],[2635,18,2461,26,"castlingTo"],[2635,28,2461,36],[2635,31,2461,39,"castlingFrom"],[2635,43,2461,51],[2635,46,2461,54],[2635,47,2461,55],[2636,12,2462,20],[2636,16,2462,24],[2636,17,2462,25],[2636,21,2462,29],[2636,22,2462,30,"_board"],[2636,28,2462,36],[2636,29,2462,37,"castlingFrom"],[2636,41,2462,49],[2636,44,2462,52],[2636,45,2462,53],[2636,46,2462,54],[2636,50,2463,24],[2636,51,2463,25],[2636,55,2463,29],[2636,56,2463,30,"_board"],[2636,62,2463,36],[2636,63,2463,37,"castlingFrom"],[2636,75,2463,49],[2636,78,2463,52],[2636,79,2463,53],[2636,80,2463,54],[2636,84,2464,24],[2636,85,2464,25],[2636,89,2464,29],[2636,90,2464,30,"_board"],[2636,96,2464,36],[2636,97,2464,37,"castlingFrom"],[2636,109,2464,49],[2636,112,2464,52],[2636,113,2464,53],[2636,114,2464,54],[2636,118,2465,24],[2636,119,2465,25],[2636,123,2465,29],[2636,124,2465,30,"_attacked"],[2636,133,2465,39],[2636,134,2465,40,"them"],[2636,138,2465,44],[2636,140,2465,46],[2636,144,2465,50],[2636,145,2465,51,"_kings"],[2636,151,2465,57],[2636,152,2465,58,"us"],[2636,154,2465,60],[2636,155,2465,61],[2636,156,2465,62],[2636,160,2466,24],[2636,161,2466,25],[2636,165,2466,29],[2636,166,2466,30,"_attacked"],[2636,175,2466,39],[2636,176,2466,40,"them"],[2636,180,2466,44],[2636,182,2466,46,"castlingFrom"],[2636,194,2466,58],[2636,197,2466,61],[2636,198,2466,62],[2636,199,2466,63],[2636,203,2467,24],[2636,204,2467,25],[2636,208,2467,29],[2636,209,2467,30,"_attacked"],[2636,218,2467,39],[2636,219,2467,40,"them"],[2636,223,2467,44],[2636,225,2467,46,"castlingTo"],[2636,235,2467,56],[2636,236,2467,57],[2636,238,2467,59],[2637,14,2468,24,"addMove"],[2637,21,2468,31],[2637,22,2468,32,"moves"],[2637,27,2468,37],[2637,29,2468,39,"us"],[2637,31,2468,41],[2637,33,2468,43],[2637,37,2468,47],[2637,38,2468,48,"_kings"],[2637,44,2468,54],[2637,45,2468,55,"us"],[2637,47,2468,57],[2637,48,2468,58],[2637,50,2468,60,"castlingTo"],[2637,60,2468,70],[2637,62,2468,72,"KING"],[2637,66,2468,76],[2637,68,2468,78,"undefined"],[2637,77,2468,87],[2637,79,2468,89,"BITS"],[2637,83,2468,93],[2637,84,2468,94,"QSIDE_CASTLE"],[2637,96,2468,106],[2637,97,2468,107],[2638,12,2469,20],[2639,10,2470,16],[2640,8,2471,12],[2641,6,2472,8],[2642,6,2473,8],[2643,0,2474,0],[2644,0,2475,0],[2645,0,2476,0],[2646,6,2477,8],[2646,10,2477,12],[2646,11,2477,13,"legal"],[2646,16,2477,18],[2646,20,2477,22],[2646,24,2477,26],[2646,25,2477,27,"_kings"],[2646,31,2477,33],[2646,32,2477,34,"us"],[2646,34,2477,36],[2646,35,2477,37],[2646,40,2477,42],[2646,41,2477,43],[2646,42,2477,44],[2646,44,2477,46],[2647,8,2478,12],[2647,15,2478,19,"moves"],[2647,20,2478,24],[2648,6,2479,8],[2649,6,2480,8],[2650,6,2481,8],[2650,12,2481,14,"legalMoves"],[2650,22,2481,24],[2650,25,2481,27],[2650,27,2481,29],[2651,6,2482,8],[2651,11,2482,13],[2651,15,2482,17,"i"],[2651,16,2482,18],[2651,19,2482,21],[2651,20,2482,22],[2651,22,2482,24,"len"],[2651,25,2482,27],[2651,28,2482,30,"moves"],[2651,33,2482,35],[2651,34,2482,36,"length"],[2651,40,2482,42],[2651,42,2482,44,"i"],[2651,43,2482,45],[2651,46,2482,48,"len"],[2651,49,2482,51],[2651,51,2482,53,"i"],[2651,52,2482,54],[2651,54,2482,56],[2651,56,2482,58],[2652,8,2483,12],[2652,12,2483,16],[2652,13,2483,17,"_makeMove"],[2652,22,2483,26],[2652,23,2483,27,"moves"],[2652,28,2483,32],[2652,29,2483,33,"i"],[2652,30,2483,34],[2652,31,2483,35],[2652,32,2483,36],[2653,8,2484,12],[2653,12,2484,16],[2653,13,2484,17],[2653,17,2484,21],[2653,18,2484,22,"_isKingAttacked"],[2653,33,2484,37],[2653,34,2484,38,"us"],[2653,36,2484,40],[2653,37,2484,41],[2653,39,2484,43],[2654,10,2485,16,"legalMoves"],[2654,20,2485,26],[2654,21,2485,27,"push"],[2654,25,2485,31],[2654,26,2485,32,"moves"],[2654,31,2485,37],[2654,32,2485,38,"i"],[2654,33,2485,39],[2654,34,2485,40],[2654,35,2485,41],[2655,8,2486,12],[2656,8,2487,12],[2656,12,2487,16],[2656,13,2487,17,"_undoMove"],[2656,22,2487,26],[2656,23,2487,27],[2656,24,2487,28],[2657,6,2488,8],[2658,6,2489,8],[2658,13,2489,15,"legalMoves"],[2658,23,2489,25],[2659,4,2490,4],[2660,4,2491,4,"move"],[2660,8,2491,8,"move"],[2660,9,2491,9,"move"],[2660,13,2491,13],[2660,15,2491,15],[2661,6,2491,17,"strict"],[2661,12,2491,23],[2661,15,2491,26],[2662,4,2491,32],[2662,5,2491,33],[2662,8,2491,36],[2662,9,2491,37],[2662,10,2491,38],[2662,12,2491,40],[2663,6,2492,8],[2664,0,2493,0],[2665,0,2494,0],[2666,0,2495,0],[2667,0,2496,0],[2668,0,2497,0],[2669,0,2498,0],[2670,0,2499,0],[2671,0,2500,0],[2672,0,2501,0],[2673,0,2502,0],[2674,0,2503,0],[2675,0,2504,0],[2676,6,2505,8],[2676,10,2505,12,"moveObj"],[2676,17,2505,19],[2676,20,2505,22],[2676,24,2505,26],[2677,6,2506,8],[2677,10,2506,12],[2677,17,2506,19,"move"],[2677,21,2506,23],[2677,26,2506,28],[2677,34,2506,36],[2677,36,2506,38],[2678,8,2507,12,"moveObj"],[2678,15,2507,19],[2678,18,2507,22],[2678,22,2507,26],[2678,23,2507,27,"_moveFromSan"],[2678,35,2507,39],[2678,36,2507,40,"move"],[2678,40,2507,44],[2678,42,2507,46,"strict"],[2678,48,2507,52],[2678,49,2507,53],[2679,6,2508,8],[2679,7,2508,9],[2679,13,2509,13],[2679,17,2509,17,"move"],[2679,21,2509,21],[2679,26,2509,26],[2679,30,2509,30],[2679,32,2509,32],[2680,8,2510,12,"moveObj"],[2680,15,2510,19],[2680,18,2510,22],[2680,22,2510,26],[2680,23,2510,27,"_moveFromSan"],[2680,35,2510,39],[2680,36,2510,40,"SAN_NULLMOVE"],[2680,48,2510,52],[2680,50,2510,54,"strict"],[2680,56,2510,60],[2680,57,2510,61],[2681,6,2511,8],[2681,7,2511,9],[2681,13,2512,13],[2681,17,2512,17],[2681,24,2512,24,"move"],[2681,28,2512,28],[2681,33,2512,33],[2681,41,2512,41],[2681,43,2512,43],[2682,8,2513,12],[2682,14,2513,18,"moves"],[2682,19,2513,23],[2682,22,2513,26],[2682,26,2513,30],[2682,27,2513,31,"_moves"],[2682,33,2513,37],[2682,34,2513,38],[2682,35,2513,39],[2683,8,2514,12],[2684,8,2515,12],[2684,13,2515,17],[2684,17,2515,21,"i"],[2684,18,2515,22],[2684,21,2515,25],[2684,22,2515,26],[2684,24,2515,28,"len"],[2684,27,2515,31],[2684,30,2515,34,"moves"],[2684,35,2515,39],[2684,36,2515,40,"length"],[2684,42,2515,46],[2684,44,2515,48,"i"],[2684,45,2515,49],[2684,48,2515,52,"len"],[2684,51,2515,55],[2684,53,2515,57,"i"],[2684,54,2515,58],[2684,56,2515,60],[2684,58,2515,62],[2685,10,2516,16],[2685,14,2516,20,"move"],[2685,18,2516,24],[2685,19,2516,25,"from"],[2685,23,2516,29],[2685,28,2516,34,"algebraic"],[2685,37,2516,43],[2685,38,2516,44,"moves"],[2685,43,2516,49],[2685,44,2516,50,"i"],[2685,45,2516,51],[2685,46,2516,52],[2685,47,2516,53,"from"],[2685,51,2516,57],[2685,52,2516,58],[2685,56,2517,20,"move"],[2685,60,2517,24],[2685,61,2517,25,"to"],[2685,63,2517,27],[2685,68,2517,32,"algebraic"],[2685,77,2517,41],[2685,78,2517,42,"moves"],[2685,83,2517,47],[2685,84,2517,48,"i"],[2685,85,2517,49],[2685,86,2517,50],[2685,87,2517,51,"to"],[2685,89,2517,53],[2685,90,2517,54],[2685,95,2518,21],[2685,97,2518,23],[2685,108,2518,34],[2685,112,2518,38,"moves"],[2685,117,2518,43],[2685,118,2518,44,"i"],[2685,119,2518,45],[2685,120,2518,46],[2685,121,2518,47],[2685,125,2518,51,"move"],[2685,129,2518,55],[2685,130,2518,56,"promotion"],[2685,139,2518,65],[2685,144,2518,70,"moves"],[2685,149,2518,75],[2685,150,2518,76,"i"],[2685,151,2518,77],[2685,152,2518,78],[2685,153,2518,79,"promotion"],[2685,162,2518,88],[2685,163,2518,89],[2685,165,2518,91],[2686,12,2519,20,"moveObj"],[2686,19,2519,27],[2686,22,2519,30,"moves"],[2686,27,2519,35],[2686,28,2519,36,"i"],[2686,29,2519,37],[2686,30,2519,38],[2687,12,2520,20],[2688,10,2521,16],[2689,8,2522,12],[2690,6,2523,8],[2691,6,2524,8],[2692,6,2525,8],[2692,10,2525,12],[2692,11,2525,13,"moveObj"],[2692,18,2525,20],[2692,20,2525,22],[2693,8,2526,12],[2693,12,2526,16],[2693,19,2526,23,"move"],[2693,23,2526,27],[2693,28,2526,32],[2693,36,2526,40],[2693,38,2526,42],[2694,10,2527,16],[2694,16,2527,22],[2694,20,2527,26,"Error"],[2694,25,2527,31],[2694,26,2527,32],[2694,43,2527,49,"move"],[2694,47,2527,53],[2694,49,2527,55],[2694,50,2527,56],[2695,8,2528,12],[2695,9,2528,13],[2695,15,2529,17],[2696,10,2530,16],[2696,16,2530,22],[2696,20,2530,26,"Error"],[2696,25,2530,31],[2696,26,2530,32],[2696,43,2530,49,"JSON"],[2696,47,2530,53],[2696,48,2530,54,"stringify"],[2696,57,2530,63],[2696,58,2530,64,"move"],[2696,62,2530,68],[2696,63,2530,69],[2696,65,2530,71],[2696,66,2530,72],[2697,8,2531,12],[2698,6,2532,8],[2699,6,2533,8],[2700,6,2534,8],[2700,10,2534,12],[2700,14,2534,16],[2700,15,2534,17,"isCheck"],[2700,22,2534,24],[2700,23,2534,25],[2700,24,2534,26],[2700,28,2534,30,"moveObj"],[2700,35,2534,37],[2700,36,2534,38,"flags"],[2700,41,2534,43],[2700,44,2534,46,"BITS"],[2700,48,2534,50],[2700,49,2534,51,"NULL_MOVE"],[2700,58,2534,60],[2700,60,2534,62],[2701,8,2535,12],[2701,14,2535,18],[2701,18,2535,22,"Error"],[2701,23,2535,27],[2701,24,2535,28],[2701,61,2535,65],[2701,62,2535,66],[2702,6,2536,8],[2703,6,2537,8],[2704,0,2538,0],[2705,0,2539,0],[2706,0,2540,0],[2707,6,2541,8],[2707,12,2541,14,"prettyMove"],[2707,22,2541,24],[2707,25,2541,27],[2707,29,2541,31,"Move"],[2707,33,2541,35],[2707,34,2541,36],[2707,38,2541,40],[2707,40,2541,42,"moveObj"],[2707,47,2541,49],[2707,48,2541,50],[2708,6,2542,8],[2708,10,2542,12],[2708,11,2542,13,"_makeMove"],[2708,20,2542,22],[2708,21,2542,23,"moveObj"],[2708,28,2542,30],[2708,29,2542,31],[2709,6,2543,8],[2709,10,2543,12],[2709,11,2543,13,"_incPositionCount"],[2709,28,2543,30],[2709,29,2543,31],[2709,30,2543,32],[2710,6,2544,8],[2710,13,2544,15,"prettyMove"],[2710,23,2544,25],[2711,4,2545,4],[2712,4,2546,4,"_push"],[2712,9,2546,9,"_push"],[2712,10,2546,10,"move"],[2712,14,2546,14],[2712,16,2546,16],[2713,6,2547,8],[2713,10,2547,12],[2713,11,2547,13,"_history"],[2713,19,2547,21],[2713,20,2547,22,"push"],[2713,24,2547,26],[2713,25,2547,27],[2714,8,2548,12,"move"],[2714,12,2548,16],[2715,8,2549,12,"kings"],[2715,13,2549,17],[2715,15,2549,19],[2716,10,2549,21,"b"],[2716,11,2549,22],[2716,13,2549,24],[2716,17,2549,28],[2716,18,2549,29,"_kings"],[2716,24,2549,35],[2716,25,2549,36,"b"],[2716,26,2549,37],[2717,10,2549,39,"w"],[2717,11,2549,40],[2717,13,2549,42],[2717,17,2549,46],[2717,18,2549,47,"_kings"],[2717,24,2549,53],[2717,25,2549,54,"w"],[2718,8,2549,56],[2718,9,2549,57],[2719,8,2550,12,"turn"],[2719,12,2550,16],[2719,14,2550,18],[2719,18,2550,22],[2719,19,2550,23,"_turn"],[2719,24,2550,28],[2720,8,2551,12,"castling"],[2720,16,2551,20],[2720,18,2551,22],[2721,10,2551,24,"b"],[2721,11,2551,25],[2721,13,2551,27],[2721,17,2551,31],[2721,18,2551,32,"_castling"],[2721,27,2551,41],[2721,28,2551,42,"b"],[2721,29,2551,43],[2722,10,2551,45,"w"],[2722,11,2551,46],[2722,13,2551,48],[2722,17,2551,52],[2722,18,2551,53,"_castling"],[2722,27,2551,62],[2722,28,2551,63,"w"],[2723,8,2551,65],[2723,9,2551,66],[2724,8,2552,12,"epSquare"],[2724,16,2552,20],[2724,18,2552,22],[2724,22,2552,26],[2724,23,2552,27,"_epSquare"],[2724,32,2552,36],[2725,8,2553,12,"halfMoves"],[2725,17,2553,21],[2725,19,2553,23],[2725,23,2553,27],[2725,24,2553,28,"_halfMoves"],[2725,34,2553,38],[2726,8,2554,12,"moveNumber"],[2726,18,2554,22],[2726,20,2554,24],[2726,24,2554,28],[2726,25,2554,29,"_moveNumber"],[2727,6,2555,8],[2727,7,2555,9],[2727,8,2555,10],[2728,4,2556,4],[2729,4,2557,4,"_movePiece"],[2729,14,2557,14,"_movePiece"],[2729,15,2557,15,"from"],[2729,19,2557,19],[2729,21,2557,21,"to"],[2729,23,2557,23],[2729,25,2557,25],[2730,6,2558,8],[2730,10,2558,12],[2730,11,2558,13,"_hash"],[2730,16,2558,18],[2730,20,2558,22],[2730,24,2558,26],[2730,25,2558,27,"_pieceKey"],[2730,34,2558,36],[2730,35,2558,37,"from"],[2730,39,2558,41],[2730,40,2558,42],[2731,6,2559,8],[2731,10,2559,12],[2731,11,2559,13,"_board"],[2731,17,2559,19],[2731,18,2559,20,"to"],[2731,20,2559,22],[2731,21,2559,23],[2731,24,2559,26],[2731,28,2559,30],[2731,29,2559,31,"_board"],[2731,35,2559,37],[2731,36,2559,38,"from"],[2731,40,2559,42],[2731,41,2559,43],[2732,6,2560,8],[2732,13,2560,15],[2732,17,2560,19],[2732,18,2560,20,"_board"],[2732,24,2560,26],[2732,25,2560,27,"from"],[2732,29,2560,31],[2732,30,2560,32],[2733,6,2561,8],[2733,10,2561,12],[2733,11,2561,13,"_hash"],[2733,16,2561,18],[2733,20,2561,22],[2733,24,2561,26],[2733,25,2561,27,"_pieceKey"],[2733,34,2561,36],[2733,35,2561,37,"to"],[2733,37,2561,39],[2733,38,2561,40],[2734,4,2562,4],[2735,4,2563,4,"_makeMove"],[2735,13,2563,13,"_makeMove"],[2735,14,2563,14,"move"],[2735,18,2563,18],[2735,20,2563,20],[2736,6,2564,8],[2736,12,2564,14,"us"],[2736,14,2564,16],[2736,17,2564,19],[2736,21,2564,23],[2736,22,2564,24,"_turn"],[2736,27,2564,29],[2737,6,2565,8],[2737,12,2565,14,"them"],[2737,16,2565,18],[2737,19,2565,21,"swapColor"],[2737,28,2565,30],[2737,29,2565,31,"us"],[2737,31,2565,33],[2737,32,2565,34],[2738,6,2566,8],[2738,10,2566,12],[2738,11,2566,13,"_push"],[2738,16,2566,18],[2738,17,2566,19,"move"],[2738,21,2566,23],[2738,22,2566,24],[2739,6,2567,8],[2739,10,2567,12,"move"],[2739,14,2567,16],[2739,15,2567,17,"flags"],[2739,20,2567,22],[2739,23,2567,25,"BITS"],[2739,27,2567,29],[2739,28,2567,30,"NULL_MOVE"],[2739,37,2567,39],[2739,39,2567,41],[2740,8,2568,12],[2740,12,2568,16,"us"],[2740,14,2568,18],[2740,19,2568,23,"BLACK"],[2740,24,2568,28],[2740,26,2568,30],[2741,10,2569,16],[2741,14,2569,20],[2741,15,2569,21,"_moveNumber"],[2741,26,2569,32],[2741,28,2569,34],[2742,8,2570,12],[2743,8,2571,12],[2743,12,2571,16],[2743,13,2571,17,"_halfMoves"],[2743,23,2571,27],[2743,25,2571,29],[2744,8,2572,12],[2744,12,2572,16],[2744,13,2572,17,"_turn"],[2744,18,2572,22],[2744,21,2572,25,"them"],[2744,25,2572,29],[2745,8,2573,12],[2745,12,2573,16],[2745,13,2573,17,"_epSquare"],[2745,22,2573,26],[2745,25,2573,29,"EMPTY"],[2745,30,2573,34],[2746,8,2574,12],[2747,6,2575,8],[2748,6,2576,8],[2748,10,2576,12],[2748,11,2576,13,"_hash"],[2748,16,2576,18],[2748,20,2576,22],[2748,24,2576,26],[2748,25,2576,27,"_epKey"],[2748,31,2576,33],[2748,32,2576,34],[2748,33,2576,35],[2749,6,2577,8],[2749,10,2577,12],[2749,11,2577,13,"_hash"],[2749,16,2577,18],[2749,20,2577,22],[2749,24,2577,26],[2749,25,2577,27,"_castlingKey"],[2749,37,2577,39],[2749,38,2577,40],[2749,39,2577,41],[2750,6,2578,8],[2750,10,2578,12,"move"],[2750,14,2578,16],[2750,15,2578,17,"captured"],[2750,23,2578,25],[2750,25,2578,27],[2751,8,2579,12],[2751,12,2579,16],[2751,13,2579,17,"_hash"],[2751,18,2579,22],[2751,22,2579,26],[2751,26,2579,30],[2751,27,2579,31,"_pieceKey"],[2751,36,2579,40],[2751,37,2579,41,"move"],[2751,41,2579,45],[2751,42,2579,46,"to"],[2751,44,2579,48],[2751,45,2579,49],[2752,6,2580,8],[2753,6,2581,8],[2753,10,2581,12],[2753,11,2581,13,"_movePiece"],[2753,21,2581,23],[2753,22,2581,24,"move"],[2753,26,2581,28],[2753,27,2581,29,"from"],[2753,31,2581,33],[2753,33,2581,35,"move"],[2753,37,2581,39],[2753,38,2581,40,"to"],[2753,40,2581,42],[2753,41,2581,43],[2754,6,2582,8],[2755,6,2583,8],[2755,10,2583,12,"move"],[2755,14,2583,16],[2755,15,2583,17,"flags"],[2755,20,2583,22],[2755,23,2583,25,"BITS"],[2755,27,2583,29],[2755,28,2583,30,"EP_CAPTURE"],[2755,38,2583,40],[2755,40,2583,42],[2756,8,2584,12],[2756,12,2584,16],[2756,16,2584,20],[2756,17,2584,21,"_turn"],[2756,22,2584,26],[2756,27,2584,31,"BLACK"],[2756,32,2584,36],[2756,34,2584,38],[2757,10,2585,16],[2757,14,2585,20],[2757,15,2585,21,"_clear"],[2757,21,2585,27],[2757,22,2585,28,"move"],[2757,26,2585,32],[2757,27,2585,33,"to"],[2757,29,2585,35],[2757,32,2585,38],[2757,34,2585,40],[2757,35,2585,41],[2758,8,2586,12],[2758,9,2586,13],[2758,15,2587,17],[2759,10,2588,16],[2759,14,2588,20],[2759,15,2588,21,"_clear"],[2759,21,2588,27],[2759,22,2588,28,"move"],[2759,26,2588,32],[2759,27,2588,33,"to"],[2759,29,2588,35],[2759,32,2588,38],[2759,34,2588,40],[2759,35,2588,41],[2760,8,2589,12],[2761,6,2590,8],[2762,6,2591,8],[2763,6,2592,8],[2763,10,2592,12,"move"],[2763,14,2592,16],[2763,15,2592,17,"promotion"],[2763,24,2592,26],[2763,26,2592,28],[2764,8,2593,12],[2764,12,2593,16],[2764,13,2593,17,"_clear"],[2764,19,2593,23],[2764,20,2593,24,"move"],[2764,24,2593,28],[2764,25,2593,29,"to"],[2764,27,2593,31],[2764,28,2593,32],[2765,8,2594,12],[2765,12,2594,16],[2765,13,2594,17,"_set"],[2765,17,2594,21],[2765,18,2594,22,"move"],[2765,22,2594,26],[2765,23,2594,27,"to"],[2765,25,2594,29],[2765,27,2594,31],[2766,10,2594,33,"type"],[2766,14,2594,37],[2766,16,2594,39,"move"],[2766,20,2594,43],[2766,21,2594,44,"promotion"],[2766,30,2594,53],[2767,10,2594,55,"color"],[2767,15,2594,60],[2767,17,2594,62,"us"],[2768,8,2594,65],[2768,9,2594,66],[2768,10,2594,67],[2769,6,2595,8],[2770,6,2596,8],[2771,6,2597,8],[2771,10,2597,12],[2771,14,2597,16],[2771,15,2597,17,"_board"],[2771,21,2597,23],[2771,22,2597,24,"move"],[2771,26,2597,28],[2771,27,2597,29,"to"],[2771,29,2597,31],[2771,30,2597,32],[2771,31,2597,33,"type"],[2771,35,2597,37],[2771,40,2597,42,"KING"],[2771,44,2597,46],[2771,46,2597,48],[2772,8,2598,12],[2772,12,2598,16],[2772,13,2598,17,"_kings"],[2772,19,2598,23],[2772,20,2598,24,"us"],[2772,22,2598,26],[2772,23,2598,27],[2772,26,2598,30,"move"],[2772,30,2598,34],[2772,31,2598,35,"to"],[2772,33,2598,37],[2773,8,2599,12],[2774,8,2600,12],[2774,12,2600,16,"move"],[2774,16,2600,20],[2774,17,2600,21,"flags"],[2774,22,2600,26],[2774,25,2600,29,"BITS"],[2774,29,2600,33],[2774,30,2600,34,"KSIDE_CASTLE"],[2774,42,2600,46],[2774,44,2600,48],[2775,10,2601,16],[2775,16,2601,22,"castlingTo"],[2775,26,2601,32],[2775,29,2601,35,"move"],[2775,33,2601,39],[2775,34,2601,40,"to"],[2775,36,2601,42],[2775,39,2601,45],[2775,40,2601,46],[2776,10,2602,16],[2776,16,2602,22,"castlingFrom"],[2776,28,2602,34],[2776,31,2602,37,"move"],[2776,35,2602,41],[2776,36,2602,42,"to"],[2776,38,2602,44],[2776,41,2602,47],[2776,42,2602,48],[2777,10,2603,16],[2777,14,2603,20],[2777,15,2603,21,"_movePiece"],[2777,25,2603,31],[2777,26,2603,32,"castlingFrom"],[2777,38,2603,44],[2777,40,2603,46,"castlingTo"],[2777,50,2603,56],[2777,51,2603,57],[2778,8,2604,12],[2778,9,2604,13],[2778,15,2605,17],[2778,19,2605,21,"move"],[2778,23,2605,25],[2778,24,2605,26,"flags"],[2778,29,2605,31],[2778,32,2605,34,"BITS"],[2778,36,2605,38],[2778,37,2605,39,"QSIDE_CASTLE"],[2778,49,2605,51],[2778,51,2605,53],[2779,10,2606,16],[2779,16,2606,22,"castlingTo"],[2779,26,2606,32],[2779,29,2606,35,"move"],[2779,33,2606,39],[2779,34,2606,40,"to"],[2779,36,2606,42],[2779,39,2606,45],[2779,40,2606,46],[2780,10,2607,16],[2780,16,2607,22,"castlingFrom"],[2780,28,2607,34],[2780,31,2607,37,"move"],[2780,35,2607,41],[2780,36,2607,42,"to"],[2780,38,2607,44],[2780,41,2607,47],[2780,42,2607,48],[2781,10,2608,16],[2781,14,2608,20],[2781,15,2608,21,"_movePiece"],[2781,25,2608,31],[2781,26,2608,32,"castlingFrom"],[2781,38,2608,44],[2781,40,2608,46,"castlingTo"],[2781,50,2608,56],[2781,51,2608,57],[2782,8,2609,12],[2783,8,2610,12],[2784,8,2611,12],[2784,12,2611,16],[2784,13,2611,17,"_castling"],[2784,22,2611,26],[2784,23,2611,27,"us"],[2784,25,2611,29],[2784,26,2611,30],[2784,29,2611,33],[2784,30,2611,34],[2785,6,2612,8],[2786,6,2613,8],[2787,6,2614,8],[2787,10,2614,12],[2787,14,2614,16],[2787,15,2614,17,"_castling"],[2787,24,2614,26],[2787,25,2614,27,"us"],[2787,27,2614,29],[2787,28,2614,30],[2787,30,2614,32],[2788,8,2615,12],[2788,13,2615,17],[2788,17,2615,21,"i"],[2788,18,2615,22],[2788,21,2615,25],[2788,22,2615,26],[2788,24,2615,28,"len"],[2788,27,2615,31],[2788,30,2615,34,"ROOKS"],[2788,35,2615,39],[2788,36,2615,40,"us"],[2788,38,2615,42],[2788,39,2615,43],[2788,40,2615,44,"length"],[2788,46,2615,50],[2788,48,2615,52,"i"],[2788,49,2615,53],[2788,52,2615,56,"len"],[2788,55,2615,59],[2788,57,2615,61,"i"],[2788,58,2615,62],[2788,60,2615,64],[2788,62,2615,66],[2789,10,2616,16],[2789,14,2616,20,"move"],[2789,18,2616,24],[2789,19,2616,25,"from"],[2789,23,2616,29],[2789,28,2616,34,"ROOKS"],[2789,33,2616,39],[2789,34,2616,40,"us"],[2789,36,2616,42],[2789,37,2616,43],[2789,38,2616,44,"i"],[2789,39,2616,45],[2789,40,2616,46],[2789,41,2616,47,"square"],[2789,47,2616,53],[2789,51,2617,20],[2789,55,2617,24],[2789,56,2617,25,"_castling"],[2789,65,2617,34],[2789,66,2617,35,"us"],[2789,68,2617,37],[2789,69,2617,38],[2789,72,2617,41,"ROOKS"],[2789,77,2617,46],[2789,78,2617,47,"us"],[2789,80,2617,49],[2789,81,2617,50],[2789,82,2617,51,"i"],[2789,83,2617,52],[2789,84,2617,53],[2789,85,2617,54,"flag"],[2789,89,2617,58],[2789,91,2617,60],[2790,12,2618,20],[2790,16,2618,24],[2790,17,2618,25,"_castling"],[2790,26,2618,34],[2790,27,2618,35,"us"],[2790,29,2618,37],[2790,30,2618,38],[2790,34,2618,42,"ROOKS"],[2790,39,2618,47],[2790,40,2618,48,"us"],[2790,42,2618,50],[2790,43,2618,51],[2790,44,2618,52,"i"],[2790,45,2618,53],[2790,46,2618,54],[2790,47,2618,55,"flag"],[2790,51,2618,59],[2791,12,2619,20],[2792,10,2620,16],[2793,8,2621,12],[2794,6,2622,8],[2795,6,2623,8],[2796,6,2624,8],[2796,10,2624,12],[2796,14,2624,16],[2796,15,2624,17,"_castling"],[2796,24,2624,26],[2796,25,2624,27,"them"],[2796,29,2624,31],[2796,30,2624,32],[2796,32,2624,34],[2797,8,2625,12],[2797,13,2625,17],[2797,17,2625,21,"i"],[2797,18,2625,22],[2797,21,2625,25],[2797,22,2625,26],[2797,24,2625,28,"len"],[2797,27,2625,31],[2797,30,2625,34,"ROOKS"],[2797,35,2625,39],[2797,36,2625,40,"them"],[2797,40,2625,44],[2797,41,2625,45],[2797,42,2625,46,"length"],[2797,48,2625,52],[2797,50,2625,54,"i"],[2797,51,2625,55],[2797,54,2625,58,"len"],[2797,57,2625,61],[2797,59,2625,63,"i"],[2797,60,2625,64],[2797,62,2625,66],[2797,64,2625,68],[2798,10,2626,16],[2798,14,2626,20,"move"],[2798,18,2626,24],[2798,19,2626,25,"to"],[2798,21,2626,27],[2798,26,2626,32,"ROOKS"],[2798,31,2626,37],[2798,32,2626,38,"them"],[2798,36,2626,42],[2798,37,2626,43],[2798,38,2626,44,"i"],[2798,39,2626,45],[2798,40,2626,46],[2798,41,2626,47,"square"],[2798,47,2626,53],[2798,51,2627,20],[2798,55,2627,24],[2798,56,2627,25,"_castling"],[2798,65,2627,34],[2798,66,2627,35,"them"],[2798,70,2627,39],[2798,71,2627,40],[2798,74,2627,43,"ROOKS"],[2798,79,2627,48],[2798,80,2627,49,"them"],[2798,84,2627,53],[2798,85,2627,54],[2798,86,2627,55,"i"],[2798,87,2627,56],[2798,88,2627,57],[2798,89,2627,58,"flag"],[2798,93,2627,62],[2798,95,2627,64],[2799,12,2628,20],[2799,16,2628,24],[2799,17,2628,25,"_castling"],[2799,26,2628,34],[2799,27,2628,35,"them"],[2799,31,2628,39],[2799,32,2628,40],[2799,36,2628,44,"ROOKS"],[2799,41,2628,49],[2799,42,2628,50,"them"],[2799,46,2628,54],[2799,47,2628,55],[2799,48,2628,56,"i"],[2799,49,2628,57],[2799,50,2628,58],[2799,51,2628,59,"flag"],[2799,55,2628,63],[2800,12,2629,20],[2801,10,2630,16],[2802,8,2631,12],[2803,6,2632,8],[2804,6,2633,8],[2804,10,2633,12],[2804,11,2633,13,"_hash"],[2804,16,2633,18],[2804,20,2633,22],[2804,24,2633,26],[2804,25,2633,27,"_castlingKey"],[2804,37,2633,39],[2804,38,2633,40],[2804,39,2633,41],[2805,6,2634,8],[2806,6,2635,8],[2806,10,2635,12,"move"],[2806,14,2635,16],[2806,15,2635,17,"flags"],[2806,20,2635,22],[2806,23,2635,25,"BITS"],[2806,27,2635,29],[2806,28,2635,30,"BIG_PAWN"],[2806,36,2635,38],[2806,38,2635,40],[2807,8,2636,12],[2807,12,2636,16,"epSquare"],[2807,20,2636,24],[2808,8,2637,12],[2808,12,2637,16,"us"],[2808,14,2637,18],[2808,19,2637,23,"BLACK"],[2808,24,2637,28],[2808,26,2637,30],[2809,10,2638,16,"epSquare"],[2809,18,2638,24],[2809,21,2638,27,"move"],[2809,25,2638,31],[2809,26,2638,32,"to"],[2809,28,2638,34],[2809,31,2638,37],[2809,33,2638,39],[2810,8,2639,12],[2810,9,2639,13],[2810,15,2640,17],[2811,10,2641,16,"epSquare"],[2811,18,2641,24],[2811,21,2641,27,"move"],[2811,25,2641,31],[2811,26,2641,32,"to"],[2811,28,2641,34],[2811,31,2641,37],[2811,33,2641,39],[2812,8,2642,12],[2813,8,2643,12],[2813,12,2643,17],[2813,14,2643,20,"move"],[2813,18,2643,24],[2813,19,2643,25,"to"],[2813,21,2643,27],[2813,24,2643,30],[2813,25,2643,31],[2813,28,2643,35],[2813,32,2643,39],[2813,33,2643,40],[2813,37,2644,16],[2813,41,2644,20],[2813,42,2644,21,"_board"],[2813,48,2644,27],[2813,49,2644,28,"move"],[2813,53,2644,32],[2813,54,2644,33,"to"],[2813,56,2644,35],[2813,59,2644,38],[2813,60,2644,39],[2813,61,2644,40],[2813,63,2644,42,"type"],[2813,67,2644,46],[2813,72,2644,51,"PAWN"],[2813,76,2644,55],[2813,80,2645,16],[2813,84,2645,20],[2813,85,2645,21,"_board"],[2813,91,2645,27],[2813,92,2645,28,"move"],[2813,96,2645,32],[2813,97,2645,33,"to"],[2813,99,2645,35],[2813,102,2645,38],[2813,103,2645,39],[2813,104,2645,40],[2813,106,2645,42,"color"],[2813,111,2645,47],[2813,116,2645,52,"them"],[2813,120,2645,56],[2813,124,2646,17],[2813,126,2646,20,"move"],[2813,130,2646,24],[2813,131,2646,25,"to"],[2813,133,2646,27],[2813,136,2646,30],[2813,137,2646,31],[2813,140,2646,35],[2813,144,2646,39],[2813,145,2646,40],[2813,149,2647,20],[2813,153,2647,24],[2813,154,2647,25,"_board"],[2813,160,2647,31],[2813,161,2647,32,"move"],[2813,165,2647,36],[2813,166,2647,37,"to"],[2813,168,2647,39],[2813,171,2647,42],[2813,172,2647,43],[2813,173,2647,44],[2813,175,2647,46,"type"],[2813,179,2647,50],[2813,184,2647,55,"PAWN"],[2813,188,2647,59],[2813,192,2648,20],[2813,196,2648,24],[2813,197,2648,25,"_board"],[2813,203,2648,31],[2813,204,2648,32,"move"],[2813,208,2648,36],[2813,209,2648,37,"to"],[2813,211,2648,39],[2813,214,2648,42],[2813,215,2648,43],[2813,216,2648,44],[2813,218,2648,46,"color"],[2813,223,2648,51],[2813,228,2648,56,"them"],[2813,232,2648,61],[2813,234,2648,63],[2814,10,2649,16],[2814,14,2649,20],[2814,15,2649,21,"_epSquare"],[2814,24,2649,30],[2814,27,2649,33,"epSquare"],[2814,35,2649,41],[2815,10,2650,16],[2815,14,2650,20],[2815,15,2650,21,"_hash"],[2815,20,2650,26],[2815,24,2650,30],[2815,28,2650,34],[2815,29,2650,35,"_epKey"],[2815,35,2650,41],[2815,36,2650,42],[2815,37,2650,43],[2816,8,2651,12],[2816,9,2651,13],[2816,15,2652,17],[2817,10,2653,16],[2817,14,2653,20],[2817,15,2653,21,"_epSquare"],[2817,24,2653,30],[2817,27,2653,33,"EMPTY"],[2817,32,2653,38],[2818,8,2654,12],[2819,6,2655,8],[2819,7,2655,9],[2819,13,2656,13],[2820,8,2657,12],[2820,12,2657,16],[2820,13,2657,17,"_epSquare"],[2820,22,2657,26],[2820,25,2657,29,"EMPTY"],[2820,30,2657,34],[2821,6,2658,8],[2822,6,2659,8],[2823,6,2660,8],[2823,10,2660,12,"move"],[2823,14,2660,16],[2823,15,2660,17,"piece"],[2823,20,2660,22],[2823,25,2660,27,"PAWN"],[2823,29,2660,31],[2823,31,2660,33],[2824,8,2661,12],[2824,12,2661,16],[2824,13,2661,17,"_halfMoves"],[2824,23,2661,27],[2824,26,2661,30],[2824,27,2661,31],[2825,6,2662,8],[2825,7,2662,9],[2825,13,2663,13],[2825,17,2663,17,"move"],[2825,21,2663,21],[2825,22,2663,22,"flags"],[2825,27,2663,27],[2825,31,2663,31,"BITS"],[2825,35,2663,35],[2825,36,2663,36,"CAPTURE"],[2825,43,2663,43],[2825,46,2663,46,"BITS"],[2825,50,2663,50],[2825,51,2663,51,"EP_CAPTURE"],[2825,61,2663,61],[2825,62,2663,62],[2825,64,2663,64],[2826,8,2664,12],[2826,12,2664,16],[2826,13,2664,17,"_halfMoves"],[2826,23,2664,27],[2826,26,2664,30],[2826,27,2664,31],[2827,6,2665,8],[2827,7,2665,9],[2827,13,2666,13],[2828,8,2667,12],[2828,12,2667,16],[2828,13,2667,17,"_halfMoves"],[2828,23,2667,27],[2828,25,2667,29],[2829,6,2668,8],[2830,6,2669,8],[2830,10,2669,12,"us"],[2830,12,2669,14],[2830,17,2669,19,"BLACK"],[2830,22,2669,24],[2830,24,2669,26],[2831,8,2670,12],[2831,12,2670,16],[2831,13,2670,17,"_moveNumber"],[2831,24,2670,28],[2831,26,2670,30],[2832,6,2671,8],[2833,6,2672,8],[2833,10,2672,12],[2833,11,2672,13,"_turn"],[2833,16,2672,18],[2833,19,2672,21,"them"],[2833,23,2672,25],[2834,6,2673,8],[2834,10,2673,12],[2834,11,2673,13,"_hash"],[2834,16,2673,18],[2834,20,2673,22,"SIDE_KEY"],[2834,28,2673,30],[2835,4,2674,4],[2836,4,2675,4,"undo"],[2836,8,2675,8,"undo"],[2836,9,2675,8],[2836,11,2675,11],[2837,6,2676,8],[2837,12,2676,14,"hash"],[2837,16,2676,18],[2837,19,2676,21],[2837,23,2676,25],[2837,24,2676,26,"_hash"],[2837,29,2676,31],[2838,6,2677,8],[2838,12,2677,14,"move"],[2838,16,2677,18],[2838,19,2677,21],[2838,23,2677,25],[2838,24,2677,26,"_undoMove"],[2838,33,2677,35],[2838,34,2677,36],[2838,35,2677,37],[2839,6,2678,8],[2839,10,2678,12,"move"],[2839,14,2678,16],[2839,16,2678,18],[2840,8,2679,12],[2840,14,2679,18,"prettyMove"],[2840,24,2679,28],[2840,27,2679,31],[2840,31,2679,35,"Move"],[2840,35,2679,39],[2840,36,2679,40],[2840,40,2679,44],[2840,42,2679,46,"move"],[2840,46,2679,50],[2840,47,2679,51],[2841,8,2680,12],[2841,12,2680,16],[2841,13,2680,17,"_decPositionCount"],[2841,30,2680,34],[2841,31,2680,35,"hash"],[2841,35,2680,39],[2841,36,2680,40],[2842,8,2681,12],[2842,15,2681,19,"prettyMove"],[2842,25,2681,29],[2843,6,2682,8],[2844,6,2683,8],[2844,13,2683,15],[2844,17,2683,19],[2845,4,2684,4],[2846,4,2685,4,"_undoMove"],[2846,13,2685,13,"_undoMove"],[2846,14,2685,13],[2846,16,2685,16],[2847,6,2686,8],[2847,12,2686,14,"old"],[2847,15,2686,17],[2847,18,2686,20],[2847,22,2686,24],[2847,23,2686,25,"_history"],[2847,31,2686,33],[2847,32,2686,34,"pop"],[2847,35,2686,37],[2847,36,2686,38],[2847,37,2686,39],[2848,6,2687,8],[2848,10,2687,12,"old"],[2848,13,2687,15],[2848,18,2687,20,"undefined"],[2848,27,2687,29],[2848,29,2687,31],[2849,8,2688,12],[2849,15,2688,19],[2849,19,2688,23],[2850,6,2689,8],[2851,6,2690,8],[2851,10,2690,12],[2851,11,2690,13,"_hash"],[2851,16,2690,18],[2851,20,2690,22],[2851,24,2690,26],[2851,25,2690,27,"_epKey"],[2851,31,2690,33],[2851,32,2690,34],[2851,33,2690,35],[2852,6,2691,8],[2852,10,2691,12],[2852,11,2691,13,"_hash"],[2852,16,2691,18],[2852,20,2691,22],[2852,24,2691,26],[2852,25,2691,27,"_castlingKey"],[2852,37,2691,39],[2852,38,2691,40],[2852,39,2691,41],[2853,6,2692,8],[2853,12,2692,14,"move"],[2853,16,2692,18],[2853,19,2692,21,"old"],[2853,22,2692,24],[2853,23,2692,25,"move"],[2853,27,2692,29],[2854,6,2693,8],[2854,10,2693,12],[2854,11,2693,13,"_kings"],[2854,17,2693,19],[2854,20,2693,22,"old"],[2854,23,2693,25],[2854,24,2693,26,"kings"],[2854,29,2693,31],[2855,6,2694,8],[2855,10,2694,12],[2855,11,2694,13,"_turn"],[2855,16,2694,18],[2855,19,2694,21,"old"],[2855,22,2694,24],[2855,23,2694,25,"turn"],[2855,27,2694,29],[2856,6,2695,8],[2856,10,2695,12],[2856,11,2695,13,"_castling"],[2856,20,2695,22],[2856,23,2695,25,"old"],[2856,26,2695,28],[2856,27,2695,29,"castling"],[2856,35,2695,37],[2857,6,2696,8],[2857,10,2696,12],[2857,11,2696,13,"_epSquare"],[2857,20,2696,22],[2857,23,2696,25,"old"],[2857,26,2696,28],[2857,27,2696,29,"epSquare"],[2857,35,2696,37],[2858,6,2697,8],[2858,10,2697,12],[2858,11,2697,13,"_halfMoves"],[2858,21,2697,23],[2858,24,2697,26,"old"],[2858,27,2697,29],[2858,28,2697,30,"halfMoves"],[2858,37,2697,39],[2859,6,2698,8],[2859,10,2698,12],[2859,11,2698,13,"_moveNumber"],[2859,22,2698,24],[2859,25,2698,27,"old"],[2859,28,2698,30],[2859,29,2698,31,"moveNumber"],[2859,39,2698,41],[2860,6,2699,8],[2860,10,2699,12],[2860,11,2699,13,"_hash"],[2860,16,2699,18],[2860,20,2699,22],[2860,24,2699,26],[2860,25,2699,27,"_epKey"],[2860,31,2699,33],[2860,32,2699,34],[2860,33,2699,35],[2861,6,2700,8],[2861,10,2700,12],[2861,11,2700,13,"_hash"],[2861,16,2700,18],[2861,20,2700,22],[2861,24,2700,26],[2861,25,2700,27,"_castlingKey"],[2861,37,2700,39],[2861,38,2700,40],[2861,39,2700,41],[2862,6,2701,8],[2862,10,2701,12],[2862,11,2701,13,"_hash"],[2862,16,2701,18],[2862,20,2701,22,"SIDE_KEY"],[2862,28,2701,30],[2863,6,2702,8],[2863,12,2702,14,"us"],[2863,14,2702,16],[2863,17,2702,19],[2863,21,2702,23],[2863,22,2702,24,"_turn"],[2863,27,2702,29],[2864,6,2703,8],[2864,12,2703,14,"them"],[2864,16,2703,18],[2864,19,2703,21,"swapColor"],[2864,28,2703,30],[2864,29,2703,31,"us"],[2864,31,2703,33],[2864,32,2703,34],[2865,6,2704,8],[2865,10,2704,12,"move"],[2865,14,2704,16],[2865,15,2704,17,"flags"],[2865,20,2704,22],[2865,23,2704,25,"BITS"],[2865,27,2704,29],[2865,28,2704,30,"NULL_MOVE"],[2865,37,2704,39],[2865,39,2704,41],[2866,8,2705,12],[2866,15,2705,19,"move"],[2866,19,2705,23],[2867,6,2706,8],[2868,6,2707,8],[2868,10,2707,12],[2868,11,2707,13,"_movePiece"],[2868,21,2707,23],[2868,22,2707,24,"move"],[2868,26,2707,28],[2868,27,2707,29,"to"],[2868,29,2707,31],[2868,31,2707,33,"move"],[2868,35,2707,37],[2868,36,2707,38,"from"],[2868,40,2707,42],[2868,41,2707,43],[2869,6,2708,8],[2870,6,2709,8],[2870,10,2709,12,"move"],[2870,14,2709,16],[2870,15,2709,17,"piece"],[2870,20,2709,22],[2870,22,2709,24],[2871,8,2710,12],[2871,12,2710,16],[2871,13,2710,17,"_clear"],[2871,19,2710,23],[2871,20,2710,24,"move"],[2871,24,2710,28],[2871,25,2710,29,"from"],[2871,29,2710,33],[2871,30,2710,34],[2872,8,2711,12],[2872,12,2711,16],[2872,13,2711,17,"_set"],[2872,17,2711,21],[2872,18,2711,22,"move"],[2872,22,2711,26],[2872,23,2711,27,"from"],[2872,27,2711,31],[2872,29,2711,33],[2873,10,2711,35,"type"],[2873,14,2711,39],[2873,16,2711,41,"move"],[2873,20,2711,45],[2873,21,2711,46,"piece"],[2873,26,2711,51],[2874,10,2711,53,"color"],[2874,15,2711,58],[2874,17,2711,60,"us"],[2875,8,2711,63],[2875,9,2711,64],[2875,10,2711,65],[2876,6,2712,8],[2877,6,2713,8],[2877,10,2713,12,"move"],[2877,14,2713,16],[2877,15,2713,17,"captured"],[2877,23,2713,25],[2877,25,2713,27],[2878,8,2714,12],[2878,12,2714,16,"move"],[2878,16,2714,20],[2878,17,2714,21,"flags"],[2878,22,2714,26],[2878,25,2714,29,"BITS"],[2878,29,2714,33],[2878,30,2714,34,"EP_CAPTURE"],[2878,40,2714,44],[2878,42,2714,46],[2879,10,2715,16],[2880,10,2716,16],[2880,14,2716,20,"index"],[2880,19,2716,25],[2881,10,2717,16],[2881,14,2717,20,"us"],[2881,16,2717,22],[2881,21,2717,27,"BLACK"],[2881,26,2717,32],[2881,28,2717,34],[2882,12,2718,20,"index"],[2882,17,2718,25],[2882,20,2718,28,"move"],[2882,24,2718,32],[2882,25,2718,33,"to"],[2882,27,2718,35],[2882,30,2718,38],[2882,32,2718,40],[2883,10,2719,16],[2883,11,2719,17],[2883,17,2720,21],[2884,12,2721,20,"index"],[2884,17,2721,25],[2884,20,2721,28,"move"],[2884,24,2721,32],[2884,25,2721,33,"to"],[2884,27,2721,35],[2884,30,2721,38],[2884,32,2721,40],[2885,10,2722,16],[2886,10,2723,16],[2886,14,2723,20],[2886,15,2723,21,"_set"],[2886,19,2723,25],[2886,20,2723,26,"index"],[2886,25,2723,31],[2886,27,2723,33],[2887,12,2723,35,"type"],[2887,16,2723,39],[2887,18,2723,41,"PAWN"],[2887,22,2723,45],[2888,12,2723,47,"color"],[2888,17,2723,52],[2888,19,2723,54,"them"],[2889,10,2723,59],[2889,11,2723,60],[2889,12,2723,61],[2890,8,2724,12],[2890,9,2724,13],[2890,15,2725,17],[2891,10,2726,16],[2892,10,2727,16],[2892,14,2727,20],[2892,15,2727,21,"_set"],[2892,19,2727,25],[2892,20,2727,26,"move"],[2892,24,2727,30],[2892,25,2727,31,"to"],[2892,27,2727,33],[2892,29,2727,35],[2893,12,2727,37,"type"],[2893,16,2727,41],[2893,18,2727,43,"move"],[2893,22,2727,47],[2893,23,2727,48,"captured"],[2893,31,2727,56],[2894,12,2727,58,"color"],[2894,17,2727,63],[2894,19,2727,65,"them"],[2895,10,2727,70],[2895,11,2727,71],[2895,12,2727,72],[2896,8,2728,12],[2897,6,2729,8],[2898,6,2730,8],[2898,10,2730,12,"move"],[2898,14,2730,16],[2898,15,2730,17,"flags"],[2898,20,2730,22],[2898,24,2730,26,"BITS"],[2898,28,2730,30],[2898,29,2730,31,"KSIDE_CASTLE"],[2898,41,2730,43],[2898,44,2730,46,"BITS"],[2898,48,2730,50],[2898,49,2730,51,"QSIDE_CASTLE"],[2898,61,2730,63],[2898,62,2730,64],[2898,64,2730,66],[2899,8,2731,12],[2899,12,2731,16,"castlingTo"],[2899,22,2731,26],[2899,24,2731,28,"castlingFrom"],[2899,36,2731,40],[2900,8,2732,12],[2900,12,2732,16,"move"],[2900,16,2732,20],[2900,17,2732,21,"flags"],[2900,22,2732,26],[2900,25,2732,29,"BITS"],[2900,29,2732,33],[2900,30,2732,34,"KSIDE_CASTLE"],[2900,42,2732,46],[2900,44,2732,48],[2901,10,2733,16,"castlingTo"],[2901,20,2733,26],[2901,23,2733,29,"move"],[2901,27,2733,33],[2901,28,2733,34,"to"],[2901,30,2733,36],[2901,33,2733,39],[2901,34,2733,40],[2902,10,2734,16,"castlingFrom"],[2902,22,2734,28],[2902,25,2734,31,"move"],[2902,29,2734,35],[2902,30,2734,36,"to"],[2902,32,2734,38],[2902,35,2734,41],[2902,36,2734,42],[2903,8,2735,12],[2903,9,2735,13],[2903,15,2736,17],[2904,10,2737,16,"castlingTo"],[2904,20,2737,26],[2904,23,2737,29,"move"],[2904,27,2737,33],[2904,28,2737,34,"to"],[2904,30,2737,36],[2904,33,2737,39],[2904,34,2737,40],[2905,10,2738,16,"castlingFrom"],[2905,22,2738,28],[2905,25,2738,31,"move"],[2905,29,2738,35],[2905,30,2738,36,"to"],[2905,32,2738,38],[2905,35,2738,41],[2905,36,2738,42],[2906,8,2739,12],[2907,8,2740,12],[2907,12,2740,16],[2907,13,2740,17,"_movePiece"],[2907,23,2740,27],[2907,24,2740,28,"castlingFrom"],[2907,36,2740,40],[2907,38,2740,42,"castlingTo"],[2907,48,2740,52],[2907,49,2740,53],[2908,6,2741,8],[2909,6,2742,8],[2909,13,2742,15,"move"],[2909,17,2742,19],[2910,4,2743,4],[2911,4,2744,4,"pgn"],[2911,7,2744,7,"pgn"],[2911,8,2744,8],[2912,6,2744,10,"newline"],[2912,13,2744,17],[2912,16,2744,20],[2912,20,2744,24],[2913,6,2744,26,"maxWidth"],[2913,14,2744,34],[2913,17,2744,37],[2914,4,2744,40],[2914,5,2744,41],[2914,8,2744,44],[2914,9,2744,45],[2914,10,2744,46],[2914,12,2744,48],[2915,6,2745,8],[2916,0,2746,0],[2917,0,2747,0],[2918,0,2748,0],[2919,6,2749,8],[2919,12,2749,14,"result"],[2919,18,2749,20],[2919,21,2749,23],[2919,23,2749,25],[2920,6,2750,8],[2920,10,2750,12,"headerExists"],[2920,22,2750,24],[2920,25,2750,27],[2920,30,2750,32],[2921,6,2751,8],[2922,6,2752,8],[2922,11,2752,13],[2922,17,2752,19,"i"],[2922,18,2752,20],[2922,22,2752,24],[2922,26,2752,28],[2922,27,2752,29,"_header"],[2922,34,2752,36],[2922,36,2752,38],[2923,8,2753,12],[2924,0,2754,0],[2925,0,2755,0],[2926,0,2756,0],[2927,0,2757,0],[2928,0,2758,0],[2929,0,2759,0],[2930,8,2760,12],[2930,14,2760,18,"headerTag"],[2930,23,2760,27],[2930,26,2760,30],[2930,30,2760,34],[2930,31,2760,35,"_header"],[2930,38,2760,42],[2930,39,2760,43,"i"],[2930,40,2760,44],[2930,41,2760,45],[2931,8,2761,12],[2931,12,2761,16,"headerTag"],[2931,21,2761,25],[2931,23,2762,16,"result"],[2931,29,2762,22],[2931,30,2762,23,"push"],[2931,34,2762,27],[2931,35,2762,28],[2931,39,2762,32,"i"],[2931,40,2762,33],[2931,45,2762,38],[2931,49,2762,42],[2931,50,2762,43,"_header"],[2931,57,2762,50],[2931,58,2762,51,"i"],[2931,59,2762,52],[2931,60,2762,53],[2931,64,2762,57],[2931,67,2762,60,"newline"],[2931,74,2762,67],[2931,75,2762,68],[2932,8,2763,12,"headerExists"],[2932,20,2763,24],[2932,23,2763,27],[2932,27,2763,31],[2933,6,2764,8],[2934,6,2765,8],[2934,10,2765,12,"headerExists"],[2934,22,2765,24],[2934,26,2765,28],[2934,30,2765,32],[2934,31,2765,33,"_history"],[2934,39,2765,41],[2934,40,2765,42,"length"],[2934,46,2765,48],[2934,48,2765,50],[2935,8,2766,12,"result"],[2935,14,2766,18],[2935,15,2766,19,"push"],[2935,19,2766,23],[2935,20,2766,24,"newline"],[2935,27,2766,31],[2935,28,2766,32],[2936,6,2767,8],[2937,6,2768,8],[2937,12,2768,14,"appendComment"],[2937,25,2768,27],[2937,28,2768,31,"moveString"],[2937,38,2768,41],[2937,42,2768,46],[2938,8,2769,12],[2938,14,2769,18,"comment"],[2938,21,2769,25],[2938,24,2769,28],[2938,28,2769,32],[2938,29,2769,33,"_comments"],[2938,38,2769,42],[2938,39,2769,43],[2938,43,2769,47],[2938,44,2769,48,"fen"],[2938,47,2769,51],[2938,48,2769,52],[2938,49,2769,53],[2938,50,2769,54],[2939,8,2770,12],[2939,12,2770,16],[2939,19,2770,23,"comment"],[2939,26,2770,30],[2939,31,2770,35],[2939,42,2770,46],[2939,44,2770,48],[2940,10,2771,16],[2940,16,2771,22,"delimiter"],[2940,25,2771,31],[2940,28,2771,34,"moveString"],[2940,38,2771,44],[2940,39,2771,45,"length"],[2940,45,2771,51],[2940,48,2771,54],[2940,49,2771,55],[2940,52,2771,58],[2940,55,2771,61],[2940,58,2771,64],[2940,60,2771,66],[2941,10,2772,16,"moveString"],[2941,20,2772,26],[2941,23,2772,29],[2941,26,2772,32,"moveString"],[2941,36,2772,42],[2941,39,2772,45,"delimiter"],[2941,48,2772,54],[2941,52,2772,58,"comment"],[2941,59,2772,65],[2941,62,2772,68],[2942,8,2773,12],[2943,8,2774,12],[2943,15,2774,19,"moveString"],[2943,25,2774,29],[2944,6,2775,8],[2944,7,2775,9],[2945,6,2776,8],[2946,6,2777,8],[2946,12,2777,14,"reversedHistory"],[2946,27,2777,29],[2946,30,2777,32],[2946,32,2777,34],[2947,6,2778,8],[2947,13,2778,15],[2947,17,2778,19],[2947,18,2778,20,"_history"],[2947,26,2778,28],[2947,27,2778,29,"length"],[2947,33,2778,35],[2947,36,2778,38],[2947,37,2778,39],[2947,39,2778,41],[2948,8,2779,12,"reversedHistory"],[2948,23,2779,27],[2948,24,2779,28,"push"],[2948,28,2779,32],[2948,29,2779,33],[2948,33,2779,37],[2948,34,2779,38,"_undoMove"],[2948,43,2779,47],[2948,44,2779,48],[2948,45,2779,49],[2948,46,2779,50],[2949,6,2780,8],[2950,6,2781,8],[2950,12,2781,14,"moves"],[2950,17,2781,19],[2950,20,2781,22],[2950,22,2781,24],[2951,6,2782,8],[2951,10,2782,12,"moveString"],[2951,20,2782,22],[2951,23,2782,25],[2951,25,2782,27],[2952,6,2783,8],[2953,6,2784,8],[2953,10,2784,12,"reversedHistory"],[2953,25,2784,27],[2953,26,2784,28,"length"],[2953,32,2784,34],[2953,37,2784,39],[2953,38,2784,40],[2953,40,2784,42],[2954,8,2785,12,"moves"],[2954,13,2785,17],[2954,14,2785,18,"push"],[2954,18,2785,22],[2954,19,2785,23,"appendComment"],[2954,32,2785,36],[2954,33,2785,37],[2954,35,2785,39],[2954,36,2785,40],[2954,37,2785,41],[2955,6,2786,8],[2956,6,2787,8],[2957,6,2788,8],[2957,13,2788,15,"reversedHistory"],[2957,28,2788,30],[2957,29,2788,31,"length"],[2957,35,2788,37],[2957,38,2788,40],[2957,39,2788,41],[2957,41,2788,43],[2958,8,2789,12,"moveString"],[2958,18,2789,22],[2958,21,2789,25,"appendComment"],[2958,34,2789,38],[2958,35,2789,39,"moveString"],[2958,45,2789,49],[2958,46,2789,50],[2959,8,2790,12],[2959,14,2790,18,"move"],[2959,18,2790,22],[2959,21,2790,25,"reversedHistory"],[2959,36,2790,40],[2959,37,2790,41,"pop"],[2959,40,2790,44],[2959,41,2790,45],[2959,42,2790,46],[2960,8,2791,12],[2961,8,2792,12],[2961,12,2792,16],[2961,13,2792,17,"move"],[2961,17,2792,21],[2961,19,2792,23],[2962,10,2793,16],[2963,8,2794,12],[2964,8,2795,12],[2965,8,2796,12],[2965,12,2796,16],[2965,13,2796,17],[2965,17,2796,21],[2965,18,2796,22,"_history"],[2965,26,2796,30],[2965,27,2796,31,"length"],[2965,33,2796,37],[2965,37,2796,41,"move"],[2965,41,2796,45],[2965,42,2796,46,"color"],[2965,47,2796,51],[2965,52,2796,56],[2965,55,2796,59],[2965,57,2796,61],[2966,10,2797,16],[2966,16,2797,22,"prefix"],[2966,22,2797,28],[2966,25,2797,31],[2966,28,2797,34],[2966,32,2797,38],[2966,33,2797,39,"_moveNumber"],[2966,44,2797,50],[2966,51,2797,57],[2967,10,2798,16],[2968,10,2799,16,"moveString"],[2968,20,2799,26],[2968,23,2799,29,"moveString"],[2968,33,2799,39],[2968,36,2799,42],[2968,39,2799,45,"moveString"],[2968,49,2799,55],[2968,53,2799,59,"prefix"],[2968,59,2799,65],[2968,61,2799,67],[2968,64,2799,70,"prefix"],[2968,70,2799,76],[2969,8,2800,12],[2969,9,2800,13],[2969,15,2801,17],[2969,19,2801,21,"move"],[2969,23,2801,25],[2969,24,2801,26,"color"],[2969,29,2801,31],[2969,34,2801,36],[2969,37,2801,39],[2969,39,2801,41],[2970,10,2802,16],[2971,10,2803,16],[2971,14,2803,20,"moveString"],[2971,24,2803,30],[2971,25,2803,31,"length"],[2971,31,2803,37],[2971,33,2803,39],[2972,12,2804,20,"moves"],[2972,17,2804,25],[2972,18,2804,26,"push"],[2972,22,2804,30],[2972,23,2804,31,"moveString"],[2972,33,2804,41],[2972,34,2804,42],[2973,10,2805,16],[2974,10,2806,16,"moveString"],[2974,20,2806,26],[2974,23,2806,29],[2974,27,2806,33],[2974,28,2806,34,"_moveNumber"],[2974,39,2806,45],[2974,42,2806,48],[2974,45,2806,51],[2975,8,2807,12],[2976,8,2808,12,"moveString"],[2976,18,2808,22],[2976,21,2809,16,"moveString"],[2976,31,2809,26],[2976,34,2809,29],[2976,37,2809,32],[2976,40,2809,35],[2976,44,2809,39],[2976,45,2809,40,"_moveToSan"],[2976,55,2809,50],[2976,56,2809,51,"move"],[2976,60,2809,55],[2976,62,2809,57],[2976,66,2809,61],[2976,67,2809,62,"_moves"],[2976,73,2809,68],[2976,74,2809,69],[2977,10,2809,71,"legal"],[2977,15,2809,76],[2977,17,2809,78],[2978,8,2809,83],[2978,9,2809,84],[2978,10,2809,85],[2978,11,2809,86],[2979,8,2810,12],[2979,12,2810,16],[2979,13,2810,17,"_makeMove"],[2979,22,2810,26],[2979,23,2810,27,"move"],[2979,27,2810,31],[2979,28,2810,32],[2980,6,2811,8],[2981,6,2812,8],[2982,6,2813,8],[2982,10,2813,12,"moveString"],[2982,20,2813,22],[2982,21,2813,23,"length"],[2982,27,2813,29],[2982,29,2813,31],[2983,8,2814,12,"moves"],[2983,13,2814,17],[2983,14,2814,18,"push"],[2983,18,2814,22],[2983,19,2814,23,"appendComment"],[2983,32,2814,36],[2983,33,2814,37,"moveString"],[2983,43,2814,47],[2983,44,2814,48],[2983,45,2814,49],[2984,6,2815,8],[2985,6,2816,8],[2986,6,2817,8,"moves"],[2986,11,2817,13],[2986,12,2817,14,"push"],[2986,16,2817,18],[2986,17,2817,19],[2986,21,2817,23],[2986,22,2817,24,"_header"],[2986,29,2817,31],[2986,30,2817,32,"Result"],[2986,36,2817,38],[2986,40,2817,42],[2986,43,2817,45],[2986,44,2817,46],[2987,6,2818,8],[2988,0,2819,0],[2989,0,2820,0],[2990,0,2821,0],[2991,6,2822,8],[2991,10,2822,12,"maxWidth"],[2991,18,2822,20],[2991,23,2822,25],[2991,24,2822,26],[2991,26,2822,28],[2992,8,2823,12],[2992,15,2823,19,"result"],[2992,21,2823,25],[2992,22,2823,26,"join"],[2992,26,2823,30],[2992,27,2823,31],[2992,29,2823,33],[2992,30,2823,34],[2992,33,2823,37,"moves"],[2992,38,2823,42],[2992,39,2823,43,"join"],[2992,43,2823,47],[2992,44,2823,48],[2992,47,2823,51],[2992,48,2823,52],[2993,6,2824,8],[2994,6,2825,8],[2995,6,2826,8],[2995,12,2826,14,"strip"],[2995,17,2826,19],[2995,20,2826,22],[2995,29,2826,22,"strip"],[2995,30,2826,22],[2995,32,2826,34],[2996,8,2827,12],[2996,12,2827,16,"result"],[2996,18,2827,22],[2996,19,2827,23,"length"],[2996,25,2827,29],[2996,28,2827,32],[2996,29,2827,33],[2996,33,2827,37,"result"],[2996,39,2827,43],[2996,40,2827,44,"result"],[2996,46,2827,50],[2996,47,2827,51,"length"],[2996,53,2827,57],[2996,56,2827,60],[2996,57,2827,61],[2996,58,2827,62],[2996,63,2827,67],[2996,66,2827,70],[2996,68,2827,72],[2997,10,2828,16,"result"],[2997,16,2828,22],[2997,17,2828,23,"pop"],[2997,20,2828,26],[2997,21,2828,27],[2997,22,2828,28],[2998,10,2829,16],[2998,17,2829,23],[2998,21,2829,27],[2999,8,2830,12],[3000,8,2831,12],[3000,15,2831,19],[3000,20,2831,24],[3001,6,2832,8],[3001,7,2832,9],[3002,6,2833,8],[3003,6,2834,8],[3003,12,2834,14,"wrapComment"],[3003,23,2834,25],[3003,26,2834,28],[3003,35,2834,28,"wrapComment"],[3003,36,2834,38,"width"],[3003,41,2834,43],[3003,43,2834,45,"move"],[3003,47,2834,49],[3003,49,2834,51],[3004,8,2835,12],[3004,13,2835,17],[3004,19,2835,23,"token"],[3004,24,2835,28],[3004,28,2835,32,"move"],[3004,32,2835,36],[3004,33,2835,37,"split"],[3004,38,2835,42],[3004,39,2835,43],[3004,42,2835,46],[3004,43,2835,47],[3004,45,2835,49],[3005,10,2836,16],[3005,14,2836,20],[3005,15,2836,21,"token"],[3005,20,2836,26],[3005,22,2836,28],[3006,12,2837,20],[3007,10,2838,16],[3008,10,2839,16],[3008,14,2839,20,"width"],[3008,19,2839,25],[3008,22,2839,28,"token"],[3008,27,2839,33],[3008,28,2839,34,"length"],[3008,34,2839,40],[3008,37,2839,43,"maxWidth"],[3008,45,2839,51],[3008,47,2839,53],[3009,12,2840,20],[3009,19,2840,27,"strip"],[3009,24,2840,32],[3009,25,2840,33],[3009,26,2840,34],[3009,28,2840,36],[3010,14,2841,24,"width"],[3010,19,2841,29],[3010,21,2841,31],[3011,12,2842,20],[3012,12,2843,20,"result"],[3012,18,2843,26],[3012,19,2843,27,"push"],[3012,23,2843,31],[3012,24,2843,32,"newline"],[3012,31,2843,39],[3012,32,2843,40],[3013,12,2844,20,"width"],[3013,17,2844,25],[3013,20,2844,28],[3013,21,2844,29],[3014,10,2845,16],[3015,10,2846,16,"result"],[3015,16,2846,22],[3015,17,2846,23,"push"],[3015,21,2846,27],[3015,22,2846,28,"token"],[3015,27,2846,33],[3015,28,2846,34],[3016,10,2847,16,"width"],[3016,15,2847,21],[3016,19,2847,25,"token"],[3016,24,2847,30],[3016,25,2847,31,"length"],[3016,31,2847,37],[3017,10,2848,16,"result"],[3017,16,2848,22],[3017,17,2848,23,"push"],[3017,21,2848,27],[3017,22,2848,28],[3017,25,2848,31],[3017,26,2848,32],[3018,10,2849,16,"width"],[3018,15,2849,21],[3018,17,2849,23],[3019,8,2850,12],[3020,8,2851,12],[3020,12,2851,16,"strip"],[3020,17,2851,21],[3020,18,2851,22],[3020,19,2851,23],[3020,21,2851,25],[3021,10,2852,16,"width"],[3021,15,2852,21],[3021,17,2852,23],[3022,8,2853,12],[3023,8,2854,12],[3023,15,2854,19,"width"],[3023,20,2854,24],[3024,6,2855,8],[3024,7,2855,9],[3025,6,2856,8],[3026,6,2857,8],[3026,10,2857,12,"currentWidth"],[3026,22,2857,24],[3026,25,2857,27],[3026,26,2857,28],[3027,6,2858,8],[3027,11,2858,13],[3027,15,2858,17,"i"],[3027,16,2858,18],[3027,19,2858,21],[3027,20,2858,22],[3027,22,2858,24,"i"],[3027,23,2858,25],[3027,26,2858,28,"moves"],[3027,31,2858,33],[3027,32,2858,34,"length"],[3027,38,2858,40],[3027,40,2858,42,"i"],[3027,41,2858,43],[3027,43,2858,45],[3027,45,2858,47],[3028,8,2859,12],[3028,12,2859,16,"currentWidth"],[3028,24,2859,28],[3028,27,2859,31,"moves"],[3028,32,2859,36],[3028,33,2859,37,"i"],[3028,34,2859,38],[3028,35,2859,39],[3028,36,2859,40,"length"],[3028,42,2859,46],[3028,45,2859,49,"maxWidth"],[3028,53,2859,57],[3028,55,2859,59],[3029,10,2860,16],[3029,14,2860,20,"moves"],[3029,19,2860,25],[3029,20,2860,26,"i"],[3029,21,2860,27],[3029,22,2860,28],[3029,23,2860,29,"includes"],[3029,31,2860,37],[3029,32,2860,38],[3029,35,2860,41],[3029,36,2860,42],[3029,38,2860,44],[3030,12,2861,20,"currentWidth"],[3030,24,2861,32],[3030,27,2861,35,"wrapComment"],[3030,38,2861,46],[3030,39,2861,47,"currentWidth"],[3030,51,2861,59],[3030,53,2861,61,"moves"],[3030,58,2861,66],[3030,59,2861,67,"i"],[3030,60,2861,68],[3030,61,2861,69],[3030,62,2861,70],[3031,12,2862,20],[3032,10,2863,16],[3033,8,2864,12],[3034,8,2865,12],[3035,8,2866,12],[3035,12,2866,16,"currentWidth"],[3035,24,2866,28],[3035,27,2866,31,"moves"],[3035,32,2866,36],[3035,33,2866,37,"i"],[3035,34,2866,38],[3035,35,2866,39],[3035,36,2866,40,"length"],[3035,42,2866,46],[3035,45,2866,49,"maxWidth"],[3035,53,2866,57],[3035,57,2866,61,"i"],[3035,58,2866,62],[3035,63,2866,67],[3035,64,2866,68],[3035,66,2866,70],[3036,10,2867,16],[3037,10,2868,16],[3037,14,2868,20,"result"],[3037,20,2868,26],[3037,21,2868,27,"result"],[3037,27,2868,33],[3037,28,2868,34,"length"],[3037,34,2868,40],[3037,37,2868,43],[3037,38,2868,44],[3037,39,2868,45],[3037,44,2868,50],[3037,47,2868,53],[3037,49,2868,55],[3038,12,2869,20,"result"],[3038,18,2869,26],[3038,19,2869,27,"pop"],[3038,22,2869,30],[3038,23,2869,31],[3038,24,2869,32],[3039,10,2870,16],[3040,10,2871,16,"result"],[3040,16,2871,22],[3040,17,2871,23,"push"],[3040,21,2871,27],[3040,22,2871,28,"newline"],[3040,29,2871,35],[3040,30,2871,36],[3041,10,2872,16,"currentWidth"],[3041,22,2872,28],[3041,25,2872,31],[3041,26,2872,32],[3042,8,2873,12],[3042,9,2873,13],[3042,15,2874,17],[3042,19,2874,21,"i"],[3042,20,2874,22],[3042,25,2874,27],[3042,26,2874,28],[3042,28,2874,30],[3043,10,2875,16,"result"],[3043,16,2875,22],[3043,17,2875,23,"push"],[3043,21,2875,27],[3043,22,2875,28],[3043,25,2875,31],[3043,26,2875,32],[3044,10,2876,16,"currentWidth"],[3044,22,2876,28],[3044,24,2876,30],[3045,8,2877,12],[3046,8,2878,12,"result"],[3046,14,2878,18],[3046,15,2878,19,"push"],[3046,19,2878,23],[3046,20,2878,24,"moves"],[3046,25,2878,29],[3046,26,2878,30,"i"],[3046,27,2878,31],[3046,28,2878,32],[3046,29,2878,33],[3047,8,2879,12,"currentWidth"],[3047,20,2879,24],[3047,24,2879,28,"moves"],[3047,29,2879,33],[3047,30,2879,34,"i"],[3047,31,2879,35],[3047,32,2879,36],[3047,33,2879,37,"length"],[3047,39,2879,43],[3048,6,2880,8],[3049,6,2881,8],[3049,13,2881,15,"result"],[3049,19,2881,21],[3049,20,2881,22,"join"],[3049,24,2881,26],[3049,25,2881,27],[3049,27,2881,29],[3049,28,2881,30],[3050,4,2882,4],[3051,4,2883,4],[3052,0,2884,0],[3053,0,2885,0],[3054,4,2886,4,"header"],[3054,10,2886,10,"header"],[3054,11,2886,11],[3054,14,2886,14,"args"],[3054,18,2886,18],[3054,20,2886,20],[3055,6,2887,8],[3055,11,2887,13],[3055,15,2887,17,"i"],[3055,16,2887,18],[3055,19,2887,21],[3055,20,2887,22],[3055,22,2887,24,"i"],[3055,23,2887,25],[3055,26,2887,28,"args"],[3055,30,2887,32],[3055,31,2887,33,"length"],[3055,37,2887,39],[3055,39,2887,41,"i"],[3055,40,2887,42],[3055,44,2887,46],[3055,45,2887,47],[3055,47,2887,49],[3056,8,2888,12],[3056,12,2888,16],[3056,19,2888,23,"args"],[3056,23,2888,27],[3056,24,2888,28,"i"],[3056,25,2888,29],[3056,26,2888,30],[3056,31,2888,35],[3056,39,2888,43],[3056,43,2888,47],[3056,50,2888,54,"args"],[3056,54,2888,58],[3056,55,2888,59,"i"],[3056,56,2888,60],[3056,59,2888,63],[3056,60,2888,64],[3056,61,2888,65],[3056,66,2888,70],[3056,74,2888,78],[3056,76,2888,80],[3057,10,2889,16],[3057,14,2889,20],[3057,15,2889,21,"_header"],[3057,22,2889,28],[3057,23,2889,29,"args"],[3057,27,2889,33],[3057,28,2889,34,"i"],[3057,29,2889,35],[3057,30,2889,36],[3057,31,2889,37],[3057,34,2889,40,"args"],[3057,38,2889,44],[3057,39,2889,45,"i"],[3057,40,2889,46],[3057,43,2889,49],[3057,44,2889,50],[3057,45,2889,51],[3058,8,2890,12],[3059,6,2891,8],[3060,6,2892,8],[3060,13,2892,15],[3060,17,2892,19],[3060,18,2892,20,"_header"],[3060,25,2892,27],[3061,4,2893,4],[3062,4,2894,4],[3063,4,2895,4,"setHeader"],[3063,13,2895,13,"setHeader"],[3063,14,2895,14,"key"],[3063,17,2895,17],[3063,19,2895,19,"value"],[3063,24,2895,24],[3063,26,2895,26],[3064,6,2896,8],[3064,10,2896,12],[3064,11,2896,13,"_header"],[3064,18,2896,20],[3064,19,2896,21,"key"],[3064,22,2896,24],[3064,23,2896,25],[3064,26,2896,28,"value"],[3064,31,2896,33],[3064,35,2896,37,"SEVEN_TAG_ROSTER"],[3064,51,2896,53],[3064,52,2896,54,"key"],[3064,55,2896,57],[3064,56,2896,58],[3064,60,2896,62],[3064,64,2896,66],[3065,6,2897,8],[3065,13,2897,15],[3065,17,2897,19],[3065,18,2897,20,"getHeaders"],[3065,28,2897,30],[3065,29,2897,31],[3065,30,2897,32],[3066,4,2898,4],[3067,4,2899,4,"removeHeader"],[3067,16,2899,16,"removeHeader"],[3067,17,2899,17,"key"],[3067,20,2899,20],[3067,22,2899,22],[3068,6,2900,8],[3068,10,2900,12,"key"],[3068,13,2900,15],[3068,17,2900,19],[3068,21,2900,23],[3068,22,2900,24,"_header"],[3068,29,2900,31],[3068,31,2900,33],[3069,8,2901,12],[3069,12,2901,16],[3069,13,2901,17,"_header"],[3069,20,2901,24],[3069,21,2901,25,"key"],[3069,24,2901,28],[3069,25,2901,29],[3069,28,2901,32,"SEVEN_TAG_ROSTER"],[3069,44,2901,48],[3069,45,2901,49,"key"],[3069,48,2901,52],[3069,49,2901,53],[3069,53,2901,57],[3069,57,2901,61],[3070,8,2902,12],[3070,15,2902,19],[3070,19,2902,23],[3071,6,2903,8],[3072,6,2904,8],[3072,13,2904,15],[3072,18,2904,20],[3073,4,2905,4],[3074,4,2906,4],[3075,4,2907,4,"getHeaders"],[3075,14,2907,14,"getHeaders"],[3075,15,2907,14],[3075,17,2907,17],[3076,6,2908,8],[3076,12,2908,14,"nonNullHeaders"],[3076,26,2908,28],[3076,29,2908,31],[3076,30,2908,32],[3076,31,2908,33],[3077,6,2909,8],[3077,11,2909,13],[3077,17,2909,19],[3077,18,2909,20,"key"],[3077,21,2909,23],[3077,23,2909,25,"value"],[3077,28,2909,30],[3077,29,2909,31],[3077,33,2909,35,"Object"],[3077,39,2909,41],[3077,40,2909,42,"entries"],[3077,47,2909,49],[3077,48,2909,50],[3077,52,2909,54],[3077,53,2909,55,"_header"],[3077,60,2909,62],[3077,61,2909,63],[3077,63,2909,65],[3078,8,2910,12],[3078,12,2910,16,"value"],[3078,17,2910,21],[3078,22,2910,26],[3078,26,2910,30],[3078,28,2910,32],[3079,10,2911,16,"nonNullHeaders"],[3079,24,2911,30],[3079,25,2911,31,"key"],[3079,28,2911,34],[3079,29,2911,35],[3079,32,2911,38,"value"],[3079,37,2911,43],[3080,8,2912,12],[3081,6,2913,8],[3082,6,2914,8],[3082,13,2914,15,"nonNullHeaders"],[3082,27,2914,29],[3083,4,2915,4],[3084,4,2916,4,"loadPgn"],[3084,11,2916,11,"loadPgn"],[3084,12,2916,12,"pgn"],[3084,15,2916,15],[3084,17,2916,17],[3085,6,2916,19,"strict"],[3085,12,2916,25],[3085,15,2916,28],[3085,20,2916,33],[3086,6,2916,35,"newlineChar"],[3086,17,2916,46],[3086,20,2916,49],[3087,4,2916,58],[3087,5,2916,59],[3087,8,2916,62],[3087,9,2916,63],[3087,10,2916,64],[3087,12,2916,66],[3088,6,2917,8],[3089,6,2918,8],[3089,10,2918,12,"newlineChar"],[3089,21,2918,23],[3089,26,2918,28],[3089,33,2918,35],[3089,35,2918,37],[3090,8,2919,12,"pgn"],[3090,11,2919,15],[3090,14,2919,18,"pgn"],[3090,17,2919,21],[3090,18,2919,22,"replace"],[3090,25,2919,29],[3090,26,2919,30],[3090,30,2919,34,"RegExp"],[3090,36,2919,40],[3090,37,2919,41,"newlineChar"],[3090,48,2919,52],[3090,50,2919,54],[3090,53,2919,57],[3090,54,2919,58],[3090,56,2919,60],[3090,60,2919,64],[3090,61,2919,65],[3091,6,2920,8],[3092,6,2921,8],[3092,12,2921,14,"parsedPgn"],[3092,21,2921,23],[3092,24,2921,26,"peg$parse"],[3092,33,2921,35],[3092,34,2921,36,"pgn"],[3092,37,2921,39],[3092,38,2921,40],[3093,6,2922,8],[3094,6,2923,8],[3094,10,2923,12],[3094,11,2923,13,"reset"],[3094,16,2923,18],[3094,17,2923,19],[3094,18,2923,20],[3095,6,2924,8],[3096,6,2925,8],[3096,12,2925,14,"headers"],[3096,19,2925,21],[3096,22,2925,24,"parsedPgn"],[3096,31,2925,33],[3096,32,2925,34,"headers"],[3096,39,2925,41],[3097,6,2926,8],[3097,10,2926,12,"fen"],[3097,13,2926,15],[3097,16,2926,18],[3097,18,2926,20],[3098,6,2927,8],[3098,11,2927,13],[3098,17,2927,19,"key"],[3098,20,2927,22],[3098,24,2927,26,"headers"],[3098,31,2927,33],[3098,33,2927,35],[3099,8,2928,12],[3100,8,2929,12],[3100,12,2929,16,"key"],[3100,15,2929,19],[3100,16,2929,20,"toLowerCase"],[3100,27,2929,31],[3100,28,2929,32],[3100,29,2929,33],[3100,34,2929,38],[3100,39,2929,43],[3100,41,2929,45],[3101,10,2930,16,"fen"],[3101,13,2930,19],[3101,16,2930,22,"headers"],[3101,23,2930,29],[3101,24,2930,30,"key"],[3101,27,2930,33],[3101,28,2930,34],[3102,8,2931,12],[3103,8,2932,12],[3103,12,2932,16],[3103,13,2932,17,"header"],[3103,19,2932,23],[3103,20,2932,24,"key"],[3103,23,2932,27],[3103,25,2932,29,"headers"],[3103,32,2932,36],[3103,33,2932,37,"key"],[3103,36,2932,40],[3103,37,2932,41],[3103,38,2932,42],[3104,6,2933,8],[3105,6,2934,8],[3106,0,2935,0],[3107,0,2936,0],[3108,0,2937,0],[3109,6,2938,8],[3109,10,2938,12],[3109,11,2938,13,"strict"],[3109,17,2938,19],[3109,19,2938,21],[3110,8,2939,12],[3110,12,2939,16,"fen"],[3110,15,2939,19],[3110,17,2939,21],[3111,10,2940,16],[3111,14,2940,20],[3111,15,2940,21,"load"],[3111,19,2940,25],[3111,20,2940,26,"fen"],[3111,23,2940,29],[3111,25,2940,31],[3112,12,2940,33,"preserveHeaders"],[3112,27,2940,48],[3112,29,2940,50],[3113,10,2940,55],[3113,11,2940,56],[3113,12,2940,57],[3114,8,2941,12],[3115,6,2942,8],[3115,7,2942,9],[3115,13,2943,13],[3116,8,2944,12],[3117,0,2945,0],[3118,0,2946,0],[3119,0,2947,0],[3120,8,2948,12],[3120,12,2948,16,"headers"],[3120,19,2948,23],[3120,20,2948,24],[3120,27,2948,31],[3120,28,2948,32],[3120,33,2948,37],[3120,36,2948,40],[3120,38,2948,42],[3121,10,2949,16],[3121,14,2949,20],[3121,16,2949,22],[3121,21,2949,27],[3121,25,2949,31,"headers"],[3121,32,2949,38],[3121,33,2949,39],[3121,35,2949,41],[3122,12,2950,20],[3122,18,2950,26],[3122,22,2950,30,"Error"],[3122,27,2950,35],[3122,28,2950,36],[3122,82,2950,90],[3122,83,2950,91],[3123,10,2951,16],[3124,10,2952,16],[3125,10,2953,16],[3125,14,2953,20],[3125,15,2953,21,"load"],[3125,19,2953,25],[3125,20,2953,26,"headers"],[3125,27,2953,33],[3125,28,2953,34],[3125,33,2953,39],[3125,34,2953,40],[3125,36,2953,42],[3126,12,2953,44,"preserveHeaders"],[3126,27,2953,59],[3126,29,2953,61],[3127,10,2953,66],[3127,11,2953,67],[3127,12,2953,68],[3128,8,2954,12],[3129,6,2955,8],[3130,6,2956,8],[3130,10,2956,12,"node"],[3130,14,2956,16],[3130,17,2956,19,"parsedPgn"],[3130,26,2956,28],[3130,27,2956,29,"root"],[3130,31,2956,33],[3131,6,2957,8],[3131,13,2957,15,"node"],[3131,17,2957,19],[3131,19,2957,21],[3132,8,2958,12],[3132,12,2958,16,"node"],[3132,16,2958,20],[3132,17,2958,21,"move"],[3132,21,2958,25],[3132,23,2958,27],[3133,10,2959,16],[3133,16,2959,22,"move"],[3133,20,2959,26],[3133,23,2959,29],[3133,27,2959,33],[3133,28,2959,34,"_moveFromSan"],[3133,40,2959,46],[3133,41,2959,47,"node"],[3133,45,2959,51],[3133,46,2959,52,"move"],[3133,50,2959,56],[3133,52,2959,58,"strict"],[3133,58,2959,64],[3133,59,2959,65],[3134,10,2960,16],[3134,14,2960,20,"move"],[3134,18,2960,24],[3134,22,2960,28],[3134,26,2960,32],[3134,28,2960,34],[3135,12,2961,20],[3135,18,2961,26],[3135,22,2961,30,"Error"],[3135,27,2961,35],[3135,28,2961,36],[3135,52,2961,60,"node"],[3135,56,2961,64],[3135,57,2961,65,"move"],[3135,61,2961,69],[3135,63,2961,71],[3135,64,2961,72],[3136,10,2962,16],[3136,11,2962,17],[3136,17,2963,21],[3137,12,2964,20],[3137,16,2964,24],[3137,17,2964,25,"_makeMove"],[3137,26,2964,34],[3137,27,2964,35,"move"],[3137,31,2964,39],[3137,32,2964,40],[3138,12,2965,20],[3138,16,2965,24],[3138,17,2965,25,"_incPositionCount"],[3138,34,2965,42],[3138,35,2965,43],[3138,36,2965,44],[3139,10,2966,16],[3140,8,2967,12],[3141,8,2968,12],[3141,12,2968,16,"node"],[3141,16,2968,20],[3141,17,2968,21,"comment"],[3141,24,2968,28],[3141,29,2968,33,"undefined"],[3141,38,2968,42],[3141,40,2968,44],[3142,10,2969,16],[3142,14,2969,20],[3142,15,2969,21,"_comments"],[3142,24,2969,30],[3142,25,2969,31],[3142,29,2969,35],[3142,30,2969,36,"fen"],[3142,33,2969,39],[3142,34,2969,40],[3142,35,2969,41],[3142,36,2969,42],[3142,39,2969,45,"node"],[3142,43,2969,49],[3142,44,2969,50,"comment"],[3142,51,2969,57],[3143,8,2970,12],[3144,8,2971,12,"node"],[3144,12,2971,16],[3144,15,2971,19,"node"],[3144,19,2971,23],[3144,20,2971,24,"variations"],[3144,30,2971,34],[3144,31,2971,35],[3144,32,2971,36],[3144,33,2971,37],[3145,6,2972,8],[3146,6,2973,8],[3147,0,2974,0],[3148,0,2975,0],[3149,0,2976,0],[3150,0,2977,0],[3151,6,2978,8],[3151,12,2978,14,"result"],[3151,18,2978,20],[3151,21,2978,23,"parsedPgn"],[3151,30,2978,32],[3151,31,2978,33,"result"],[3151,37,2978,39],[3152,6,2979,8],[3152,10,2979,12,"result"],[3152,16,2979,18],[3152,20,2980,12,"Object"],[3152,26,2980,18],[3152,27,2980,19,"keys"],[3152,31,2980,23],[3152,32,2980,24],[3152,36,2980,28],[3152,37,2980,29,"_header"],[3152,44,2980,36],[3152,45,2980,37],[3152,46,2980,38,"length"],[3152,52,2980,44],[3152,56,2981,12],[3152,60,2981,16],[3152,61,2981,17,"_header"],[3152,68,2981,24],[3152,69,2981,25],[3152,77,2981,33],[3152,78,2981,34],[3152,83,2981,39,"result"],[3152,89,2981,45],[3152,91,2981,47],[3153,8,2982,12],[3153,12,2982,16],[3153,13,2982,17,"setHeader"],[3153,22,2982,26],[3153,23,2982,27],[3153,31,2982,35],[3153,33,2982,37,"result"],[3153,39,2982,43],[3153,40,2982,44],[3154,6,2983,8],[3155,4,2984,4],[3156,4,2985,4],[3157,0,2986,0],[3158,0,2987,0],[3159,0,2988,0],[3160,0,2989,0],[3161,0,2990,0],[3162,0,2991,0],[3163,0,2992,0],[3164,0,2993,0],[3165,0,2994,0],[3166,0,2995,0],[3167,4,2996,4,"_moveToSan"],[3167,14,2996,14,"_moveToSan"],[3167,15,2996,15,"move"],[3167,19,2996,19],[3167,21,2996,21,"moves"],[3167,26,2996,26],[3167,28,2996,28],[3168,6,2997,8],[3168,10,2997,12,"output"],[3168,16,2997,18],[3168,19,2997,21],[3168,21,2997,23],[3169,6,2998,8],[3169,10,2998,12,"move"],[3169,14,2998,16],[3169,15,2998,17,"flags"],[3169,20,2998,22],[3169,23,2998,25,"BITS"],[3169,27,2998,29],[3169,28,2998,30,"KSIDE_CASTLE"],[3169,40,2998,42],[3169,42,2998,44],[3170,8,2999,12,"output"],[3170,14,2999,18],[3170,17,2999,21],[3170,22,2999,26],[3171,6,3000,8],[3171,7,3000,9],[3171,13,3001,13],[3171,17,3001,17,"move"],[3171,21,3001,21],[3171,22,3001,22,"flags"],[3171,27,3001,27],[3171,30,3001,30,"BITS"],[3171,34,3001,34],[3171,35,3001,35,"QSIDE_CASTLE"],[3171,47,3001,47],[3171,49,3001,49],[3172,8,3002,12,"output"],[3172,14,3002,18],[3172,17,3002,21],[3172,24,3002,28],[3173,6,3003,8],[3173,7,3003,9],[3173,13,3004,13],[3173,17,3004,17,"move"],[3173,21,3004,21],[3173,22,3004,22,"flags"],[3173,27,3004,27],[3173,30,3004,30,"BITS"],[3173,34,3004,34],[3173,35,3004,35,"NULL_MOVE"],[3173,44,3004,44],[3173,46,3004,46],[3174,8,3005,12],[3174,15,3005,19,"SAN_NULLMOVE"],[3174,27,3005,31],[3175,6,3006,8],[3175,7,3006,9],[3175,13,3007,13],[3176,8,3008,12],[3176,12,3008,16,"move"],[3176,16,3008,20],[3176,17,3008,21,"piece"],[3176,22,3008,26],[3176,27,3008,31,"PAWN"],[3176,31,3008,35],[3176,33,3008,37],[3177,10,3009,16],[3177,16,3009,22,"disambiguator"],[3177,29,3009,35],[3177,32,3009,38,"getDisambiguator"],[3177,48,3009,54],[3177,49,3009,55,"move"],[3177,53,3009,59],[3177,55,3009,61,"moves"],[3177,60,3009,66],[3177,61,3009,67],[3178,10,3010,16,"output"],[3178,16,3010,22],[3178,20,3010,26,"move"],[3178,24,3010,30],[3178,25,3010,31,"piece"],[3178,30,3010,36],[3178,31,3010,37,"toUpperCase"],[3178,42,3010,48],[3178,43,3010,49],[3178,44,3010,50],[3178,47,3010,53,"disambiguator"],[3178,60,3010,66],[3179,8,3011,12],[3180,8,3012,12],[3180,12,3012,16,"move"],[3180,16,3012,20],[3180,17,3012,21,"flags"],[3180,22,3012,26],[3180,26,3012,30,"BITS"],[3180,30,3012,34],[3180,31,3012,35,"CAPTURE"],[3180,38,3012,42],[3180,41,3012,45,"BITS"],[3180,45,3012,49],[3180,46,3012,50,"EP_CAPTURE"],[3180,56,3012,60],[3180,57,3012,61],[3180,59,3012,63],[3181,10,3013,16],[3181,14,3013,20,"move"],[3181,18,3013,24],[3181,19,3013,25,"piece"],[3181,24,3013,30],[3181,29,3013,35,"PAWN"],[3181,33,3013,39],[3181,35,3013,41],[3182,12,3014,20,"output"],[3182,18,3014,26],[3182,22,3014,30,"algebraic"],[3182,31,3014,39],[3182,32,3014,40,"move"],[3182,36,3014,44],[3182,37,3014,45,"from"],[3182,41,3014,49],[3182,42,3014,50],[3182,43,3014,51],[3182,44,3014,52],[3182,45,3014,53],[3183,10,3015,16],[3184,10,3016,16,"output"],[3184,16,3016,22],[3184,20,3016,26],[3184,23,3016,29],[3185,8,3017,12],[3186,8,3018,12,"output"],[3186,14,3018,18],[3186,18,3018,22,"algebraic"],[3186,27,3018,31],[3186,28,3018,32,"move"],[3186,32,3018,36],[3186,33,3018,37,"to"],[3186,35,3018,39],[3186,36,3018,40],[3187,8,3019,12],[3187,12,3019,16,"move"],[3187,16,3019,20],[3187,17,3019,21,"promotion"],[3187,26,3019,30],[3187,28,3019,32],[3188,10,3020,16,"output"],[3188,16,3020,22],[3188,20,3020,26],[3188,23,3020,29],[3188,26,3020,32,"move"],[3188,30,3020,36],[3188,31,3020,37,"promotion"],[3188,40,3020,46],[3188,41,3020,47,"toUpperCase"],[3188,52,3020,58],[3188,53,3020,59],[3188,54,3020,60],[3189,8,3021,12],[3190,6,3022,8],[3191,6,3023,8],[3191,10,3023,12],[3191,11,3023,13,"_makeMove"],[3191,20,3023,22],[3191,21,3023,23,"move"],[3191,25,3023,27],[3191,26,3023,28],[3192,6,3024,8],[3192,10,3024,12],[3192,14,3024,16],[3192,15,3024,17,"isCheck"],[3192,22,3024,24],[3192,23,3024,25],[3192,24,3024,26],[3192,26,3024,28],[3193,8,3025,12],[3193,12,3025,16],[3193,16,3025,20],[3193,17,3025,21,"isCheckmate"],[3193,28,3025,32],[3193,29,3025,33],[3193,30,3025,34],[3193,32,3025,36],[3194,10,3026,16,"output"],[3194,16,3026,22],[3194,20,3026,26],[3194,23,3026,29],[3195,8,3027,12],[3195,9,3027,13],[3195,15,3028,17],[3196,10,3029,16,"output"],[3196,16,3029,22],[3196,20,3029,26],[3196,23,3029,29],[3197,8,3030,12],[3198,6,3031,8],[3199,6,3032,8],[3199,10,3032,12],[3199,11,3032,13,"_undoMove"],[3199,20,3032,22],[3199,21,3032,23],[3199,22,3032,24],[3200,6,3033,8],[3200,13,3033,15,"output"],[3200,19,3033,21],[3201,4,3034,4],[3202,4,3035,4],[3203,4,3036,4,"_moveFromSan"],[3203,16,3036,16,"_moveFromSan"],[3203,17,3036,17,"move"],[3203,21,3036,21],[3203,23,3036,23,"strict"],[3203,29,3036,29],[3203,32,3036,32],[3203,37,3036,37],[3203,39,3036,39],[3204,6,3037,8],[3205,6,3038,8],[3205,10,3038,12,"cleanMove"],[3205,19,3038,21],[3205,22,3038,24,"strippedSan"],[3205,33,3038,35],[3205,34,3038,36,"move"],[3205,38,3038,40],[3205,39,3038,41],[3206,6,3039,8],[3206,10,3039,12],[3206,11,3039,13,"strict"],[3206,17,3039,19],[3206,19,3039,21],[3207,8,3040,12],[3207,12,3040,16,"cleanMove"],[3207,21,3040,25],[3207,26,3040,30],[3207,31,3040,35],[3207,33,3040,37],[3208,10,3041,16,"cleanMove"],[3208,19,3041,25],[3208,22,3041,28],[3208,27,3041,33],[3209,8,3042,12],[3209,9,3042,13],[3209,15,3043,17],[3209,19,3043,21,"cleanMove"],[3209,28,3043,30],[3209,33,3043,35],[3209,40,3043,42],[3209,42,3043,44],[3210,10,3044,16,"cleanMove"],[3210,19,3044,25],[3210,22,3044,28],[3210,29,3044,35],[3211,8,3045,12],[3212,6,3046,8],[3213,6,3047,8],[3214,6,3048,8],[3214,10,3048,12,"cleanMove"],[3214,19,3048,21],[3214,23,3048,25,"SAN_NULLMOVE"],[3214,35,3048,37],[3214,37,3048,39],[3215,8,3049,12],[3215,14,3049,18,"res"],[3215,17,3049,21],[3215,20,3049,24],[3216,10,3050,16,"color"],[3216,15,3050,21],[3216,17,3050,23],[3216,21,3050,27],[3216,22,3050,28,"_turn"],[3216,27,3050,33],[3217,10,3051,16,"from"],[3217,14,3051,20],[3217,16,3051,22],[3217,17,3051,23],[3218,10,3052,16,"to"],[3218,12,3052,18],[3218,14,3052,20],[3218,15,3052,21],[3219,10,3053,16,"piece"],[3219,15,3053,21],[3219,17,3053,23],[3219,20,3053,26],[3220,10,3054,16,"flags"],[3220,15,3054,21],[3220,17,3054,23,"BITS"],[3220,21,3054,27],[3220,22,3054,28,"NULL_MOVE"],[3221,8,3055,12],[3221,9,3055,13],[3222,8,3056,12],[3222,15,3056,19,"res"],[3222,18,3056,22],[3223,6,3057,8],[3224,6,3058,8],[3224,10,3058,12,"pieceType"],[3224,19,3058,21],[3224,22,3058,24,"inferPieceType"],[3224,36,3058,38],[3224,37,3058,39,"cleanMove"],[3224,46,3058,48],[3224,47,3058,49],[3225,6,3059,8],[3225,10,3059,12,"moves"],[3225,15,3059,17],[3225,18,3059,20],[3225,22,3059,24],[3225,23,3059,25,"_moves"],[3225,29,3059,31],[3225,30,3059,32],[3226,8,3059,34,"legal"],[3226,13,3059,39],[3226,15,3059,41],[3226,19,3059,45],[3227,8,3059,47,"piece"],[3227,13,3059,52],[3227,15,3059,54,"pieceType"],[3228,6,3059,64],[3228,7,3059,65],[3228,8,3059,66],[3229,6,3060,8],[3230,6,3061,8],[3230,11,3061,13],[3230,15,3061,17,"i"],[3230,16,3061,18],[3230,19,3061,21],[3230,20,3061,22],[3230,22,3061,24,"len"],[3230,25,3061,27],[3230,28,3061,30,"moves"],[3230,33,3061,35],[3230,34,3061,36,"length"],[3230,40,3061,42],[3230,42,3061,44,"i"],[3230,43,3061,45],[3230,46,3061,48,"len"],[3230,49,3061,51],[3230,51,3061,53,"i"],[3230,52,3061,54],[3230,54,3061,56],[3230,56,3061,58],[3231,8,3062,12],[3231,12,3062,16,"cleanMove"],[3231,21,3062,25],[3231,26,3062,30,"strippedSan"],[3231,37,3062,41],[3231,38,3062,42],[3231,42,3062,46],[3231,43,3062,47,"_moveToSan"],[3231,53,3062,57],[3231,54,3062,58,"moves"],[3231,59,3062,63],[3231,60,3062,64,"i"],[3231,61,3062,65],[3231,62,3062,66],[3231,64,3062,68,"moves"],[3231,69,3062,73],[3231,70,3062,74],[3231,71,3062,75],[3231,73,3062,77],[3232,10,3063,16],[3232,17,3063,23,"moves"],[3232,22,3063,28],[3232,23,3063,29,"i"],[3232,24,3063,30],[3232,25,3063,31],[3233,8,3064,12],[3234,6,3065,8],[3235,6,3066,8],[3236,6,3067,8],[3236,10,3067,12,"strict"],[3236,16,3067,18],[3236,18,3067,20],[3237,8,3068,12],[3237,15,3068,19],[3237,19,3068,23],[3238,6,3069,8],[3239,6,3070,8],[3239,10,3070,12,"piece"],[3239,15,3070,17],[3239,18,3070,20,"undefined"],[3239,27,3070,29],[3240,6,3071,8],[3240,10,3071,12,"matches"],[3240,17,3071,19],[3240,20,3071,22,"undefined"],[3240,29,3071,31],[3241,6,3072,8],[3241,10,3072,12,"from"],[3241,14,3072,16],[3241,17,3072,19,"undefined"],[3241,26,3072,28],[3242,6,3073,8],[3242,10,3073,12,"to"],[3242,12,3073,14],[3242,15,3073,17,"undefined"],[3242,24,3073,26],[3243,6,3074,8],[3243,10,3074,12,"promotion"],[3243,19,3074,21],[3243,22,3074,24,"undefined"],[3243,31,3074,33],[3244,6,3075,8],[3245,0,3076,0],[3246,0,3077,0],[3247,0,3078,0],[3248,0,3079,0],[3249,0,3080,0],[3250,0,3081,0],[3251,0,3082,0],[3252,0,3083,0],[3253,0,3084,0],[3254,0,3085,0],[3255,0,3086,0],[3256,0,3087,0],[3257,0,3088,0],[3258,0,3089,0],[3259,0,3090,0],[3260,6,3091,8],[3260,10,3091,12,"overlyDisambiguated"],[3260,29,3091,31],[3260,32,3091,34],[3260,37,3091,39],[3261,6,3092,8,"matches"],[3261,13,3092,15],[3261,16,3092,18,"cleanMove"],[3261,25,3092,27],[3261,26,3092,28,"match"],[3261,31,3092,33],[3261,32,3092,34],[3261,92,3092,94],[3261,93,3092,95],[3262,6,3093,8],[3262,10,3093,12,"matches"],[3262,17,3093,19],[3262,19,3093,21],[3263,8,3094,12,"piece"],[3263,13,3094,17],[3263,16,3094,20,"matches"],[3263,23,3094,27],[3263,24,3094,28],[3263,25,3094,29],[3263,26,3094,30],[3264,8,3095,12,"from"],[3264,12,3095,16],[3264,15,3095,19,"matches"],[3264,22,3095,26],[3264,23,3095,27],[3264,24,3095,28],[3264,25,3095,29],[3265,8,3096,12,"to"],[3265,10,3096,14],[3265,13,3096,17,"matches"],[3265,20,3096,24],[3265,21,3096,25],[3265,22,3096,26],[3265,23,3096,27],[3266,8,3097,12,"promotion"],[3266,17,3097,21],[3266,20,3097,24,"matches"],[3266,27,3097,31],[3266,28,3097,32],[3266,29,3097,33],[3266,30,3097,34],[3267,8,3098,12],[3267,12,3098,16,"from"],[3267,16,3098,20],[3267,17,3098,21,"length"],[3267,23,3098,27],[3267,27,3098,31],[3267,28,3098,32],[3267,30,3098,34],[3268,10,3099,16,"overlyDisambiguated"],[3268,29,3099,35],[3268,32,3099,38],[3268,36,3099,42],[3269,8,3100,12],[3270,6,3101,8],[3270,7,3101,9],[3270,13,3102,13],[3271,8,3103,12],[3272,0,3104,0],[3273,0,3105,0],[3274,0,3106,0],[3275,0,3107,0],[3276,0,3108,0],[3277,8,3109,12,"matches"],[3277,15,3109,19],[3277,18,3109,22,"cleanMove"],[3277,27,3109,31],[3277,28,3109,32,"match"],[3277,33,3109,37],[3277,34,3109,38],[3277,96,3109,100],[3277,97,3109,101],[3278,8,3110,12],[3278,12,3110,16,"matches"],[3278,19,3110,23],[3278,21,3110,25],[3279,10,3111,16,"piece"],[3279,15,3111,21],[3279,18,3111,24,"matches"],[3279,25,3111,31],[3279,26,3111,32],[3279,27,3111,33],[3279,28,3111,34],[3280,10,3112,16,"from"],[3280,14,3112,20],[3280,17,3112,23,"matches"],[3280,24,3112,30],[3280,25,3112,31],[3280,26,3112,32],[3280,27,3112,33],[3281,10,3113,16,"to"],[3281,12,3113,18],[3281,15,3113,21,"matches"],[3281,22,3113,28],[3281,23,3113,29],[3281,24,3113,30],[3281,25,3113,31],[3282,10,3114,16,"promotion"],[3282,19,3114,25],[3282,22,3114,28,"matches"],[3282,29,3114,35],[3282,30,3114,36],[3282,31,3114,37],[3282,32,3114,38],[3283,10,3115,16],[3283,14,3115,20,"from"],[3283,18,3115,24],[3283,19,3115,25,"length"],[3283,25,3115,31],[3283,29,3115,35],[3283,30,3115,36],[3283,32,3115,38],[3284,12,3116,20,"overlyDisambiguated"],[3284,31,3116,39],[3284,34,3116,42],[3284,38,3116,46],[3285,10,3117,16],[3286,8,3118,12],[3287,6,3119,8],[3288,6,3120,8,"pieceType"],[3288,15,3120,17],[3288,18,3120,20,"inferPieceType"],[3288,32,3120,34],[3288,33,3120,35,"cleanMove"],[3288,42,3120,44],[3288,43,3120,45],[3289,6,3121,8,"moves"],[3289,11,3121,13],[3289,14,3121,16],[3289,18,3121,20],[3289,19,3121,21,"_moves"],[3289,25,3121,27],[3289,26,3121,28],[3290,8,3122,12,"legal"],[3290,13,3122,17],[3290,15,3122,19],[3290,19,3122,23],[3291,8,3123,12,"piece"],[3291,13,3123,17],[3291,15,3123,19,"piece"],[3291,20,3123,24],[3291,23,3123,27,"piece"],[3291,28,3123,32],[3291,31,3123,35,"pieceType"],[3292,6,3124,8],[3292,7,3124,9],[3292,8,3124,10],[3293,6,3125,8],[3293,10,3125,12],[3293,11,3125,13,"to"],[3293,13,3125,15],[3293,15,3125,17],[3294,8,3126,12],[3294,15,3126,19],[3294,19,3126,23],[3295,6,3127,8],[3296,6,3128,8],[3296,11,3128,13],[3296,15,3128,17,"i"],[3296,16,3128,18],[3296,19,3128,21],[3296,20,3128,22],[3296,22,3128,24,"len"],[3296,25,3128,27],[3296,28,3128,30,"moves"],[3296,33,3128,35],[3296,34,3128,36,"length"],[3296,40,3128,42],[3296,42,3128,44,"i"],[3296,43,3128,45],[3296,46,3128,48,"len"],[3296,49,3128,51],[3296,51,3128,53,"i"],[3296,52,3128,54],[3296,54,3128,56],[3296,56,3128,58],[3297,8,3129,12],[3297,12,3129,16],[3297,13,3129,17,"from"],[3297,17,3129,21],[3297,19,3129,23],[3298,10,3130,16],[3299,10,3131,16],[3299,14,3131,20,"cleanMove"],[3299,23,3131,29],[3299,28,3132,20,"strippedSan"],[3299,39,3132,31],[3299,40,3132,32],[3299,44,3132,36],[3299,45,3132,37,"_moveToSan"],[3299,55,3132,47],[3299,56,3132,48,"moves"],[3299,61,3132,53],[3299,62,3132,54,"i"],[3299,63,3132,55],[3299,64,3132,56],[3299,66,3132,58,"moves"],[3299,71,3132,63],[3299,72,3132,64],[3299,73,3132,65],[3299,74,3132,66,"replace"],[3299,81,3132,73],[3299,82,3132,74],[3299,85,3132,77],[3299,87,3132,79],[3299,89,3132,81],[3299,90,3132,82],[3299,92,3132,84],[3300,12,3133,20],[3300,19,3133,27,"moves"],[3300,24,3133,32],[3300,25,3133,33,"i"],[3300,26,3133,34],[3300,27,3133,35],[3301,10,3134,16],[3302,10,3135,16],[3303,8,3136,12],[3303,9,3136,13],[3303,15,3137,17],[3303,19,3137,21],[3303,20,3137,22],[3303,21,3137,23,"piece"],[3303,26,3137,28],[3303,30,3137,32,"piece"],[3303,35,3137,37],[3303,36,3137,38,"toLowerCase"],[3303,47,3137,49],[3303,48,3137,50],[3303,49,3137,51],[3303,53,3137,55,"moves"],[3303,58,3137,60],[3303,59,3137,61,"i"],[3303,60,3137,62],[3303,61,3137,63],[3303,62,3137,64,"piece"],[3303,67,3137,69],[3303,72,3138,16,"Ox88"],[3303,76,3138,20],[3303,77,3138,21,"from"],[3303,81,3138,25],[3303,82,3138,26],[3303,86,3138,30,"moves"],[3303,91,3138,35],[3303,92,3138,36,"i"],[3303,93,3138,37],[3303,94,3138,38],[3303,95,3138,39,"from"],[3303,99,3138,43],[3303,103,3139,16,"Ox88"],[3303,107,3139,20],[3303,108,3139,21,"to"],[3303,110,3139,23],[3303,111,3139,24],[3303,115,3139,28,"moves"],[3303,120,3139,33],[3303,121,3139,34,"i"],[3303,122,3139,35],[3303,123,3139,36],[3303,124,3139,37,"to"],[3303,126,3139,39],[3303,131,3140,17],[3303,132,3140,18,"promotion"],[3303,141,3140,27],[3303,145,3140,31,"promotion"],[3303,154,3140,40],[3303,155,3140,41,"toLowerCase"],[3303,166,3140,52],[3303,167,3140,53],[3303,168,3140,54],[3303,172,3140,58,"moves"],[3303,177,3140,63],[3303,178,3140,64,"i"],[3303,179,3140,65],[3303,180,3140,66],[3303,181,3140,67,"promotion"],[3303,190,3140,76],[3303,191,3140,77],[3303,193,3140,79],[3304,10,3141,16],[3304,17,3141,23,"moves"],[3304,22,3141,28],[3304,23,3141,29,"i"],[3304,24,3141,30],[3304,25,3141,31],[3305,8,3142,12],[3305,9,3142,13],[3305,15,3143,17],[3305,19,3143,21,"overlyDisambiguated"],[3305,38,3143,40],[3305,40,3143,42],[3306,10,3144,16],[3307,0,3145,0],[3308,0,3146,0],[3309,0,3147,0],[3310,10,3148,16],[3310,16,3148,22,"square"],[3310,22,3148,28],[3310,25,3148,31,"algebraic"],[3310,34,3148,40],[3310,35,3148,41,"moves"],[3310,40,3148,46],[3310,41,3148,47,"i"],[3310,42,3148,48],[3310,43,3148,49],[3310,44,3148,50,"from"],[3310,48,3148,54],[3310,49,3148,55],[3311,10,3149,16],[3311,14,3149,20],[3311,15,3149,21],[3311,16,3149,22,"piece"],[3311,21,3149,27],[3311,25,3149,31,"piece"],[3311,30,3149,36],[3311,31,3149,37,"toLowerCase"],[3311,42,3149,48],[3311,43,3149,49],[3311,44,3149,50],[3311,48,3149,54,"moves"],[3311,53,3149,59],[3311,54,3149,60,"i"],[3311,55,3149,61],[3311,56,3149,62],[3311,57,3149,63,"piece"],[3311,62,3149,68],[3311,67,3150,20,"Ox88"],[3311,71,3150,24],[3311,72,3150,25,"to"],[3311,74,3150,27],[3311,75,3150,28],[3311,79,3150,32,"moves"],[3311,84,3150,37],[3311,85,3150,38,"i"],[3311,86,3150,39],[3311,87,3150,40],[3311,88,3150,41,"to"],[3311,90,3150,43],[3311,95,3151,21,"from"],[3311,99,3151,25],[3311,103,3151,29,"square"],[3311,109,3151,35],[3311,110,3151,36],[3311,111,3151,37],[3311,112,3151,38],[3311,116,3151,42,"from"],[3311,120,3151,46],[3311,124,3151,50,"square"],[3311,130,3151,56],[3311,131,3151,57],[3311,132,3151,58],[3311,133,3151,59],[3311,134,3151,60],[3311,139,3152,21],[3311,140,3152,22,"promotion"],[3311,149,3152,31],[3311,153,3152,35,"promotion"],[3311,162,3152,44],[3311,163,3152,45,"toLowerCase"],[3311,174,3152,56],[3311,175,3152,57],[3311,176,3152,58],[3311,180,3152,62,"moves"],[3311,185,3152,67],[3311,186,3152,68,"i"],[3311,187,3152,69],[3311,188,3152,70],[3311,189,3152,71,"promotion"],[3311,198,3152,80],[3311,199,3152,81],[3311,201,3152,83],[3312,12,3153,20],[3312,19,3153,27,"moves"],[3312,24,3153,32],[3312,25,3153,33,"i"],[3312,26,3153,34],[3312,27,3153,35],[3313,10,3154,16],[3314,8,3155,12],[3315,6,3156,8],[3316,6,3157,8],[3316,13,3157,15],[3316,17,3157,19],[3317,4,3158,4],[3318,4,3159,4,"ascii"],[3318,9,3159,9,"ascii"],[3318,10,3159,9],[3318,12,3159,12],[3319,6,3160,8],[3319,10,3160,12,"s"],[3319,11,3160,13],[3319,14,3160,16],[3319,47,3160,49],[3320,6,3161,8],[3320,11,3161,13],[3320,15,3161,17,"i"],[3320,16,3161,18],[3320,19,3161,21,"Ox88"],[3320,23,3161,25],[3320,24,3161,26,"a8"],[3320,26,3161,28],[3320,28,3161,30,"i"],[3320,29,3161,31],[3320,33,3161,35,"Ox88"],[3320,37,3161,39],[3320,38,3161,40,"h1"],[3320,40,3161,42],[3320,42,3161,44,"i"],[3320,43,3161,45],[3320,45,3161,47],[3320,47,3161,49],[3321,8,3162,12],[3322,8,3163,12],[3322,12,3163,16,"file"],[3322,16,3163,20],[3322,17,3163,21,"i"],[3322,18,3163,22],[3322,19,3163,23],[3322,24,3163,28],[3322,25,3163,29],[3322,27,3163,31],[3323,10,3164,16,"s"],[3323,11,3164,17],[3323,15,3164,21],[3323,18,3164,24],[3323,21,3164,27],[3323,31,3164,37],[3323,32,3164,38,"rank"],[3323,36,3164,42],[3323,37,3164,43,"i"],[3323,38,3164,44],[3323,39,3164,45],[3323,40,3164,46],[3323,43,3164,49],[3323,47,3164,53],[3324,8,3165,12],[3325,8,3166,12],[3325,12,3166,16],[3325,16,3166,20],[3325,17,3166,21,"_board"],[3325,23,3166,27],[3325,24,3166,28,"i"],[3325,25,3166,29],[3325,26,3166,30],[3325,28,3166,32],[3326,10,3167,16],[3326,16,3167,22,"piece"],[3326,21,3167,27],[3326,24,3167,30],[3326,28,3167,34],[3326,29,3167,35,"_board"],[3326,35,3167,41],[3326,36,3167,42,"i"],[3326,37,3167,43],[3326,38,3167,44],[3326,39,3167,45,"type"],[3326,43,3167,49],[3327,10,3168,16],[3327,16,3168,22,"color"],[3327,21,3168,27],[3327,24,3168,30],[3327,28,3168,34],[3327,29,3168,35,"_board"],[3327,35,3168,41],[3327,36,3168,42,"i"],[3327,37,3168,43],[3327,38,3168,44],[3327,39,3168,45,"color"],[3327,44,3168,50],[3328,10,3169,16],[3328,16,3169,22,"symbol"],[3328,22,3169,28],[3328,25,3169,31,"color"],[3328,30,3169,36],[3328,35,3169,41,"WHITE"],[3328,40,3169,46],[3328,43,3169,49,"piece"],[3328,48,3169,54],[3328,49,3169,55,"toUpperCase"],[3328,60,3169,66],[3328,61,3169,67],[3328,62,3169,68],[3328,65,3169,71,"piece"],[3328,70,3169,76],[3328,71,3169,77,"toLowerCase"],[3328,82,3169,88],[3328,83,3169,89],[3328,84,3169,90],[3329,10,3170,16,"s"],[3329,11,3170,17],[3329,15,3170,21],[3329,18,3170,24],[3329,21,3170,27,"symbol"],[3329,27,3170,33],[3329,30,3170,36],[3329,33,3170,39],[3330,8,3171,12],[3330,9,3171,13],[3330,15,3172,17],[3331,10,3173,16,"s"],[3331,11,3173,17],[3331,15,3173,21],[3331,20,3173,26],[3332,8,3174,12],[3333,8,3175,12],[3333,12,3175,17,"i"],[3333,13,3175,18],[3333,16,3175,21],[3333,17,3175,22],[3333,20,3175,26],[3333,24,3175,30],[3333,26,3175,32],[3334,10,3176,16,"s"],[3334,11,3176,17],[3334,15,3176,21],[3334,20,3176,26],[3335,10,3177,16,"i"],[3335,11,3177,17],[3335,15,3177,21],[3335,16,3177,22],[3336,8,3178,12],[3337,6,3179,8],[3338,6,3180,8,"s"],[3338,7,3180,9],[3338,11,3180,13],[3338,44,3180,46],[3339,6,3181,8,"s"],[3339,7,3181,9],[3339,11,3181,13],[3339,40,3181,42],[3340,6,3182,8],[3340,13,3182,15,"s"],[3340,14,3182,16],[3341,4,3183,4],[3342,4,3184,4,"perft"],[3342,9,3184,9,"perft"],[3342,10,3184,10,"depth"],[3342,15,3184,15],[3342,17,3184,17],[3343,6,3185,8],[3343,12,3185,14,"moves"],[3343,17,3185,19],[3343,20,3185,22],[3343,24,3185,26],[3343,25,3185,27,"_moves"],[3343,31,3185,33],[3343,32,3185,34],[3344,8,3185,36,"legal"],[3344,13,3185,41],[3344,15,3185,43],[3345,6,3185,49],[3345,7,3185,50],[3345,8,3185,51],[3346,6,3186,8],[3346,10,3186,12,"nodes"],[3346,15,3186,17],[3346,18,3186,20],[3346,19,3186,21],[3347,6,3187,8],[3347,12,3187,14,"color"],[3347,17,3187,19],[3347,20,3187,22],[3347,24,3187,26],[3347,25,3187,27,"_turn"],[3347,30,3187,32],[3348,6,3188,8],[3348,11,3188,13],[3348,15,3188,17,"i"],[3348,16,3188,18],[3348,19,3188,21],[3348,20,3188,22],[3348,22,3188,24,"len"],[3348,25,3188,27],[3348,28,3188,30,"moves"],[3348,33,3188,35],[3348,34,3188,36,"length"],[3348,40,3188,42],[3348,42,3188,44,"i"],[3348,43,3188,45],[3348,46,3188,48,"len"],[3348,49,3188,51],[3348,51,3188,53,"i"],[3348,52,3188,54],[3348,54,3188,56],[3348,56,3188,58],[3349,8,3189,12],[3349,12,3189,16],[3349,13,3189,17,"_makeMove"],[3349,22,3189,26],[3349,23,3189,27,"moves"],[3349,28,3189,32],[3349,29,3189,33,"i"],[3349,30,3189,34],[3349,31,3189,35],[3349,32,3189,36],[3350,8,3190,12],[3350,12,3190,16],[3350,13,3190,17],[3350,17,3190,21],[3350,18,3190,22,"_isKingAttacked"],[3350,33,3190,37],[3350,34,3190,38,"color"],[3350,39,3190,43],[3350,40,3190,44],[3350,42,3190,46],[3351,10,3191,16],[3351,14,3191,20,"depth"],[3351,19,3191,25],[3351,22,3191,28],[3351,23,3191,29],[3351,26,3191,32],[3351,27,3191,33],[3351,29,3191,35],[3352,12,3192,20,"nodes"],[3352,17,3192,25],[3352,21,3192,29],[3352,25,3192,33],[3352,26,3192,34,"perft"],[3352,31,3192,39],[3352,32,3192,40,"depth"],[3352,37,3192,45],[3352,40,3192,48],[3352,41,3192,49],[3352,42,3192,50],[3353,10,3193,16],[3353,11,3193,17],[3353,17,3194,21],[3354,12,3195,20,"nodes"],[3354,17,3195,25],[3354,19,3195,27],[3355,10,3196,16],[3356,8,3197,12],[3357,8,3198,12],[3357,12,3198,16],[3357,13,3198,17,"_undoMove"],[3357,22,3198,26],[3357,23,3198,27],[3357,24,3198,28],[3358,6,3199,8],[3359,6,3200,8],[3359,13,3200,15,"nodes"],[3359,18,3200,20],[3360,4,3201,4],[3361,4,3202,4,"setTurn"],[3361,11,3202,11,"setTurn"],[3361,12,3202,12,"color"],[3361,17,3202,17],[3361,19,3202,19],[3362,6,3203,8],[3362,10,3203,12],[3362,14,3203,16],[3362,15,3203,17,"_turn"],[3362,20,3203,22],[3362,24,3203,26,"color"],[3362,29,3203,31],[3362,31,3203,33],[3363,8,3204,12],[3363,15,3204,19],[3363,20,3204,24],[3364,6,3205,8],[3365,6,3206,8],[3365,10,3206,12],[3365,11,3206,13,"move"],[3365,15,3206,17],[3365,16,3206,18],[3365,20,3206,22],[3365,21,3206,23],[3366,6,3207,8],[3366,13,3207,15],[3366,17,3207,19],[3367,4,3208,4],[3368,4,3209,4,"turn"],[3368,8,3209,8,"turn"],[3368,9,3209,8],[3368,11,3209,11],[3369,6,3210,8],[3369,13,3210,15],[3369,17,3210,19],[3369,18,3210,20,"_turn"],[3369,23,3210,25],[3370,4,3211,4],[3371,4,3212,4,"board"],[3371,9,3212,9,"board"],[3371,10,3212,9],[3371,12,3212,12],[3372,6,3213,8],[3372,12,3213,14,"output"],[3372,18,3213,20],[3372,21,3213,23],[3372,23,3213,25],[3373,6,3214,8],[3373,10,3214,12,"row"],[3373,13,3214,15],[3373,16,3214,18],[3373,18,3214,20],[3374,6,3215,8],[3374,11,3215,13],[3374,15,3215,17,"i"],[3374,16,3215,18],[3374,19,3215,21,"Ox88"],[3374,23,3215,25],[3374,24,3215,26,"a8"],[3374,26,3215,28],[3374,28,3215,30,"i"],[3374,29,3215,31],[3374,33,3215,35,"Ox88"],[3374,37,3215,39],[3374,38,3215,40,"h1"],[3374,40,3215,42],[3374,42,3215,44,"i"],[3374,43,3215,45],[3374,45,3215,47],[3374,47,3215,49],[3375,8,3216,12],[3375,12,3216,16],[3375,16,3216,20],[3375,17,3216,21,"_board"],[3375,23,3216,27],[3375,24,3216,28,"i"],[3375,25,3216,29],[3375,26,3216,30],[3375,30,3216,34],[3375,34,3216,38],[3375,36,3216,40],[3376,10,3217,16,"row"],[3376,13,3217,19],[3376,14,3217,20,"push"],[3376,18,3217,24],[3376,19,3217,25],[3376,23,3217,29],[3376,24,3217,30],[3377,8,3218,12],[3377,9,3218,13],[3377,15,3219,17],[3378,10,3220,16,"row"],[3378,13,3220,19],[3378,14,3220,20,"push"],[3378,18,3220,24],[3378,19,3220,25],[3379,12,3221,20,"square"],[3379,18,3221,26],[3379,20,3221,28,"algebraic"],[3379,29,3221,37],[3379,30,3221,38,"i"],[3379,31,3221,39],[3379,32,3221,40],[3380,12,3222,20,"type"],[3380,16,3222,24],[3380,18,3222,26],[3380,22,3222,30],[3380,23,3222,31,"_board"],[3380,29,3222,37],[3380,30,3222,38,"i"],[3380,31,3222,39],[3380,32,3222,40],[3380,33,3222,41,"type"],[3380,37,3222,45],[3381,12,3223,20,"color"],[3381,17,3223,25],[3381,19,3223,27],[3381,23,3223,31],[3381,24,3223,32,"_board"],[3381,30,3223,38],[3381,31,3223,39,"i"],[3381,32,3223,40],[3381,33,3223,41],[3381,34,3223,42,"color"],[3382,10,3224,16],[3382,11,3224,17],[3382,12,3224,18],[3383,8,3225,12],[3384,8,3226,12],[3384,12,3226,17,"i"],[3384,13,3226,18],[3384,16,3226,21],[3384,17,3226,22],[3384,20,3226,26],[3384,24,3226,30],[3384,26,3226,32],[3385,10,3227,16,"output"],[3385,16,3227,22],[3385,17,3227,23,"push"],[3385,21,3227,27],[3385,22,3227,28,"row"],[3385,25,3227,31],[3385,26,3227,32],[3386,10,3228,16,"row"],[3386,13,3228,19],[3386,16,3228,22],[3386,18,3228,24],[3387,10,3229,16,"i"],[3387,11,3229,17],[3387,15,3229,21],[3387,16,3229,22],[3388,8,3230,12],[3389,6,3231,8],[3390,6,3232,8],[3390,13,3232,15,"output"],[3390,19,3232,21],[3391,4,3233,4],[3392,4,3234,4,"squareColor"],[3392,15,3234,15,"squareColor"],[3392,16,3234,16,"square"],[3392,22,3234,22],[3392,24,3234,24],[3393,6,3235,8],[3393,10,3235,12,"square"],[3393,16,3235,18],[3393,20,3235,22,"Ox88"],[3393,24,3235,26],[3393,26,3235,28],[3394,8,3236,12],[3394,14,3236,18,"sq"],[3394,16,3236,20],[3394,19,3236,23,"Ox88"],[3394,23,3236,27],[3394,24,3236,28,"square"],[3394,30,3236,34],[3394,31,3236,35],[3395,8,3237,12],[3395,15,3237,19],[3395,16,3237,20,"rank"],[3395,20,3237,24],[3395,21,3237,25,"sq"],[3395,23,3237,27],[3395,24,3237,28],[3395,27,3237,31,"file"],[3395,31,3237,35],[3395,32,3237,36,"sq"],[3395,34,3237,38],[3395,35,3237,39],[3395,39,3237,43],[3395,40,3237,44],[3395,45,3237,49],[3395,46,3237,50],[3395,49,3237,53],[3395,56,3237,60],[3395,59,3237,63],[3395,65,3237,69],[3396,6,3238,8],[3397,6,3239,8],[3397,13,3239,15],[3397,17,3239,19],[3398,4,3240,4],[3399,4,3241,4,"history"],[3399,11,3241,11,"history"],[3399,12,3241,12],[3400,6,3241,14,"verbose"],[3400,13,3241,21],[3400,16,3241,24],[3401,4,3241,30],[3401,5,3241,31],[3401,8,3241,34],[3401,9,3241,35],[3401,10,3241,36],[3401,12,3241,38],[3402,6,3242,8],[3402,12,3242,14,"reversedHistory"],[3402,27,3242,29],[3402,30,3242,32],[3402,32,3242,34],[3403,6,3243,8],[3403,12,3243,14,"moveHistory"],[3403,23,3243,25],[3403,26,3243,28],[3403,28,3243,30],[3404,6,3244,8],[3404,13,3244,15],[3404,17,3244,19],[3404,18,3244,20,"_history"],[3404,26,3244,28],[3404,27,3244,29,"length"],[3404,33,3244,35],[3404,36,3244,38],[3404,37,3244,39],[3404,39,3244,41],[3405,8,3245,12,"reversedHistory"],[3405,23,3245,27],[3405,24,3245,28,"push"],[3405,28,3245,32],[3405,29,3245,33],[3405,33,3245,37],[3405,34,3245,38,"_undoMove"],[3405,43,3245,47],[3405,44,3245,48],[3405,45,3245,49],[3405,46,3245,50],[3406,6,3246,8],[3407,6,3247,8],[3407,13,3247,15],[3407,17,3247,19],[3407,19,3247,21],[3408,8,3248,12],[3408,14,3248,18,"move"],[3408,18,3248,22],[3408,21,3248,25,"reversedHistory"],[3408,36,3248,40],[3408,37,3248,41,"pop"],[3408,40,3248,44],[3408,41,3248,45],[3408,42,3248,46],[3409,8,3249,12],[3409,12,3249,16],[3409,13,3249,17,"move"],[3409,17,3249,21],[3409,19,3249,23],[3410,10,3250,16],[3411,8,3251,12],[3412,8,3252,12],[3412,12,3252,16,"verbose"],[3412,19,3252,23],[3412,21,3252,25],[3413,10,3253,16,"moveHistory"],[3413,21,3253,27],[3413,22,3253,28,"push"],[3413,26,3253,32],[3413,27,3253,33],[3413,31,3253,37,"Move"],[3413,35,3253,41],[3413,36,3253,42],[3413,40,3253,46],[3413,42,3253,48,"move"],[3413,46,3253,52],[3413,47,3253,53],[3413,48,3253,54],[3414,8,3254,12],[3414,9,3254,13],[3414,15,3255,17],[3415,10,3256,16,"moveHistory"],[3415,21,3256,27],[3415,22,3256,28,"push"],[3415,26,3256,32],[3415,27,3256,33],[3415,31,3256,37],[3415,32,3256,38,"_moveToSan"],[3415,42,3256,48],[3415,43,3256,49,"move"],[3415,47,3256,53],[3415,49,3256,55],[3415,53,3256,59],[3415,54,3256,60,"_moves"],[3415,60,3256,66],[3415,61,3256,67],[3415,62,3256,68],[3415,63,3256,69],[3415,64,3256,70],[3416,8,3257,12],[3417,8,3258,12],[3417,12,3258,16],[3417,13,3258,17,"_makeMove"],[3417,22,3258,26],[3417,23,3258,27,"move"],[3417,27,3258,31],[3417,28,3258,32],[3418,6,3259,8],[3419,6,3260,8],[3419,13,3260,15,"moveHistory"],[3419,24,3260,26],[3420,4,3261,4],[3421,4,3262,4],[3422,0,3263,0],[3423,0,3264,0],[3424,0,3265,0],[3425,4,3266,4,"_getPositionCount"],[3425,21,3266,21,"_getPositionCount"],[3425,22,3266,22,"hash"],[3425,26,3266,26],[3425,28,3266,28],[3426,6,3267,8],[3426,13,3267,15],[3426,17,3267,19],[3426,18,3267,20,"_positionCount"],[3426,32,3267,34],[3426,33,3267,35,"get"],[3426,36,3267,38],[3426,37,3267,39,"hash"],[3426,41,3267,43],[3426,42,3267,44],[3426,46,3267,48],[3426,47,3267,49],[3427,4,3268,4],[3428,4,3269,4,"_incPositionCount"],[3428,21,3269,21,"_incPositionCount"],[3428,22,3269,21],[3428,24,3269,24],[3429,6,3270,8],[3429,10,3270,12],[3429,11,3270,13,"_positionCount"],[3429,25,3270,27],[3429,26,3270,28,"set"],[3429,29,3270,31],[3429,30,3270,32],[3429,34,3270,36],[3429,35,3270,37,"_hash"],[3429,40,3270,42],[3429,42,3270,44],[3429,43,3270,45],[3429,47,3270,49],[3429,48,3270,50,"_positionCount"],[3429,62,3270,64],[3429,63,3270,65,"get"],[3429,66,3270,68],[3429,67,3270,69],[3429,71,3270,73],[3429,72,3270,74,"_hash"],[3429,77,3270,79],[3429,78,3270,80],[3429,82,3270,84],[3429,83,3270,85],[3429,87,3270,89],[3429,88,3270,90],[3429,89,3270,91],[3430,4,3271,4],[3431,4,3272,4,"_decPositionCount"],[3431,21,3272,21,"_decPositionCount"],[3431,22,3272,22,"hash"],[3431,26,3272,26],[3431,28,3272,28],[3432,6,3273,8],[3432,12,3273,14,"currentCount"],[3432,24,3273,26],[3432,27,3273,29],[3432,31,3273,33],[3432,32,3273,34,"_positionCount"],[3432,46,3273,48],[3432,47,3273,49,"get"],[3432,50,3273,52],[3432,51,3273,53,"hash"],[3432,55,3273,57],[3432,56,3273,58],[3432,60,3273,62],[3432,61,3273,63],[3433,6,3274,8],[3433,10,3274,12,"currentCount"],[3433,22,3274,24],[3433,27,3274,29],[3433,28,3274,30],[3433,30,3274,32],[3434,8,3275,12],[3434,12,3275,16],[3434,13,3275,17,"_positionCount"],[3434,27,3275,31],[3434,28,3275,32,"delete"],[3434,34,3275,38],[3434,35,3275,39,"hash"],[3434,39,3275,43],[3434,40,3275,44],[3435,6,3276,8],[3435,7,3276,9],[3435,13,3277,13],[3436,8,3278,12],[3436,12,3278,16],[3436,13,3278,17,"_positionCount"],[3436,27,3278,31],[3436,28,3278,32,"set"],[3436,31,3278,35],[3436,32,3278,36,"hash"],[3436,36,3278,40],[3436,38,3278,42,"currentCount"],[3436,50,3278,54],[3436,53,3278,57],[3436,54,3278,58],[3436,55,3278,59],[3437,6,3279,8],[3438,4,3280,4],[3439,4,3281,4,"_pruneComments"],[3439,18,3281,18,"_pruneComments"],[3439,19,3281,18],[3439,21,3281,21],[3440,6,3282,8],[3440,12,3282,14,"reversedHistory"],[3440,27,3282,29],[3440,30,3282,32],[3440,32,3282,34],[3441,6,3283,8],[3441,12,3283,14,"currentComments"],[3441,27,3283,29],[3441,30,3283,32],[3441,31,3283,33],[3441,32,3283,34],[3442,6,3284,8],[3442,12,3284,14,"copyComment"],[3442,23,3284,25],[3442,26,3284,29,"fen"],[3442,29,3284,32],[3442,33,3284,37],[3443,8,3285,12],[3443,12,3285,16,"fen"],[3443,15,3285,19],[3443,19,3285,23],[3443,23,3285,27],[3443,24,3285,28,"_comments"],[3443,33,3285,37],[3443,35,3285,39],[3444,10,3286,16,"currentComments"],[3444,25,3286,31],[3444,26,3286,32,"fen"],[3444,29,3286,35],[3444,30,3286,36],[3444,33,3286,39],[3444,37,3286,43],[3444,38,3286,44,"_comments"],[3444,47,3286,53],[3444,48,3286,54,"fen"],[3444,51,3286,57],[3444,52,3286,58],[3445,8,3287,12],[3446,6,3288,8],[3446,7,3288,9],[3447,6,3289,8],[3447,13,3289,15],[3447,17,3289,19],[3447,18,3289,20,"_history"],[3447,26,3289,28],[3447,27,3289,29,"length"],[3447,33,3289,35],[3447,36,3289,38],[3447,37,3289,39],[3447,39,3289,41],[3448,8,3290,12,"reversedHistory"],[3448,23,3290,27],[3448,24,3290,28,"push"],[3448,28,3290,32],[3448,29,3290,33],[3448,33,3290,37],[3448,34,3290,38,"_undoMove"],[3448,43,3290,47],[3448,44,3290,48],[3448,45,3290,49],[3448,46,3290,50],[3449,6,3291,8],[3450,6,3292,8,"copyComment"],[3450,17,3292,19],[3450,18,3292,20],[3450,22,3292,24],[3450,23,3292,25,"fen"],[3450,26,3292,28],[3450,27,3292,29],[3450,28,3292,30],[3450,29,3292,31],[3451,6,3293,8],[3451,13,3293,15],[3451,17,3293,19],[3451,19,3293,21],[3452,8,3294,12],[3452,14,3294,18,"move"],[3452,18,3294,22],[3452,21,3294,25,"reversedHistory"],[3452,36,3294,40],[3452,37,3294,41,"pop"],[3452,40,3294,44],[3452,41,3294,45],[3452,42,3294,46],[3453,8,3295,12],[3453,12,3295,16],[3453,13,3295,17,"move"],[3453,17,3295,21],[3453,19,3295,23],[3454,10,3296,16],[3455,8,3297,12],[3456,8,3298,12],[3456,12,3298,16],[3456,13,3298,17,"_makeMove"],[3456,22,3298,26],[3456,23,3298,27,"move"],[3456,27,3298,31],[3456,28,3298,32],[3457,8,3299,12,"copyComment"],[3457,19,3299,23],[3457,20,3299,24],[3457,24,3299,28],[3457,25,3299,29,"fen"],[3457,28,3299,32],[3457,29,3299,33],[3457,30,3299,34],[3457,31,3299,35],[3458,6,3300,8],[3459,6,3301,8],[3459,10,3301,12],[3459,11,3301,13,"_comments"],[3459,20,3301,22],[3459,23,3301,25,"currentComments"],[3459,38,3301,40],[3460,4,3302,4],[3461,4,3303,4,"getComment"],[3461,14,3303,14,"getComment"],[3461,15,3303,14],[3461,17,3303,17],[3462,6,3304,8],[3462,13,3304,15],[3462,17,3304,19],[3462,18,3304,20,"_comments"],[3462,27,3304,29],[3462,28,3304,30],[3462,32,3304,34],[3462,33,3304,35,"fen"],[3462,36,3304,38],[3462,37,3304,39],[3462,38,3304,40],[3462,39,3304,41],[3463,4,3305,4],[3464,4,3306,4,"setComment"],[3464,14,3306,14,"setComment"],[3464,15,3306,15,"comment"],[3464,22,3306,22],[3464,24,3306,24],[3465,6,3307,8],[3465,10,3307,12],[3465,11,3307,13,"_comments"],[3465,20,3307,22],[3465,21,3307,23],[3465,25,3307,27],[3465,26,3307,28,"fen"],[3465,29,3307,31],[3465,30,3307,32],[3465,31,3307,33],[3465,32,3307,34],[3465,35,3307,37,"comment"],[3465,42,3307,44],[3465,43,3307,45,"replace"],[3465,50,3307,52],[3465,51,3307,53],[3465,54,3307,56],[3465,56,3307,58],[3465,59,3307,61],[3465,60,3307,62],[3465,61,3307,63,"replace"],[3465,68,3307,70],[3465,69,3307,71],[3465,72,3307,74],[3465,74,3307,76],[3465,77,3307,79],[3465,78,3307,80],[3466,4,3308,4],[3467,4,3309,4],[3468,0,3310,0],[3469,0,3311,0],[3470,4,3312,4,"deleteComment"],[3470,17,3312,17,"deleteComment"],[3470,18,3312,17],[3470,20,3312,20],[3471,6,3313,8],[3471,13,3313,15],[3471,17,3313,19],[3471,18,3313,20,"removeComment"],[3471,31,3313,33],[3471,32,3313,34],[3471,33,3313,35],[3472,4,3314,4],[3473,4,3315,4,"removeComment"],[3473,17,3315,17,"removeComment"],[3473,18,3315,17],[3473,20,3315,20],[3474,6,3316,8],[3474,12,3316,14,"comment"],[3474,19,3316,21],[3474,22,3316,24],[3474,26,3316,28],[3474,27,3316,29,"_comments"],[3474,36,3316,38],[3474,37,3316,39],[3474,41,3316,43],[3474,42,3316,44,"fen"],[3474,45,3316,47],[3474,46,3316,48],[3474,47,3316,49],[3474,48,3316,50],[3475,6,3317,8],[3475,13,3317,15],[3475,17,3317,19],[3475,18,3317,20,"_comments"],[3475,27,3317,29],[3475,28,3317,30],[3475,32,3317,34],[3475,33,3317,35,"fen"],[3475,36,3317,38],[3475,37,3317,39],[3475,38,3317,40],[3475,39,3317,41],[3476,6,3318,8],[3476,13,3318,15,"comment"],[3476,20,3318,22],[3477,4,3319,4],[3478,4,3320,4,"getComments"],[3478,15,3320,15,"getComments"],[3478,16,3320,15],[3478,18,3320,18],[3479,6,3321,8],[3479,10,3321,12],[3479,11,3321,13,"_pruneComments"],[3479,25,3321,27],[3479,26,3321,28],[3479,27,3321,29],[3480,6,3322,8],[3480,13,3322,15,"Object"],[3480,19,3322,21],[3480,20,3322,22,"keys"],[3480,24,3322,26],[3480,25,3322,27],[3480,29,3322,31],[3480,30,3322,32,"_comments"],[3480,39,3322,41],[3480,40,3322,42],[3480,41,3322,43,"map"],[3480,44,3322,46],[3480,45,3322,48,"fen"],[3480,48,3322,51],[3480,52,3322,56],[3481,8,3323,12],[3481,15,3323,19],[3482,10,3323,21,"fen"],[3482,13,3323,24],[3482,15,3323,26,"fen"],[3482,18,3323,29],[3483,10,3323,31,"comment"],[3483,17,3323,38],[3483,19,3323,40],[3483,23,3323,44],[3483,24,3323,45,"_comments"],[3483,33,3323,54],[3483,34,3323,55,"fen"],[3483,37,3323,58],[3484,8,3323,60],[3484,9,3323,61],[3485,6,3324,8],[3485,7,3324,9],[3485,8,3324,10],[3486,4,3325,4],[3487,4,3326,4],[3488,0,3327,0],[3489,0,3328,0],[3490,4,3329,4,"deleteComments"],[3490,18,3329,18,"deleteComments"],[3490,19,3329,18],[3490,21,3329,21],[3491,6,3330,8],[3491,13,3330,15],[3491,17,3330,19],[3491,18,3330,20,"removeComments"],[3491,32,3330,34],[3491,33,3330,35],[3491,34,3330,36],[3492,4,3331,4],[3493,4,3332,4,"removeComments"],[3493,18,3332,18,"removeComments"],[3493,19,3332,18],[3493,21,3332,21],[3494,6,3333,8],[3494,10,3333,12],[3494,11,3333,13,"_pruneComments"],[3494,25,3333,27],[3494,26,3333,28],[3494,27,3333,29],[3495,6,3334,8],[3495,13,3334,15,"Object"],[3495,19,3334,21],[3495,20,3334,22,"keys"],[3495,24,3334,26],[3495,25,3334,27],[3495,29,3334,31],[3495,30,3334,32,"_comments"],[3495,39,3334,41],[3495,40,3334,42],[3495,41,3334,43,"map"],[3495,44,3334,46],[3495,45,3334,48,"fen"],[3495,48,3334,51],[3495,52,3334,56],[3496,8,3335,12],[3496,14,3335,18,"comment"],[3496,21,3335,25],[3496,24,3335,28],[3496,28,3335,32],[3496,29,3335,33,"_comments"],[3496,38,3335,42],[3496,39,3335,43,"fen"],[3496,42,3335,46],[3496,43,3335,47],[3497,8,3336,12],[3497,15,3336,19],[3497,19,3336,23],[3497,20,3336,24,"_comments"],[3497,29,3336,33],[3497,30,3336,34,"fen"],[3497,33,3336,37],[3497,34,3336,38],[3498,8,3337,12],[3498,15,3337,19],[3499,10,3337,21,"fen"],[3499,13,3337,24],[3499,15,3337,26,"fen"],[3499,18,3337,29],[3500,10,3337,31,"comment"],[3500,17,3337,38],[3500,19,3337,40,"comment"],[3501,8,3337,48],[3501,9,3337,49],[3502,6,3338,8],[3502,7,3338,9],[3502,8,3338,10],[3503,4,3339,4],[3504,4,3340,4,"setCastlingRights"],[3504,21,3340,21,"setCastlingRights"],[3504,22,3340,22,"color"],[3504,27,3340,27],[3504,29,3340,29,"rights"],[3504,35,3340,35],[3504,37,3340,37],[3505,6,3341,8],[3505,11,3341,13],[3505,17,3341,19,"side"],[3505,21,3341,23],[3505,25,3341,27],[3505,26,3341,28,"KING"],[3505,30,3341,32],[3505,32,3341,34,"QUEEN"],[3505,37,3341,39],[3505,38,3341,40],[3505,40,3341,42],[3506,8,3342,12],[3506,12,3342,16,"rights"],[3506,18,3342,22],[3506,19,3342,23,"side"],[3506,23,3342,27],[3506,24,3342,28],[3506,29,3342,33,"undefined"],[3506,38,3342,42],[3506,40,3342,44],[3507,10,3343,16],[3507,14,3343,20,"rights"],[3507,20,3343,26],[3507,21,3343,27,"side"],[3507,25,3343,31],[3507,26,3343,32],[3507,28,3343,34],[3508,12,3344,20],[3508,16,3344,24],[3508,17,3344,25,"_castling"],[3508,26,3344,34],[3508,27,3344,35,"color"],[3508,32,3344,40],[3508,33,3344,41],[3508,37,3344,45,"SIDES"],[3508,42,3344,50],[3508,43,3344,51,"side"],[3508,47,3344,55],[3508,48,3344,56],[3509,10,3345,16],[3509,11,3345,17],[3509,17,3346,21],[3510,12,3347,20],[3510,16,3347,24],[3510,17,3347,25,"_castling"],[3510,26,3347,34],[3510,27,3347,35,"color"],[3510,32,3347,40],[3510,33,3347,41],[3510,37,3347,45],[3510,38,3347,46,"SIDES"],[3510,43,3347,51],[3510,44,3347,52,"side"],[3510,48,3347,56],[3510,49,3347,57],[3511,10,3348,16],[3512,8,3349,12],[3513,6,3350,8],[3514,6,3351,8],[3514,10,3351,12],[3514,11,3351,13,"_updateCastlingRights"],[3514,32,3351,34],[3514,33,3351,35],[3514,34,3351,36],[3515,6,3352,8],[3515,12,3352,14,"result"],[3515,18,3352,20],[3515,21,3352,23],[3515,25,3352,27],[3515,26,3352,28,"getCastlingRights"],[3515,43,3352,45],[3515,44,3352,46,"color"],[3515,49,3352,51],[3515,50,3352,52],[3516,6,3353,8],[3516,13,3353,16],[3516,14,3353,17,"rights"],[3516,20,3353,23],[3516,21,3353,24,"KING"],[3516,25,3353,28],[3516,26,3353,29],[3516,31,3353,34,"undefined"],[3516,40,3353,43],[3516,44,3353,47,"rights"],[3516,50,3353,53],[3516,51,3353,54,"KING"],[3516,55,3353,58],[3516,56,3353,59],[3516,61,3353,64,"result"],[3516,67,3353,70],[3516,68,3353,71,"KING"],[3516,72,3353,75],[3516,73,3353,76],[3516,79,3354,13,"rights"],[3516,85,3354,19],[3516,86,3354,20,"QUEEN"],[3516,91,3354,25],[3516,92,3354,26],[3516,97,3354,31,"undefined"],[3516,106,3354,40],[3516,110,3354,44,"rights"],[3516,116,3354,50],[3516,117,3354,51,"QUEEN"],[3516,122,3354,56],[3516,123,3354,57],[3516,128,3354,62,"result"],[3516,134,3354,68],[3516,135,3354,69,"QUEEN"],[3516,140,3354,74],[3516,141,3354,75],[3516,142,3354,76],[3517,4,3355,4],[3518,4,3356,4,"getCastlingRights"],[3518,21,3356,21,"getCastlingRights"],[3518,22,3356,22,"color"],[3518,27,3356,27],[3518,29,3356,29],[3519,6,3357,8],[3519,13,3357,15],[3520,8,3358,12],[3520,9,3358,13,"KING"],[3520,13,3358,17],[3520,16,3358,20],[3520,17,3358,21],[3520,21,3358,25],[3520,22,3358,26,"_castling"],[3520,31,3358,35],[3520,32,3358,36,"color"],[3520,37,3358,41],[3520,38,3358,42],[3520,41,3358,45,"SIDES"],[3520,46,3358,50],[3520,47,3358,51,"KING"],[3520,51,3358,55],[3520,52,3358,56],[3520,58,3358,62],[3520,59,3358,63],[3521,8,3359,12],[3521,9,3359,13,"QUEEN"],[3521,14,3359,18],[3521,17,3359,21],[3521,18,3359,22],[3521,22,3359,26],[3521,23,3359,27,"_castling"],[3521,32,3359,36],[3521,33,3359,37,"color"],[3521,38,3359,42],[3521,39,3359,43],[3521,42,3359,46,"SIDES"],[3521,47,3359,51],[3521,48,3359,52,"QUEEN"],[3521,53,3359,57],[3521,54,3359,58],[3521,60,3359,64],[3522,6,3360,8],[3522,7,3360,9],[3523,4,3361,4],[3524,4,3362,4,"moveNumber"],[3524,14,3362,14,"moveNumber"],[3524,15,3362,14],[3524,17,3362,17],[3525,6,3363,8],[3525,13,3363,15],[3525,17,3363,19],[3525,18,3363,20,"_moveNumber"],[3525,29,3363,31],[3526,4,3364,4],[3527,2,3365,0],[3528,0,3365,1],[3528,3]],"functionMap":{"names":["<global>","rootNode","node","lineToTree","pgn","peg$subclass","C","peg$SyntaxError","peg$padEnd","peg$SyntaxError.prototype.format","peg$SyntaxError.buildMessage","DESCRIBE_EXPECTATION_FNS.literal","DESCRIBE_EXPECTATION_FNS._class","expectation.parts.map$argument_0","DESCRIBE_EXPECTATION_FNS.any","DESCRIBE_EXPECTATION_FNS.end","DESCRIBE_EXPECTATION_FNS.other","hex","literalEscape","s.replace...replace.replace$argument_1","classEscape","describeExpectation","describeExpected","describeFound","peg$parse","peg$f0","peg$f1","peg$f2","peg$f3","peg$f4","peg$f5","peg$f6","peg$f7","peg$f8","peg$f9","peg$f10","peg$literalExpectation","peg$classExpectation","peg$endExpectation","peg$otherExpectation","peg$computePosDetails","peg$computeLocation","peg$fail","peg$buildStructuredError","peg$parsepgn","peg$parsetagPairSection","peg$parsetagPair","peg$parsetagName","peg$parsetagValue","peg$parsemoveTextSection","peg$parseline","peg$parsemove","peg$parsemoveNumber","peg$parsesan","peg$parsesuffixAnnotation","peg$parsenag","peg$parsecomment","peg$parsebraceComment","peg$parserestOfLineComment","peg$parsevariation","peg$parsegameTerminationMarker","peg$parse_","rotl","wrappingMul","xoroshiro128","<anonymous>","Array.from$argument_1","Move","Move#constructor","Move#isCapture","Move#isPromotion","Move#isEnPassant","Move#isKingsideCastle","Move#isQueensideCastle","Move#isBigPawn","rank","file","isDigit","algebraic","swapColor","validateFen","Array.from.some$argument_0","getDisambiguator","addMove","inferPieceType","strippedSan","Chess","Chess#constructor","Chess#clear","Chess#load","Chess#fen","Chess#_pieceKey","Chess#_epKey","Chess#_castlingKey","Chess#_computeHash","Chess#_updateSetup","Chess#reset","Chess#get","Chess#findPiece","Chess#put","Chess#_set","Chess#_put","Chess#_clear","Chess#remove","Chess#_updateCastlingRights","Chess#_updateEnPassantSquare","canCapture","Chess#_attacked","Chess#attackers","Chess#_isKingAttacked","Chess#hash","Chess#isAttacked","Chess#isCheck","Chess#inCheck","Chess#isCheckmate","Chess#isStalemate","Chess#isInsufficientMaterial","Chess#isThreefoldRepetition","Chess#isDrawByFiftyMoves","Chess#isDraw","Chess#isGameOver","Chess#moves","moves.map$argument_0","Chess#_moves","Chess#move","Chess#_push","Chess#_movePiece","Chess#_makeMove","Chess#undo","Chess#_undoMove","Chess#pgn","appendComment","strip","wrapComment","Chess#header","Chess#setHeader","Chess#removeHeader","Chess#getHeaders","Chess#loadPgn","Chess#_moveToSan","Chess#_moveFromSan","Chess#ascii","Chess#perft","Chess#setTurn","Chess#turn","Chess#board","Chess#squareColor","Chess#history","Chess#_getPositionCount","Chess#_incPositionCount","Chess#_decPositionCount","Chess#_pruneComments","copyComment","Chess#getComment","Chess#setComment","Chess#deleteComment","Chess#removeComment","Chess#getComments","Object.keys.map$argument_0","Chess#deleteComments","Chess#removeComments","Chess#setCastlingRights","Chess#getCastlingRights","Chess#moveNumber"],"mappings":"AAA;ECM;GDE;EEE;GFgB;EGE;GHc;EIE;GJkB;AKE;ECC,0CD;CLG;AOE;CPW;AQI;CRM;mCSE;CTgC;+BUE;aCE;KDE;WEE;+CCC;ODI;KFG;SIE;KJE;SKE;KLE;WME;KNE;EOG;GPE;EQE;wCCQ,yCD;wCCC,yCD;GRC;EUE;wCDU,yCC;wCDC,yCC;GVC;EWE;GXE;EYE;GZ4B;EaE;GbE;CVG;AwBE;eCgF,qDD;eEC,0DF;eGC,0DH;eIC,iDJ;eKC,kFL;eMC,sGN;eOC,4BP;eQC,6DR;eSC,2CT;eUC,8BV;gBWC,wDX;EYiB;GZE;EaE;GbE;EcE;GdE;EeE;GfE;EgBE;GhBmC;EiBE;GjBkB;EkBE;GlBS;EmBE;GnBO;EoBE;GpBS;EqBE;GrBc;EsBE;GtBuE;EuBE;GvBuC;EwBE;GxB6B;EyBE;GzBc;E0BE;G1BiB;E2BE;G3BqC;E4BE;G5B+D;E6BE;G7BiH;E8BE;G9BwC;E+BE;G/B0D;EgCE;GhCS;EiCE;GjCyD;EkCE;GlC6C;EmCE;GnC4C;EoCE;GpCyD;EqCE;GrC2B;CxB4B;A8D6B;C9DE;A+DC;C/DE;AgEE;WCC;KDS;ChEC;6CkEE,gFlE;0CkEC,YlE;iDkEC,YlE;AmEW;ICkB;KDkC;IEC;KFE;IGC;KHE;IIC;KJE;IKC;KLE;IMC;KNE;IOC;KPE;CnEC;A2EoN;C3EE;A4EE;C5EE;A6EC;C7EE;A8EE;C9EK;A+EC;C/EE;AgFC;2CCkG,oCD;ChFO;AkFE;ClF8C;AmFC;CnF0B;AoFC;CpFc;AqFE;CrFE;AsFC;ICc;KDE;IEC;KFoB;IGC;KHkD;IIC;KJ0F;IKC;KLkB;IMC;KNE;IOC;KPG;IQC;KRkB;ISO;KTW;IUC;KVE;IWC;KXE;IYC;KZmB;IaC;KbQ;IcC;KdI;IeC;KfyB;IgBC;KhBG;IiBC;KjBU;IkBC;KlB2B;ImBC;2BCe;8CDE;KnBK;IqBC;KrBqE;IsBC;KtBO;IuBC;KvBG;IwBC;KxBE;IyBC;KzBE;I0BC;K1BE;I2BC;K3BE;I4BC;K5BE;I6BC;K7BE;I8BC;K9BwD;I+BC;K/BE;IgCC;KhCE;IiCC;KjCK;IkCC;KlCE;ImCC;6BCG,8BD;6BCG,sCD;KnCE;IqCC;KrCwI;IsCC;KtCsD;IuCC;KvCU;IwCC;KxCK;IyCC;KzC+G;I0CC;K1CS;I2CC;K3C0D;I4CC;8BCwB;SDO;sBEmD;SFM;4BGE;SHqB;K5C2B;IgDI;KhDO;IiDE;KjDG;IkDC;KlDM;ImDE;KnDQ;IoDC;KpDoE;IqDY;KrDsC;IsDE;KtD0H;IuDC;KvDwB;IwDC;KxDiB;IyDC;KzDM;I0DC;K1DE;I2DC;K3DqB;I4DC;K5DM;I6DC;K7DoB;I8DK;K9DE;I+DC;K/DE;IgEC;KhEQ;IiEC;4BCG;SDI;KjEc;ImEC;KnEE;IoEC;KpEE;IqEI;KrEE;IsEC;KtEI;IuEC;+CCE;SDE;KvEC;IyEI;KzEE;I0EC;+CFE;SEI;K1EC;I2EC;K3Ee;I4EC;K5EK;I6EC;K7EE;CtFC"},"hasCjsExports":false},"type":"js/module"}]}