{"dependencies":[{"name":"chess.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"9g1SAepgOgChXJd91G0Y7wxNPxY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.getAIMove = getAIMove;\n  Object.defineProperty(exports, \"evaluateBoard\", {\n    enumerable: true,\n    get: function () {\n      return evaluateBoard;\n    }\n  });\n  Object.defineProperty(exports, \"getBestMove\", {\n    enumerable: true,\n    get: function () {\n      return getBestMove;\n    }\n  });\n  var _chessJs = require(_dependencyMap[0], \"chess.js\");\n  // Simple AI implementation using minimax algorithm with alpha-beta pruning\n  // For production, you would integrate actual Stockfish.js library\n\n  const PIECE_VALUES = {\n    p: 100,\n    n: 320,\n    b: 330,\n    r: 500,\n    q: 900,\n    k: 20000\n  };\n  const POSITION_BONUS = {\n    p: [[0, 0, 0, 0, 0, 0, 0, 0], [50, 50, 50, 50, 50, 50, 50, 50], [10, 10, 20, 30, 30, 20, 10, 10], [5, 5, 10, 25, 25, 10, 5, 5], [0, 0, 0, 20, 20, 0, 0, 0], [5, -5, -10, 0, 0, -10, -5, 5], [5, 10, 10, -20, -20, 10, 10, 5], [0, 0, 0, 0, 0, 0, 0, 0]],\n    n: [[-50, -40, -30, -30, -30, -30, -40, -50], [-40, -20, 0, 0, 0, 0, -20, -40], [-30, 0, 10, 15, 15, 10, 0, -30], [-30, 5, 15, 20, 20, 15, 5, -30], [-30, 0, 15, 20, 20, 15, 0, -30], [-30, 5, 10, 15, 15, 10, 5, -30], [-40, -20, 0, 5, 5, 0, -20, -40], [-50, -40, -30, -30, -30, -30, -40, -50]]\n  };\n  function evaluateBoard(chess) {\n    let score = 0;\n    const board = chess.board();\n    for (let row = 0; row < 8; row++) {\n      for (let col = 0; col < 8; col++) {\n        const piece = board[row][col];\n        if (piece) {\n          const pieceValue = PIECE_VALUES[piece.type] || 0;\n          const positionValue = POSITION_BONUS[piece.type]?.[row]?.[col] || 0;\n          const value = pieceValue + positionValue;\n          score += piece.color === 'b' ? value : -value;\n        }\n      }\n    }\n    return score;\n  }\n  function minimax(chess, depth, alpha, beta, maximizingPlayer) {\n    if (depth === 0 || chess.isGameOver()) {\n      return evaluateBoard(chess);\n    }\n    const moves = chess.moves();\n    if (maximizingPlayer) {\n      let maxEval = -Infinity;\n      for (const move of moves) {\n        chess.move(move);\n        const evaluation = minimax(chess, depth - 1, alpha, beta, false);\n        chess.undo();\n        maxEval = Math.max(maxEval, evaluation);\n        alpha = Math.max(alpha, evaluation);\n        if (beta <= alpha) break;\n      }\n      return maxEval;\n    } else {\n      let minEval = Infinity;\n      for (const move of moves) {\n        chess.move(move);\n        const evaluation = minimax(chess, depth - 1, alpha, beta, true);\n        chess.undo();\n        minEval = Math.min(minEval, evaluation);\n        beta = Math.min(beta, evaluation);\n        if (beta <= alpha) break;\n      }\n      return minEval;\n    }\n  }\n  function getBestMove(fen, depth) {\n    const chess = new _chessJs.Chess(fen);\n    const moves = chess.moves();\n    if (moves.length === 0) return null;\n    let bestMove = moves[0];\n    let bestValue = -Infinity;\n    for (const move of moves) {\n      chess.move(move);\n      const value = minimax(chess, depth - 1, -Infinity, Infinity, false);\n      chess.undo();\n      if (value > bestValue) {\n        bestValue = value;\n        bestMove = move;\n      }\n    }\n    return bestMove;\n  }\n  function getRandomMove(fen) {\n    const chess = new _chessJs.Chess(fen);\n    const moves = chess.moves();\n    if (moves.length === 0) return null;\n    return moves[Math.floor(Math.random() * moves.length)];\n  }\n  async function getAIMove(fen, difficulty) {\n    // Simulate thinking time\n    await new Promise(resolve => setTimeout(resolve, 300));\n    switch (difficulty) {\n      case 'easy':\n        // 70% random moves, 30% depth 1\n        if (Math.random() < 0.7) {\n          return getRandomMove(fen);\n        }\n        return getBestMove(fen, 1);\n      case 'medium':\n        // Depth 2 search\n        return getBestMove(fen, 2);\n      case 'hard':\n        // Depth 3 search\n        return getBestMove(fen, 3);\n      default:\n        return getRandomMove(fen);\n    }\n  }\n});","lineCount":124,"map":[[7,2,130,0,"exports"],[7,9,130,0],[7,10,130,0,"getAIMove"],[7,19,130,0],[7,22,130,0,"getAIMove"],[7,31,130,0],[8,2,158,0,"Object"],[8,8,158,0],[8,9,158,0,"defineProperty"],[8,23,158,0],[8,24,158,0,"exports"],[8,31,158,0],[9,4,158,0,"enumerable"],[9,14,158,0],[10,4,158,0,"get"],[10,7,158,0],[10,18,158,0,"get"],[10,19,158,0],[11,6,158,0],[11,13,158,9,"evaluateBoard"],[11,26,158,22],[12,4,158,22],[13,2,158,22],[14,2,158,0,"Object"],[14,8,158,0],[14,9,158,0,"defineProperty"],[14,23,158,0],[14,24,158,0,"exports"],[14,31,158,0],[15,4,158,0,"enumerable"],[15,14,158,0],[16,4,158,0,"get"],[16,7,158,0],[16,18,158,0,"get"],[16,19,158,0],[17,6,158,0],[17,13,158,24,"getBestMove"],[17,24,158,35],[18,4,158,35],[19,2,158,35],[20,2,1,0],[20,6,1,0,"_chessJs"],[20,14,1,0],[20,17,1,0,"require"],[20,24,1,0],[20,25,1,0,"_dependencyMap"],[20,39,1,0],[21,2,3,0],[22,2,4,0],[24,2,11,0],[24,8,11,6,"PIECE_VALUES"],[24,20,11,45],[24,23,11,48],[25,4,12,2,"p"],[25,5,12,3],[25,7,12,5],[25,10,12,8],[26,4,13,2,"n"],[26,5,13,3],[26,7,13,5],[26,10,13,8],[27,4,14,2,"b"],[27,5,14,3],[27,7,14,5],[27,10,14,8],[28,4,15,2,"r"],[28,5,15,3],[28,7,15,5],[28,10,15,8],[29,4,16,2,"q"],[29,5,16,3],[29,7,16,5],[29,10,16,8],[30,4,17,2,"k"],[30,5,17,3],[30,7,17,5],[31,2,18,0],[31,3,18,1],[32,2,20,0],[32,8,20,6,"POSITION_BONUS"],[32,22,20,51],[32,25,20,54],[33,4,21,2,"p"],[33,5,21,3],[33,7,21,5],[33,8,22,4],[33,9,22,5],[33,10,22,6],[33,12,22,8],[33,13,22,9],[33,15,22,11],[33,16,22,12],[33,18,22,14],[33,19,22,15],[33,21,22,17],[33,22,22,18],[33,24,22,20],[33,25,22,21],[33,27,22,23],[33,28,22,24],[33,30,22,26],[33,31,22,27],[33,32,22,28],[33,34,23,4],[33,35,23,5],[33,37,23,7],[33,39,23,9],[33,41,23,11],[33,43,23,13],[33,45,23,15],[33,47,23,17],[33,49,23,19],[33,51,23,21],[33,53,23,23],[33,55,23,25],[33,57,23,27],[33,59,23,29],[33,61,23,31],[33,63,23,33],[33,65,23,35],[33,66,23,36],[33,68,24,4],[33,69,24,5],[33,71,24,7],[33,73,24,9],[33,75,24,11],[33,77,24,13],[33,79,24,15],[33,81,24,17],[33,83,24,19],[33,85,24,21],[33,87,24,23],[33,89,24,25],[33,91,24,27],[33,93,24,29],[33,95,24,31],[33,97,24,33],[33,99,24,35],[33,100,24,36],[33,102,25,4],[33,103,25,5],[33,104,25,6],[33,106,25,8],[33,107,25,9],[33,109,25,11],[33,111,25,13],[33,113,25,15],[33,115,25,17],[33,117,25,19],[33,119,25,21],[33,121,25,23],[33,123,25,25],[33,125,25,27],[33,126,25,28],[33,128,25,30],[33,129,25,31],[33,130,25,32],[33,132,26,4],[33,133,26,5],[33,134,26,6],[33,136,26,8],[33,137,26,9],[33,139,26,11],[33,140,26,12],[33,142,26,14],[33,144,26,16],[33,146,26,18],[33,148,26,20],[33,150,26,22],[33,151,26,23],[33,153,26,25],[33,154,26,26],[33,156,26,28],[33,157,26,29],[33,158,26,30],[33,160,27,4],[33,161,27,5],[33,162,27,6],[33,164,27,8],[33,165,27,9],[33,166,27,10],[33,168,27,12],[33,169,27,13],[33,171,27,15],[33,173,27,17],[33,174,27,18],[33,176,27,20],[33,177,27,21],[33,179,27,23],[33,180,27,24],[33,182,27,26],[33,184,27,28],[33,185,27,29],[33,186,27,30],[33,188,27,32],[33,189,27,33],[33,190,27,34],[33,192,28,4],[33,193,28,5],[33,194,28,6],[33,196,28,8],[33,198,28,10],[33,200,28,12],[33,202,28,14],[33,204,28,16],[33,205,28,17],[33,207,28,19],[33,209,28,21],[33,210,28,22],[33,212,28,24],[33,214,28,26],[33,216,28,28],[33,218,28,30],[33,220,28,32],[33,222,28,34],[33,223,28,35],[33,224,28,36],[33,226,29,4],[33,227,29,5],[33,228,29,6],[33,230,29,8],[33,231,29,9],[33,233,29,11],[33,234,29,12],[33,236,29,14],[33,237,29,15],[33,239,29,17],[33,240,29,18],[33,242,29,20],[33,243,29,21],[33,245,29,23],[33,246,29,24],[33,248,29,26],[33,249,29,27],[33,250,29,28],[33,251,30,3],[34,4,31,2,"n"],[34,5,31,3],[34,7,31,5],[34,8,32,4],[34,9,32,5],[34,10,32,6],[34,12,32,8],[34,14,32,10],[34,15,32,11],[34,17,32,13],[34,19,32,15],[34,20,32,16],[34,22,32,18],[34,24,32,20],[34,25,32,21],[34,27,32,23],[34,29,32,25],[34,30,32,26],[34,32,32,28],[34,34,32,30],[34,35,32,31],[34,37,32,33],[34,39,32,35],[34,40,32,36],[34,42,32,38],[34,44,32,40],[34,45,32,41],[34,47,32,43],[34,48,32,44],[34,50,33,4],[34,51,33,5],[34,52,33,6],[34,54,33,8],[34,56,33,10],[34,57,33,11],[34,59,33,13],[34,61,33,15],[34,62,33,16],[34,64,33,18],[34,65,33,19],[34,67,33,21],[34,68,33,22],[34,70,33,24],[34,71,33,25],[34,73,33,27],[34,74,33,28],[34,76,33,30],[34,78,33,32],[34,79,33,33],[34,81,33,35],[34,82,33,36],[34,84,34,4],[34,85,34,5],[34,86,34,6],[34,88,34,8],[34,90,34,10],[34,91,34,11],[34,93,34,13],[34,95,34,15],[34,97,34,17],[34,99,34,19],[34,101,34,21],[34,103,34,23],[34,105,34,25],[34,107,34,27],[34,109,34,29],[34,110,34,30],[34,112,34,32],[34,113,34,33],[34,115,34,35],[34,116,34,36],[34,118,35,4],[34,119,35,5],[34,120,35,6],[34,122,35,8],[34,124,35,10],[34,125,35,11],[34,127,35,13],[34,129,35,15],[34,131,35,17],[34,133,35,19],[34,135,35,21],[34,137,35,23],[34,139,35,25],[34,141,35,27],[34,143,35,29],[34,144,35,30],[34,146,35,32],[34,147,35,33],[34,149,35,35],[34,150,35,36],[34,152,36,4],[34,153,36,5],[34,154,36,6],[34,156,36,8],[34,158,36,10],[34,159,36,11],[34,161,36,13],[34,163,36,15],[34,165,36,17],[34,167,36,19],[34,169,36,21],[34,171,36,23],[34,173,36,25],[34,175,36,27],[34,177,36,29],[34,178,36,30],[34,180,36,32],[34,181,36,33],[34,183,36,35],[34,184,36,36],[34,186,37,4],[34,187,37,5],[34,188,37,6],[34,190,37,8],[34,192,37,10],[34,193,37,11],[34,195,37,13],[34,197,37,15],[34,199,37,17],[34,201,37,19],[34,203,37,21],[34,205,37,23],[34,207,37,25],[34,209,37,27],[34,211,37,29],[34,212,37,30],[34,214,37,32],[34,215,37,33],[34,217,37,35],[34,218,37,36],[34,220,38,4],[34,221,38,5],[34,222,38,6],[34,224,38,8],[34,226,38,10],[34,227,38,11],[34,229,38,13],[34,231,38,15],[34,232,38,16],[34,234,38,18],[34,235,38,19],[34,237,38,21],[34,238,38,22],[34,240,38,24],[34,241,38,25],[34,243,38,27],[34,244,38,28],[34,246,38,30],[34,248,38,32],[34,249,38,33],[34,251,38,35],[34,252,38,36],[34,254,39,4],[34,255,39,5],[34,256,39,6],[34,258,39,8],[34,260,39,10],[34,261,39,11],[34,263,39,13],[34,265,39,15],[34,266,39,16],[34,268,39,18],[34,270,39,20],[34,271,39,21],[34,273,39,23],[34,275,39,25],[34,276,39,26],[34,278,39,28],[34,280,39,30],[34,281,39,31],[34,283,39,33],[34,285,39,35],[34,286,39,36],[34,288,39,38],[34,290,39,40],[34,291,39,41],[34,293,39,43],[34,294,39,44],[35,2,41,0],[35,3,41,1],[36,2,43,0],[36,11,43,9,"evaluateBoard"],[36,24,43,22,"evaluateBoard"],[36,25,43,23,"chess"],[36,30,43,35],[36,32,43,45],[37,4,44,2],[37,8,44,6,"score"],[37,13,44,11],[37,16,44,14],[37,17,44,15],[38,4,45,2],[38,10,45,8,"board"],[38,15,45,13],[38,18,45,16,"chess"],[38,23,45,21],[38,24,45,22,"board"],[38,29,45,27],[38,30,45,28],[38,31,45,29],[39,4,47,2],[39,9,47,7],[39,13,47,11,"row"],[39,16,47,14],[39,19,47,17],[39,20,47,18],[39,22,47,20,"row"],[39,25,47,23],[39,28,47,26],[39,29,47,27],[39,31,47,29,"row"],[39,34,47,32],[39,36,47,34],[39,38,47,36],[40,6,48,4],[40,11,48,9],[40,15,48,13,"col"],[40,18,48,16],[40,21,48,19],[40,22,48,20],[40,24,48,22,"col"],[40,27,48,25],[40,30,48,28],[40,31,48,29],[40,33,48,31,"col"],[40,36,48,34],[40,38,48,36],[40,40,48,38],[41,8,49,6],[41,14,49,12,"piece"],[41,19,49,17],[41,22,49,20,"board"],[41,27,49,25],[41,28,49,26,"row"],[41,31,49,29],[41,32,49,30],[41,33,49,31,"col"],[41,36,49,34],[41,37,49,35],[42,8,50,6],[42,12,50,10,"piece"],[42,17,50,15],[42,19,50,17],[43,10,51,8],[43,16,51,14,"pieceValue"],[43,26,51,24],[43,29,51,27,"PIECE_VALUES"],[43,41,51,39],[43,42,51,40,"piece"],[43,47,51,45],[43,48,51,46,"type"],[43,52,51,50],[43,53,51,51],[43,57,51,55],[43,58,51,56],[44,10,52,8],[44,16,52,14,"positionValue"],[44,29,52,27],[44,32,52,30,"POSITION_BONUS"],[44,46,52,44],[44,47,52,45,"piece"],[44,52,52,50],[44,53,52,51,"type"],[44,57,52,55],[44,58,52,56],[44,61,52,59,"row"],[44,64,52,62],[44,65,52,63],[44,68,52,66,"col"],[44,71,52,69],[44,72,52,70],[44,76,52,74],[44,77,52,75],[45,10,53,8],[45,16,53,14,"value"],[45,21,53,19],[45,24,53,22,"pieceValue"],[45,34,53,32],[45,37,53,35,"positionValue"],[45,50,53,48],[46,10,54,8,"score"],[46,15,54,13],[46,19,54,17,"piece"],[46,24,54,22],[46,25,54,23,"color"],[46,30,54,28],[46,35,54,33],[46,38,54,36],[46,41,54,39,"value"],[46,46,54,44],[46,49,54,47],[46,50,54,48,"value"],[46,55,54,53],[47,8,55,6],[48,6,56,4],[49,4,57,2],[50,4,59,2],[50,11,59,9,"score"],[50,16,59,14],[51,2,60,0],[52,2,62,0],[52,11,62,9,"minimax"],[52,18,62,16,"minimax"],[52,19,63,2,"chess"],[52,24,63,14],[52,26,64,2,"depth"],[52,31,64,15],[52,33,65,2,"alpha"],[52,38,65,15],[52,40,66,2,"beta"],[52,44,66,14],[52,46,67,2,"maximizingPlayer"],[52,62,67,27],[52,64,68,10],[53,4,69,2],[53,8,69,6,"depth"],[53,13,69,11],[53,18,69,16],[53,19,69,17],[53,23,69,21,"chess"],[53,28,69,26],[53,29,69,27,"isGameOver"],[53,39,69,37],[53,40,69,38],[53,41,69,39],[53,43,69,41],[54,6,70,4],[54,13,70,11,"evaluateBoard"],[54,26,70,24],[54,27,70,25,"chess"],[54,32,70,30],[54,33,70,31],[55,4,71,2],[56,4,73,2],[56,10,73,8,"moves"],[56,15,73,13],[56,18,73,16,"chess"],[56,23,73,21],[56,24,73,22,"moves"],[56,29,73,27],[56,30,73,28],[56,31,73,29],[57,4,75,2],[57,8,75,6,"maximizingPlayer"],[57,24,75,22],[57,26,75,24],[58,6,76,4],[58,10,76,8,"maxEval"],[58,17,76,15],[58,20,76,18],[58,21,76,19,"Infinity"],[58,29,76,27],[59,6,77,4],[59,11,77,9],[59,17,77,15,"move"],[59,21,77,19],[59,25,77,23,"moves"],[59,30,77,28],[59,32,77,30],[60,8,78,6,"chess"],[60,13,78,11],[60,14,78,12,"move"],[60,18,78,16],[60,19,78,17,"move"],[60,23,78,21],[60,24,78,22],[61,8,79,6],[61,14,79,12,"evaluation"],[61,24,79,22],[61,27,79,25,"minimax"],[61,34,79,32],[61,35,79,33,"chess"],[61,40,79,38],[61,42,79,40,"depth"],[61,47,79,45],[61,50,79,48],[61,51,79,49],[61,53,79,51,"alpha"],[61,58,79,56],[61,60,79,58,"beta"],[61,64,79,62],[61,66,79,64],[61,71,79,69],[61,72,79,70],[62,8,80,6,"chess"],[62,13,80,11],[62,14,80,12,"undo"],[62,18,80,16],[62,19,80,17],[62,20,80,18],[63,8,81,6,"maxEval"],[63,15,81,13],[63,18,81,16,"Math"],[63,22,81,20],[63,23,81,21,"max"],[63,26,81,24],[63,27,81,25,"maxEval"],[63,34,81,32],[63,36,81,34,"evaluation"],[63,46,81,44],[63,47,81,45],[64,8,82,6,"alpha"],[64,13,82,11],[64,16,82,14,"Math"],[64,20,82,18],[64,21,82,19,"max"],[64,24,82,22],[64,25,82,23,"alpha"],[64,30,82,28],[64,32,82,30,"evaluation"],[64,42,82,40],[64,43,82,41],[65,8,83,6],[65,12,83,10,"beta"],[65,16,83,14],[65,20,83,18,"alpha"],[65,25,83,23],[65,27,83,25],[66,6,84,4],[67,6,85,4],[67,13,85,11,"maxEval"],[67,20,85,18],[68,4,86,2],[68,5,86,3],[68,11,86,9],[69,6,87,4],[69,10,87,8,"minEval"],[69,17,87,15],[69,20,87,18,"Infinity"],[69,28,87,26],[70,6,88,4],[70,11,88,9],[70,17,88,15,"move"],[70,21,88,19],[70,25,88,23,"moves"],[70,30,88,28],[70,32,88,30],[71,8,89,6,"chess"],[71,13,89,11],[71,14,89,12,"move"],[71,18,89,16],[71,19,89,17,"move"],[71,23,89,21],[71,24,89,22],[72,8,90,6],[72,14,90,12,"evaluation"],[72,24,90,22],[72,27,90,25,"minimax"],[72,34,90,32],[72,35,90,33,"chess"],[72,40,90,38],[72,42,90,40,"depth"],[72,47,90,45],[72,50,90,48],[72,51,90,49],[72,53,90,51,"alpha"],[72,58,90,56],[72,60,90,58,"beta"],[72,64,90,62],[72,66,90,64],[72,70,90,68],[72,71,90,69],[73,8,91,6,"chess"],[73,13,91,11],[73,14,91,12,"undo"],[73,18,91,16],[73,19,91,17],[73,20,91,18],[74,8,92,6,"minEval"],[74,15,92,13],[74,18,92,16,"Math"],[74,22,92,20],[74,23,92,21,"min"],[74,26,92,24],[74,27,92,25,"minEval"],[74,34,92,32],[74,36,92,34,"evaluation"],[74,46,92,44],[74,47,92,45],[75,8,93,6,"beta"],[75,12,93,10],[75,15,93,13,"Math"],[75,19,93,17],[75,20,93,18,"min"],[75,23,93,21],[75,24,93,22,"beta"],[75,28,93,26],[75,30,93,28,"evaluation"],[75,40,93,38],[75,41,93,39],[76,8,94,6],[76,12,94,10,"beta"],[76,16,94,14],[76,20,94,18,"alpha"],[76,25,94,23],[76,27,94,25],[77,6,95,4],[78,6,96,4],[78,13,96,11,"minEval"],[78,20,96,18],[79,4,97,2],[80,2,98,0],[81,2,100,0],[81,11,100,9,"getBestMove"],[81,22,100,20,"getBestMove"],[81,23,100,21,"fen"],[81,26,100,32],[81,28,100,34,"depth"],[81,33,100,47],[81,35,100,64],[82,4,101,2],[82,10,101,8,"chess"],[82,15,101,13],[82,18,101,16],[82,22,101,20,"Chess"],[82,30,101,25],[82,31,101,25,"Chess"],[82,36,101,25],[82,37,101,26,"fen"],[82,40,101,29],[82,41,101,30],[83,4,102,2],[83,10,102,8,"moves"],[83,15,102,13],[83,18,102,16,"chess"],[83,23,102,21],[83,24,102,22,"moves"],[83,29,102,27],[83,30,102,28],[83,31,102,29],[84,4,104,2],[84,8,104,6,"moves"],[84,13,104,11],[84,14,104,12,"length"],[84,20,104,18],[84,25,104,23],[84,26,104,24],[84,28,104,26],[84,35,104,33],[84,39,104,37],[85,4,106,2],[85,8,106,6,"bestMove"],[85,16,106,14],[85,19,106,17,"moves"],[85,24,106,22],[85,25,106,23],[85,26,106,24],[85,27,106,25],[86,4,107,2],[86,8,107,6,"bestValue"],[86,17,107,15],[86,20,107,18],[86,21,107,19,"Infinity"],[86,29,107,27],[87,4,109,2],[87,9,109,7],[87,15,109,13,"move"],[87,19,109,17],[87,23,109,21,"moves"],[87,28,109,26],[87,30,109,28],[88,6,110,4,"chess"],[88,11,110,9],[88,12,110,10,"move"],[88,16,110,14],[88,17,110,15,"move"],[88,21,110,19],[88,22,110,20],[89,6,111,4],[89,12,111,10,"value"],[89,17,111,15],[89,20,111,18,"minimax"],[89,27,111,25],[89,28,111,26,"chess"],[89,33,111,31],[89,35,111,33,"depth"],[89,40,111,38],[89,43,111,41],[89,44,111,42],[89,46,111,44],[89,47,111,45,"Infinity"],[89,55,111,53],[89,57,111,55,"Infinity"],[89,65,111,63],[89,67,111,65],[89,72,111,70],[89,73,111,71],[90,6,112,4,"chess"],[90,11,112,9],[90,12,112,10,"undo"],[90,16,112,14],[90,17,112,15],[90,18,112,16],[91,6,114,4],[91,10,114,8,"value"],[91,15,114,13],[91,18,114,16,"bestValue"],[91,27,114,25],[91,29,114,27],[92,8,115,6,"bestValue"],[92,17,115,15],[92,20,115,18,"value"],[92,25,115,23],[93,8,116,6,"bestMove"],[93,16,116,14],[93,19,116,17,"move"],[93,23,116,21],[94,6,117,4],[95,4,118,2],[96,4,120,2],[96,11,120,9,"bestMove"],[96,19,120,17],[97,2,121,0],[98,2,123,0],[98,11,123,9,"getRandomMove"],[98,24,123,22,"getRandomMove"],[98,25,123,23,"fen"],[98,28,123,34],[98,30,123,51],[99,4,124,2],[99,10,124,8,"chess"],[99,15,124,13],[99,18,124,16],[99,22,124,20,"Chess"],[99,30,124,25],[99,31,124,25,"Chess"],[99,36,124,25],[99,37,124,26,"fen"],[99,40,124,29],[99,41,124,30],[100,4,125,2],[100,10,125,8,"moves"],[100,15,125,13],[100,18,125,16,"chess"],[100,23,125,21],[100,24,125,22,"moves"],[100,29,125,27],[100,30,125,28],[100,31,125,29],[101,4,126,2],[101,8,126,6,"moves"],[101,13,126,11],[101,14,126,12,"length"],[101,20,126,18],[101,25,126,23],[101,26,126,24],[101,28,126,26],[101,35,126,33],[101,39,126,37],[102,4,127,2],[102,11,127,9,"moves"],[102,16,127,14],[102,17,127,15,"Math"],[102,21,127,19],[102,22,127,20,"floor"],[102,27,127,25],[102,28,127,26,"Math"],[102,32,127,30],[102,33,127,31,"random"],[102,39,127,37],[102,40,127,38],[102,41,127,39],[102,44,127,42,"moves"],[102,49,127,47],[102,50,127,48,"length"],[102,56,127,54],[102,57,127,55],[102,58,127,56],[103,2,128,0],[104,2,130,7],[104,17,130,22,"getAIMove"],[104,26,130,31,"getAIMove"],[104,27,131,2,"fen"],[104,30,131,13],[104,32,132,2,"difficulty"],[104,42,132,40],[104,44,133,26],[105,4,134,2],[106,4,135,2],[106,10,135,8],[106,14,135,12,"Promise"],[106,21,135,19],[106,22,135,21,"resolve"],[106,29,135,28],[106,33,135,33,"setTimeout"],[106,43,135,43],[106,44,135,44,"resolve"],[106,51,135,51],[106,53,135,53],[106,56,135,56],[106,57,135,57],[106,58,135,58],[107,4,137,2],[107,12,137,10,"difficulty"],[107,22,137,20],[108,6,138,4],[108,11,138,9],[108,17,138,15],[109,8,139,6],[110,8,140,6],[110,12,140,10,"Math"],[110,16,140,14],[110,17,140,15,"random"],[110,23,140,21],[110,24,140,22],[110,25,140,23],[110,28,140,26],[110,31,140,29],[110,33,140,31],[111,10,141,8],[111,17,141,15,"getRandomMove"],[111,30,141,28],[111,31,141,29,"fen"],[111,34,141,32],[111,35,141,33],[112,8,142,6],[113,8,143,6],[113,15,143,13,"getBestMove"],[113,26,143,24],[113,27,143,25,"fen"],[113,30,143,28],[113,32,143,30],[113,33,143,31],[113,34,143,32],[114,6,145,4],[114,11,145,9],[114,19,145,17],[115,8,146,6],[116,8,147,6],[116,15,147,13,"getBestMove"],[116,26,147,24],[116,27,147,25,"fen"],[116,30,147,28],[116,32,147,30],[116,33,147,31],[116,34,147,32],[117,6,149,4],[117,11,149,9],[117,17,149,15],[118,8,150,6],[119,8,151,6],[119,15,151,13,"getBestMove"],[119,26,151,24],[119,27,151,25,"fen"],[119,30,151,28],[119,32,151,30],[119,33,151,31],[119,34,151,32],[120,6,153,4],[121,8,154,6],[121,15,154,13,"getRandomMove"],[121,28,154,26],[121,29,154,27,"fen"],[121,32,154,30],[121,33,154,31],[122,4,155,2],[123,2,156,0],[124,0,156,1],[124,3]],"functionMap":{"names":["<global>","evaluateBoard","minimax","getBestMove","getRandomMove","getAIMove","Promise$argument_0"],"mappings":"AAA;AC0C;CDiB;AEE;CFoC;AGE;CHqB;AIE;CJK;OKE;oBCK,qCD;CLqB"},"hasCjsExports":false},"type":"js/module"}]}