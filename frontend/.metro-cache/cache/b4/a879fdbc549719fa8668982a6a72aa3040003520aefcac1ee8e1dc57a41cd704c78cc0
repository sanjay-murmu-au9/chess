{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"BISHOP\", {\n    enumerable: true,\n    get: function () {\n      return BISHOP;\n    }\n  });\n  Object.defineProperty(exports, \"BLACK\", {\n    enumerable: true,\n    get: function () {\n      return BLACK;\n    }\n  });\n  Object.defineProperty(exports, \"Chess\", {\n    enumerable: true,\n    get: function () {\n      return Chess;\n    }\n  });\n  Object.defineProperty(exports, \"DEFAULT_POSITION\", {\n    enumerable: true,\n    get: function () {\n      return DEFAULT_POSITION;\n    }\n  });\n  Object.defineProperty(exports, \"KING\", {\n    enumerable: true,\n    get: function () {\n      return KING;\n    }\n  });\n  Object.defineProperty(exports, \"KNIGHT\", {\n    enumerable: true,\n    get: function () {\n      return KNIGHT;\n    }\n  });\n  Object.defineProperty(exports, \"Move\", {\n    enumerable: true,\n    get: function () {\n      return Move;\n    }\n  });\n  Object.defineProperty(exports, \"PAWN\", {\n    enumerable: true,\n    get: function () {\n      return PAWN;\n    }\n  });\n  Object.defineProperty(exports, \"QUEEN\", {\n    enumerable: true,\n    get: function () {\n      return QUEEN;\n    }\n  });\n  Object.defineProperty(exports, \"ROOK\", {\n    enumerable: true,\n    get: function () {\n      return ROOK;\n    }\n  });\n  Object.defineProperty(exports, \"SEVEN_TAG_ROSTER\", {\n    enumerable: true,\n    get: function () {\n      return SEVEN_TAG_ROSTER;\n    }\n  });\n  Object.defineProperty(exports, \"SQUARES\", {\n    enumerable: true,\n    get: function () {\n      return SQUARES;\n    }\n  });\n  Object.defineProperty(exports, \"WHITE\", {\n    enumerable: true,\n    get: function () {\n      return WHITE;\n    }\n  });\n  Object.defineProperty(exports, \"validateFen\", {\n    enumerable: true,\n    get: function () {\n      return validateFen;\n    }\n  });\n  Object.defineProperty(exports, \"xoroshiro128\", {\n    enumerable: true,\n    get: function () {\n      return xoroshiro128;\n    }\n  });\n  // @generated by Peggy 4.2.0.\n  //\n  // https://peggyjs.org/\n\n  function rootNode(comment) {\n    return comment !== null ? {\n      comment,\n      variations: []\n    } : {\n      variations: []\n    };\n  }\n  function node(move, suffix, nag, comment, variations) {\n    const node = {\n      move,\n      variations\n    };\n    if (suffix) {\n      node.suffix = suffix;\n    }\n    if (nag) {\n      node.nag = nag;\n    }\n    if (comment !== null) {\n      node.comment = comment;\n    }\n    return node;\n  }\n  function lineToTree(...nodes) {\n    const [root, ...rest] = nodes;\n    let parent = root;\n    for (const child of rest) {\n      if (child !== null) {\n        parent.variations = [child, ...child.variations];\n        child.variations = [];\n        parent = child;\n      }\n    }\n    return root;\n  }\n  function pgn(headers, game) {\n    if (game.marker && game.marker.comment) {\n      let node = game.root;\n      while (true) {\n        const next = node.variations[0];\n        if (!next) {\n          node.comment = game.marker.comment;\n          break;\n        }\n        node = next;\n      }\n    }\n    return {\n      headers,\n      root: game.root,\n      result: (game.marker && game.marker.result) ?? undefined\n    };\n  }\n  function peg$subclass(child, parent) {\n    function C() {\n      this.constructor = child;\n    }\n    C.prototype = parent.prototype;\n    child.prototype = new C();\n  }\n  function peg$SyntaxError(message, expected, found, location) {\n    var self = Error.call(this, message);\n    // istanbul ignore next Check is a necessary evil to support older environments\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(self, peg$SyntaxError.prototype);\n    }\n    self.expected = expected;\n    self.found = found;\n    self.location = location;\n    self.name = \"SyntaxError\";\n    return self;\n  }\n  peg$subclass(peg$SyntaxError, Error);\n  function peg$padEnd(str, targetLength, padString) {\n    padString = padString || \" \";\n    if (str.length > targetLength) {\n      return str;\n    }\n    targetLength -= str.length;\n    padString += padString.repeat(targetLength);\n    return str + padString.slice(0, targetLength);\n  }\n  peg$SyntaxError.prototype.format = function (sources) {\n    var str = \"Error: \" + this.message;\n    if (this.location) {\n      var src = null;\n      var k;\n      for (k = 0; k < sources.length; k++) {\n        if (sources[k].source === this.location.source) {\n          src = sources[k].text.split(/\\r\\n|\\n|\\r/g);\n          break;\n        }\n      }\n      var s = this.location.start;\n      var offset_s = this.location.source && typeof this.location.source.offset === \"function\" ? this.location.source.offset(s) : s;\n      var loc = this.location.source + \":\" + offset_s.line + \":\" + offset_s.column;\n      if (src) {\n        var e = this.location.end;\n        var filler = peg$padEnd(\"\", offset_s.line.toString().length, ' ');\n        var line = src[s.line - 1];\n        var last = s.line === e.line ? e.column : line.length + 1;\n        var hatLen = last - s.column || 1;\n        str += \"\\n --> \" + loc + \"\\n\" + filler + \" |\\n\" + offset_s.line + \" | \" + line + \"\\n\" + filler + \" | \" + peg$padEnd(\"\", s.column - 1, ' ') + peg$padEnd(\"\", hatLen, \"^\");\n      } else {\n        str += \"\\n at \" + loc;\n      }\n    }\n    return str;\n  };\n  peg$SyntaxError.buildMessage = function (expected, found) {\n    var DESCRIBE_EXPECTATION_FNS = {\n      literal: function (expectation) {\n        return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n      },\n      class: function (expectation) {\n        var escapedParts = expectation.parts.map(function (part) {\n          return Array.isArray(part) ? classEscape(part[0]) + \"-\" + classEscape(part[1]) : classEscape(part);\n        });\n        return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts.join(\"\") + \"]\";\n      },\n      any: function () {\n        return \"any character\";\n      },\n      end: function () {\n        return \"end of input\";\n      },\n      other: function (expectation) {\n        return expectation.description;\n      }\n    };\n    function hex(ch) {\n      return ch.charCodeAt(0).toString(16).toUpperCase();\n    }\n    function literalEscape(s) {\n      return s.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, \"\\\\\\\"\").replace(/\\0/g, \"\\\\0\").replace(/\\t/g, \"\\\\t\").replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\").replace(/[\\x00-\\x0F]/g, function (ch) {\n        return \"\\\\x0\" + hex(ch);\n      }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n        return \"\\\\x\" + hex(ch);\n      });\n    }\n    function classEscape(s) {\n      return s.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\]/g, \"\\\\]\").replace(/\\^/g, \"\\\\^\").replace(/-/g, \"\\\\-\").replace(/\\0/g, \"\\\\0\").replace(/\\t/g, \"\\\\t\").replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\").replace(/[\\x00-\\x0F]/g, function (ch) {\n        return \"\\\\x0\" + hex(ch);\n      }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n        return \"\\\\x\" + hex(ch);\n      });\n    }\n    function describeExpectation(expectation) {\n      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n    }\n    function describeExpected(expected) {\n      var descriptions = expected.map(describeExpectation);\n      var i, j;\n      descriptions.sort();\n      if (descriptions.length > 0) {\n        for (i = 1, j = 1; i < descriptions.length; i++) {\n          if (descriptions[i - 1] !== descriptions[i]) {\n            descriptions[j] = descriptions[i];\n            j++;\n          }\n        }\n        descriptions.length = j;\n      }\n      switch (descriptions.length) {\n        case 1:\n          return descriptions[0];\n        case 2:\n          return descriptions[0] + \" or \" + descriptions[1];\n        default:\n          return descriptions.slice(0, -1).join(\", \") + \", or \" + descriptions[descriptions.length - 1];\n      }\n    }\n    function describeFound(found) {\n      return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n    }\n    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n  };\n  function peg$parse(input, options) {\n    options = options !== undefined ? options : {};\n    var peg$FAILED = {};\n    var peg$source = options.grammarSource;\n    var peg$startRuleFunctions = {\n      pgn: peg$parsepgn\n    };\n    var peg$startRuleFunction = peg$parsepgn;\n    var peg$c0 = \"[\";\n    var peg$c1 = \"\\\"\";\n    var peg$c2 = \"]\";\n    var peg$c3 = \".\";\n    var peg$c4 = \"O-O-O\";\n    var peg$c5 = \"O-O\";\n    var peg$c6 = \"0-0-0\";\n    var peg$c7 = \"0-0\";\n    var peg$c8 = \"$\";\n    var peg$c9 = \"{\";\n    var peg$c10 = \"}\";\n    var peg$c11 = \";\";\n    var peg$c12 = \"(\";\n    var peg$c13 = \")\";\n    var peg$c14 = \"1-0\";\n    var peg$c15 = \"0-1\";\n    var peg$c16 = \"1/2-1/2\";\n    var peg$c17 = \"*\";\n    var peg$r0 = /^[a-zA-Z]/;\n    var peg$r1 = /^[^\"]/;\n    var peg$r2 = /^[0-9]/;\n    var peg$r3 = /^[.]/;\n    var peg$r4 = /^[a-zA-Z1-8\\-=]/;\n    var peg$r5 = /^[+#]/;\n    var peg$r6 = /^[!?]/;\n    var peg$r7 = /^[^}]/;\n    var peg$r8 = /^[^\\r\\n]/;\n    var peg$r9 = /^[ \\t\\r\\n]/;\n    var peg$e0 = peg$otherExpectation(\"tag pair\");\n    var peg$e1 = peg$literalExpectation(\"[\", false);\n    var peg$e2 = peg$literalExpectation(\"\\\"\", false);\n    var peg$e3 = peg$literalExpectation(\"]\", false);\n    var peg$e4 = peg$otherExpectation(\"tag name\");\n    var peg$e5 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false);\n    var peg$e6 = peg$otherExpectation(\"tag value\");\n    var peg$e7 = peg$classExpectation([\"\\\"\"], true, false);\n    var peg$e8 = peg$otherExpectation(\"move number\");\n    var peg$e9 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n    var peg$e10 = peg$literalExpectation(\".\", false);\n    var peg$e11 = peg$classExpectation([\".\"], false, false);\n    var peg$e12 = peg$otherExpectation(\"standard algebraic notation\");\n    var peg$e13 = peg$literalExpectation(\"O-O-O\", false);\n    var peg$e14 = peg$literalExpectation(\"O-O\", false);\n    var peg$e15 = peg$literalExpectation(\"0-0-0\", false);\n    var peg$e16 = peg$literalExpectation(\"0-0\", false);\n    var peg$e17 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"1\", \"8\"], \"-\", \"=\"], false, false);\n    var peg$e18 = peg$classExpectation([\"+\", \"#\"], false, false);\n    var peg$e19 = peg$otherExpectation(\"suffix annotation\");\n    var peg$e20 = peg$classExpectation([\"!\", \"?\"], false, false);\n    var peg$e21 = peg$otherExpectation(\"NAG\");\n    var peg$e22 = peg$literalExpectation(\"$\", false);\n    var peg$e23 = peg$otherExpectation(\"brace comment\");\n    var peg$e24 = peg$literalExpectation(\"{\", false);\n    var peg$e25 = peg$classExpectation([\"}\"], true, false);\n    var peg$e26 = peg$literalExpectation(\"}\", false);\n    var peg$e27 = peg$otherExpectation(\"rest of line comment\");\n    var peg$e28 = peg$literalExpectation(\";\", false);\n    var peg$e29 = peg$classExpectation([\"\\r\", \"\\n\"], true, false);\n    var peg$e30 = peg$otherExpectation(\"variation\");\n    var peg$e31 = peg$literalExpectation(\"(\", false);\n    var peg$e32 = peg$literalExpectation(\")\", false);\n    var peg$e33 = peg$otherExpectation(\"game termination marker\");\n    var peg$e34 = peg$literalExpectation(\"1-0\", false);\n    var peg$e35 = peg$literalExpectation(\"0-1\", false);\n    var peg$e36 = peg$literalExpectation(\"1/2-1/2\", false);\n    var peg$e37 = peg$literalExpectation(\"*\", false);\n    var peg$e38 = peg$otherExpectation(\"whitespace\");\n    var peg$e39 = peg$classExpectation([\" \", \"\\t\", \"\\r\", \"\\n\"], false, false);\n    var peg$f0 = function (headers, game) {\n      return pgn(headers, game);\n    };\n    var peg$f1 = function (tagPairs) {\n      return Object.fromEntries(tagPairs);\n    };\n    var peg$f2 = function (tagName, tagValue) {\n      return [tagName, tagValue];\n    };\n    var peg$f3 = function (root, marker) {\n      return {\n        root,\n        marker\n      };\n    };\n    var peg$f4 = function (comment, moves) {\n      return lineToTree(rootNode(comment), ...moves.flat());\n    };\n    var peg$f5 = function (san, suffix, nag, comment, variations) {\n      return node(san, suffix, nag, comment, variations);\n    };\n    var peg$f6 = function (nag) {\n      return nag;\n    };\n    var peg$f7 = function (comment) {\n      return comment.replace(/[\\r\\n]+/g, \" \");\n    };\n    var peg$f8 = function (comment) {\n      return comment.trim();\n    };\n    var peg$f9 = function (line) {\n      return line;\n    };\n    var peg$f10 = function (result, comment) {\n      return {\n        result,\n        comment\n      };\n    };\n    var peg$currPos = options.peg$currPos | 0;\n    var peg$posDetailsCache = [{\n      line: 1,\n      column: 1\n    }];\n    var peg$maxFailPos = peg$currPos;\n    var peg$maxFailExpected = options.peg$maxFailExpected || [];\n    var peg$silentFails = options.peg$silentFails | 0;\n    var peg$result;\n    if (options.startRule) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n    function peg$literalExpectation(text, ignoreCase) {\n      return {\n        type: \"literal\",\n        text: text,\n        ignoreCase: ignoreCase\n      };\n    }\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n      return {\n        type: \"class\",\n        parts: parts,\n        inverted: inverted,\n        ignoreCase: ignoreCase\n      };\n    }\n    function peg$endExpectation() {\n      return {\n        type: \"end\"\n      };\n    }\n    function peg$otherExpectation(description) {\n      return {\n        type: \"other\",\n        description: description\n      };\n    }\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos];\n      var p;\n      if (details) {\n        return details;\n      } else {\n        if (pos >= peg$posDetailsCache.length) {\n          p = peg$posDetailsCache.length - 1;\n        } else {\n          p = pos;\n          while (!peg$posDetailsCache[--p]) {}\n        }\n        details = peg$posDetailsCache[p];\n        details = {\n          line: details.line,\n          column: details.column\n        };\n        while (p < pos) {\n          if (input.charCodeAt(p) === 10) {\n            details.line++;\n            details.column = 1;\n          } else {\n            details.column++;\n          }\n          p++;\n        }\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n    function peg$computeLocation(startPos, endPos, offset) {\n      var startPosDetails = peg$computePosDetails(startPos);\n      var endPosDetails = peg$computePosDetails(endPos);\n      var res = {\n        source: peg$source,\n        start: {\n          offset: startPos,\n          line: startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line: endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n      return res;\n    }\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) {\n        return;\n      }\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n      peg$maxFailExpected.push(expected);\n    }\n    function peg$buildStructuredError(expected, found, location) {\n      return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);\n    }\n    function peg$parsepgn() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n      s1 = peg$parsetagPairSection();\n      s2 = peg$parsemoveTextSection();\n      s0 = peg$f0(s1, s2);\n      return s0;\n    }\n    function peg$parsetagPairSection() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsetagPair();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsetagPair();\n      }\n      s2 = peg$parse_();\n      s0 = peg$f1(s1);\n      return s0;\n    }\n    function peg$parsetagPair() {\n      var s0, s2, s4, s6, s7, s8, s10;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      peg$parse_();\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s2 = peg$c0;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e1);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$parse_();\n        s4 = peg$parsetagName();\n        if (s4 !== peg$FAILED) {\n          peg$parse_();\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s6 = peg$c1;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e2);\n            }\n          }\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsetagValue();\n            if (input.charCodeAt(peg$currPos) === 34) {\n              s8 = peg$c1;\n              peg$currPos++;\n            } else {\n              s8 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$e2);\n              }\n            }\n            if (s8 !== peg$FAILED) {\n              peg$parse_();\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s10 = peg$c2;\n                peg$currPos++;\n              } else {\n                s10 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$e3);\n                }\n              }\n              if (s10 !== peg$FAILED) {\n                s0 = peg$f2(s4, s7);\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e0);\n        }\n      }\n      return s0;\n    }\n    function peg$parsetagName() {\n      var s0, s1, s2;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = input.charAt(peg$currPos);\n      if (peg$r0.test(s2)) {\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e5);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = input.charAt(peg$currPos);\n          if (peg$r0.test(s2)) {\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e5);\n            }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e4);\n        }\n      }\n      return s0;\n    }\n    function peg$parsetagValue() {\n      var s0, s1, s2;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = input.charAt(peg$currPos);\n      if (peg$r1.test(s2)) {\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e7);\n        }\n      }\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = input.charAt(peg$currPos);\n        if (peg$r1.test(s2)) {\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e7);\n          }\n        }\n      }\n      s0 = input.substring(s0, peg$currPos);\n      peg$silentFails--;\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e6);\n      }\n      return s0;\n    }\n    function peg$parsemoveTextSection() {\n      var s0, s1, s3;\n      s0 = peg$currPos;\n      s1 = peg$parseline();\n      peg$parse_();\n      s3 = peg$parsegameTerminationMarker();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$parse_();\n      s0 = peg$f3(s1, s3);\n      return s0;\n    }\n    function peg$parseline() {\n      var s0, s1, s2, s3;\n      s0 = peg$currPos;\n      s1 = peg$parsecomment();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      s2 = [];\n      s3 = peg$parsemove();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsemove();\n      }\n      s0 = peg$f4(s1, s2);\n      return s0;\n    }\n    function peg$parsemove() {\n      var s0, s4, s5, s6, s7, s8, s9, s10;\n      s0 = peg$currPos;\n      peg$parse_();\n      peg$parsemoveNumber();\n      peg$parse_();\n      s4 = peg$parsesan();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsesuffixAnnotation();\n        if (s5 === peg$FAILED) {\n          s5 = null;\n        }\n        s6 = [];\n        s7 = peg$parsenag();\n        while (s7 !== peg$FAILED) {\n          s6.push(s7);\n          s7 = peg$parsenag();\n        }\n        s7 = peg$parse_();\n        s8 = peg$parsecomment();\n        if (s8 === peg$FAILED) {\n          s8 = null;\n        }\n        s9 = [];\n        s10 = peg$parsevariation();\n        while (s10 !== peg$FAILED) {\n          s9.push(s10);\n          s10 = peg$parsevariation();\n        }\n        s0 = peg$f5(s4, s5, s6, s8, s9);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      return s0;\n    }\n    function peg$parsemoveNumber() {\n      var s0, s1, s2, s3, s4, s5;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = input.charAt(peg$currPos);\n      if (peg$r2.test(s2)) {\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e9);\n        }\n      }\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = input.charAt(peg$currPos);\n        if (peg$r2.test(s2)) {\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e9);\n          }\n        }\n      }\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s2 = peg$c3;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e10);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        s4 = [];\n        s5 = input.charAt(peg$currPos);\n        if (peg$r3.test(s5)) {\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e11);\n          }\n        }\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = input.charAt(peg$currPos);\n          if (peg$r3.test(s5)) {\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e11);\n            }\n          }\n        }\n        s1 = [s1, s2, s3, s4];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e8);\n        }\n      }\n      return s0;\n    }\n    function peg$parsesan() {\n      var s0, s1, s2, s3, s4, s5;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c4) {\n        s2 = peg$c4;\n        peg$currPos += 5;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e13);\n        }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.substr(peg$currPos, 3) === peg$c5) {\n          s2 = peg$c5;\n          peg$currPos += 3;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e14);\n          }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 5) === peg$c6) {\n            s2 = peg$c6;\n            peg$currPos += 5;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e15);\n            }\n          }\n          if (s2 === peg$FAILED) {\n            if (input.substr(peg$currPos, 3) === peg$c7) {\n              s2 = peg$c7;\n              peg$currPos += 3;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$e16);\n              }\n            }\n            if (s2 === peg$FAILED) {\n              s2 = peg$currPos;\n              s3 = input.charAt(peg$currPos);\n              if (peg$r0.test(s3)) {\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$e5);\n                }\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = [];\n                s5 = input.charAt(peg$currPos);\n                if (peg$r4.test(s5)) {\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$e17);\n                  }\n                }\n                if (s5 !== peg$FAILED) {\n                  while (s5 !== peg$FAILED) {\n                    s4.push(s5);\n                    s5 = input.charAt(peg$currPos);\n                    if (peg$r4.test(s5)) {\n                      peg$currPos++;\n                    } else {\n                      s5 = peg$FAILED;\n                      if (peg$silentFails === 0) {\n                        peg$fail(peg$e17);\n                      }\n                    }\n                  }\n                } else {\n                  s4 = peg$FAILED;\n                }\n                if (s4 !== peg$FAILED) {\n                  s3 = [s3, s4];\n                  s2 = s3;\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            }\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = input.charAt(peg$currPos);\n        if (peg$r5.test(s3)) {\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e18);\n          }\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e12);\n        }\n      }\n      return s0;\n    }\n    function peg$parsesuffixAnnotation() {\n      var s0, s1, s2;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = input.charAt(peg$currPos);\n      if (peg$r6.test(s2)) {\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e20);\n        }\n      }\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (s1.length >= 2) {\n          s2 = peg$FAILED;\n        } else {\n          s2 = input.charAt(peg$currPos);\n          if (peg$r6.test(s2)) {\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e20);\n            }\n          }\n        }\n      }\n      if (s1.length < 1) {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      } else {\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e19);\n        }\n      }\n      return s0;\n    }\n    function peg$parsenag() {\n      var s0, s2, s3, s4, s5;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      peg$parse_();\n      if (input.charCodeAt(peg$currPos) === 36) {\n        s2 = peg$c8;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e22);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = [];\n        s5 = input.charAt(peg$currPos);\n        if (peg$r2.test(s5)) {\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e9);\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = input.charAt(peg$currPos);\n            if (peg$r2.test(s5)) {\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$e9);\n              }\n            }\n          }\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s3 = input.substring(s3, peg$currPos);\n        } else {\n          s3 = s4;\n        }\n        if (s3 !== peg$FAILED) {\n          s0 = peg$f6(s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e21);\n        }\n      }\n      return s0;\n    }\n    function peg$parsecomment() {\n      var s0;\n      s0 = peg$parsebraceComment();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parserestOfLineComment();\n      }\n      return s0;\n    }\n    function peg$parsebraceComment() {\n      var s0, s1, s2, s3, s4;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c9;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e24);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = [];\n        s4 = input.charAt(peg$currPos);\n        if (peg$r7.test(s4)) {\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e25);\n          }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = input.charAt(peg$currPos);\n          if (peg$r7.test(s4)) {\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e25);\n            }\n          }\n        }\n        s2 = input.substring(s2, peg$currPos);\n        if (input.charCodeAt(peg$currPos) === 125) {\n          s3 = peg$c10;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e26);\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s0 = peg$f7(s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e23);\n        }\n      }\n      return s0;\n    }\n    function peg$parserestOfLineComment() {\n      var s0, s1, s2, s3, s4;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 59) {\n        s1 = peg$c11;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e28);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = [];\n        s4 = input.charAt(peg$currPos);\n        if (peg$r8.test(s4)) {\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e29);\n          }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = input.charAt(peg$currPos);\n          if (peg$r8.test(s4)) {\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e29);\n            }\n          }\n        }\n        s2 = input.substring(s2, peg$currPos);\n        s0 = peg$f8(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e27);\n        }\n      }\n      return s0;\n    }\n    function peg$parsevariation() {\n      var s0, s2, s3, s5;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      peg$parse_();\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c12;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e31);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseline();\n        if (s3 !== peg$FAILED) {\n          peg$parse_();\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s5 = peg$c13;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e32);\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s0 = peg$f9(s3);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e30);\n        }\n      }\n      return s0;\n    }\n    function peg$parsegameTerminationMarker() {\n      var s0, s1, s3;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c14) {\n        s1 = peg$c14;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e34);\n        }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 3) === peg$c15) {\n          s1 = peg$c15;\n          peg$currPos += 3;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e35);\n          }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 7) === peg$c16) {\n            s1 = peg$c16;\n            peg$currPos += 7;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e36);\n            }\n          }\n          if (s1 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 42) {\n              s1 = peg$c17;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$e37);\n              }\n            }\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$parse_();\n        s3 = peg$parsecomment();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        s0 = peg$f10(s1, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e33);\n        }\n      }\n      return s0;\n    }\n    function peg$parse_() {\n      var s0, s1;\n      peg$silentFails++;\n      s0 = [];\n      s1 = input.charAt(peg$currPos);\n      if (peg$r9.test(s1)) {\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e39);\n        }\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = input.charAt(peg$currPos);\n        if (peg$r9.test(s1)) {\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e39);\n          }\n        }\n      }\n      peg$silentFails--;\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e38);\n      }\n      return s0;\n    }\n    peg$result = peg$startRuleFunction();\n    if (options.peg$library) {\n      return /** @type {any} */{\n        peg$result,\n        peg$currPos,\n        peg$FAILED,\n        peg$maxFailExpected,\n        peg$maxFailPos\n      };\n    }\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail(peg$endExpectation());\n      }\n      throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n    }\n  }\n\n  /**\n   * @license\n   * Copyright (c) 2025, Jeff Hlywa (jhlywa@gmail.com)\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are met:\n   *\n   * 1. Redistributions of source code must retain the above copyright notice,\n   *    this list of conditions and the following disclaimer.\n   * 2. Redistributions in binary form must reproduce the above copyright notice,\n   *    this list of conditions and the following disclaimer in the documentation\n   *    and/or other materials provided with the distribution.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n   * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n   * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n   * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n   * POSSIBILITY OF SUCH DAMAGE.\n   */\n  const MASK64 = 0xffffffffffffffffn;\n  function rotl(x, k) {\n    return (x << k | x >> 64n - k) & 0xffffffffffffffffn;\n  }\n  function wrappingMul(x, y) {\n    return x * y & MASK64;\n  }\n  // xoroshiro128**\n  function xoroshiro128(state) {\n    return function () {\n      let s0 = BigInt(state & MASK64);\n      let s1 = BigInt(state >> 64n & MASK64);\n      const result = wrappingMul(rotl(wrappingMul(s0, 5n), 7n), 9n);\n      s1 ^= s0;\n      s0 = (rotl(s0, 24n) ^ s1 ^ s1 << 16n) & MASK64;\n      s1 = rotl(s1, 37n);\n      state = s1 << 64n | s0;\n      return result;\n    };\n  }\n  const rand = xoroshiro128(0xa187eb39cdcaed8f31c4b365b102e01en);\n  const PIECE_KEYS = Array.from({\n    length: 2\n  }, () => Array.from({\n    length: 6\n  }, () => Array.from({\n    length: 128\n  }, () => rand())));\n  const EP_KEYS = Array.from({\n    length: 8\n  }, () => rand());\n  const CASTLING_KEYS = Array.from({\n    length: 16\n  }, () => rand());\n  const SIDE_KEY = rand();\n  const WHITE = 'w';\n  const BLACK = 'b';\n  const PAWN = 'p';\n  const KNIGHT = 'n';\n  const BISHOP = 'b';\n  const ROOK = 'r';\n  const QUEEN = 'q';\n  const KING = 'k';\n  const DEFAULT_POSITION = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\n  class Move {\n    /**\n     * @deprecated This field is deprecated and will be removed in version 2.0.0.\n     * Please use move descriptor functions instead: `isCapture`, `isPromotion`,\n     * `isEnPassant`, `isKingsideCastle`, `isQueensideCastle`, `isCastle`, and\n     * `isBigPawn`\n     */\n\n    constructor(chess, internal) {\n      const {\n        color,\n        piece,\n        from,\n        to,\n        flags,\n        captured,\n        promotion\n      } = internal;\n      const fromAlgebraic = algebraic(from);\n      const toAlgebraic = algebraic(to);\n      this.color = color;\n      this.piece = piece;\n      this.from = fromAlgebraic;\n      this.to = toAlgebraic;\n      /*\n       * HACK: The chess['_method']() calls below invoke private methods in the\n       * Chess class to generate SAN and FEN. It's a bit of a hack, but makes the\n       * code cleaner elsewhere.\n       */\n      this.san = chess['_moveToSan'](internal, chess['_moves']({\n        legal: true\n      }));\n      this.lan = fromAlgebraic + toAlgebraic;\n      this.before = chess.fen();\n      // Generate the FEN for the 'after' key\n      chess['_makeMove'](internal);\n      this.after = chess.fen();\n      chess['_undoMove']();\n      // Build the text representation of the move flags\n      this.flags = '';\n      for (const flag in BITS) {\n        if (BITS[flag] & flags) {\n          this.flags += FLAGS[flag];\n        }\n      }\n      if (captured) {\n        this.captured = captured;\n      }\n      if (promotion) {\n        this.promotion = promotion;\n        this.lan += promotion;\n      }\n    }\n    isCapture() {\n      return this.flags.indexOf(FLAGS['CAPTURE']) > -1;\n    }\n    isPromotion() {\n      return this.flags.indexOf(FLAGS['PROMOTION']) > -1;\n    }\n    isEnPassant() {\n      return this.flags.indexOf(FLAGS['EP_CAPTURE']) > -1;\n    }\n    isKingsideCastle() {\n      return this.flags.indexOf(FLAGS['KSIDE_CASTLE']) > -1;\n    }\n    isQueensideCastle() {\n      return this.flags.indexOf(FLAGS['QSIDE_CASTLE']) > -1;\n    }\n    isBigPawn() {\n      return this.flags.indexOf(FLAGS['BIG_PAWN']) > -1;\n    }\n  }\n  const EMPTY = -1;\n  const FLAGS = {\n    NORMAL: 'n',\n    CAPTURE: 'c',\n    BIG_PAWN: 'b',\n    EP_CAPTURE: 'e',\n    PROMOTION: 'p',\n    KSIDE_CASTLE: 'k',\n    QSIDE_CASTLE: 'q',\n    NULL_MOVE: '-'\n  };\n  // prettier-ignore\n  const SQUARES = ['a8', 'b8', 'c8', 'd8', 'e8', 'f8', 'g8', 'h8', 'a7', 'b7', 'c7', 'd7', 'e7', 'f7', 'g7', 'h7', 'a6', 'b6', 'c6', 'd6', 'e6', 'f6', 'g6', 'h6', 'a5', 'b5', 'c5', 'd5', 'e5', 'f5', 'g5', 'h5', 'a4', 'b4', 'c4', 'd4', 'e4', 'f4', 'g4', 'h4', 'a3', 'b3', 'c3', 'd3', 'e3', 'f3', 'g3', 'h3', 'a2', 'b2', 'c2', 'd2', 'e2', 'f2', 'g2', 'h2', 'a1', 'b1', 'c1', 'd1', 'e1', 'f1', 'g1', 'h1'];\n  const BITS = {\n    NORMAL: 1,\n    CAPTURE: 2,\n    BIG_PAWN: 4,\n    EP_CAPTURE: 8,\n    PROMOTION: 16,\n    KSIDE_CASTLE: 32,\n    QSIDE_CASTLE: 64,\n    NULL_MOVE: 128\n  };\n  /* eslint-disable @typescript-eslint/naming-convention */\n  // these are required, according to spec\n  const SEVEN_TAG_ROSTER = {\n    Event: '?',\n    Site: '?',\n    Date: '????.??.??',\n    Round: '?',\n    White: '?',\n    Black: '?',\n    Result: '*'\n  };\n  /**\n   * These nulls are placeholders to fix the order of tags (as they appear in PGN spec); null values will be\n   * eliminated in getHeaders()\n   */\n  const SUPLEMENTAL_TAGS = {\n    WhiteTitle: null,\n    BlackTitle: null,\n    WhiteElo: null,\n    BlackElo: null,\n    WhiteUSCF: null,\n    BlackUSCF: null,\n    WhiteNA: null,\n    BlackNA: null,\n    WhiteType: null,\n    BlackType: null,\n    EventDate: null,\n    EventSponsor: null,\n    Section: null,\n    Stage: null,\n    Board: null,\n    Opening: null,\n    Variation: null,\n    SubVariation: null,\n    ECO: null,\n    NIC: null,\n    Time: null,\n    UTCTime: null,\n    UTCDate: null,\n    TimeControl: null,\n    SetUp: null,\n    FEN: null,\n    Termination: null,\n    Annotator: null,\n    Mode: null,\n    PlyCount: null\n  };\n  const HEADER_TEMPLATE = {\n    ...SEVEN_TAG_ROSTER,\n    ...SUPLEMENTAL_TAGS\n  };\n  /* eslint-enable @typescript-eslint/naming-convention */\n  /*\n   * NOTES ABOUT 0x88 MOVE GENERATION ALGORITHM\n   * ----------------------------------------------------------------------------\n   * From https://github.com/jhlywa/chess.js/issues/230\n   *\n   * A lot of people are confused when they first see the internal representation\n   * of chess.js. It uses the 0x88 Move Generation Algorithm which internally\n   * stores the board as an 8x16 array. This is purely for efficiency but has a\n   * couple of interesting benefits:\n   *\n   * 1. 0x88 offers a very inexpensive \"off the board\" check. Bitwise AND (&) any\n   *    square with 0x88, if the result is non-zero then the square is off the\n   *    board. For example, assuming a knight square A8 (0 in 0x88 notation),\n   *    there are 8 possible directions in which the knight can move. These\n   *    directions are relative to the 8x16 board and are stored in the\n   *    PIECE_OFFSETS map. One possible move is A8 - 18 (up one square, and two\n   *    squares to the left - which is off the board). 0 - 18 = -18 & 0x88 = 0x88\n   *    (because of two-complement representation of -18). The non-zero result\n   *    means the square is off the board and the move is illegal. Take the\n   *    opposite move (from A8 to C7), 0 + 18 = 18 & 0x88 = 0. A result of zero\n   *    means the square is on the board.\n   *\n   * 2. The relative distance (or difference) between two squares on a 8x16 board\n   *    is unique and can be used to inexpensively determine if a piece on a\n   *    square can attack any other arbitrary square. For example, let's see if a\n   *    pawn on E7 can attack E2. The difference between E7 (20) - E2 (100) is\n   *    -80. We add 119 to make the ATTACKS array index non-negative (because the\n   *    worst case difference is A8 - H1 = -119). The ATTACKS array contains a\n   *    bitmask of pieces that can attack from that distance and direction.\n   *    ATTACKS[-80 + 119=39] gives us 24 or 0b11000 in binary. Look at the\n   *    PIECE_MASKS map to determine the mask for a given piece type. In our pawn\n   *    example, we would check to see if 24 & 0x1 is non-zero, which it is\n   *    not. So, naturally, a pawn on E7 can't attack a piece on E2. However, a\n   *    rook can since 24 & 0x8 is non-zero. The only thing left to check is that\n   *    there are no blocking pieces between E7 and E2. That's where the RAYS\n   *    array comes in. It provides an offset (in this case 16) to add to E7 (20)\n   *    to check for blocking pieces. E7 (20) + 16 = E6 (36) + 16 = E5 (52) etc.\n   */\n  // prettier-ignore\n  // eslint-disable-next-line\n  const Ox88 = {\n    a8: 0,\n    b8: 1,\n    c8: 2,\n    d8: 3,\n    e8: 4,\n    f8: 5,\n    g8: 6,\n    h8: 7,\n    a7: 16,\n    b7: 17,\n    c7: 18,\n    d7: 19,\n    e7: 20,\n    f7: 21,\n    g7: 22,\n    h7: 23,\n    a6: 32,\n    b6: 33,\n    c6: 34,\n    d6: 35,\n    e6: 36,\n    f6: 37,\n    g6: 38,\n    h6: 39,\n    a5: 48,\n    b5: 49,\n    c5: 50,\n    d5: 51,\n    e5: 52,\n    f5: 53,\n    g5: 54,\n    h5: 55,\n    a4: 64,\n    b4: 65,\n    c4: 66,\n    d4: 67,\n    e4: 68,\n    f4: 69,\n    g4: 70,\n    h4: 71,\n    a3: 80,\n    b3: 81,\n    c3: 82,\n    d3: 83,\n    e3: 84,\n    f3: 85,\n    g3: 86,\n    h3: 87,\n    a2: 96,\n    b2: 97,\n    c2: 98,\n    d2: 99,\n    e2: 100,\n    f2: 101,\n    g2: 102,\n    h2: 103,\n    a1: 112,\n    b1: 113,\n    c1: 114,\n    d1: 115,\n    e1: 116,\n    f1: 117,\n    g1: 118,\n    h1: 119\n  };\n  const PAWN_OFFSETS = {\n    b: [16, 32, 17, 15],\n    w: [-16, -32, -17, -15]\n  };\n  const PIECE_OFFSETS = {\n    n: [-18, -33, -31, -14, 18, 33, 31, 14],\n    b: [-17, -15, 17, 15],\n    r: [-16, 1, 16, -1],\n    q: [-17, -16, -15, 1, 17, 16, 15, -1],\n    k: [-17, -16, -15, 1, 17, 16, 15, -1]\n  };\n  // prettier-ignore\n  const ATTACKS = [20, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 20, 0, 0, 20, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 20, 0, 0, 0, 0, 24, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 24, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 24, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 2, 24, 2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 53, 56, 53, 2, 0, 0, 0, 0, 0, 0, 24, 24, 24, 24, 24, 24, 56, 0, 56, 24, 24, 24, 24, 24, 24, 0, 0, 0, 0, 0, 0, 2, 53, 56, 53, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 2, 24, 2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 24, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 24, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 24, 0, 0, 0, 0, 20, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 20, 0, 0, 20, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 20];\n  // prettier-ignore\n  const RAYS = [17, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 15, 0, 0, 17, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 17, 0, 0, 0, 0, 16, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 16, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 16, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 16, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 16, 15, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, -15, -16, -17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -15, 0, -16, 0, -17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -15, 0, 0, -16, 0, 0, -17, 0, 0, 0, 0, 0, 0, 0, 0, -15, 0, 0, 0, -16, 0, 0, 0, -17, 0, 0, 0, 0, 0, 0, -15, 0, 0, 0, 0, -16, 0, 0, 0, 0, -17, 0, 0, 0, 0, -15, 0, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, -17, 0, 0, -15, 0, 0, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, 0, -17];\n  const PIECE_MASKS = {\n    p: 0x1,\n    n: 0x2,\n    b: 0x4,\n    r: 0x8,\n    q: 0x10,\n    k: 0x20\n  };\n  const SYMBOLS = 'pnbrqkPNBRQK';\n  const PROMOTIONS = [KNIGHT, BISHOP, ROOK, QUEEN];\n  const RANK_1 = 7;\n  const RANK_2 = 6;\n  /*\n   * const RANK_3 = 5\n   * const RANK_4 = 4\n   * const RANK_5 = 3\n   * const RANK_6 = 2\n   */\n  const RANK_7 = 1;\n  const RANK_8 = 0;\n  const SIDES = {\n    [KING]: BITS.KSIDE_CASTLE,\n    [QUEEN]: BITS.QSIDE_CASTLE\n  };\n  const ROOKS = {\n    w: [{\n      square: Ox88.a1,\n      flag: BITS.QSIDE_CASTLE\n    }, {\n      square: Ox88.h1,\n      flag: BITS.KSIDE_CASTLE\n    }],\n    b: [{\n      square: Ox88.a8,\n      flag: BITS.QSIDE_CASTLE\n    }, {\n      square: Ox88.h8,\n      flag: BITS.KSIDE_CASTLE\n    }]\n  };\n  const SECOND_RANK = {\n    b: RANK_7,\n    w: RANK_2\n  };\n  const SAN_NULLMOVE = '--';\n  // Extracts the zero-based rank of an 0x88 square.\n  function rank(square) {\n    return square >> 4;\n  }\n  // Extracts the zero-based file of an 0x88 square.\n  function file(square) {\n    return square & 0xf;\n  }\n  function isDigit(c) {\n    return '0123456789'.indexOf(c) !== -1;\n  }\n  // Converts a 0x88 square to algebraic notation.\n  function algebraic(square) {\n    const f = file(square);\n    const r = rank(square);\n    return 'abcdefgh'.substring(f, f + 1) + '87654321'.substring(r, r + 1);\n  }\n  function swapColor(color) {\n    return color === WHITE ? BLACK : WHITE;\n  }\n  function validateFen(fen) {\n    // 1st criterion: 6 space-seperated fields?\n    const tokens = fen.split(/\\s+/);\n    if (tokens.length !== 6) {\n      return {\n        ok: false,\n        error: 'Invalid FEN: must contain six space-delimited fields'\n      };\n    }\n    // 2nd criterion: move number field is a integer value > 0?\n    const moveNumber = parseInt(tokens[5], 10);\n    if (isNaN(moveNumber) || moveNumber <= 0) {\n      return {\n        ok: false,\n        error: 'Invalid FEN: move number must be a positive integer'\n      };\n    }\n    // 3rd criterion: half move counter is an integer >= 0?\n    const halfMoves = parseInt(tokens[4], 10);\n    if (isNaN(halfMoves) || halfMoves < 0) {\n      return {\n        ok: false,\n        error: 'Invalid FEN: half move counter number must be a non-negative integer'\n      };\n    }\n    // 4th criterion: 4th field is a valid e.p.-string?\n    if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) {\n      return {\n        ok: false,\n        error: 'Invalid FEN: en-passant square is invalid'\n      };\n    }\n    // 5th criterion: 3th field is a valid castle-string?\n    if (/[^kKqQ-]/.test(tokens[2])) {\n      return {\n        ok: false,\n        error: 'Invalid FEN: castling availability is invalid'\n      };\n    }\n    // 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)?\n    if (!/^(w|b)$/.test(tokens[1])) {\n      return {\n        ok: false,\n        error: 'Invalid FEN: side-to-move is invalid'\n      };\n    }\n    // 7th criterion: 1st field contains 8 rows?\n    const rows = tokens[0].split('/');\n    if (rows.length !== 8) {\n      return {\n        ok: false,\n        error: \"Invalid FEN: piece data does not contain 8 '/'-delimited rows\"\n      };\n    }\n    // 8th criterion: every row is valid?\n    for (let i = 0; i < rows.length; i++) {\n      // check for right sum of fields AND not two numbers in succession\n      let sumFields = 0;\n      let previousWasNumber = false;\n      for (let k = 0; k < rows[i].length; k++) {\n        if (isDigit(rows[i][k])) {\n          if (previousWasNumber) {\n            return {\n              ok: false,\n              error: 'Invalid FEN: piece data is invalid (consecutive number)'\n            };\n          }\n          sumFields += parseInt(rows[i][k], 10);\n          previousWasNumber = true;\n        } else {\n          if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) {\n            return {\n              ok: false,\n              error: 'Invalid FEN: piece data is invalid (invalid piece)'\n            };\n          }\n          sumFields += 1;\n          previousWasNumber = false;\n        }\n      }\n      if (sumFields !== 8) {\n        return {\n          ok: false,\n          error: 'Invalid FEN: piece data is invalid (too many squares in rank)'\n        };\n      }\n    }\n    // 9th criterion: is en-passant square legal?\n    if (tokens[3][1] == '3' && tokens[1] == 'w' || tokens[3][1] == '6' && tokens[1] == 'b') {\n      return {\n        ok: false,\n        error: 'Invalid FEN: illegal en-passant square'\n      };\n    }\n    // 10th criterion: does chess position contain exact two kings?\n    const kings = [{\n      color: 'white',\n      regex: /K/g\n    }, {\n      color: 'black',\n      regex: /k/g\n    }];\n    for (const {\n      color,\n      regex\n    } of kings) {\n      if (!regex.test(tokens[0])) {\n        return {\n          ok: false,\n          error: `Invalid FEN: missing ${color} king`\n        };\n      }\n      if ((tokens[0].match(regex) || []).length > 1) {\n        return {\n          ok: false,\n          error: `Invalid FEN: too many ${color} kings`\n        };\n      }\n    }\n    // 11th criterion: are any pawns on the first or eighth rows?\n    if (Array.from(rows[0] + rows[7]).some(char => char.toUpperCase() === 'P')) {\n      return {\n        ok: false,\n        error: 'Invalid FEN: some pawns are on the edge rows'\n      };\n    }\n    return {\n      ok: true\n    };\n  }\n  // this function is used to uniquely identify ambiguous moves\n  function getDisambiguator(move, moves) {\n    const from = move.from;\n    const to = move.to;\n    const piece = move.piece;\n    let ambiguities = 0;\n    let sameRank = 0;\n    let sameFile = 0;\n    for (let i = 0, len = moves.length; i < len; i++) {\n      const ambigFrom = moves[i].from;\n      const ambigTo = moves[i].to;\n      const ambigPiece = moves[i].piece;\n      /*\n       * if a move of the same piece type ends on the same to square, we'll need\n       * to add a disambiguator to the algebraic notation\n       */\n      if (piece === ambigPiece && from !== ambigFrom && to === ambigTo) {\n        ambiguities++;\n        if (rank(from) === rank(ambigFrom)) {\n          sameRank++;\n        }\n        if (file(from) === file(ambigFrom)) {\n          sameFile++;\n        }\n      }\n    }\n    if (ambiguities > 0) {\n      if (sameRank > 0 && sameFile > 0) {\n        /*\n         * if there exists a similar moving piece on the same rank and file as\n         * the move in question, use the square as the disambiguator\n         */\n        return algebraic(from);\n      } else if (sameFile > 0) {\n        /*\n         * if the moving piece rests on the same file, use the rank symbol as the\n         * disambiguator\n         */\n        return algebraic(from).charAt(1);\n      } else {\n        // else use the file symbol\n        return algebraic(from).charAt(0);\n      }\n    }\n    return '';\n  }\n  function addMove(moves, color, from, to, piece, captured = undefined, flags = BITS.NORMAL) {\n    const r = rank(to);\n    if (piece === PAWN && (r === RANK_1 || r === RANK_8)) {\n      for (let i = 0; i < PROMOTIONS.length; i++) {\n        const promotion = PROMOTIONS[i];\n        moves.push({\n          color,\n          from,\n          to,\n          piece,\n          captured,\n          promotion,\n          flags: flags | BITS.PROMOTION\n        });\n      }\n    } else {\n      moves.push({\n        color,\n        from,\n        to,\n        piece,\n        captured,\n        flags\n      });\n    }\n  }\n  function inferPieceType(san) {\n    let pieceType = san.charAt(0);\n    if (pieceType >= 'a' && pieceType <= 'h') {\n      const matches = san.match(/[a-h]\\d.*[a-h]\\d/);\n      if (matches) {\n        return undefined;\n      }\n      return PAWN;\n    }\n    pieceType = pieceType.toLowerCase();\n    if (pieceType === 'o') {\n      return KING;\n    }\n    return pieceType;\n  }\n  // parses all of the decorators out of a SAN string\n  function strippedSan(move) {\n    return move.replace(/=/, '').replace(/[+#]?[?!]*$/, '');\n  }\n  class Chess {\n    _board = new Array(128);\n    _turn = WHITE;\n    _header = {};\n    _kings = {\n      w: EMPTY,\n      b: EMPTY\n    };\n    _epSquare = -1;\n    _halfMoves = 0;\n    _moveNumber = 0;\n    _history = [];\n    _comments = {};\n    _castling = {\n      w: 0,\n      b: 0\n    };\n    _hash = 0n;\n    // tracks number of times a position has been seen for repetition checking\n    _positionCount = new Map();\n    constructor(fen = DEFAULT_POSITION, {\n      skipValidation = false\n    } = {}) {\n      this.load(fen, {\n        skipValidation\n      });\n    }\n    clear({\n      preserveHeaders = false\n    } = {}) {\n      this._board = new Array(128);\n      this._kings = {\n        w: EMPTY,\n        b: EMPTY\n      };\n      this._turn = WHITE;\n      this._castling = {\n        w: 0,\n        b: 0\n      };\n      this._epSquare = EMPTY;\n      this._halfMoves = 0;\n      this._moveNumber = 1;\n      this._history = [];\n      this._comments = {};\n      this._header = preserveHeaders ? this._header : {\n        ...HEADER_TEMPLATE\n      };\n      this._hash = this._computeHash();\n      this._positionCount = new Map();\n      /*\n       * Delete the SetUp and FEN headers (if preserved), the board is empty and\n       * these headers don't make sense in this state. They'll get added later\n       * via .load() or .put()\n       */\n      this._header['SetUp'] = null;\n      this._header['FEN'] = null;\n    }\n    load(fen, {\n      skipValidation = false,\n      preserveHeaders = false\n    } = {}) {\n      let tokens = fen.split(/\\s+/);\n      // append commonly omitted fen tokens\n      if (tokens.length >= 2 && tokens.length < 6) {\n        const adjustments = ['-', '-', '0', '1'];\n        fen = tokens.concat(adjustments.slice(-(6 - tokens.length))).join(' ');\n      }\n      tokens = fen.split(/\\s+/);\n      if (!skipValidation) {\n        const {\n          ok,\n          error\n        } = validateFen(fen);\n        if (!ok) {\n          throw new Error(error);\n        }\n      }\n      const position = tokens[0];\n      let square = 0;\n      this.clear({\n        preserveHeaders\n      });\n      for (let i = 0; i < position.length; i++) {\n        const piece = position.charAt(i);\n        if (piece === '/') {\n          square += 8;\n        } else if (isDigit(piece)) {\n          square += parseInt(piece, 10);\n        } else {\n          const color = piece < 'a' ? WHITE : BLACK;\n          this._put({\n            type: piece.toLowerCase(),\n            color\n          }, algebraic(square));\n          square++;\n        }\n      }\n      this._turn = tokens[1];\n      if (tokens[2].indexOf('K') > -1) {\n        this._castling.w |= BITS.KSIDE_CASTLE;\n      }\n      if (tokens[2].indexOf('Q') > -1) {\n        this._castling.w |= BITS.QSIDE_CASTLE;\n      }\n      if (tokens[2].indexOf('k') > -1) {\n        this._castling.b |= BITS.KSIDE_CASTLE;\n      }\n      if (tokens[2].indexOf('q') > -1) {\n        this._castling.b |= BITS.QSIDE_CASTLE;\n      }\n      this._epSquare = tokens[3] === '-' ? EMPTY : Ox88[tokens[3]];\n      this._halfMoves = parseInt(tokens[4], 10);\n      this._moveNumber = parseInt(tokens[5], 10);\n      this._hash = this._computeHash();\n      this._updateSetup(fen);\n      this._incPositionCount();\n    }\n    fen({\n      forceEnpassantSquare = false\n    } = {}) {\n      let empty = 0;\n      let fen = '';\n      for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n        if (this._board[i]) {\n          if (empty > 0) {\n            fen += empty;\n            empty = 0;\n          }\n          const {\n            color,\n            type: piece\n          } = this._board[i];\n          fen += color === WHITE ? piece.toUpperCase() : piece.toLowerCase();\n        } else {\n          empty++;\n        }\n        if (i + 1 & 0x88) {\n          if (empty > 0) {\n            fen += empty;\n          }\n          if (i !== Ox88.h1) {\n            fen += '/';\n          }\n          empty = 0;\n          i += 8;\n        }\n      }\n      let castling = '';\n      if (this._castling[WHITE] & BITS.KSIDE_CASTLE) {\n        castling += 'K';\n      }\n      if (this._castling[WHITE] & BITS.QSIDE_CASTLE) {\n        castling += 'Q';\n      }\n      if (this._castling[BLACK] & BITS.KSIDE_CASTLE) {\n        castling += 'k';\n      }\n      if (this._castling[BLACK] & BITS.QSIDE_CASTLE) {\n        castling += 'q';\n      }\n      // do we have an empty castling flag?\n      castling = castling || '-';\n      let epSquare = '-';\n      /*\n       * only print the ep square if en passant is a valid move (pawn is present\n       * and ep capture is not pinned)\n       */\n      if (this._epSquare !== EMPTY) {\n        if (forceEnpassantSquare) {\n          epSquare = algebraic(this._epSquare);\n        } else {\n          const bigPawnSquare = this._epSquare + (this._turn === WHITE ? 16 : -16);\n          const squares = [bigPawnSquare + 1, bigPawnSquare - 1];\n          for (const square of squares) {\n            // is the square off the board?\n            if (square & 0x88) {\n              continue;\n            }\n            const color = this._turn;\n            // is there a pawn that can capture the epSquare?\n            if (this._board[square]?.color === color && this._board[square]?.type === PAWN) {\n              // if the pawn makes an ep capture, does it leave its king in check?\n              this._makeMove({\n                color,\n                from: square,\n                to: this._epSquare,\n                piece: PAWN,\n                captured: PAWN,\n                flags: BITS.EP_CAPTURE\n              });\n              const isLegal = !this._isKingAttacked(color);\n              this._undoMove();\n              // if ep is legal, break and set the ep square in the FEN output\n              if (isLegal) {\n                epSquare = algebraic(this._epSquare);\n                break;\n              }\n            }\n          }\n        }\n      }\n      return [fen, this._turn, castling, epSquare, this._halfMoves, this._moveNumber].join(' ');\n    }\n    _pieceKey(i) {\n      if (!this._board[i]) {\n        return 0n;\n      }\n      const {\n        color,\n        type\n      } = this._board[i];\n      const colorIndex = {\n        w: 0,\n        b: 1\n      }[color];\n      const typeIndex = {\n        p: 0,\n        n: 1,\n        b: 2,\n        r: 3,\n        q: 4,\n        k: 5\n      }[type];\n      return PIECE_KEYS[colorIndex][typeIndex][i];\n    }\n    _epKey() {\n      return this._epSquare === EMPTY ? 0n : EP_KEYS[this._epSquare & 7];\n    }\n    _castlingKey() {\n      const index = this._castling.w >> 5 | this._castling.b >> 3;\n      return CASTLING_KEYS[index];\n    }\n    _computeHash() {\n      let hash = 0n;\n      for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n        // did we run off the end of the board\n        if (i & 0x88) {\n          i += 7;\n          continue;\n        }\n        if (this._board[i]) {\n          hash ^= this._pieceKey(i);\n        }\n      }\n      hash ^= this._epKey();\n      hash ^= this._castlingKey();\n      if (this._turn === 'b') {\n        hash ^= SIDE_KEY;\n      }\n      return hash;\n    }\n    /*\n     * Called when the initial board setup is changed with put() or remove().\n     * modifies the SetUp and FEN properties of the header object. If the FEN\n     * is equal to the default position, the SetUp and FEN are deleted the setup\n     * is only updated if history.length is zero, ie moves haven't been made.\n     */\n    _updateSetup(fen) {\n      if (this._history.length > 0) return;\n      if (fen !== DEFAULT_POSITION) {\n        this._header['SetUp'] = '1';\n        this._header['FEN'] = fen;\n      } else {\n        this._header['SetUp'] = null;\n        this._header['FEN'] = null;\n      }\n    }\n    reset() {\n      this.load(DEFAULT_POSITION);\n    }\n    get(square) {\n      return this._board[Ox88[square]];\n    }\n    findPiece(piece) {\n      const squares = [];\n      for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n        // did we run off the end of the board\n        if (i & 0x88) {\n          i += 7;\n          continue;\n        }\n        // if empty square or wrong color\n        if (!this._board[i] || this._board[i]?.color !== piece.color) {\n          continue;\n        }\n        // check if square contains the requested piece\n        if (this._board[i].color === piece.color && this._board[i].type === piece.type) {\n          squares.push(algebraic(i));\n        }\n      }\n      return squares;\n    }\n    put({\n      type,\n      color\n    }, square) {\n      if (this._put({\n        type,\n        color\n      }, square)) {\n        this._updateCastlingRights();\n        this._updateEnPassantSquare();\n        this._updateSetup(this.fen());\n        return true;\n      }\n      return false;\n    }\n    _set(sq, piece) {\n      this._hash ^= this._pieceKey(sq);\n      this._board[sq] = piece;\n      this._hash ^= this._pieceKey(sq);\n    }\n    _put({\n      type,\n      color\n    }, square) {\n      // check for piece\n      if (SYMBOLS.indexOf(type.toLowerCase()) === -1) {\n        return false;\n      }\n      // check for valid square\n      if (!(square in Ox88)) {\n        return false;\n      }\n      const sq = Ox88[square];\n      // don't let the user place more than one king\n      if (type == KING && !(this._kings[color] == EMPTY || this._kings[color] == sq)) {\n        return false;\n      }\n      const currentPieceOnSquare = this._board[sq];\n      // if one of the kings will be replaced by the piece from args, set the `_kings` respective entry to `EMPTY`\n      if (currentPieceOnSquare && currentPieceOnSquare.type === KING) {\n        this._kings[currentPieceOnSquare.color] = EMPTY;\n      }\n      this._set(sq, {\n        type: type,\n        color: color\n      });\n      if (type === KING) {\n        this._kings[color] = sq;\n      }\n      return true;\n    }\n    _clear(sq) {\n      this._hash ^= this._pieceKey(sq);\n      delete this._board[sq];\n    }\n    remove(square) {\n      const piece = this.get(square);\n      this._clear(Ox88[square]);\n      if (piece && piece.type === KING) {\n        this._kings[piece.color] = EMPTY;\n      }\n      this._updateCastlingRights();\n      this._updateEnPassantSquare();\n      this._updateSetup(this.fen());\n      return piece;\n    }\n    _updateCastlingRights() {\n      this._hash ^= this._castlingKey();\n      const whiteKingInPlace = this._board[Ox88.e1]?.type === KING && this._board[Ox88.e1]?.color === WHITE;\n      const blackKingInPlace = this._board[Ox88.e8]?.type === KING && this._board[Ox88.e8]?.color === BLACK;\n      if (!whiteKingInPlace || this._board[Ox88.a1]?.type !== ROOK || this._board[Ox88.a1]?.color !== WHITE) {\n        this._castling.w &= -65;\n      }\n      if (!whiteKingInPlace || this._board[Ox88.h1]?.type !== ROOK || this._board[Ox88.h1]?.color !== WHITE) {\n        this._castling.w &= -33;\n      }\n      if (!blackKingInPlace || this._board[Ox88.a8]?.type !== ROOK || this._board[Ox88.a8]?.color !== BLACK) {\n        this._castling.b &= -65;\n      }\n      if (!blackKingInPlace || this._board[Ox88.h8]?.type !== ROOK || this._board[Ox88.h8]?.color !== BLACK) {\n        this._castling.b &= -33;\n      }\n      this._hash ^= this._castlingKey();\n    }\n    _updateEnPassantSquare() {\n      if (this._epSquare === EMPTY) {\n        return;\n      }\n      const startSquare = this._epSquare + (this._turn === WHITE ? -16 : 16);\n      const currentSquare = this._epSquare + (this._turn === WHITE ? 16 : -16);\n      const attackers = [currentSquare + 1, currentSquare - 1];\n      if (this._board[startSquare] !== null || this._board[this._epSquare] !== null || this._board[currentSquare]?.color !== swapColor(this._turn) || this._board[currentSquare]?.type !== PAWN) {\n        this._hash ^= this._epKey();\n        this._epSquare = EMPTY;\n        return;\n      }\n      const canCapture = square => !(square & 0x88) && this._board[square]?.color === this._turn && this._board[square]?.type === PAWN;\n      if (!attackers.some(canCapture)) {\n        this._hash ^= this._epKey();\n        this._epSquare = EMPTY;\n      }\n    }\n    _attacked(color, square, verbose) {\n      const attackers = [];\n      for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n        // did we run off the end of the board\n        if (i & 0x88) {\n          i += 7;\n          continue;\n        }\n        // if empty square or wrong color\n        if (this._board[i] === undefined || this._board[i].color !== color) {\n          continue;\n        }\n        const piece = this._board[i];\n        const difference = i - square;\n        // skip - to/from square are the same\n        if (difference === 0) {\n          continue;\n        }\n        const index = difference + 119;\n        if (ATTACKS[index] & PIECE_MASKS[piece.type]) {\n          if (piece.type === PAWN) {\n            if (difference > 0 && piece.color === WHITE || difference <= 0 && piece.color === BLACK) {\n              if (!verbose) {\n                return true;\n              } else {\n                attackers.push(algebraic(i));\n              }\n            }\n            continue;\n          }\n          // if the piece is a knight or a king\n          if (piece.type === 'n' || piece.type === 'k') {\n            if (!verbose) {\n              return true;\n            } else {\n              attackers.push(algebraic(i));\n              continue;\n            }\n          }\n          const offset = RAYS[index];\n          let j = i + offset;\n          let blocked = false;\n          while (j !== square) {\n            if (this._board[j] != null) {\n              blocked = true;\n              break;\n            }\n            j += offset;\n          }\n          if (!blocked) {\n            if (!verbose) {\n              return true;\n            } else {\n              attackers.push(algebraic(i));\n              continue;\n            }\n          }\n        }\n      }\n      if (verbose) {\n        return attackers;\n      } else {\n        return false;\n      }\n    }\n    attackers(square, attackedBy) {\n      if (!attackedBy) {\n        return this._attacked(this._turn, Ox88[square], true);\n      } else {\n        return this._attacked(attackedBy, Ox88[square], true);\n      }\n    }\n    _isKingAttacked(color) {\n      const square = this._kings[color];\n      return square === -1 ? false : this._attacked(swapColor(color), square);\n    }\n    hash() {\n      return this._hash.toString(16);\n    }\n    isAttacked(square, attackedBy) {\n      return this._attacked(attackedBy, Ox88[square]);\n    }\n    isCheck() {\n      return this._isKingAttacked(this._turn);\n    }\n    inCheck() {\n      return this.isCheck();\n    }\n    isCheckmate() {\n      return this.isCheck() && this._moves().length === 0;\n    }\n    isStalemate() {\n      return !this.isCheck() && this._moves().length === 0;\n    }\n    isInsufficientMaterial() {\n      /*\n       * k.b. vs k.b. (of opposite colors) with mate in 1:\n       * 8/8/8/8/1b6/8/B1k5/K7 b - - 0 1\n       *\n       * k.b. vs k.n. with mate in 1:\n       * 8/8/8/8/1n6/8/B7/K1k5 b - - 2 1\n       */\n      const pieces = {\n        b: 0,\n        n: 0,\n        r: 0,\n        q: 0,\n        k: 0,\n        p: 0\n      };\n      const bishops = [];\n      let numPieces = 0;\n      let squareColor = 0;\n      for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n        squareColor = (squareColor + 1) % 2;\n        if (i & 0x88) {\n          i += 7;\n          continue;\n        }\n        const piece = this._board[i];\n        if (piece) {\n          pieces[piece.type] = piece.type in pieces ? pieces[piece.type] + 1 : 1;\n          if (piece.type === BISHOP) {\n            bishops.push(squareColor);\n          }\n          numPieces++;\n        }\n      }\n      // k vs. k\n      if (numPieces === 2) {\n        return true;\n      } else if (\n      // k vs. kn .... or .... k vs. kb\n      numPieces === 3 && (pieces[BISHOP] === 1 || pieces[KNIGHT] === 1)) {\n        return true;\n      } else if (numPieces === pieces[BISHOP] + 2) {\n        // kb vs. kb where any number of bishops are all on the same color\n        let sum = 0;\n        const len = bishops.length;\n        for (let i = 0; i < len; i++) {\n          sum += bishops[i];\n        }\n        if (sum === 0 || sum === len) {\n          return true;\n        }\n      }\n      return false;\n    }\n    isThreefoldRepetition() {\n      return this._getPositionCount(this._hash) >= 3;\n    }\n    isDrawByFiftyMoves() {\n      return this._halfMoves >= 100; // 50 moves per side = 100 half moves\n    }\n    isDraw() {\n      return this.isDrawByFiftyMoves() || this.isStalemate() || this.isInsufficientMaterial() || this.isThreefoldRepetition();\n    }\n    isGameOver() {\n      return this.isCheckmate() || this.isDraw();\n    }\n    moves({\n      verbose = false,\n      square = undefined,\n      piece = undefined\n    } = {}) {\n      const moves = this._moves({\n        square,\n        piece\n      });\n      if (verbose) {\n        return moves.map(move => new Move(this, move));\n      } else {\n        return moves.map(move => this._moveToSan(move, moves));\n      }\n    }\n    _moves({\n      legal = true,\n      piece = undefined,\n      square = undefined\n    } = {}) {\n      const forSquare = square ? square.toLowerCase() : undefined;\n      const forPiece = piece?.toLowerCase();\n      const moves = [];\n      const us = this._turn;\n      const them = swapColor(us);\n      let firstSquare = Ox88.a8;\n      let lastSquare = Ox88.h1;\n      let singleSquare = false;\n      // are we generating moves for a single square?\n      if (forSquare) {\n        // illegal square, return empty moves\n        if (!(forSquare in Ox88)) {\n          return [];\n        } else {\n          firstSquare = lastSquare = Ox88[forSquare];\n          singleSquare = true;\n        }\n      }\n      for (let from = firstSquare; from <= lastSquare; from++) {\n        // did we run off the end of the board\n        if (from & 0x88) {\n          from += 7;\n          continue;\n        }\n        // empty square or opponent, skip\n        if (!this._board[from] || this._board[from].color === them) {\n          continue;\n        }\n        const {\n          type\n        } = this._board[from];\n        let to;\n        if (type === PAWN) {\n          if (forPiece && forPiece !== type) continue;\n          // single square, non-capturing\n          to = from + PAWN_OFFSETS[us][0];\n          if (!this._board[to]) {\n            addMove(moves, us, from, to, PAWN);\n            // double square\n            to = from + PAWN_OFFSETS[us][1];\n            if (SECOND_RANK[us] === rank(from) && !this._board[to]) {\n              addMove(moves, us, from, to, PAWN, undefined, BITS.BIG_PAWN);\n            }\n          }\n          // pawn captures\n          for (let j = 2; j < 4; j++) {\n            to = from + PAWN_OFFSETS[us][j];\n            if (to & 0x88) continue;\n            if (this._board[to]?.color === them) {\n              addMove(moves, us, from, to, PAWN, this._board[to].type, BITS.CAPTURE);\n            } else if (to === this._epSquare) {\n              addMove(moves, us, from, to, PAWN, PAWN, BITS.EP_CAPTURE);\n            }\n          }\n        } else {\n          if (forPiece && forPiece !== type) continue;\n          for (let j = 0, len = PIECE_OFFSETS[type].length; j < len; j++) {\n            const offset = PIECE_OFFSETS[type][j];\n            to = from;\n            while (true) {\n              to += offset;\n              if (to & 0x88) break;\n              if (!this._board[to]) {\n                addMove(moves, us, from, to, type);\n              } else {\n                // own color, stop loop\n                if (this._board[to].color === us) break;\n                addMove(moves, us, from, to, type, this._board[to].type, BITS.CAPTURE);\n                break;\n              }\n              /* break, if knight or king */\n              if (type === KNIGHT || type === KING) break;\n            }\n          }\n        }\n      }\n      /*\n       * check for castling if we're:\n       *   a) generating all moves, or\n       *   b) doing single square move generation on the king's square\n       */\n      if (forPiece === undefined || forPiece === KING) {\n        if (!singleSquare || lastSquare === this._kings[us]) {\n          // king-side castling\n          if (this._castling[us] & BITS.KSIDE_CASTLE) {\n            const castlingFrom = this._kings[us];\n            const castlingTo = castlingFrom + 2;\n            if (!this._board[castlingFrom + 1] && !this._board[castlingTo] && !this._attacked(them, this._kings[us]) && !this._attacked(them, castlingFrom + 1) && !this._attacked(them, castlingTo)) {\n              addMove(moves, us, this._kings[us], castlingTo, KING, undefined, BITS.KSIDE_CASTLE);\n            }\n          }\n          // queen-side castling\n          if (this._castling[us] & BITS.QSIDE_CASTLE) {\n            const castlingFrom = this._kings[us];\n            const castlingTo = castlingFrom - 2;\n            if (!this._board[castlingFrom - 1] && !this._board[castlingFrom - 2] && !this._board[castlingFrom - 3] && !this._attacked(them, this._kings[us]) && !this._attacked(them, castlingFrom - 1) && !this._attacked(them, castlingTo)) {\n              addMove(moves, us, this._kings[us], castlingTo, KING, undefined, BITS.QSIDE_CASTLE);\n            }\n          }\n        }\n      }\n      /*\n       * return all pseudo-legal moves (this includes moves that allow the king\n       * to be captured)\n       */\n      if (!legal || this._kings[us] === -1) {\n        return moves;\n      }\n      // filter out illegal moves\n      const legalMoves = [];\n      for (let i = 0, len = moves.length; i < len; i++) {\n        this._makeMove(moves[i]);\n        if (!this._isKingAttacked(us)) {\n          legalMoves.push(moves[i]);\n        }\n        this._undoMove();\n      }\n      return legalMoves;\n    }\n    move(move, {\n      strict = false\n    } = {}) {\n      /*\n       * The move function can be called with in the following parameters:\n       *\n       * .move('Nxb7')       <- argument is a case-sensitive SAN string\n       *\n       * .move({ from: 'h7', <- argument is a move object\n       *         to :'h8',\n       *         promotion: 'q' })\n       *\n       *\n       * An optional strict argument may be supplied to tell chess.js to\n       * strictly follow the SAN specification.\n       */\n      let moveObj = null;\n      if (typeof move === 'string') {\n        moveObj = this._moveFromSan(move, strict);\n      } else if (move === null) {\n        moveObj = this._moveFromSan(SAN_NULLMOVE, strict);\n      } else if (typeof move === 'object') {\n        const moves = this._moves();\n        // convert the pretty move object to an ugly move object\n        for (let i = 0, len = moves.length; i < len; i++) {\n          if (move.from === algebraic(moves[i].from) && move.to === algebraic(moves[i].to) && (!('promotion' in moves[i]) || move.promotion === moves[i].promotion)) {\n            moveObj = moves[i];\n            break;\n          }\n        }\n      }\n      // failed to find move\n      if (!moveObj) {\n        if (typeof move === 'string') {\n          throw new Error(`Invalid move: ${move}`);\n        } else {\n          throw new Error(`Invalid move: ${JSON.stringify(move)}`);\n        }\n      }\n      //disallow null moves when in check\n      if (this.isCheck() && moveObj.flags & BITS.NULL_MOVE) {\n        throw new Error('Null move not allowed when in check');\n      }\n      /*\n       * need to make a copy of move because we can't generate SAN after the move\n       * is made\n       */\n      const prettyMove = new Move(this, moveObj);\n      this._makeMove(moveObj);\n      this._incPositionCount();\n      return prettyMove;\n    }\n    _push(move) {\n      this._history.push({\n        move,\n        kings: {\n          b: this._kings.b,\n          w: this._kings.w\n        },\n        turn: this._turn,\n        castling: {\n          b: this._castling.b,\n          w: this._castling.w\n        },\n        epSquare: this._epSquare,\n        halfMoves: this._halfMoves,\n        moveNumber: this._moveNumber\n      });\n    }\n    _movePiece(from, to) {\n      this._hash ^= this._pieceKey(from);\n      this._board[to] = this._board[from];\n      delete this._board[from];\n      this._hash ^= this._pieceKey(to);\n    }\n    _makeMove(move) {\n      const us = this._turn;\n      const them = swapColor(us);\n      this._push(move);\n      if (move.flags & BITS.NULL_MOVE) {\n        if (us === BLACK) {\n          this._moveNumber++;\n        }\n        this._halfMoves++;\n        this._turn = them;\n        this._epSquare = EMPTY;\n        return;\n      }\n      this._hash ^= this._epKey();\n      this._hash ^= this._castlingKey();\n      if (move.captured) {\n        this._hash ^= this._pieceKey(move.to);\n      }\n      this._movePiece(move.from, move.to);\n      // if ep capture, remove the captured pawn\n      if (move.flags & BITS.EP_CAPTURE) {\n        if (this._turn === BLACK) {\n          this._clear(move.to - 16);\n        } else {\n          this._clear(move.to + 16);\n        }\n      }\n      // if pawn promotion, replace with new piece\n      if (move.promotion) {\n        this._clear(move.to);\n        this._set(move.to, {\n          type: move.promotion,\n          color: us\n        });\n      }\n      // if we moved the king\n      if (this._board[move.to].type === KING) {\n        this._kings[us] = move.to;\n        // if we castled, move the rook next to the king\n        if (move.flags & BITS.KSIDE_CASTLE) {\n          const castlingTo = move.to - 1;\n          const castlingFrom = move.to + 1;\n          this._movePiece(castlingFrom, castlingTo);\n        } else if (move.flags & BITS.QSIDE_CASTLE) {\n          const castlingTo = move.to + 1;\n          const castlingFrom = move.to - 2;\n          this._movePiece(castlingFrom, castlingTo);\n        }\n        // turn off castling\n        this._castling[us] = 0;\n      }\n      // turn off castling if we move a rook\n      if (this._castling[us]) {\n        for (let i = 0, len = ROOKS[us].length; i < len; i++) {\n          if (move.from === ROOKS[us][i].square && this._castling[us] & ROOKS[us][i].flag) {\n            this._castling[us] ^= ROOKS[us][i].flag;\n            break;\n          }\n        }\n      }\n      // turn off castling if we capture a rook\n      if (this._castling[them]) {\n        for (let i = 0, len = ROOKS[them].length; i < len; i++) {\n          if (move.to === ROOKS[them][i].square && this._castling[them] & ROOKS[them][i].flag) {\n            this._castling[them] ^= ROOKS[them][i].flag;\n            break;\n          }\n        }\n      }\n      this._hash ^= this._castlingKey();\n      // if big pawn move, update the en passant square\n      if (move.flags & BITS.BIG_PAWN) {\n        let epSquare;\n        if (us === BLACK) {\n          epSquare = move.to - 16;\n        } else {\n          epSquare = move.to + 16;\n        }\n        if (!(move.to - 1 & 0x88) && this._board[move.to - 1]?.type === PAWN && this._board[move.to - 1]?.color === them || !(move.to + 1 & 0x88) && this._board[move.to + 1]?.type === PAWN && this._board[move.to + 1]?.color === them) {\n          this._epSquare = epSquare;\n          this._hash ^= this._epKey();\n        } else {\n          this._epSquare = EMPTY;\n        }\n      } else {\n        this._epSquare = EMPTY;\n      }\n      // reset the 50 move counter if a pawn is moved or a piece is captured\n      if (move.piece === PAWN) {\n        this._halfMoves = 0;\n      } else if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n        this._halfMoves = 0;\n      } else {\n        this._halfMoves++;\n      }\n      if (us === BLACK) {\n        this._moveNumber++;\n      }\n      this._turn = them;\n      this._hash ^= SIDE_KEY;\n    }\n    undo() {\n      const hash = this._hash;\n      const move = this._undoMove();\n      if (move) {\n        const prettyMove = new Move(this, move);\n        this._decPositionCount(hash);\n        return prettyMove;\n      }\n      return null;\n    }\n    _undoMove() {\n      const old = this._history.pop();\n      if (old === undefined) {\n        return null;\n      }\n      this._hash ^= this._epKey();\n      this._hash ^= this._castlingKey();\n      const move = old.move;\n      this._kings = old.kings;\n      this._turn = old.turn;\n      this._castling = old.castling;\n      this._epSquare = old.epSquare;\n      this._halfMoves = old.halfMoves;\n      this._moveNumber = old.moveNumber;\n      this._hash ^= this._epKey();\n      this._hash ^= this._castlingKey();\n      this._hash ^= SIDE_KEY;\n      const us = this._turn;\n      const them = swapColor(us);\n      if (move.flags & BITS.NULL_MOVE) {\n        return move;\n      }\n      this._movePiece(move.to, move.from);\n      // to undo any promotions\n      if (move.piece) {\n        this._clear(move.from);\n        this._set(move.from, {\n          type: move.piece,\n          color: us\n        });\n      }\n      if (move.captured) {\n        if (move.flags & BITS.EP_CAPTURE) {\n          // en passant capture\n          let index;\n          if (us === BLACK) {\n            index = move.to - 16;\n          } else {\n            index = move.to + 16;\n          }\n          this._set(index, {\n            type: PAWN,\n            color: them\n          });\n        } else {\n          // regular capture\n          this._set(move.to, {\n            type: move.captured,\n            color: them\n          });\n        }\n      }\n      if (move.flags & (BITS.KSIDE_CASTLE | BITS.QSIDE_CASTLE)) {\n        let castlingTo, castlingFrom;\n        if (move.flags & BITS.KSIDE_CASTLE) {\n          castlingTo = move.to + 1;\n          castlingFrom = move.to - 1;\n        } else {\n          castlingTo = move.to - 2;\n          castlingFrom = move.to + 1;\n        }\n        this._movePiece(castlingFrom, castlingTo);\n      }\n      return move;\n    }\n    pgn({\n      newline = '\\n',\n      maxWidth = 0\n    } = {}) {\n      /*\n       * using the specification from http://www.chessclub.com/help/PGN-spec\n       * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\n       */\n      const result = [];\n      let headerExists = false;\n      /* add the PGN header information */\n      for (const i in this._header) {\n        /*\n         * TODO: order of enumerated properties in header object is not\n         * guaranteed, see ECMA-262 spec (section 12.6.4)\n         *\n         * By using HEADER_TEMPLATE, the order of tags should be preserved; we\n         * do have to check for null placeholders, though, and omit them\n         */\n        const headerTag = this._header[i];\n        if (headerTag) result.push(`[${i} \"${this._header[i]}\"]` + newline);\n        headerExists = true;\n      }\n      if (headerExists && this._history.length) {\n        result.push(newline);\n      }\n      const appendComment = moveString => {\n        const comment = this._comments[this.fen()];\n        if (typeof comment !== 'undefined') {\n          const delimiter = moveString.length > 0 ? ' ' : '';\n          moveString = `${moveString}${delimiter}{${comment}}`;\n        }\n        return moveString;\n      };\n      // pop all of history onto reversed_history\n      const reversedHistory = [];\n      while (this._history.length > 0) {\n        reversedHistory.push(this._undoMove());\n      }\n      const moves = [];\n      let moveString = '';\n      // special case of a commented starting position with no moves\n      if (reversedHistory.length === 0) {\n        moves.push(appendComment(''));\n      }\n      // build the list of moves.  a move_string looks like: \"3. e3 e6\"\n      while (reversedHistory.length > 0) {\n        moveString = appendComment(moveString);\n        const move = reversedHistory.pop();\n        // make TypeScript stop complaining about move being undefined\n        if (!move) {\n          break;\n        }\n        // if the position started with black to move, start PGN with #. ...\n        if (!this._history.length && move.color === 'b') {\n          const prefix = `${this._moveNumber}. ...`;\n          // is there a comment preceding the first move?\n          moveString = moveString ? `${moveString} ${prefix}` : prefix;\n        } else if (move.color === 'w') {\n          // store the previous generated move_string if we have one\n          if (moveString.length) {\n            moves.push(moveString);\n          }\n          moveString = this._moveNumber + '.';\n        }\n        moveString = moveString + ' ' + this._moveToSan(move, this._moves({\n          legal: true\n        }));\n        this._makeMove(move);\n      }\n      // are there any other leftover moves?\n      if (moveString.length) {\n        moves.push(appendComment(moveString));\n      }\n      // is there a result? (there ALWAYS has to be a result according to spec; see Seven Tag Roster)\n      moves.push(this._header.Result || '*');\n      /*\n       * history should be back to what it was before we started generating PGN,\n       * so join together moves\n       */\n      if (maxWidth === 0) {\n        return result.join('') + moves.join(' ');\n      }\n      // TODO (jah): huh?\n      const strip = function () {\n        if (result.length > 0 && result[result.length - 1] === ' ') {\n          result.pop();\n          return true;\n        }\n        return false;\n      };\n      // NB: this does not preserve comment whitespace.\n      const wrapComment = function (width, move) {\n        for (const token of move.split(' ')) {\n          if (!token) {\n            continue;\n          }\n          if (width + token.length > maxWidth) {\n            while (strip()) {\n              width--;\n            }\n            result.push(newline);\n            width = 0;\n          }\n          result.push(token);\n          width += token.length;\n          result.push(' ');\n          width++;\n        }\n        if (strip()) {\n          width--;\n        }\n        return width;\n      };\n      // wrap the PGN output at max_width\n      let currentWidth = 0;\n      for (let i = 0; i < moves.length; i++) {\n        if (currentWidth + moves[i].length > maxWidth) {\n          if (moves[i].includes('{')) {\n            currentWidth = wrapComment(currentWidth, moves[i]);\n            continue;\n          }\n        }\n        // if the current move will push past max_width\n        if (currentWidth + moves[i].length > maxWidth && i !== 0) {\n          // don't end the line with whitespace\n          if (result[result.length - 1] === ' ') {\n            result.pop();\n          }\n          result.push(newline);\n          currentWidth = 0;\n        } else if (i !== 0) {\n          result.push(' ');\n          currentWidth++;\n        }\n        result.push(moves[i]);\n        currentWidth += moves[i].length;\n      }\n      return result.join('');\n    }\n    /**\n     * @deprecated Use `setHeader` and `getHeaders` instead. This method will return null header tags (which is not what you want)\n     */\n    header(...args) {\n      for (let i = 0; i < args.length; i += 2) {\n        if (typeof args[i] === 'string' && typeof args[i + 1] === 'string') {\n          this._header[args[i]] = args[i + 1];\n        }\n      }\n      return this._header;\n    }\n    // TODO: value validation per spec\n    setHeader(key, value) {\n      this._header[key] = value ?? SEVEN_TAG_ROSTER[key] ?? null;\n      return this.getHeaders();\n    }\n    removeHeader(key) {\n      if (key in this._header) {\n        this._header[key] = SEVEN_TAG_ROSTER[key] || null;\n        return true;\n      }\n      return false;\n    }\n    // return only non-null headers (omit placemarker nulls)\n    getHeaders() {\n      const nonNullHeaders = {};\n      for (const [key, value] of Object.entries(this._header)) {\n        if (value !== null) {\n          nonNullHeaders[key] = value;\n        }\n      }\n      return nonNullHeaders;\n    }\n    loadPgn(pgn, {\n      strict = false,\n      newlineChar = '\\r?\\n'\n    } = {}) {\n      // If newlineChar is not the default, replace all instances with \\n\n      if (newlineChar !== '\\r?\\n') {\n        pgn = pgn.replace(new RegExp(newlineChar, 'g'), '\\n');\n      }\n      const parsedPgn = peg$parse(pgn);\n      // Put the board in the starting position\n      this.reset();\n      // parse PGN header\n      const headers = parsedPgn.headers;\n      let fen = '';\n      for (const key in headers) {\n        // check to see user is including fen (possibly with wrong tag case)\n        if (key.toLowerCase() === 'fen') {\n          fen = headers[key];\n        }\n        this.header(key, headers[key]);\n      }\n      /*\n       * the permissive parser should attempt to load a fen tag, even if it's the\n       * wrong case and doesn't include a corresponding [SetUp \"1\"] tag\n       */\n      if (!strict) {\n        if (fen) {\n          this.load(fen, {\n            preserveHeaders: true\n          });\n        }\n      } else {\n        /*\n         * strict parser - load the starting position indicated by [Setup '1']\n         * and [FEN position]\n         */\n        if (headers['SetUp'] === '1') {\n          if (!('FEN' in headers)) {\n            throw new Error('Invalid PGN: FEN tag must be supplied with SetUp tag');\n          }\n          // don't clear the headers when loading\n          this.load(headers['FEN'], {\n            preserveHeaders: true\n          });\n        }\n      }\n      let node = parsedPgn.root;\n      while (node) {\n        if (node.move) {\n          const move = this._moveFromSan(node.move, strict);\n          if (move == null) {\n            throw new Error(`Invalid move in PGN: ${node.move}`);\n          } else {\n            this._makeMove(move);\n            this._incPositionCount();\n          }\n        }\n        if (node.comment !== undefined) {\n          this._comments[this.fen()] = node.comment;\n        }\n        node = node.variations[0];\n      }\n      /*\n       * Per section 8.2.6 of the PGN spec, the Result tag pair must match match\n       * the termination marker. Only do this when headers are present, but the\n       * result tag is missing\n       */\n      const result = parsedPgn.result;\n      if (result && Object.keys(this._header).length && this._header['Result'] !== result) {\n        this.setHeader('Result', result);\n      }\n    }\n    /*\n     * Convert a move from 0x88 coordinates to Standard Algebraic Notation\n     * (SAN)\n     *\n     * @param {boolean} strict Use the strict SAN parser. It will throw errors\n     * on overly disambiguated moves (see below):\n     *\n     * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\n     * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\n     * 4. ... Ne7 is technically the valid SAN\n     */\n    _moveToSan(move, moves) {\n      let output = '';\n      if (move.flags & BITS.KSIDE_CASTLE) {\n        output = 'O-O';\n      } else if (move.flags & BITS.QSIDE_CASTLE) {\n        output = 'O-O-O';\n      } else if (move.flags & BITS.NULL_MOVE) {\n        return SAN_NULLMOVE;\n      } else {\n        if (move.piece !== PAWN) {\n          const disambiguator = getDisambiguator(move, moves);\n          output += move.piece.toUpperCase() + disambiguator;\n        }\n        if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n          if (move.piece === PAWN) {\n            output += algebraic(move.from)[0];\n          }\n          output += 'x';\n        }\n        output += algebraic(move.to);\n        if (move.promotion) {\n          output += '=' + move.promotion.toUpperCase();\n        }\n      }\n      this._makeMove(move);\n      if (this.isCheck()) {\n        if (this.isCheckmate()) {\n          output += '#';\n        } else {\n          output += '+';\n        }\n      }\n      this._undoMove();\n      return output;\n    }\n    // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\n    _moveFromSan(move, strict = false) {\n      // strip off any move decorations: e.g Nf3+?! becomes Nf3\n      let cleanMove = strippedSan(move);\n      if (!strict) {\n        if (cleanMove === '0-0') {\n          cleanMove = 'O-O';\n        } else if (cleanMove === '0-0-0') {\n          cleanMove = 'O-O-O';\n        }\n      }\n      //first implementation of null with a dummy move (black king moves from a8 to a8), maybe this can be implemented better\n      if (cleanMove == SAN_NULLMOVE) {\n        const res = {\n          color: this._turn,\n          from: 0,\n          to: 0,\n          piece: 'k',\n          flags: BITS.NULL_MOVE\n        };\n        return res;\n      }\n      let pieceType = inferPieceType(cleanMove);\n      let moves = this._moves({\n        legal: true,\n        piece: pieceType\n      });\n      // strict parser\n      for (let i = 0, len = moves.length; i < len; i++) {\n        if (cleanMove === strippedSan(this._moveToSan(moves[i], moves))) {\n          return moves[i];\n        }\n      }\n      // the strict parser failed\n      if (strict) {\n        return null;\n      }\n      let piece = undefined;\n      let matches = undefined;\n      let from = undefined;\n      let to = undefined;\n      let promotion = undefined;\n      /*\n       * The default permissive (non-strict) parser allows the user to parse\n       * non-standard chess notations. This parser is only run after the strict\n       * Standard Algebraic Notation (SAN) parser has failed.\n       *\n       * When running the permissive parser, we'll run a regex to grab the piece, the\n       * to/from square, and an optional promotion piece. This regex will\n       * parse common non-standard notation like: Pe2-e4, Rc1c4, Qf3xf7,\n       * f7f8q, b1c3\n       *\n       * NOTE: Some positions and moves may be ambiguous when using the permissive\n       * parser. For example, in this position: 6k1/8/8/B7/8/8/8/BN4K1 w - - 0 1,\n       * the move b1c3 may be interpreted as Nc3 or B1c3 (a disambiguated bishop\n       * move). In these cases, the permissive parser will default to the most\n       * basic interpretation (which is b1c3 parsing to Nc3).\n       */\n      let overlyDisambiguated = false;\n      matches = cleanMove.match(/([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/);\n      if (matches) {\n        piece = matches[1];\n        from = matches[2];\n        to = matches[3];\n        promotion = matches[4];\n        if (from.length == 1) {\n          overlyDisambiguated = true;\n        }\n      } else {\n        /*\n         * The [a-h]?[1-8]? portion of the regex below handles moves that may be\n         * overly disambiguated (e.g. Nge7 is unnecessary and non-standard when\n         * there is one legal knight move to e7). In this case, the value of\n         * 'from' variable will be a rank or file, not a square.\n         */\n        matches = cleanMove.match(/([pnbrqkPNBRQK])?([a-h]?[1-8]?)x?-?([a-h][1-8])([qrbnQRBN])?/);\n        if (matches) {\n          piece = matches[1];\n          from = matches[2];\n          to = matches[3];\n          promotion = matches[4];\n          if (from.length == 1) {\n            overlyDisambiguated = true;\n          }\n        }\n      }\n      pieceType = inferPieceType(cleanMove);\n      moves = this._moves({\n        legal: true,\n        piece: piece ? piece : pieceType\n      });\n      if (!to) {\n        return null;\n      }\n      for (let i = 0, len = moves.length; i < len; i++) {\n        if (!from) {\n          // if there is no from square, it could be just 'x' missing from a capture\n          if (cleanMove === strippedSan(this._moveToSan(moves[i], moves)).replace('x', '')) {\n            return moves[i];\n          }\n          // hand-compare move properties with the results from our permissive regex\n        } else if ((!piece || piece.toLowerCase() == moves[i].piece) && Ox88[from] == moves[i].from && Ox88[to] == moves[i].to && (!promotion || promotion.toLowerCase() == moves[i].promotion)) {\n          return moves[i];\n        } else if (overlyDisambiguated) {\n          /*\n           * SPECIAL CASE: we parsed a move string that may have an unneeded\n           * rank/file disambiguator (e.g. Nge7).  The 'from' variable will\n           */\n          const square = algebraic(moves[i].from);\n          if ((!piece || piece.toLowerCase() == moves[i].piece) && Ox88[to] == moves[i].to && (from == square[0] || from == square[1]) && (!promotion || promotion.toLowerCase() == moves[i].promotion)) {\n            return moves[i];\n          }\n        }\n      }\n      return null;\n    }\n    ascii() {\n      let s = '   +------------------------+\\n';\n      for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n        // display the rank\n        if (file(i) === 0) {\n          s += ' ' + '87654321'[rank(i)] + ' |';\n        }\n        if (this._board[i]) {\n          const piece = this._board[i].type;\n          const color = this._board[i].color;\n          const symbol = color === WHITE ? piece.toUpperCase() : piece.toLowerCase();\n          s += ' ' + symbol + ' ';\n        } else {\n          s += ' . ';\n        }\n        if (i + 1 & 0x88) {\n          s += '|\\n';\n          i += 8;\n        }\n      }\n      s += '   +------------------------+\\n';\n      s += '     a  b  c  d  e  f  g  h';\n      return s;\n    }\n    perft(depth) {\n      const moves = this._moves({\n        legal: false\n      });\n      let nodes = 0;\n      const color = this._turn;\n      for (let i = 0, len = moves.length; i < len; i++) {\n        this._makeMove(moves[i]);\n        if (!this._isKingAttacked(color)) {\n          if (depth - 1 > 0) {\n            nodes += this.perft(depth - 1);\n          } else {\n            nodes++;\n          }\n        }\n        this._undoMove();\n      }\n      return nodes;\n    }\n    setTurn(color) {\n      if (this._turn == color) {\n        return false;\n      }\n      this.move('--');\n      return true;\n    }\n    turn() {\n      return this._turn;\n    }\n    board() {\n      const output = [];\n      let row = [];\n      for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n        if (this._board[i] == null) {\n          row.push(null);\n        } else {\n          row.push({\n            square: algebraic(i),\n            type: this._board[i].type,\n            color: this._board[i].color\n          });\n        }\n        if (i + 1 & 0x88) {\n          output.push(row);\n          row = [];\n          i += 8;\n        }\n      }\n      return output;\n    }\n    squareColor(square) {\n      if (square in Ox88) {\n        const sq = Ox88[square];\n        return (rank(sq) + file(sq)) % 2 === 0 ? 'light' : 'dark';\n      }\n      return null;\n    }\n    history({\n      verbose = false\n    } = {}) {\n      const reversedHistory = [];\n      const moveHistory = [];\n      while (this._history.length > 0) {\n        reversedHistory.push(this._undoMove());\n      }\n      while (true) {\n        const move = reversedHistory.pop();\n        if (!move) {\n          break;\n        }\n        if (verbose) {\n          moveHistory.push(new Move(this, move));\n        } else {\n          moveHistory.push(this._moveToSan(move, this._moves()));\n        }\n        this._makeMove(move);\n      }\n      return moveHistory;\n    }\n    /*\n     * Keeps track of position occurrence counts for the purpose of repetition\n     * checking. Old positions are removed from the map if their counts are reduced to 0.\n     */\n    _getPositionCount(hash) {\n      return this._positionCount.get(hash) ?? 0;\n    }\n    _incPositionCount() {\n      this._positionCount.set(this._hash, (this._positionCount.get(this._hash) ?? 0) + 1);\n    }\n    _decPositionCount(hash) {\n      const currentCount = this._positionCount.get(hash) ?? 0;\n      if (currentCount === 1) {\n        this._positionCount.delete(hash);\n      } else {\n        this._positionCount.set(hash, currentCount - 1);\n      }\n    }\n    _pruneComments() {\n      const reversedHistory = [];\n      const currentComments = {};\n      const copyComment = fen => {\n        if (fen in this._comments) {\n          currentComments[fen] = this._comments[fen];\n        }\n      };\n      while (this._history.length > 0) {\n        reversedHistory.push(this._undoMove());\n      }\n      copyComment(this.fen());\n      while (true) {\n        const move = reversedHistory.pop();\n        if (!move) {\n          break;\n        }\n        this._makeMove(move);\n        copyComment(this.fen());\n      }\n      this._comments = currentComments;\n    }\n    getComment() {\n      return this._comments[this.fen()];\n    }\n    setComment(comment) {\n      this._comments[this.fen()] = comment.replace('{', '[').replace('}', ']');\n    }\n    /**\n     * @deprecated Renamed to `removeComment` for consistency\n     */\n    deleteComment() {\n      return this.removeComment();\n    }\n    removeComment() {\n      const comment = this._comments[this.fen()];\n      delete this._comments[this.fen()];\n      return comment;\n    }\n    getComments() {\n      this._pruneComments();\n      return Object.keys(this._comments).map(fen => {\n        return {\n          fen: fen,\n          comment: this._comments[fen]\n        };\n      });\n    }\n    /**\n     * @deprecated Renamed to `removeComments` for consistency\n     */\n    deleteComments() {\n      return this.removeComments();\n    }\n    removeComments() {\n      this._pruneComments();\n      return Object.keys(this._comments).map(fen => {\n        const comment = this._comments[fen];\n        delete this._comments[fen];\n        return {\n          fen: fen,\n          comment: comment\n        };\n      });\n    }\n    setCastlingRights(color, rights) {\n      for (const side of [KING, QUEEN]) {\n        if (rights[side] !== undefined) {\n          if (rights[side]) {\n            this._castling[color] |= SIDES[side];\n          } else {\n            this._castling[color] &= ~SIDES[side];\n          }\n        }\n      }\n      this._updateCastlingRights();\n      const result = this.getCastlingRights(color);\n      return (rights[KING] === undefined || rights[KING] === result[KING]) && (rights[QUEEN] === undefined || rights[QUEEN] === result[QUEEN]);\n    }\n    getCastlingRights(color) {\n      return {\n        [KING]: (this._castling[color] & SIDES[KING]) !== 0,\n        [QUEEN]: (this._castling[color] & SIDES[QUEEN]) !== 0\n      };\n    }\n    moveNumber() {\n      return this._moveNumber;\n    }\n  }\n});","lineCount":3533,"map":[[7,2,3367,0,"Object"],[7,8,3367,0],[7,9,3367,0,"defineProperty"],[7,23,3367,0],[7,24,3367,0,"exports"],[7,31,3367,0],[8,4,3367,0,"enumerable"],[8,14,3367,0],[9,4,3367,0,"get"],[9,7,3367,0],[9,18,3367,0,"get"],[9,19,3367,0],[10,6,3367,0],[10,13,3367,9,"BISHOP"],[10,19,3367,15],[11,4,3367,15],[12,2,3367,15],[13,2,3367,0,"Object"],[13,8,3367,0],[13,9,3367,0,"defineProperty"],[13,23,3367,0],[13,24,3367,0,"exports"],[13,31,3367,0],[14,4,3367,0,"enumerable"],[14,14,3367,0],[15,4,3367,0,"get"],[15,7,3367,0],[15,18,3367,0,"get"],[15,19,3367,0],[16,6,3367,0],[16,13,3367,17,"BLACK"],[16,18,3367,22],[17,4,3367,22],[18,2,3367,22],[19,2,3367,0,"Object"],[19,8,3367,0],[19,9,3367,0,"defineProperty"],[19,23,3367,0],[19,24,3367,0,"exports"],[19,31,3367,0],[20,4,3367,0,"enumerable"],[20,14,3367,0],[21,4,3367,0,"get"],[21,7,3367,0],[21,18,3367,0,"get"],[21,19,3367,0],[22,6,3367,0],[22,13,3367,24,"Chess"],[22,18,3367,29],[23,4,3367,29],[24,2,3367,29],[25,2,3367,0,"Object"],[25,8,3367,0],[25,9,3367,0,"defineProperty"],[25,23,3367,0],[25,24,3367,0,"exports"],[25,31,3367,0],[26,4,3367,0,"enumerable"],[26,14,3367,0],[27,4,3367,0,"get"],[27,7,3367,0],[27,18,3367,0,"get"],[27,19,3367,0],[28,6,3367,0],[28,13,3367,31,"DEFAULT_POSITION"],[28,29,3367,47],[29,4,3367,47],[30,2,3367,47],[31,2,3367,0,"Object"],[31,8,3367,0],[31,9,3367,0,"defineProperty"],[31,23,3367,0],[31,24,3367,0,"exports"],[31,31,3367,0],[32,4,3367,0,"enumerable"],[32,14,3367,0],[33,4,3367,0,"get"],[33,7,3367,0],[33,18,3367,0,"get"],[33,19,3367,0],[34,6,3367,0],[34,13,3367,49,"KING"],[34,17,3367,53],[35,4,3367,53],[36,2,3367,53],[37,2,3367,0,"Object"],[37,8,3367,0],[37,9,3367,0,"defineProperty"],[37,23,3367,0],[37,24,3367,0,"exports"],[37,31,3367,0],[38,4,3367,0,"enumerable"],[38,14,3367,0],[39,4,3367,0,"get"],[39,7,3367,0],[39,18,3367,0,"get"],[39,19,3367,0],[40,6,3367,0],[40,13,3367,55,"KNIGHT"],[40,19,3367,61],[41,4,3367,61],[42,2,3367,61],[43,2,3367,0,"Object"],[43,8,3367,0],[43,9,3367,0,"defineProperty"],[43,23,3367,0],[43,24,3367,0,"exports"],[43,31,3367,0],[44,4,3367,0,"enumerable"],[44,14,3367,0],[45,4,3367,0,"get"],[45,7,3367,0],[45,18,3367,0,"get"],[45,19,3367,0],[46,6,3367,0],[46,13,3367,63,"Move"],[46,17,3367,67],[47,4,3367,67],[48,2,3367,67],[49,2,3367,0,"Object"],[49,8,3367,0],[49,9,3367,0,"defineProperty"],[49,23,3367,0],[49,24,3367,0,"exports"],[49,31,3367,0],[50,4,3367,0,"enumerable"],[50,14,3367,0],[51,4,3367,0,"get"],[51,7,3367,0],[51,18,3367,0,"get"],[51,19,3367,0],[52,6,3367,0],[52,13,3367,69,"PAWN"],[52,17,3367,73],[53,4,3367,73],[54,2,3367,73],[55,2,3367,0,"Object"],[55,8,3367,0],[55,9,3367,0,"defineProperty"],[55,23,3367,0],[55,24,3367,0,"exports"],[55,31,3367,0],[56,4,3367,0,"enumerable"],[56,14,3367,0],[57,4,3367,0,"get"],[57,7,3367,0],[57,18,3367,0,"get"],[57,19,3367,0],[58,6,3367,0],[58,13,3367,75,"QUEEN"],[58,18,3367,80],[59,4,3367,80],[60,2,3367,80],[61,2,3367,0,"Object"],[61,8,3367,0],[61,9,3367,0,"defineProperty"],[61,23,3367,0],[61,24,3367,0,"exports"],[61,31,3367,0],[62,4,3367,0,"enumerable"],[62,14,3367,0],[63,4,3367,0,"get"],[63,7,3367,0],[63,18,3367,0,"get"],[63,19,3367,0],[64,6,3367,0],[64,13,3367,82,"ROOK"],[64,17,3367,86],[65,4,3367,86],[66,2,3367,86],[67,2,3367,0,"Object"],[67,8,3367,0],[67,9,3367,0,"defineProperty"],[67,23,3367,0],[67,24,3367,0,"exports"],[67,31,3367,0],[68,4,3367,0,"enumerable"],[68,14,3367,0],[69,4,3367,0,"get"],[69,7,3367,0],[69,18,3367,0,"get"],[69,19,3367,0],[70,6,3367,0],[70,13,3367,88,"SEVEN_TAG_ROSTER"],[70,29,3367,104],[71,4,3367,104],[72,2,3367,104],[73,2,3367,0,"Object"],[73,8,3367,0],[73,9,3367,0,"defineProperty"],[73,23,3367,0],[73,24,3367,0,"exports"],[73,31,3367,0],[74,4,3367,0,"enumerable"],[74,14,3367,0],[75,4,3367,0,"get"],[75,7,3367,0],[75,18,3367,0,"get"],[75,19,3367,0],[76,6,3367,0],[76,13,3367,106,"SQUARES"],[76,20,3367,113],[77,4,3367,113],[78,2,3367,113],[79,2,3367,0,"Object"],[79,8,3367,0],[79,9,3367,0,"defineProperty"],[79,23,3367,0],[79,24,3367,0,"exports"],[79,31,3367,0],[80,4,3367,0,"enumerable"],[80,14,3367,0],[81,4,3367,0,"get"],[81,7,3367,0],[81,18,3367,0,"get"],[81,19,3367,0],[82,6,3367,0],[82,13,3367,115,"WHITE"],[82,18,3367,120],[83,4,3367,120],[84,2,3367,120],[85,2,3367,0,"Object"],[85,8,3367,0],[85,9,3367,0,"defineProperty"],[85,23,3367,0],[85,24,3367,0,"exports"],[85,31,3367,0],[86,4,3367,0,"enumerable"],[86,14,3367,0],[87,4,3367,0,"get"],[87,7,3367,0],[87,18,3367,0,"get"],[87,19,3367,0],[88,6,3367,0],[88,13,3367,122,"validateFen"],[88,24,3367,133],[89,4,3367,133],[90,2,3367,133],[91,2,3367,0,"Object"],[91,8,3367,0],[91,9,3367,0,"defineProperty"],[91,23,3367,0],[91,24,3367,0,"exports"],[91,31,3367,0],[92,4,3367,0,"enumerable"],[92,14,3367,0],[93,4,3367,0,"get"],[93,7,3367,0],[93,18,3367,0,"get"],[93,19,3367,0],[94,6,3367,0],[94,13,3367,135,"xoroshiro128"],[94,25,3367,147],[95,4,3367,147],[96,2,3367,147],[97,2,1,0],[98,2,2,0],[99,2,3,0],[101,2,7,2],[101,11,7,11,"rootNode"],[101,19,7,19,"rootNode"],[101,20,7,20,"comment"],[101,27,7,27],[101,29,7,29],[102,4,8,3],[102,11,8,10,"comment"],[102,18,8,17],[102,23,8,22],[102,27,8,26],[102,30,8,29],[103,6,8,31,"comment"],[103,13,8,38],[104,6,8,40,"variations"],[104,16,8,50],[104,18,8,52],[105,4,8,55],[105,5,8,56],[105,8,8,59],[106,6,8,61,"variations"],[106,16,8,71],[106,18,8,73],[107,4,8,75],[107,5,8,76],[108,2,9,2],[109,2,11,2],[109,11,11,11,"node"],[109,15,11,15,"node"],[109,16,11,16,"move"],[109,20,11,20],[109,22,11,22,"suffix"],[109,28,11,28],[109,30,11,30,"nag"],[109,33,11,33],[109,35,11,35,"comment"],[109,42,11,42],[109,44,11,44,"variations"],[109,54,11,54],[109,56,11,56],[110,4,12,3],[110,10,12,9,"node"],[110,14,12,13],[110,17,12,16],[111,6,12,18,"move"],[111,10,12,22],[112,6,12,24,"variations"],[113,4,12,35],[113,5,12,36],[114,4,14,4],[114,8,14,8,"suffix"],[114,14,14,14],[114,16,14,16],[115,6,15,5,"node"],[115,10,15,9],[115,11,15,10,"suffix"],[115,17,15,16],[115,20,15,19,"suffix"],[115,26,15,25],[116,4,16,4],[117,4,18,4],[117,8,18,8,"nag"],[117,11,18,11],[117,13,18,13],[118,6,19,5,"node"],[118,10,19,9],[118,11,19,10,"nag"],[118,14,19,13],[118,17,19,16,"nag"],[118,20,19,19],[119,4,20,4],[120,4,22,4],[120,8,22,8,"comment"],[120,15,22,15],[120,20,22,20],[120,24,22,24],[120,26,22,26],[121,6,23,5,"node"],[121,10,23,9],[121,11,23,10,"comment"],[121,18,23,17],[121,21,23,20,"comment"],[121,28,23,27],[122,4,24,4],[123,4,26,4],[123,11,26,11,"node"],[123,15,26,15],[124,2,27,2],[125,2,29,2],[125,11,29,11,"lineToTree"],[125,21,29,21,"lineToTree"],[125,22,29,22],[125,25,29,25,"nodes"],[125,30,29,30],[125,32,29,32],[126,4,30,3],[126,10,30,9],[126,11,30,10,"root"],[126,15,30,14],[126,17,30,16],[126,20,30,19,"rest"],[126,24,30,23],[126,25,30,24],[126,28,30,27,"nodes"],[126,33,30,32],[127,4,32,4],[127,8,32,8,"parent"],[127,14,32,14],[127,17,32,17,"root"],[127,21,32,21],[128,4,34,4],[128,9,34,9],[128,15,34,15,"child"],[128,20,34,20],[128,24,34,24,"rest"],[128,28,34,28],[128,30,34,30],[129,6,35,5],[129,10,35,9,"child"],[129,15,35,14],[129,20,35,19],[129,24,35,23],[129,26,35,25],[130,8,36,9,"parent"],[130,14,36,15],[130,15,36,16,"variations"],[130,25,36,26],[130,28,36,29],[130,29,36,30,"child"],[130,34,36,35],[130,36,36,37],[130,39,36,40,"child"],[130,44,36,45],[130,45,36,46,"variations"],[130,55,36,56],[130,56,36,57],[131,8,37,12,"child"],[131,13,37,17],[131,14,37,18,"variations"],[131,24,37,28],[131,27,37,31],[131,29,37,33],[132,8,38,12,"parent"],[132,14,38,18],[132,17,38,21,"child"],[132,22,38,26],[133,6,39,8],[134,4,40,4],[135,4,42,3],[135,11,42,10,"root"],[135,15,42,14],[136,2,43,2],[137,2,45,2],[137,11,45,11,"pgn"],[137,14,45,14,"pgn"],[137,15,45,15,"headers"],[137,22,45,22],[137,24,45,24,"game"],[137,28,45,28],[137,30,45,30],[138,4,46,3],[138,8,46,7,"game"],[138,12,46,11],[138,13,46,12,"marker"],[138,19,46,18],[138,23,46,22,"game"],[138,27,46,26],[138,28,46,27,"marker"],[138,34,46,33],[138,35,46,34,"comment"],[138,42,46,41],[138,44,46,43],[139,6,47,5],[139,10,47,9,"node"],[139,14,47,13],[139,17,47,16,"game"],[139,21,47,20],[139,22,47,21,"root"],[139,26,47,25],[140,6,48,8],[140,13,48,15],[140,17,48,19],[140,19,48,21],[141,8,49,9],[141,14,49,15,"next"],[141,18,49,19],[141,21,49,22,"node"],[141,25,49,26],[141,26,49,27,"variations"],[141,36,49,37],[141,37,49,38],[141,38,49,39],[141,39,49,40],[142,8,50,12],[142,12,50,16],[142,13,50,17,"next"],[142,17,50,21],[142,19,50,23],[143,10,51,13,"node"],[143,14,51,17],[143,15,51,18,"comment"],[143,22,51,25],[143,25,51,28,"game"],[143,29,51,32],[143,30,51,33,"marker"],[143,36,51,39],[143,37,51,40,"comment"],[143,44,51,47],[144,10,52,13],[145,8,53,12],[146,8,54,12,"node"],[146,12,54,16],[146,15,54,19,"next"],[146,19,54,23],[147,6,55,8],[148,4,56,4],[149,4,58,3],[149,11,58,10],[150,6,59,5,"headers"],[150,13,59,12],[151,6,60,8,"root"],[151,10,60,12],[151,12,60,14,"game"],[151,16,60,18],[151,17,60,19,"root"],[151,21,60,23],[152,6,61,8,"result"],[152,12,61,14],[152,14,61,16],[152,15,61,17,"game"],[152,19,61,21],[152,20,61,22,"marker"],[152,26,61,28],[152,30,61,32,"game"],[152,34,61,36],[152,35,61,37,"marker"],[152,41,61,43],[152,42,61,44,"result"],[152,48,61,50],[152,53,61,55,"undefined"],[153,4,62,4],[153,5,62,5],[154,2,63,2],[155,2,65,0],[155,11,65,9,"peg$subclass"],[155,23,65,21,"peg$subclass"],[155,24,65,22,"child"],[155,29,65,27],[155,31,65,29,"parent"],[155,37,65,35],[155,39,65,37],[156,4,66,2],[156,13,66,11,"C"],[156,14,66,12,"C"],[156,15,66,12],[156,17,66,15],[157,6,66,17],[157,10,66,21],[157,11,66,22,"constructor"],[157,22,66,33],[157,25,66,36,"child"],[157,30,66,41],[158,4,66,43],[159,4,67,2,"C"],[159,5,67,3],[159,6,67,4,"prototype"],[159,15,67,13],[159,18,67,16,"parent"],[159,24,67,22],[159,25,67,23,"prototype"],[159,34,67,32],[160,4,68,2,"child"],[160,9,68,7],[160,10,68,8,"prototype"],[160,19,68,17],[160,22,68,20],[160,26,68,24,"C"],[160,27,68,25],[160,28,68,26],[160,29,68,27],[161,2,69,0],[162,2,71,0],[162,11,71,9,"peg$SyntaxError"],[162,26,71,24,"peg$SyntaxError"],[162,27,71,25,"message"],[162,34,71,32],[162,36,71,34,"expected"],[162,44,71,42],[162,46,71,44,"found"],[162,51,71,49],[162,53,71,51,"location"],[162,61,71,59],[162,63,71,61],[163,4,72,2],[163,8,72,6,"self"],[163,12,72,10],[163,15,72,13,"Error"],[163,20,72,18],[163,21,72,19,"call"],[163,25,72,23],[163,26,72,24],[163,30,72,28],[163,32,72,30,"message"],[163,39,72,37],[163,40,72,38],[164,4,73,2],[165,4,74,2],[165,8,74,6,"Object"],[165,14,74,12],[165,15,74,13,"setPrototypeOf"],[165,29,74,27],[165,31,74,29],[166,6,75,4,"Object"],[166,12,75,10],[166,13,75,11,"setPrototypeOf"],[166,27,75,25],[166,28,75,26,"self"],[166,32,75,30],[166,34,75,32,"peg$SyntaxError"],[166,49,75,47],[166,50,75,48,"prototype"],[166,59,75,57],[166,60,75,58],[167,4,76,2],[168,4,77,2,"self"],[168,8,77,6],[168,9,77,7,"expected"],[168,17,77,15],[168,20,77,18,"expected"],[168,28,77,26],[169,4,78,2,"self"],[169,8,78,6],[169,9,78,7,"found"],[169,14,78,12],[169,17,78,15,"found"],[169,22,78,20],[170,4,79,2,"self"],[170,8,79,6],[170,9,79,7,"location"],[170,17,79,15],[170,20,79,18,"location"],[170,28,79,26],[171,4,80,2,"self"],[171,8,80,6],[171,9,80,7,"name"],[171,13,80,11],[171,16,80,14],[171,29,80,27],[172,4,81,2],[172,11,81,9,"self"],[172,15,81,13],[173,2,82,0],[174,2,84,0,"peg$subclass"],[174,14,84,12],[174,15,84,13,"peg$SyntaxError"],[174,30,84,28],[174,32,84,30,"Error"],[174,37,84,35],[174,38,84,36],[175,2,86,0],[175,11,86,9,"peg$padEnd"],[175,21,86,19,"peg$padEnd"],[175,22,86,20,"str"],[175,25,86,23],[175,27,86,25,"targetLength"],[175,39,86,37],[175,41,86,39,"padString"],[175,50,86,48],[175,52,86,50],[176,4,87,2,"padString"],[176,13,87,11],[176,16,87,14,"padString"],[176,25,87,23],[176,29,87,27],[176,32,87,30],[177,4,88,2],[177,8,88,6,"str"],[177,11,88,9],[177,12,88,10,"length"],[177,18,88,16],[177,21,88,19,"targetLength"],[177,33,88,31],[177,35,88,33],[178,6,88,35],[178,13,88,42,"str"],[178,16,88,45],[179,4,88,47],[180,4,89,2,"targetLength"],[180,16,89,14],[180,20,89,18,"str"],[180,23,89,21],[180,24,89,22,"length"],[180,30,89,28],[181,4,90,2,"padString"],[181,13,90,11],[181,17,90,15,"padString"],[181,26,90,24],[181,27,90,25,"repeat"],[181,33,90,31],[181,34,90,32,"targetLength"],[181,46,90,44],[181,47,90,45],[182,4,91,2],[182,11,91,9,"str"],[182,14,91,12],[182,17,91,15,"padString"],[182,26,91,24],[182,27,91,25,"slice"],[182,32,91,30],[182,33,91,31],[182,34,91,32],[182,36,91,34,"targetLength"],[182,48,91,46],[182,49,91,47],[183,2,92,0],[184,2,94,0,"peg$SyntaxError"],[184,17,94,15],[184,18,94,16,"prototype"],[184,27,94,25],[184,28,94,26,"format"],[184,34,94,32],[184,37,94,35],[184,47,94,44,"sources"],[184,54,94,51],[184,56,94,53],[185,4,95,2],[185,8,95,6,"str"],[185,11,95,9],[185,14,95,12],[185,23,95,21],[185,26,95,24],[185,30,95,28],[185,31,95,29,"message"],[185,38,95,36],[186,4,96,2],[186,8,96,6],[186,12,96,10],[186,13,96,11,"location"],[186,21,96,19],[186,23,96,21],[187,6,97,4],[187,10,97,8,"src"],[187,13,97,11],[187,16,97,14],[187,20,97,18],[188,6,98,4],[188,10,98,8,"k"],[188,11,98,9],[189,6,99,4],[189,11,99,9,"k"],[189,12,99,10],[189,15,99,13],[189,16,99,14],[189,18,99,16,"k"],[189,19,99,17],[189,22,99,20,"sources"],[189,29,99,27],[189,30,99,28,"length"],[189,36,99,34],[189,38,99,36,"k"],[189,39,99,37],[189,41,99,39],[189,43,99,41],[190,8,100,6],[190,12,100,10,"sources"],[190,19,100,17],[190,20,100,18,"k"],[190,21,100,19],[190,22,100,20],[190,23,100,21,"source"],[190,29,100,27],[190,34,100,32],[190,38,100,36],[190,39,100,37,"location"],[190,47,100,45],[190,48,100,46,"source"],[190,54,100,52],[190,56,100,54],[191,10,101,8,"src"],[191,13,101,11],[191,16,101,14,"sources"],[191,23,101,21],[191,24,101,22,"k"],[191,25,101,23],[191,26,101,24],[191,27,101,25,"text"],[191,31,101,29],[191,32,101,30,"split"],[191,37,101,35],[191,38,101,36],[191,51,101,49],[191,52,101,50],[192,10,102,8],[193,8,103,6],[194,6,104,4],[195,6,105,4],[195,10,105,8,"s"],[195,11,105,9],[195,14,105,12],[195,18,105,16],[195,19,105,17,"location"],[195,27,105,25],[195,28,105,26,"start"],[195,33,105,31],[196,6,106,4],[196,10,106,8,"offset_s"],[196,18,106,16],[196,21,106,20],[196,25,106,24],[196,26,106,25,"location"],[196,34,106,33],[196,35,106,34,"source"],[196,41,106,40],[196,45,106,45],[196,52,106,52],[196,56,106,56],[196,57,106,57,"location"],[196,65,106,65],[196,66,106,66,"source"],[196,72,106,72],[196,73,106,73,"offset"],[196,79,106,79],[196,84,106,84],[196,94,106,95],[196,97,107,8],[196,101,107,12],[196,102,107,13,"location"],[196,110,107,21],[196,111,107,22,"source"],[196,117,107,28],[196,118,107,29,"offset"],[196,124,107,35],[196,125,107,36,"s"],[196,126,107,37],[196,127,107,38],[196,130,108,8,"s"],[196,131,108,9],[197,6,109,4],[197,10,109,8,"loc"],[197,13,109,11],[197,16,109,14],[197,20,109,18],[197,21,109,19,"location"],[197,29,109,27],[197,30,109,28,"source"],[197,36,109,34],[197,39,109,37],[197,42,109,40],[197,45,109,43,"offset_s"],[197,53,109,51],[197,54,109,52,"line"],[197,58,109,56],[197,61,109,59],[197,64,109,62],[197,67,109,65,"offset_s"],[197,75,109,73],[197,76,109,74,"column"],[197,82,109,80],[198,6,110,4],[198,10,110,8,"src"],[198,13,110,11],[198,15,110,13],[199,8,111,6],[199,12,111,10,"e"],[199,13,111,11],[199,16,111,14],[199,20,111,18],[199,21,111,19,"location"],[199,29,111,27],[199,30,111,28,"end"],[199,33,111,31],[200,8,112,6],[200,12,112,10,"filler"],[200,18,112,16],[200,21,112,19,"peg$padEnd"],[200,31,112,29],[200,32,112,30],[200,34,112,32],[200,36,112,34,"offset_s"],[200,44,112,42],[200,45,112,43,"line"],[200,49,112,47],[200,50,112,48,"toString"],[200,58,112,56],[200,59,112,57],[200,60,112,58],[200,61,112,59,"length"],[200,67,112,65],[200,69,112,67],[200,72,112,70],[200,73,112,71],[201,8,113,6],[201,12,113,10,"line"],[201,16,113,14],[201,19,113,17,"src"],[201,22,113,20],[201,23,113,21,"s"],[201,24,113,22],[201,25,113,23,"line"],[201,29,113,27],[201,32,113,30],[201,33,113,31],[201,34,113,32],[202,8,114,6],[202,12,114,10,"last"],[202,16,114,14],[202,19,114,17,"s"],[202,20,114,18],[202,21,114,19,"line"],[202,25,114,23],[202,30,114,28,"e"],[202,31,114,29],[202,32,114,30,"line"],[202,36,114,34],[202,39,114,37,"e"],[202,40,114,38],[202,41,114,39,"column"],[202,47,114,45],[202,50,114,48,"line"],[202,54,114,52],[202,55,114,53,"length"],[202,61,114,59],[202,64,114,62],[202,65,114,63],[203,8,115,6],[203,12,115,10,"hatLen"],[203,18,115,16],[203,21,115,20,"last"],[203,25,115,24],[203,28,115,27,"s"],[203,29,115,28],[203,30,115,29,"column"],[203,36,115,35],[203,40,115,40],[203,41,115,41],[204,8,116,6,"str"],[204,11,116,9],[204,15,116,13],[204,24,116,22],[204,27,116,25,"loc"],[204,30,116,28],[204,33,116,31],[204,37,116,35],[204,40,117,12,"filler"],[204,46,117,18],[204,49,117,21],[204,55,117,27],[204,58,118,12,"offset_s"],[204,66,118,20],[204,67,118,21,"line"],[204,71,118,25],[204,74,118,28],[204,79,118,33],[204,82,118,36,"line"],[204,86,118,40],[204,89,118,43],[204,93,118,47],[204,96,119,12,"filler"],[204,102,119,18],[204,105,119,21],[204,110,119,26],[204,113,119,29,"peg$padEnd"],[204,123,119,39],[204,124,119,40],[204,126,119,42],[204,128,119,44,"s"],[204,129,119,45],[204,130,119,46,"column"],[204,136,119,52],[204,139,119,55],[204,140,119,56],[204,142,119,58],[204,145,119,61],[204,146,119,62],[204,149,120,12,"peg$padEnd"],[204,159,120,22],[204,160,120,23],[204,162,120,25],[204,164,120,27,"hatLen"],[204,170,120,33],[204,172,120,35],[204,175,120,38],[204,176,120,39],[205,6,121,4],[205,7,121,5],[205,13,121,11],[206,8,122,6,"str"],[206,11,122,9],[206,15,122,13],[206,23,122,21],[206,26,122,24,"loc"],[206,29,122,27],[207,6,123,4],[208,4,124,2],[209,4,125,2],[209,11,125,9,"str"],[209,14,125,12],[210,2,126,0],[210,3,126,1],[211,2,128,0,"peg$SyntaxError"],[211,17,128,15],[211,18,128,16,"buildMessage"],[211,30,128,28],[211,33,128,31],[211,43,128,40,"expected"],[211,51,128,48],[211,53,128,50,"found"],[211,58,128,55],[211,60,128,57],[212,4,129,2],[212,8,129,6,"DESCRIBE_EXPECTATION_FNS"],[212,32,129,30],[212,35,129,33],[213,6,130,4,"literal"],[213,13,130,11],[213,15,130,13],[213,24,130,13,"literal"],[213,25,130,22,"expectation"],[213,36,130,33],[213,38,130,35],[214,8,131,6],[214,15,131,13],[214,19,131,17],[214,22,131,20,"literalEscape"],[214,35,131,33],[214,36,131,34,"expectation"],[214,47,131,45],[214,48,131,46,"text"],[214,52,131,50],[214,53,131,51],[214,56,131,54],[214,60,131,58],[215,6,132,4],[215,7,132,5],[216,6,134,4,"class"],[216,11,134,9],[216,13,134,11],[216,22,134,11,"class"],[216,23,134,20,"expectation"],[216,34,134,31],[216,36,134,33],[217,8,135,6],[217,12,135,10,"escapedParts"],[217,24,135,22],[217,27,135,25,"expectation"],[217,38,135,36],[217,39,135,37,"parts"],[217,44,135,42],[217,45,135,43,"map"],[217,48,135,46],[217,49,135,47],[217,59,135,56,"part"],[217,63,135,60],[217,65,135,62],[218,10,136,8],[218,17,136,15,"Array"],[218,22,136,20],[218,23,136,21,"isArray"],[218,30,136,28],[218,31,136,29,"part"],[218,35,136,33],[218,36,136,34],[218,39,137,12,"classEscape"],[218,50,137,23],[218,51,137,24,"part"],[218,55,137,28],[218,56,137,29],[218,57,137,30],[218,58,137,31],[218,59,137,32],[218,62,137,35],[218,65,137,38],[218,68,137,41,"classEscape"],[218,79,137,52],[218,80,137,53,"part"],[218,84,137,57],[218,85,137,58],[218,86,137,59],[218,87,137,60],[218,88,137,61],[218,91,138,12,"classEscape"],[218,102,138,23],[218,103,138,24,"part"],[218,107,138,28],[218,108,138,29],[219,8,139,6],[219,9,139,7],[219,10,139,8],[220,8,141,6],[220,15,141,13],[220,18,141,16],[220,22,141,20,"expectation"],[220,33,141,31],[220,34,141,32,"inverted"],[220,42,141,40],[220,45,141,43],[220,48,141,46],[220,51,141,49],[220,53,141,51],[220,54,141,52],[220,57,141,55,"escapedParts"],[220,69,141,67],[220,70,141,68,"join"],[220,74,141,72],[220,75,141,73],[220,77,141,75],[220,78,141,76],[220,81,141,79],[220,84,141,82],[221,6,142,4],[221,7,142,5],[222,6,144,4,"any"],[222,9,144,7],[222,11,144,9],[222,20,144,9,"any"],[222,21,144,9],[222,23,144,20],[223,8,145,6],[223,15,145,13],[223,30,145,28],[224,6,146,4],[224,7,146,5],[225,6,148,4,"end"],[225,9,148,7],[225,11,148,9],[225,20,148,9,"end"],[225,21,148,9],[225,23,148,20],[226,8,149,6],[226,15,149,13],[226,29,149,27],[227,6,150,4],[227,7,150,5],[228,6,152,4,"other"],[228,11,152,9],[228,13,152,11],[228,22,152,11,"other"],[228,23,152,20,"expectation"],[228,34,152,31],[228,36,152,33],[229,8,153,6],[229,15,153,13,"expectation"],[229,26,153,24],[229,27,153,25,"description"],[229,38,153,36],[230,6,154,4],[231,4,155,2],[231,5,155,3],[232,4,157,2],[232,13,157,11,"hex"],[232,16,157,14,"hex"],[232,17,157,15,"ch"],[232,19,157,17],[232,21,157,19],[233,6,158,4],[233,13,158,11,"ch"],[233,15,158,13],[233,16,158,14,"charCodeAt"],[233,26,158,24],[233,27,158,25],[233,28,158,26],[233,29,158,27],[233,30,158,28,"toString"],[233,38,158,36],[233,39,158,37],[233,41,158,39],[233,42,158,40],[233,43,158,41,"toUpperCase"],[233,54,158,52],[233,55,158,53],[233,56,158,54],[234,4,159,2],[235,4,161,2],[235,13,161,11,"literalEscape"],[235,26,161,24,"literalEscape"],[235,27,161,25,"s"],[235,28,161,26],[235,30,161,28],[236,6,162,4],[236,13,162,11,"s"],[236,14,162,12],[236,15,163,7,"replace"],[236,22,163,14],[236,23,163,15],[236,28,163,20],[236,30,163,22],[236,36,163,28],[236,37,163,29],[236,38,164,7,"replace"],[236,45,164,14],[236,46,164,15],[236,50,164,19],[236,52,164,22],[236,58,164,28],[236,59,164,29],[236,60,165,7,"replace"],[236,67,165,14],[236,68,165,15],[236,73,165,20],[236,75,165,22],[236,80,165,27],[236,81,165,28],[236,82,166,7,"replace"],[236,89,166,14],[236,90,166,15],[236,95,166,20],[236,97,166,22],[236,102,166,27],[236,103,166,28],[236,104,167,7,"replace"],[236,111,167,14],[236,112,167,15],[236,117,167,20],[236,119,167,22],[236,124,167,27],[236,125,167,28],[236,126,168,7,"replace"],[236,133,168,14],[236,134,168,15],[236,139,168,20],[236,141,168,22],[236,146,168,27],[236,147,168,28],[236,148,169,7,"replace"],[236,155,169,14],[236,156,169,15],[236,170,169,29],[236,172,169,40],[236,182,169,49,"ch"],[236,184,169,51],[236,186,169,53],[237,8,169,55],[237,15,169,62],[237,21,169,68],[237,24,169,71,"hex"],[237,27,169,74],[237,28,169,75,"ch"],[237,30,169,77],[237,31,169,78],[238,6,169,80],[238,7,169,81],[238,8,169,82],[238,9,170,7,"replace"],[238,16,170,14],[238,17,170,15],[238,40,170,38],[238,42,170,40],[238,52,170,49,"ch"],[238,54,170,51],[238,56,170,53],[239,8,170,55],[239,15,170,62],[239,20,170,67],[239,23,170,71,"hex"],[239,26,170,74],[239,27,170,75,"ch"],[239,29,170,77],[239,30,170,78],[240,6,170,80],[240,7,170,81],[240,8,170,82],[241,4,171,2],[242,4,173,2],[242,13,173,11,"classEscape"],[242,24,173,22,"classEscape"],[242,25,173,23,"s"],[242,26,173,24],[242,28,173,26],[243,6,174,4],[243,13,174,11,"s"],[243,14,174,12],[243,15,175,7,"replace"],[243,22,175,14],[243,23,175,15],[243,28,175,20],[243,30,175,22],[243,36,175,28],[243,37,175,29],[243,38,176,7,"replace"],[243,45,176,14],[243,46,176,15],[243,51,176,20],[243,53,176,22],[243,58,176,27],[243,59,176,28],[243,60,177,7,"replace"],[243,67,177,14],[243,68,177,15],[243,73,177,20],[243,75,177,22],[243,80,177,27],[243,81,177,28],[243,82,178,7,"replace"],[243,89,178,14],[243,90,178,15],[243,94,178,19],[243,96,178,22],[243,101,178,27],[243,102,178,28],[243,103,179,7,"replace"],[243,110,179,14],[243,111,179,15],[243,116,179,20],[243,118,179,22],[243,123,179,27],[243,124,179,28],[243,125,180,7,"replace"],[243,132,180,14],[243,133,180,15],[243,138,180,20],[243,140,180,22],[243,145,180,27],[243,146,180,28],[243,147,181,7,"replace"],[243,154,181,14],[243,155,181,15],[243,160,181,20],[243,162,181,22],[243,167,181,27],[243,168,181,28],[243,169,182,7,"replace"],[243,176,182,14],[243,177,182,15],[243,182,182,20],[243,184,182,22],[243,189,182,27],[243,190,182,28],[243,191,183,7,"replace"],[243,198,183,14],[243,199,183,15],[243,213,183,29],[243,215,183,40],[243,225,183,49,"ch"],[243,227,183,51],[243,229,183,53],[244,8,183,55],[244,15,183,62],[244,21,183,68],[244,24,183,71,"hex"],[244,27,183,74],[244,28,183,75,"ch"],[244,30,183,77],[244,31,183,78],[245,6,183,80],[245,7,183,81],[245,8,183,82],[245,9,184,7,"replace"],[245,16,184,14],[245,17,184,15],[245,40,184,38],[245,42,184,40],[245,52,184,49,"ch"],[245,54,184,51],[245,56,184,53],[246,8,184,55],[246,15,184,62],[246,20,184,67],[246,23,184,71,"hex"],[246,26,184,74],[246,27,184,75,"ch"],[246,29,184,77],[246,30,184,78],[247,6,184,80],[247,7,184,81],[247,8,184,82],[248,4,185,2],[249,4,187,2],[249,13,187,11,"describeExpectation"],[249,32,187,30,"describeExpectation"],[249,33,187,31,"expectation"],[249,44,187,42],[249,46,187,44],[250,6,188,4],[250,13,188,11,"DESCRIBE_EXPECTATION_FNS"],[250,37,188,35],[250,38,188,36,"expectation"],[250,49,188,47],[250,50,188,48,"type"],[250,54,188,52],[250,55,188,53],[250,56,188,54,"expectation"],[250,67,188,65],[250,68,188,66],[251,4,189,2],[252,4,191,2],[252,13,191,11,"describeExpected"],[252,29,191,27,"describeExpected"],[252,30,191,28,"expected"],[252,38,191,36],[252,40,191,38],[253,6,192,4],[253,10,192,8,"descriptions"],[253,22,192,20],[253,25,192,23,"expected"],[253,33,192,31],[253,34,192,32,"map"],[253,37,192,35],[253,38,192,36,"describeExpectation"],[253,57,192,55],[253,58,192,56],[254,6,193,4],[254,10,193,8,"i"],[254,11,193,9],[254,13,193,11,"j"],[254,14,193,12],[255,6,195,4,"descriptions"],[255,18,195,16],[255,19,195,17,"sort"],[255,23,195,21],[255,24,195,22],[255,25,195,23],[256,6,197,4],[256,10,197,8,"descriptions"],[256,22,197,20],[256,23,197,21,"length"],[256,29,197,27],[256,32,197,30],[256,33,197,31],[256,35,197,33],[257,8,198,6],[257,13,198,11,"i"],[257,14,198,12],[257,17,198,15],[257,18,198,16],[257,20,198,18,"j"],[257,21,198,19],[257,24,198,22],[257,25,198,23],[257,27,198,25,"i"],[257,28,198,26],[257,31,198,29,"descriptions"],[257,43,198,41],[257,44,198,42,"length"],[257,50,198,48],[257,52,198,50,"i"],[257,53,198,51],[257,55,198,53],[257,57,198,55],[258,10,199,8],[258,14,199,12,"descriptions"],[258,26,199,24],[258,27,199,25,"i"],[258,28,199,26],[258,31,199,29],[258,32,199,30],[258,33,199,31],[258,38,199,36,"descriptions"],[258,50,199,48],[258,51,199,49,"i"],[258,52,199,50],[258,53,199,51],[258,55,199,53],[259,12,200,10,"descriptions"],[259,24,200,22],[259,25,200,23,"j"],[259,26,200,24],[259,27,200,25],[259,30,200,28,"descriptions"],[259,42,200,40],[259,43,200,41,"i"],[259,44,200,42],[259,45,200,43],[260,12,201,10,"j"],[260,13,201,11],[260,15,201,13],[261,10,202,8],[262,8,203,6],[263,8,204,6,"descriptions"],[263,20,204,18],[263,21,204,19,"length"],[263,27,204,25],[263,30,204,28,"j"],[263,31,204,29],[264,6,205,4],[265,6,207,4],[265,14,207,12,"descriptions"],[265,26,207,24],[265,27,207,25,"length"],[265,33,207,31],[266,8,208,6],[266,13,208,11],[266,14,208,12],[267,10,209,8],[267,17,209,15,"descriptions"],[267,29,209,27],[267,30,209,28],[267,31,209,29],[267,32,209,30],[268,8,211,6],[268,13,211,11],[268,14,211,12],[269,10,212,8],[269,17,212,15,"descriptions"],[269,29,212,27],[269,30,212,28],[269,31,212,29],[269,32,212,30],[269,35,212,33],[269,41,212,39],[269,44,212,42,"descriptions"],[269,56,212,54],[269,57,212,55],[269,58,212,56],[269,59,212,57],[270,8,214,6],[271,10,215,8],[271,17,215,15,"descriptions"],[271,29,215,27],[271,30,215,28,"slice"],[271,35,215,33],[271,36,215,34],[271,37,215,35],[271,39,215,37],[271,40,215,38],[271,41,215,39],[271,42,215,40],[271,43,215,41,"join"],[271,47,215,45],[271,48,215,46],[271,52,215,50],[271,53,215,51],[271,56,216,12],[271,63,216,19],[271,66,217,12,"descriptions"],[271,78,217,24],[271,79,217,25,"descriptions"],[271,91,217,37],[271,92,217,38,"length"],[271,98,217,44],[271,101,217,47],[271,102,217,48],[271,103,217,49],[272,6,218,4],[273,4,219,2],[274,4,221,2],[274,13,221,11,"describeFound"],[274,26,221,24,"describeFound"],[274,27,221,25,"found"],[274,32,221,30],[274,34,221,32],[275,6,222,4],[275,13,222,11,"found"],[275,18,222,16],[275,21,222,19],[275,25,222,23],[275,28,222,26,"literalEscape"],[275,41,222,39],[275,42,222,40,"found"],[275,47,222,45],[275,48,222,46],[275,51,222,49],[275,55,222,53],[275,58,222,56],[275,72,222,70],[276,4,223,2],[277,4,225,2],[277,11,225,9],[277,22,225,20],[277,25,225,23,"describeExpected"],[277,41,225,39],[277,42,225,40,"expected"],[277,50,225,48],[277,51,225,49],[277,54,225,52],[277,61,225,59],[277,64,225,62,"describeFound"],[277,77,225,75],[277,78,225,76,"found"],[277,83,225,81],[277,84,225,82],[277,87,225,85],[277,96,225,94],[278,2,226,0],[278,3,226,1],[279,2,228,0],[279,11,228,9,"peg$parse"],[279,20,228,18,"peg$parse"],[279,21,228,19,"input"],[279,26,228,24],[279,28,228,26,"options"],[279,35,228,33],[279,37,228,35],[280,4,229,2,"options"],[280,11,229,9],[280,14,229,12,"options"],[280,21,229,19],[280,26,229,24,"undefined"],[280,35,229,33],[280,38,229,36,"options"],[280,45,229,43],[280,48,229,46],[280,49,229,47],[280,50,229,48],[281,4,231,2],[281,8,231,6,"peg$FAILED"],[281,18,231,16],[281,21,231,19],[281,22,231,20],[281,23,231,21],[282,4,232,2],[282,8,232,6,"peg$source"],[282,18,232,16],[282,21,232,19,"options"],[282,28,232,26],[282,29,232,27,"grammarSource"],[282,42,232,40],[283,4,234,2],[283,8,234,6,"peg$startRuleFunctions"],[283,30,234,28],[283,33,234,31],[284,6,234,33,"pgn"],[284,9,234,36],[284,11,234,38,"peg$parsepgn"],[285,4,234,51],[285,5,234,52],[286,4,235,2],[286,8,235,6,"peg$startRuleFunction"],[286,29,235,27],[286,32,235,30,"peg$parsepgn"],[286,44,235,42],[287,4,237,2],[287,8,237,6,"peg$c0"],[287,14,237,12],[287,17,237,15],[287,20,237,18],[288,4,238,2],[288,8,238,6,"peg$c1"],[288,14,238,12],[288,17,238,15],[288,21,238,19],[289,4,239,2],[289,8,239,6,"peg$c2"],[289,14,239,12],[289,17,239,15],[289,20,239,18],[290,4,240,2],[290,8,240,6,"peg$c3"],[290,14,240,12],[290,17,240,15],[290,20,240,18],[291,4,241,2],[291,8,241,6,"peg$c4"],[291,14,241,12],[291,17,241,15],[291,24,241,22],[292,4,242,2],[292,8,242,6,"peg$c5"],[292,14,242,12],[292,17,242,15],[292,22,242,20],[293,4,243,2],[293,8,243,6,"peg$c6"],[293,14,243,12],[293,17,243,15],[293,24,243,22],[294,4,244,2],[294,8,244,6,"peg$c7"],[294,14,244,12],[294,17,244,15],[294,22,244,20],[295,4,245,2],[295,8,245,6,"peg$c8"],[295,14,245,12],[295,17,245,15],[295,20,245,18],[296,4,246,2],[296,8,246,6,"peg$c9"],[296,14,246,12],[296,17,246,15],[296,20,246,18],[297,4,247,2],[297,8,247,6,"peg$c10"],[297,15,247,13],[297,18,247,16],[297,21,247,19],[298,4,248,2],[298,8,248,6,"peg$c11"],[298,15,248,13],[298,18,248,16],[298,21,248,19],[299,4,249,2],[299,8,249,6,"peg$c12"],[299,15,249,13],[299,18,249,16],[299,21,249,19],[300,4,250,2],[300,8,250,6,"peg$c13"],[300,15,250,13],[300,18,250,16],[300,21,250,19],[301,4,251,2],[301,8,251,6,"peg$c14"],[301,15,251,13],[301,18,251,16],[301,23,251,21],[302,4,252,2],[302,8,252,6,"peg$c15"],[302,15,252,13],[302,18,252,16],[302,23,252,21],[303,4,253,2],[303,8,253,6,"peg$c16"],[303,15,253,13],[303,18,253,16],[303,27,253,25],[304,4,254,2],[304,8,254,6,"peg$c17"],[304,15,254,13],[304,18,254,16],[304,21,254,19],[305,4,256,2],[305,8,256,6,"peg$r0"],[305,14,256,12],[305,17,256,15],[305,28,256,26],[306,4,257,2],[306,8,257,6,"peg$r1"],[306,14,257,12],[306,17,257,15],[306,24,257,22],[307,4,258,2],[307,8,258,6,"peg$r2"],[307,14,258,12],[307,17,258,15],[307,25,258,23],[308,4,259,2],[308,8,259,6,"peg$r3"],[308,14,259,12],[308,17,259,15],[308,23,259,21],[309,4,260,2],[309,8,260,6,"peg$r4"],[309,14,260,12],[309,17,260,15],[309,34,260,32],[310,4,261,2],[310,8,261,6,"peg$r5"],[310,14,261,12],[310,17,261,15],[310,24,261,22],[311,4,262,2],[311,8,262,6,"peg$r6"],[311,14,262,12],[311,17,262,15],[311,24,262,22],[312,4,263,2],[312,8,263,6,"peg$r7"],[312,14,263,12],[312,17,263,15],[312,24,263,22],[313,4,264,2],[313,8,264,6,"peg$r8"],[313,14,264,12],[313,17,264,15],[313,27,264,25],[314,4,265,2],[314,8,265,6,"peg$r9"],[314,14,265,12],[314,17,265,15],[314,29,265,27],[315,4,267,2],[315,8,267,6,"peg$e0"],[315,14,267,12],[315,17,267,15,"peg$otherExpectation"],[315,37,267,35],[315,38,267,36],[315,48,267,46],[315,49,267,47],[316,4,268,2],[316,8,268,6,"peg$e1"],[316,14,268,12],[316,17,268,15,"peg$literalExpectation"],[316,39,268,37],[316,40,268,38],[316,43,268,41],[316,45,268,43],[316,50,268,48],[316,51,268,49],[317,4,269,2],[317,8,269,6,"peg$e2"],[317,14,269,12],[317,17,269,15,"peg$literalExpectation"],[317,39,269,37],[317,40,269,38],[317,44,269,42],[317,46,269,44],[317,51,269,49],[317,52,269,50],[318,4,270,2],[318,8,270,6,"peg$e3"],[318,14,270,12],[318,17,270,15,"peg$literalExpectation"],[318,39,270,37],[318,40,270,38],[318,43,270,41],[318,45,270,43],[318,50,270,48],[318,51,270,49],[319,4,271,2],[319,8,271,6,"peg$e4"],[319,14,271,12],[319,17,271,15,"peg$otherExpectation"],[319,37,271,35],[319,38,271,36],[319,48,271,46],[319,49,271,47],[320,4,272,2],[320,8,272,6,"peg$e5"],[320,14,272,12],[320,17,272,15,"peg$classExpectation"],[320,37,272,35],[320,38,272,36],[320,39,272,37],[320,40,272,38],[320,43,272,41],[320,45,272,43],[320,48,272,46],[320,49,272,47],[320,51,272,49],[320,52,272,50],[320,55,272,53],[320,57,272,55],[320,60,272,58],[320,61,272,59],[320,62,272,60],[320,64,272,62],[320,69,272,67],[320,71,272,69],[320,76,272,74],[320,77,272,75],[321,4,273,2],[321,8,273,6,"peg$e6"],[321,14,273,12],[321,17,273,15,"peg$otherExpectation"],[321,37,273,35],[321,38,273,36],[321,49,273,47],[321,50,273,48],[322,4,274,2],[322,8,274,6,"peg$e7"],[322,14,274,12],[322,17,274,15,"peg$classExpectation"],[322,37,274,35],[322,38,274,36],[322,39,274,37],[322,43,274,41],[322,44,274,42],[322,46,274,44],[322,50,274,48],[322,52,274,50],[322,57,274,55],[322,58,274,56],[323,4,275,2],[323,8,275,6,"peg$e8"],[323,14,275,12],[323,17,275,15,"peg$otherExpectation"],[323,37,275,35],[323,38,275,36],[323,51,275,49],[323,52,275,50],[324,4,276,2],[324,8,276,6,"peg$e9"],[324,14,276,12],[324,17,276,15,"peg$classExpectation"],[324,37,276,35],[324,38,276,36],[324,39,276,37],[324,40,276,38],[324,43,276,41],[324,45,276,43],[324,48,276,46],[324,49,276,47],[324,50,276,48],[324,52,276,50],[324,57,276,55],[324,59,276,57],[324,64,276,62],[324,65,276,63],[325,4,277,2],[325,8,277,6,"peg$e10"],[325,15,277,13],[325,18,277,16,"peg$literalExpectation"],[325,40,277,38],[325,41,277,39],[325,44,277,42],[325,46,277,44],[325,51,277,49],[325,52,277,50],[326,4,278,2],[326,8,278,6,"peg$e11"],[326,15,278,13],[326,18,278,16,"peg$classExpectation"],[326,38,278,36],[326,39,278,37],[326,40,278,38],[326,43,278,41],[326,44,278,42],[326,46,278,44],[326,51,278,49],[326,53,278,51],[326,58,278,56],[326,59,278,57],[327,4,279,2],[327,8,279,6,"peg$e12"],[327,15,279,13],[327,18,279,16,"peg$otherExpectation"],[327,38,279,36],[327,39,279,37],[327,68,279,66],[327,69,279,67],[328,4,280,2],[328,8,280,6,"peg$e13"],[328,15,280,13],[328,18,280,16,"peg$literalExpectation"],[328,40,280,38],[328,41,280,39],[328,48,280,46],[328,50,280,48],[328,55,280,53],[328,56,280,54],[329,4,281,2],[329,8,281,6,"peg$e14"],[329,15,281,13],[329,18,281,16,"peg$literalExpectation"],[329,40,281,38],[329,41,281,39],[329,46,281,44],[329,48,281,46],[329,53,281,51],[329,54,281,52],[330,4,282,2],[330,8,282,6,"peg$e15"],[330,15,282,13],[330,18,282,16,"peg$literalExpectation"],[330,40,282,38],[330,41,282,39],[330,48,282,46],[330,50,282,48],[330,55,282,53],[330,56,282,54],[331,4,283,2],[331,8,283,6,"peg$e16"],[331,15,283,13],[331,18,283,16,"peg$literalExpectation"],[331,40,283,38],[331,41,283,39],[331,46,283,44],[331,48,283,46],[331,53,283,51],[331,54,283,52],[332,4,284,2],[332,8,284,6,"peg$e17"],[332,15,284,13],[332,18,284,16,"peg$classExpectation"],[332,38,284,36],[332,39,284,37],[332,40,284,38],[332,41,284,39],[332,44,284,42],[332,46,284,44],[332,49,284,47],[332,50,284,48],[332,52,284,50],[332,53,284,51],[332,56,284,54],[332,58,284,56],[332,61,284,59],[332,62,284,60],[332,64,284,62],[332,65,284,63],[332,68,284,66],[332,70,284,68],[332,73,284,71],[332,74,284,72],[332,76,284,74],[332,79,284,77],[332,81,284,79],[332,84,284,82],[332,85,284,83],[332,87,284,85],[332,92,284,90],[332,94,284,92],[332,99,284,97],[332,100,284,98],[333,4,285,2],[333,8,285,6,"peg$e18"],[333,15,285,13],[333,18,285,16,"peg$classExpectation"],[333,38,285,36],[333,39,285,37],[333,40,285,38],[333,43,285,41],[333,45,285,43],[333,48,285,46],[333,49,285,47],[333,51,285,49],[333,56,285,54],[333,58,285,56],[333,63,285,61],[333,64,285,62],[334,4,286,2],[334,8,286,6,"peg$e19"],[334,15,286,13],[334,18,286,16,"peg$otherExpectation"],[334,38,286,36],[334,39,286,37],[334,58,286,56],[334,59,286,57],[335,4,287,2],[335,8,287,6,"peg$e20"],[335,15,287,13],[335,18,287,16,"peg$classExpectation"],[335,38,287,36],[335,39,287,37],[335,40,287,38],[335,43,287,41],[335,45,287,43],[335,48,287,46],[335,49,287,47],[335,51,287,49],[335,56,287,54],[335,58,287,56],[335,63,287,61],[335,64,287,62],[336,4,288,2],[336,8,288,6,"peg$e21"],[336,15,288,13],[336,18,288,16,"peg$otherExpectation"],[336,38,288,36],[336,39,288,37],[336,44,288,42],[336,45,288,43],[337,4,289,2],[337,8,289,6,"peg$e22"],[337,15,289,13],[337,18,289,16,"peg$literalExpectation"],[337,40,289,38],[337,41,289,39],[337,44,289,42],[337,46,289,44],[337,51,289,49],[337,52,289,50],[338,4,290,2],[338,8,290,6,"peg$e23"],[338,15,290,13],[338,18,290,16,"peg$otherExpectation"],[338,38,290,36],[338,39,290,37],[338,54,290,52],[338,55,290,53],[339,4,291,2],[339,8,291,6,"peg$e24"],[339,15,291,13],[339,18,291,16,"peg$literalExpectation"],[339,40,291,38],[339,41,291,39],[339,44,291,42],[339,46,291,44],[339,51,291,49],[339,52,291,50],[340,4,292,2],[340,8,292,6,"peg$e25"],[340,15,292,13],[340,18,292,16,"peg$classExpectation"],[340,38,292,36],[340,39,292,37],[340,40,292,38],[340,43,292,41],[340,44,292,42],[340,46,292,44],[340,50,292,48],[340,52,292,50],[340,57,292,55],[340,58,292,56],[341,4,293,2],[341,8,293,6,"peg$e26"],[341,15,293,13],[341,18,293,16,"peg$literalExpectation"],[341,40,293,38],[341,41,293,39],[341,44,293,42],[341,46,293,44],[341,51,293,49],[341,52,293,50],[342,4,294,2],[342,8,294,6,"peg$e27"],[342,15,294,13],[342,18,294,16,"peg$otherExpectation"],[342,38,294,36],[342,39,294,37],[342,61,294,59],[342,62,294,60],[343,4,295,2],[343,8,295,6,"peg$e28"],[343,15,295,13],[343,18,295,16,"peg$literalExpectation"],[343,40,295,38],[343,41,295,39],[343,44,295,42],[343,46,295,44],[343,51,295,49],[343,52,295,50],[344,4,296,2],[344,8,296,6,"peg$e29"],[344,15,296,13],[344,18,296,16,"peg$classExpectation"],[344,38,296,36],[344,39,296,37],[344,40,296,38],[344,44,296,42],[344,46,296,44],[344,50,296,48],[344,51,296,49],[344,53,296,51],[344,57,296,55],[344,59,296,57],[344,64,296,62],[344,65,296,63],[345,4,297,2],[345,8,297,6,"peg$e30"],[345,15,297,13],[345,18,297,16,"peg$otherExpectation"],[345,38,297,36],[345,39,297,37],[345,50,297,48],[345,51,297,49],[346,4,298,2],[346,8,298,6,"peg$e31"],[346,15,298,13],[346,18,298,16,"peg$literalExpectation"],[346,40,298,38],[346,41,298,39],[346,44,298,42],[346,46,298,44],[346,51,298,49],[346,52,298,50],[347,4,299,2],[347,8,299,6,"peg$e32"],[347,15,299,13],[347,18,299,16,"peg$literalExpectation"],[347,40,299,38],[347,41,299,39],[347,44,299,42],[347,46,299,44],[347,51,299,49],[347,52,299,50],[348,4,300,2],[348,8,300,6,"peg$e33"],[348,15,300,13],[348,18,300,16,"peg$otherExpectation"],[348,38,300,36],[348,39,300,37],[348,64,300,62],[348,65,300,63],[349,4,301,2],[349,8,301,6,"peg$e34"],[349,15,301,13],[349,18,301,16,"peg$literalExpectation"],[349,40,301,38],[349,41,301,39],[349,46,301,44],[349,48,301,46],[349,53,301,51],[349,54,301,52],[350,4,302,2],[350,8,302,6,"peg$e35"],[350,15,302,13],[350,18,302,16,"peg$literalExpectation"],[350,40,302,38],[350,41,302,39],[350,46,302,44],[350,48,302,46],[350,53,302,51],[350,54,302,52],[351,4,303,2],[351,8,303,6,"peg$e36"],[351,15,303,13],[351,18,303,16,"peg$literalExpectation"],[351,40,303,38],[351,41,303,39],[351,50,303,48],[351,52,303,50],[351,57,303,55],[351,58,303,56],[352,4,304,2],[352,8,304,6,"peg$e37"],[352,15,304,13],[352,18,304,16,"peg$literalExpectation"],[352,40,304,38],[352,41,304,39],[352,44,304,42],[352,46,304,44],[352,51,304,49],[352,52,304,50],[353,4,305,2],[353,8,305,6,"peg$e38"],[353,15,305,13],[353,18,305,16,"peg$otherExpectation"],[353,38,305,36],[353,39,305,37],[353,51,305,49],[353,52,305,50],[354,4,306,2],[354,8,306,6,"peg$e39"],[354,15,306,13],[354,18,306,16,"peg$classExpectation"],[354,38,306,36],[354,39,306,37],[354,40,306,38],[354,43,306,41],[354,45,306,43],[354,49,306,47],[354,51,306,49],[354,55,306,53],[354,57,306,55],[354,61,306,59],[354,62,306,60],[354,64,306,62],[354,69,306,67],[354,71,306,69],[354,76,306,74],[354,77,306,75],[355,4,308,2],[355,8,308,6,"peg$f0"],[355,14,308,12],[355,17,308,15],[355,26,308,15,"peg$f0"],[355,27,308,24,"headers"],[355,34,308,31],[355,36,308,33,"game"],[355,40,308,37],[355,42,308,39],[356,6,308,41],[356,13,308,48,"pgn"],[356,16,308,51],[356,17,308,52,"headers"],[356,24,308,59],[356,26,308,61,"game"],[356,30,308,65],[356,31,308,66],[357,4,308,67],[357,5,308,68],[358,4,309,2],[358,8,309,6,"peg$f1"],[358,14,309,12],[358,17,309,15],[358,26,309,15,"peg$f1"],[358,27,309,24,"tagPairs"],[358,35,309,32],[358,37,309,34],[359,6,309,36],[359,13,309,43,"Object"],[359,19,309,49],[359,20,309,50,"fromEntries"],[359,31,309,61],[359,32,309,62,"tagPairs"],[359,40,309,70],[359,41,309,71],[360,4,309,72],[360,5,309,73],[361,4,310,2],[361,8,310,6,"peg$f2"],[361,14,310,12],[361,17,310,15],[361,26,310,15,"peg$f2"],[361,27,310,24,"tagName"],[361,34,310,31],[361,36,310,33,"tagValue"],[361,44,310,41],[361,46,310,43],[362,6,310,45],[362,13,310,52],[362,14,310,53,"tagName"],[362,21,310,60],[362,23,310,62,"tagValue"],[362,31,310,70],[362,32,310,71],[363,4,310,72],[363,5,310,73],[364,4,311,2],[364,8,311,6,"peg$f3"],[364,14,311,12],[364,17,311,15],[364,26,311,15,"peg$f3"],[364,27,311,24,"root"],[364,31,311,28],[364,33,311,30,"marker"],[364,39,311,36],[364,41,311,38],[365,6,311,40],[365,13,311,47],[366,8,311,49,"root"],[366,12,311,53],[367,8,311,55,"marker"],[368,6,311,61],[368,7,311,62],[369,4,311,63],[369,5,311,64],[370,4,312,2],[370,8,312,6,"peg$f4"],[370,14,312,12],[370,17,312,15],[370,26,312,15,"peg$f4"],[370,27,312,24,"comment"],[370,34,312,31],[370,36,312,33,"moves"],[370,41,312,38],[370,43,312,40],[371,6,312,42],[371,13,312,49,"lineToTree"],[371,23,312,59],[371,24,312,60,"rootNode"],[371,32,312,68],[371,33,312,69,"comment"],[371,40,312,76],[371,41,312,77],[371,43,312,79],[371,46,312,82,"moves"],[371,51,312,87],[371,52,312,88,"flat"],[371,56,312,92],[371,57,312,93],[371,58,312,94],[371,59,312,95],[372,4,312,96],[372,5,312,97],[373,4,313,2],[373,8,313,6,"peg$f5"],[373,14,313,12],[373,17,313,15],[373,26,313,15,"peg$f5"],[373,27,313,24,"san"],[373,30,313,27],[373,32,313,29,"suffix"],[373,38,313,35],[373,40,313,37,"nag"],[373,43,313,40],[373,45,313,42,"comment"],[373,52,313,49],[373,54,313,51,"variations"],[373,64,313,61],[373,66,313,63],[374,6,313,65],[374,13,313,72,"node"],[374,17,313,76],[374,18,313,77,"san"],[374,21,313,80],[374,23,313,82,"suffix"],[374,29,313,88],[374,31,313,90,"nag"],[374,34,313,93],[374,36,313,95,"comment"],[374,43,313,102],[374,45,313,104,"variations"],[374,55,313,114],[374,56,313,115],[375,4,313,116],[375,5,313,117],[376,4,314,2],[376,8,314,6,"peg$f6"],[376,14,314,12],[376,17,314,15],[376,26,314,15,"peg$f6"],[376,27,314,24,"nag"],[376,30,314,27],[376,32,314,29],[377,6,314,31],[377,13,314,38,"nag"],[377,16,314,41],[378,4,314,42],[378,5,314,43],[379,4,315,2],[379,8,315,6,"peg$f7"],[379,14,315,12],[379,17,315,15],[379,26,315,15,"peg$f7"],[379,27,315,24,"comment"],[379,34,315,31],[379,36,315,33],[380,6,315,35],[380,13,315,42,"comment"],[380,20,315,49],[380,21,315,50,"replace"],[380,28,315,57],[380,29,315,58],[380,39,315,68],[380,41,315,70],[380,44,315,73],[380,45,315,74],[381,4,315,75],[381,5,315,76],[382,4,316,2],[382,8,316,6,"peg$f8"],[382,14,316,12],[382,17,316,15],[382,26,316,15,"peg$f8"],[382,27,316,24,"comment"],[382,34,316,31],[382,36,316,33],[383,6,316,35],[383,13,316,42,"comment"],[383,20,316,49],[383,21,316,50,"trim"],[383,25,316,54],[383,26,316,55],[383,27,316,56],[384,4,316,57],[384,5,316,58],[385,4,317,2],[385,8,317,6,"peg$f9"],[385,14,317,12],[385,17,317,15],[385,26,317,15,"peg$f9"],[385,27,317,24,"line"],[385,31,317,28],[385,33,317,30],[386,6,317,32],[386,13,317,39,"line"],[386,17,317,43],[387,4,317,44],[387,5,317,45],[388,4,318,2],[388,8,318,6,"peg$f10"],[388,15,318,13],[388,18,318,16],[388,27,318,16,"peg$f10"],[388,28,318,25,"result"],[388,34,318,31],[388,36,318,33,"comment"],[388,43,318,40],[388,45,318,42],[389,6,318,44],[389,13,318,51],[390,8,318,53,"result"],[390,14,318,59],[391,8,318,61,"comment"],[392,6,318,69],[392,7,318,70],[393,4,318,71],[393,5,318,72],[394,4,319,2],[394,8,319,6,"peg$currPos"],[394,19,319,17],[394,22,319,20,"options"],[394,29,319,27],[394,30,319,28,"peg$currPos"],[394,41,319,39],[394,44,319,42],[394,45,319,43],[395,4,320,2],[395,8,320,6,"peg$posDetailsCache"],[395,27,320,25],[395,30,320,28],[395,31,320,29],[396,6,320,31,"line"],[396,10,320,35],[396,12,320,37],[396,13,320,38],[397,6,320,40,"column"],[397,12,320,46],[397,14,320,48],[398,4,320,50],[398,5,320,51],[398,6,320,52],[399,4,321,2],[399,8,321,6,"peg$maxFailPos"],[399,22,321,20],[399,25,321,23,"peg$currPos"],[399,36,321,34],[400,4,322,2],[400,8,322,6,"peg$maxFailExpected"],[400,27,322,25],[400,30,322,28,"options"],[400,37,322,35],[400,38,322,36,"peg$maxFailExpected"],[400,57,322,55],[400,61,322,59],[400,63,322,61],[401,4,323,2],[401,8,323,6,"peg$silentFails"],[401,23,323,21],[401,26,323,24,"options"],[401,33,323,31],[401,34,323,32,"peg$silentFails"],[401,49,323,47],[401,52,323,50],[401,53,323,51],[402,4,325,2],[402,8,325,6,"peg$result"],[402,18,325,16],[403,4,327,2],[403,8,327,6,"options"],[403,15,327,13],[403,16,327,14,"startRule"],[403,25,327,23],[403,27,327,25],[404,6,328,4],[404,10,328,8],[404,12,328,10,"options"],[404,19,328,17],[404,20,328,18,"startRule"],[404,29,328,27],[404,33,328,31,"peg$startRuleFunctions"],[404,55,328,53],[404,56,328,54],[404,58,328,56],[405,8,329,6],[405,14,329,12],[405,18,329,16,"Error"],[405,23,329,21],[405,24,329,22],[405,58,329,56],[405,61,329,59,"options"],[405,68,329,66],[405,69,329,67,"startRule"],[405,78,329,76],[405,81,329,79],[405,86,329,84],[405,87,329,85],[406,6,330,4],[407,6,332,4,"peg$startRuleFunction"],[407,27,332,25],[407,30,332,28,"peg$startRuleFunctions"],[407,52,332,50],[407,53,332,51,"options"],[407,60,332,58],[407,61,332,59,"startRule"],[407,70,332,68],[407,71,332,69],[408,4,333,2],[409,4,335,2],[409,13,335,11,"peg$literalExpectation"],[409,35,335,33,"peg$literalExpectation"],[409,36,335,34,"text"],[409,40,335,38],[409,42,335,40,"ignoreCase"],[409,52,335,50],[409,54,335,52],[410,6,336,4],[410,13,336,11],[411,8,336,13,"type"],[411,12,336,17],[411,14,336,19],[411,23,336,28],[412,8,336,30,"text"],[412,12,336,34],[412,14,336,36,"text"],[412,18,336,40],[413,8,336,42,"ignoreCase"],[413,18,336,52],[413,20,336,54,"ignoreCase"],[414,6,336,65],[414,7,336,66],[415,4,337,2],[416,4,339,2],[416,13,339,11,"peg$classExpectation"],[416,33,339,31,"peg$classExpectation"],[416,34,339,32,"parts"],[416,39,339,37],[416,41,339,39,"inverted"],[416,49,339,47],[416,51,339,49,"ignoreCase"],[416,61,339,59],[416,63,339,61],[417,6,340,4],[417,13,340,11],[418,8,340,13,"type"],[418,12,340,17],[418,14,340,19],[418,21,340,26],[419,8,340,28,"parts"],[419,13,340,33],[419,15,340,35,"parts"],[419,20,340,40],[420,8,340,42,"inverted"],[420,16,340,50],[420,18,340,52,"inverted"],[420,26,340,60],[421,8,340,62,"ignoreCase"],[421,18,340,72],[421,20,340,74,"ignoreCase"],[422,6,340,85],[422,7,340,86],[423,4,341,2],[424,4,343,2],[424,13,343,11,"peg$endExpectation"],[424,31,343,29,"peg$endExpectation"],[424,32,343,29],[424,34,343,32],[425,6,344,4],[425,13,344,11],[426,8,344,13,"type"],[426,12,344,17],[426,14,344,19],[427,6,344,25],[427,7,344,26],[428,4,345,2],[429,4,347,2],[429,13,347,11,"peg$otherExpectation"],[429,33,347,31,"peg$otherExpectation"],[429,34,347,32,"description"],[429,45,347,43],[429,47,347,45],[430,6,348,4],[430,13,348,11],[431,8,348,13,"type"],[431,12,348,17],[431,14,348,19],[431,21,348,26],[432,8,348,28,"description"],[432,19,348,39],[432,21,348,41,"description"],[433,6,348,53],[433,7,348,54],[434,4,349,2],[435,4,351,2],[435,13,351,11,"peg$computePosDetails"],[435,34,351,32,"peg$computePosDetails"],[435,35,351,33,"pos"],[435,38,351,36],[435,40,351,38],[436,6,352,4],[436,10,352,8,"details"],[436,17,352,15],[436,20,352,18,"peg$posDetailsCache"],[436,39,352,37],[436,40,352,38,"pos"],[436,43,352,41],[436,44,352,42],[437,6,353,4],[437,10,353,8,"p"],[437,11,353,9],[438,6,355,4],[438,10,355,8,"details"],[438,17,355,15],[438,19,355,17],[439,8,356,6],[439,15,356,13,"details"],[439,22,356,20],[440,6,357,4],[440,7,357,5],[440,13,357,11],[441,8,358,6],[441,12,358,10,"pos"],[441,15,358,13],[441,19,358,17,"peg$posDetailsCache"],[441,38,358,36],[441,39,358,37,"length"],[441,45,358,43],[441,47,358,45],[442,10,359,8,"p"],[442,11,359,9],[442,14,359,12,"peg$posDetailsCache"],[442,33,359,31],[442,34,359,32,"length"],[442,40,359,38],[442,43,359,41],[442,44,359,42],[443,8,360,6],[443,9,360,7],[443,15,360,13],[444,10,361,8,"p"],[444,11,361,9],[444,14,361,12,"pos"],[444,17,361,15],[445,10,362,8],[445,17,362,15],[445,18,362,16,"peg$posDetailsCache"],[445,37,362,35],[445,38,362,36],[445,40,362,38,"p"],[445,41,362,39],[445,42,362,40],[445,44,362,42],[445,45,362,43],[446,8,363,6],[447,8,365,6,"details"],[447,15,365,13],[447,18,365,16,"peg$posDetailsCache"],[447,37,365,35],[447,38,365,36,"p"],[447,39,365,37],[447,40,365,38],[448,8,366,6,"details"],[448,15,366,13],[448,18,366,16],[449,10,367,8,"line"],[449,14,367,12],[449,16,367,14,"details"],[449,23,367,21],[449,24,367,22,"line"],[449,28,367,26],[450,10,368,8,"column"],[450,16,368,14],[450,18,368,16,"details"],[450,25,368,23],[450,26,368,24,"column"],[451,8,369,6],[451,9,369,7],[452,8,371,6],[452,15,371,13,"p"],[452,16,371,14],[452,19,371,17,"pos"],[452,22,371,20],[452,24,371,22],[453,10,372,8],[453,14,372,12,"input"],[453,19,372,17],[453,20,372,18,"charCodeAt"],[453,30,372,28],[453,31,372,29,"p"],[453,32,372,30],[453,33,372,31],[453,38,372,36],[453,40,372,38],[453,42,372,40],[454,12,373,10,"details"],[454,19,373,17],[454,20,373,18,"line"],[454,24,373,22],[454,26,373,24],[455,12,374,10,"details"],[455,19,374,17],[455,20,374,18,"column"],[455,26,374,24],[455,29,374,27],[455,30,374,28],[456,10,375,8],[456,11,375,9],[456,17,375,15],[457,12,376,10,"details"],[457,19,376,17],[457,20,376,18,"column"],[457,26,376,24],[457,28,376,26],[458,10,377,8],[459,10,379,8,"p"],[459,11,379,9],[459,13,379,11],[460,8,380,6],[461,8,382,6,"peg$posDetailsCache"],[461,27,382,25],[461,28,382,26,"pos"],[461,31,382,29],[461,32,382,30],[461,35,382,33,"details"],[461,42,382,40],[462,8,384,6],[462,15,384,13,"details"],[462,22,384,20],[463,6,385,4],[464,4,386,2],[465,4,388,2],[465,13,388,11,"peg$computeLocation"],[465,32,388,30,"peg$computeLocation"],[465,33,388,31,"startPos"],[465,41,388,39],[465,43,388,41,"endPos"],[465,49,388,47],[465,51,388,49,"offset"],[465,57,388,55],[465,59,388,57],[466,6,389,4],[466,10,389,8,"startPosDetails"],[466,25,389,23],[466,28,389,26,"peg$computePosDetails"],[466,49,389,47],[466,50,389,48,"startPos"],[466,58,389,56],[466,59,389,57],[467,6,390,4],[467,10,390,8,"endPosDetails"],[467,23,390,21],[467,26,390,24,"peg$computePosDetails"],[467,47,390,45],[467,48,390,46,"endPos"],[467,54,390,52],[467,55,390,53],[468,6,392,4],[468,10,392,8,"res"],[468,13,392,11],[468,16,392,14],[469,8,393,6,"source"],[469,14,393,12],[469,16,393,14,"peg$source"],[469,26,393,24],[470,8,394,6,"start"],[470,13,394,11],[470,15,394,13],[471,10,395,8,"offset"],[471,16,395,14],[471,18,395,16,"startPos"],[471,26,395,24],[472,10,396,8,"line"],[472,14,396,12],[472,16,396,14,"startPosDetails"],[472,31,396,29],[472,32,396,30,"line"],[472,36,396,34],[473,10,397,8,"column"],[473,16,397,14],[473,18,397,16,"startPosDetails"],[473,33,397,31],[473,34,397,32,"column"],[474,8,398,6],[474,9,398,7],[475,8,399,6,"end"],[475,11,399,9],[475,13,399,11],[476,10,400,8,"offset"],[476,16,400,14],[476,18,400,16,"endPos"],[476,24,400,22],[477,10,401,8,"line"],[477,14,401,12],[477,16,401,14,"endPosDetails"],[477,29,401,27],[477,30,401,28,"line"],[477,34,401,32],[478,10,402,8,"column"],[478,16,402,14],[478,18,402,16,"endPosDetails"],[478,31,402,29],[478,32,402,30,"column"],[479,8,403,6],[480,6,404,4],[480,7,404,5],[481,6,405,4],[481,13,405,11,"res"],[481,16,405,14],[482,4,406,2],[483,4,408,2],[483,13,408,11,"peg$fail"],[483,21,408,19,"peg$fail"],[483,22,408,20,"expected"],[483,30,408,28],[483,32,408,30],[484,6,409,4],[484,10,409,8,"peg$currPos"],[484,21,409,19],[484,24,409,22,"peg$maxFailPos"],[484,38,409,36],[484,40,409,38],[485,8,409,40],[486,6,409,48],[487,6,411,4],[487,10,411,8,"peg$currPos"],[487,21,411,19],[487,24,411,22,"peg$maxFailPos"],[487,38,411,36],[487,40,411,38],[488,8,412,6,"peg$maxFailPos"],[488,22,412,20],[488,25,412,23,"peg$currPos"],[488,36,412,34],[489,8,413,6,"peg$maxFailExpected"],[489,27,413,25],[489,30,413,28],[489,32,413,30],[490,6,414,4],[491,6,416,4,"peg$maxFailExpected"],[491,25,416,23],[491,26,416,24,"push"],[491,30,416,28],[491,31,416,29,"expected"],[491,39,416,37],[491,40,416,38],[492,4,417,2],[493,4,419,2],[493,13,419,11,"peg$buildStructuredError"],[493,37,419,35,"peg$buildStructuredError"],[493,38,419,36,"expected"],[493,46,419,44],[493,48,419,46,"found"],[493,53,419,51],[493,55,419,53,"location"],[493,63,419,61],[493,65,419,63],[494,6,420,4],[494,13,420,11],[494,17,420,15,"peg$SyntaxError"],[494,32,420,30],[494,33,421,6,"peg$SyntaxError"],[494,48,421,21],[494,49,421,22,"buildMessage"],[494,61,421,34],[494,62,421,35,"expected"],[494,70,421,43],[494,72,421,45,"found"],[494,77,421,50],[494,78,421,51],[494,80,422,6,"expected"],[494,88,422,14],[494,90,423,6,"found"],[494,95,423,11],[494,97,424,6,"location"],[494,105,425,4],[494,106,425,5],[495,4,426,2],[496,4,428,2],[496,13,428,11,"peg$parsepgn"],[496,25,428,23,"peg$parsepgn"],[496,26,428,23],[496,28,428,26],[497,6,429,4],[497,10,429,8,"s0"],[497,12,429,10],[497,14,429,12,"s1"],[497,16,429,14],[497,18,429,16,"s2"],[497,20,429,18],[498,6,431,4,"s0"],[498,8,431,6],[498,11,431,9,"peg$currPos"],[498,22,431,20],[499,6,432,4,"s1"],[499,8,432,6],[499,11,432,9,"peg$parsetagPairSection"],[499,34,432,32],[499,35,432,33],[499,36,432,34],[500,6,433,4,"s2"],[500,8,433,6],[500,11,433,9,"peg$parsemoveTextSection"],[500,35,433,33],[500,36,433,34],[500,37,433,35],[501,6,434,4,"s0"],[501,8,434,6],[501,11,434,9,"peg$f0"],[501,17,434,15],[501,18,434,16,"s1"],[501,20,434,18],[501,22,434,20,"s2"],[501,24,434,22],[501,25,434,23],[502,6,436,4],[502,13,436,11,"s0"],[502,15,436,13],[503,4,437,2],[504,4,439,2],[504,13,439,11,"peg$parsetagPairSection"],[504,36,439,34,"peg$parsetagPairSection"],[504,37,439,34],[504,39,439,37],[505,6,440,4],[505,10,440,8,"s0"],[505,12,440,10],[505,14,440,12,"s1"],[505,16,440,14],[505,18,440,16,"s2"],[505,20,440,18],[506,6,442,4,"s0"],[506,8,442,6],[506,11,442,9,"peg$currPos"],[506,22,442,20],[507,6,443,4,"s1"],[507,8,443,6],[507,11,443,9],[507,13,443,11],[508,6,444,4,"s2"],[508,8,444,6],[508,11,444,9,"peg$parsetagPair"],[508,27,444,25],[508,28,444,26],[508,29,444,27],[509,6,445,4],[509,13,445,11,"s2"],[509,15,445,13],[509,20,445,18,"peg$FAILED"],[509,30,445,28],[509,32,445,30],[510,8,446,6,"s1"],[510,10,446,8],[510,11,446,9,"push"],[510,15,446,13],[510,16,446,14,"s2"],[510,18,446,16],[510,19,446,17],[511,8,447,6,"s2"],[511,10,447,8],[511,13,447,11,"peg$parsetagPair"],[511,29,447,27],[511,30,447,28],[511,31,447,29],[512,6,448,4],[513,6,449,4,"s2"],[513,8,449,6],[513,11,449,9,"peg$parse_"],[513,21,449,19],[513,22,449,20],[513,23,449,21],[514,6,450,4,"s0"],[514,8,450,6],[514,11,450,9,"peg$f1"],[514,17,450,15],[514,18,450,16,"s1"],[514,20,450,18],[514,21,450,19],[515,6,452,4],[515,13,452,11,"s0"],[515,15,452,13],[516,4,453,2],[517,4,455,2],[517,13,455,11,"peg$parsetagPair"],[517,29,455,27,"peg$parsetagPair"],[517,30,455,27],[517,32,455,30],[518,6,456,4],[518,10,456,8,"s0"],[518,12,456,10],[518,14,456,12,"s2"],[518,16,456,14],[518,18,456,16,"s4"],[518,20,456,18],[518,22,456,20,"s6"],[518,24,456,22],[518,26,456,24,"s7"],[518,28,456,26],[518,30,456,28,"s8"],[518,32,456,30],[518,34,456,32,"s10"],[518,37,456,35],[519,6,458,4,"peg$silentFails"],[519,21,458,19],[519,23,458,21],[520,6,459,4,"s0"],[520,8,459,6],[520,11,459,9,"peg$currPos"],[520,22,459,20],[521,6,460,4,"peg$parse_"],[521,16,460,14],[521,17,460,15],[521,18,460,16],[522,6,461,4],[522,10,461,8,"input"],[522,15,461,13],[522,16,461,14,"charCodeAt"],[522,26,461,24],[522,27,461,25,"peg$currPos"],[522,38,461,36],[522,39,461,37],[522,44,461,42],[522,46,461,44],[522,48,461,46],[523,8,462,6,"s2"],[523,10,462,8],[523,13,462,11,"peg$c0"],[523,19,462,17],[524,8,463,6,"peg$currPos"],[524,19,463,17],[524,21,463,19],[525,6,464,4],[525,7,464,5],[525,13,464,11],[526,8,465,6,"s2"],[526,10,465,8],[526,13,465,11,"peg$FAILED"],[526,23,465,21],[527,8,466,6],[527,12,466,10,"peg$silentFails"],[527,27,466,25],[527,32,466,30],[527,33,466,31],[527,35,466,33],[528,10,466,35,"peg$fail"],[528,18,466,43],[528,19,466,44,"peg$e1"],[528,25,466,50],[528,26,466,51],[529,8,466,53],[530,6,467,4],[531,6,468,4],[531,10,468,8,"s2"],[531,12,468,10],[531,17,468,15,"peg$FAILED"],[531,27,468,25],[531,29,468,27],[532,8,469,6,"peg$parse_"],[532,18,469,16],[532,19,469,17],[532,20,469,18],[533,8,470,6,"s4"],[533,10,470,8],[533,13,470,11,"peg$parsetagName"],[533,29,470,27],[533,30,470,28],[533,31,470,29],[534,8,471,6],[534,12,471,10,"s4"],[534,14,471,12],[534,19,471,17,"peg$FAILED"],[534,29,471,27],[534,31,471,29],[535,10,472,8,"peg$parse_"],[535,20,472,18],[535,21,472,19],[535,22,472,20],[536,10,473,8],[536,14,473,12,"input"],[536,19,473,17],[536,20,473,18,"charCodeAt"],[536,30,473,28],[536,31,473,29,"peg$currPos"],[536,42,473,40],[536,43,473,41],[536,48,473,46],[536,50,473,48],[536,52,473,50],[537,12,474,10,"s6"],[537,14,474,12],[537,17,474,15,"peg$c1"],[537,23,474,21],[538,12,475,10,"peg$currPos"],[538,23,475,21],[538,25,475,23],[539,10,476,8],[539,11,476,9],[539,17,476,15],[540,12,477,10,"s6"],[540,14,477,12],[540,17,477,15,"peg$FAILED"],[540,27,477,25],[541,12,478,10],[541,16,478,14,"peg$silentFails"],[541,31,478,29],[541,36,478,34],[541,37,478,35],[541,39,478,37],[542,14,478,39,"peg$fail"],[542,22,478,47],[542,23,478,48,"peg$e2"],[542,29,478,54],[542,30,478,55],[543,12,478,57],[544,10,479,8],[545,10,480,8],[545,14,480,12,"s6"],[545,16,480,14],[545,21,480,19,"peg$FAILED"],[545,31,480,29],[545,33,480,31],[546,12,481,10,"s7"],[546,14,481,12],[546,17,481,15,"peg$parsetagValue"],[546,34,481,32],[546,35,481,33],[546,36,481,34],[547,12,482,10],[547,16,482,14,"input"],[547,21,482,19],[547,22,482,20,"charCodeAt"],[547,32,482,30],[547,33,482,31,"peg$currPos"],[547,44,482,42],[547,45,482,43],[547,50,482,48],[547,52,482,50],[547,54,482,52],[548,14,483,12,"s8"],[548,16,483,14],[548,19,483,17,"peg$c1"],[548,25,483,23],[549,14,484,12,"peg$currPos"],[549,25,484,23],[549,27,484,25],[550,12,485,10],[550,13,485,11],[550,19,485,17],[551,14,486,12,"s8"],[551,16,486,14],[551,19,486,17,"peg$FAILED"],[551,29,486,27],[552,14,487,12],[552,18,487,16,"peg$silentFails"],[552,33,487,31],[552,38,487,36],[552,39,487,37],[552,41,487,39],[553,16,487,41,"peg$fail"],[553,24,487,49],[553,25,487,50,"peg$e2"],[553,31,487,56],[553,32,487,57],[554,14,487,59],[555,12,488,10],[556,12,489,10],[556,16,489,14,"s8"],[556,18,489,16],[556,23,489,21,"peg$FAILED"],[556,33,489,31],[556,35,489,33],[557,14,490,12,"peg$parse_"],[557,24,490,22],[557,25,490,23],[557,26,490,24],[558,14,491,12],[558,18,491,16,"input"],[558,23,491,21],[558,24,491,22,"charCodeAt"],[558,34,491,32],[558,35,491,33,"peg$currPos"],[558,46,491,44],[558,47,491,45],[558,52,491,50],[558,54,491,52],[558,56,491,54],[559,16,492,14,"s10"],[559,19,492,17],[559,22,492,20,"peg$c2"],[559,28,492,26],[560,16,493,14,"peg$currPos"],[560,27,493,25],[560,29,493,27],[561,14,494,12],[561,15,494,13],[561,21,494,19],[562,16,495,14,"s10"],[562,19,495,17],[562,22,495,20,"peg$FAILED"],[562,32,495,30],[563,16,496,14],[563,20,496,18,"peg$silentFails"],[563,35,496,33],[563,40,496,38],[563,41,496,39],[563,43,496,41],[564,18,496,43,"peg$fail"],[564,26,496,51],[564,27,496,52,"peg$e3"],[564,33,496,58],[564,34,496,59],[565,16,496,61],[566,14,497,12],[567,14,498,12],[567,18,498,16,"s10"],[567,21,498,19],[567,26,498,24,"peg$FAILED"],[567,36,498,34],[567,38,498,36],[568,16,499,14,"s0"],[568,18,499,16],[568,21,499,19,"peg$f2"],[568,27,499,25],[568,28,499,26,"s4"],[568,30,499,28],[568,32,499,30,"s7"],[568,34,499,32],[568,35,499,33],[569,14,500,12],[569,15,500,13],[569,21,500,19],[570,16,501,14,"peg$currPos"],[570,27,501,25],[570,30,501,28,"s0"],[570,32,501,30],[571,16,502,14,"s0"],[571,18,502,16],[571,21,502,19,"peg$FAILED"],[571,31,502,29],[572,14,503,12],[573,12,504,10],[573,13,504,11],[573,19,504,17],[574,14,505,12,"peg$currPos"],[574,25,505,23],[574,28,505,26,"s0"],[574,30,505,28],[575,14,506,12,"s0"],[575,16,506,14],[575,19,506,17,"peg$FAILED"],[575,29,506,27],[576,12,507,10],[577,10,508,8],[577,11,508,9],[577,17,508,15],[578,12,509,10,"peg$currPos"],[578,23,509,21],[578,26,509,24,"s0"],[578,28,509,26],[579,12,510,10,"s0"],[579,14,510,12],[579,17,510,15,"peg$FAILED"],[579,27,510,25],[580,10,511,8],[581,8,512,6],[581,9,512,7],[581,15,512,13],[582,10,513,8,"peg$currPos"],[582,21,513,19],[582,24,513,22,"s0"],[582,26,513,24],[583,10,514,8,"s0"],[583,12,514,10],[583,15,514,13,"peg$FAILED"],[583,25,514,23],[584,8,515,6],[585,6,516,4],[585,7,516,5],[585,13,516,11],[586,8,517,6,"peg$currPos"],[586,19,517,17],[586,22,517,20,"s0"],[586,24,517,22],[587,8,518,6,"s0"],[587,10,518,8],[587,13,518,11,"peg$FAILED"],[587,23,518,21],[588,6,519,4],[589,6,520,4,"peg$silentFails"],[589,21,520,19],[589,23,520,21],[590,6,521,4],[590,10,521,8,"s0"],[590,12,521,10],[590,17,521,15,"peg$FAILED"],[590,27,521,25],[590,29,521,27],[591,8,522,6],[591,12,522,10,"peg$silentFails"],[591,27,522,25],[591,32,522,30],[591,33,522,31],[591,35,522,33],[592,10,522,35,"peg$fail"],[592,18,522,43],[592,19,522,44,"peg$e0"],[592,25,522,50],[592,26,522,51],[593,8,522,53],[594,6,523,4],[595,6,525,4],[595,13,525,11,"s0"],[595,15,525,13],[596,4,526,2],[597,4,528,2],[597,13,528,11,"peg$parsetagName"],[597,29,528,27,"peg$parsetagName"],[597,30,528,27],[597,32,528,30],[598,6,529,4],[598,10,529,8,"s0"],[598,12,529,10],[598,14,529,12,"s1"],[598,16,529,14],[598,18,529,16,"s2"],[598,20,529,18],[599,6,531,4,"peg$silentFails"],[599,21,531,19],[599,23,531,21],[600,6,532,4,"s0"],[600,8,532,6],[600,11,532,9,"peg$currPos"],[600,22,532,20],[601,6,533,4,"s1"],[601,8,533,6],[601,11,533,9],[601,13,533,11],[602,6,534,4,"s2"],[602,8,534,6],[602,11,534,9,"input"],[602,16,534,14],[602,17,534,15,"charAt"],[602,23,534,21],[602,24,534,22,"peg$currPos"],[602,35,534,33],[602,36,534,34],[603,6,535,4],[603,10,535,8,"peg$r0"],[603,16,535,14],[603,17,535,15,"test"],[603,21,535,19],[603,22,535,20,"s2"],[603,24,535,22],[603,25,535,23],[603,27,535,25],[604,8,536,6,"peg$currPos"],[604,19,536,17],[604,21,536,19],[605,6,537,4],[605,7,537,5],[605,13,537,11],[606,8,538,6,"s2"],[606,10,538,8],[606,13,538,11,"peg$FAILED"],[606,23,538,21],[607,8,539,6],[607,12,539,10,"peg$silentFails"],[607,27,539,25],[607,32,539,30],[607,33,539,31],[607,35,539,33],[608,10,539,35,"peg$fail"],[608,18,539,43],[608,19,539,44,"peg$e5"],[608,25,539,50],[608,26,539,51],[609,8,539,53],[610,6,540,4],[611,6,541,4],[611,10,541,8,"s2"],[611,12,541,10],[611,17,541,15,"peg$FAILED"],[611,27,541,25],[611,29,541,27],[612,8,542,6],[612,15,542,13,"s2"],[612,17,542,15],[612,22,542,20,"peg$FAILED"],[612,32,542,30],[612,34,542,32],[613,10,543,8,"s1"],[613,12,543,10],[613,13,543,11,"push"],[613,17,543,15],[613,18,543,16,"s2"],[613,20,543,18],[613,21,543,19],[614,10,544,8,"s2"],[614,12,544,10],[614,15,544,13,"input"],[614,20,544,18],[614,21,544,19,"charAt"],[614,27,544,25],[614,28,544,26,"peg$currPos"],[614,39,544,37],[614,40,544,38],[615,10,545,8],[615,14,545,12,"peg$r0"],[615,20,545,18],[615,21,545,19,"test"],[615,25,545,23],[615,26,545,24,"s2"],[615,28,545,26],[615,29,545,27],[615,31,545,29],[616,12,546,10,"peg$currPos"],[616,23,546,21],[616,25,546,23],[617,10,547,8],[617,11,547,9],[617,17,547,15],[618,12,548,10,"s2"],[618,14,548,12],[618,17,548,15,"peg$FAILED"],[618,27,548,25],[619,12,549,10],[619,16,549,14,"peg$silentFails"],[619,31,549,29],[619,36,549,34],[619,37,549,35],[619,39,549,37],[620,14,549,39,"peg$fail"],[620,22,549,47],[620,23,549,48,"peg$e5"],[620,29,549,54],[620,30,549,55],[621,12,549,57],[622,10,550,8],[623,8,551,6],[624,6,552,4],[624,7,552,5],[624,13,552,11],[625,8,553,6,"s1"],[625,10,553,8],[625,13,553,11,"peg$FAILED"],[625,23,553,21],[626,6,554,4],[627,6,555,4],[627,10,555,8,"s1"],[627,12,555,10],[627,17,555,15,"peg$FAILED"],[627,27,555,25],[627,29,555,27],[628,8,556,6,"s0"],[628,10,556,8],[628,13,556,11,"input"],[628,18,556,16],[628,19,556,17,"substring"],[628,28,556,26],[628,29,556,27,"s0"],[628,31,556,29],[628,33,556,31,"peg$currPos"],[628,44,556,42],[628,45,556,43],[629,6,557,4],[629,7,557,5],[629,13,557,11],[630,8,558,6,"s0"],[630,10,558,8],[630,13,558,11,"s1"],[630,15,558,13],[631,6,559,4],[632,6,560,4,"peg$silentFails"],[632,21,560,19],[632,23,560,21],[633,6,561,4],[633,10,561,8,"s0"],[633,12,561,10],[633,17,561,15,"peg$FAILED"],[633,27,561,25],[633,29,561,27],[634,8,562,6,"s1"],[634,10,562,8],[634,13,562,11,"peg$FAILED"],[634,23,562,21],[635,8,563,6],[635,12,563,10,"peg$silentFails"],[635,27,563,25],[635,32,563,30],[635,33,563,31],[635,35,563,33],[636,10,563,35,"peg$fail"],[636,18,563,43],[636,19,563,44,"peg$e4"],[636,25,563,50],[636,26,563,51],[637,8,563,53],[638,6,564,4],[639,6,566,4],[639,13,566,11,"s0"],[639,15,566,13],[640,4,567,2],[641,4,569,2],[641,13,569,11,"peg$parsetagValue"],[641,30,569,28,"peg$parsetagValue"],[641,31,569,28],[641,33,569,31],[642,6,570,4],[642,10,570,8,"s0"],[642,12,570,10],[642,14,570,12,"s1"],[642,16,570,14],[642,18,570,16,"s2"],[642,20,570,18],[643,6,572,4,"peg$silentFails"],[643,21,572,19],[643,23,572,21],[644,6,573,4,"s0"],[644,8,573,6],[644,11,573,9,"peg$currPos"],[644,22,573,20],[645,6,574,4,"s1"],[645,8,574,6],[645,11,574,9],[645,13,574,11],[646,6,575,4,"s2"],[646,8,575,6],[646,11,575,9,"input"],[646,16,575,14],[646,17,575,15,"charAt"],[646,23,575,21],[646,24,575,22,"peg$currPos"],[646,35,575,33],[646,36,575,34],[647,6,576,4],[647,10,576,8,"peg$r1"],[647,16,576,14],[647,17,576,15,"test"],[647,21,576,19],[647,22,576,20,"s2"],[647,24,576,22],[647,25,576,23],[647,27,576,25],[648,8,577,6,"peg$currPos"],[648,19,577,17],[648,21,577,19],[649,6,578,4],[649,7,578,5],[649,13,578,11],[650,8,579,6,"s2"],[650,10,579,8],[650,13,579,11,"peg$FAILED"],[650,23,579,21],[651,8,580,6],[651,12,580,10,"peg$silentFails"],[651,27,580,25],[651,32,580,30],[651,33,580,31],[651,35,580,33],[652,10,580,35,"peg$fail"],[652,18,580,43],[652,19,580,44,"peg$e7"],[652,25,580,50],[652,26,580,51],[653,8,580,53],[654,6,581,4],[655,6,582,4],[655,13,582,11,"s2"],[655,15,582,13],[655,20,582,18,"peg$FAILED"],[655,30,582,28],[655,32,582,30],[656,8,583,6,"s1"],[656,10,583,8],[656,11,583,9,"push"],[656,15,583,13],[656,16,583,14,"s2"],[656,18,583,16],[656,19,583,17],[657,8,584,6,"s2"],[657,10,584,8],[657,13,584,11,"input"],[657,18,584,16],[657,19,584,17,"charAt"],[657,25,584,23],[657,26,584,24,"peg$currPos"],[657,37,584,35],[657,38,584,36],[658,8,585,6],[658,12,585,10,"peg$r1"],[658,18,585,16],[658,19,585,17,"test"],[658,23,585,21],[658,24,585,22,"s2"],[658,26,585,24],[658,27,585,25],[658,29,585,27],[659,10,586,8,"peg$currPos"],[659,21,586,19],[659,23,586,21],[660,8,587,6],[660,9,587,7],[660,15,587,13],[661,10,588,8,"s2"],[661,12,588,10],[661,15,588,13,"peg$FAILED"],[661,25,588,23],[662,10,589,8],[662,14,589,12,"peg$silentFails"],[662,29,589,27],[662,34,589,32],[662,35,589,33],[662,37,589,35],[663,12,589,37,"peg$fail"],[663,20,589,45],[663,21,589,46,"peg$e7"],[663,27,589,52],[663,28,589,53],[664,10,589,55],[665,8,590,6],[666,6,591,4],[667,6,592,4,"s0"],[667,8,592,6],[667,11,592,9,"input"],[667,16,592,14],[667,17,592,15,"substring"],[667,26,592,24],[667,27,592,25,"s0"],[667,29,592,27],[667,31,592,29,"peg$currPos"],[667,42,592,40],[667,43,592,41],[668,6,593,4,"peg$silentFails"],[668,21,593,19],[668,23,593,21],[669,6,594,4,"s1"],[669,8,594,6],[669,11,594,9,"peg$FAILED"],[669,21,594,19],[670,6,595,4],[670,10,595,8,"peg$silentFails"],[670,25,595,23],[670,30,595,28],[670,31,595,29],[670,33,595,31],[671,8,595,33,"peg$fail"],[671,16,595,41],[671,17,595,42,"peg$e6"],[671,23,595,48],[671,24,595,49],[672,6,595,51],[673,6,597,4],[673,13,597,11,"s0"],[673,15,597,13],[674,4,598,2],[675,4,600,2],[675,13,600,11,"peg$parsemoveTextSection"],[675,37,600,35,"peg$parsemoveTextSection"],[675,38,600,35],[675,40,600,38],[676,6,601,4],[676,10,601,8,"s0"],[676,12,601,10],[676,14,601,12,"s1"],[676,16,601,14],[676,18,601,16,"s3"],[676,20,601,18],[677,6,603,4,"s0"],[677,8,603,6],[677,11,603,9,"peg$currPos"],[677,22,603,20],[678,6,604,4,"s1"],[678,8,604,6],[678,11,604,9,"peg$parseline"],[678,24,604,22],[678,25,604,23],[678,26,604,24],[679,6,605,4,"peg$parse_"],[679,16,605,14],[679,17,605,15],[679,18,605,16],[680,6,606,4,"s3"],[680,8,606,6],[680,11,606,9,"peg$parsegameTerminationMarker"],[680,41,606,39],[680,42,606,40],[680,43,606,41],[681,6,607,4],[681,10,607,8,"s3"],[681,12,607,10],[681,17,607,15,"peg$FAILED"],[681,27,607,25],[681,29,607,27],[682,8,608,6,"s3"],[682,10,608,8],[682,13,608,11],[682,17,608,15],[683,6,609,4],[684,6,610,4,"peg$parse_"],[684,16,610,14],[684,17,610,15],[684,18,610,16],[685,6,611,4,"s0"],[685,8,611,6],[685,11,611,9,"peg$f3"],[685,17,611,15],[685,18,611,16,"s1"],[685,20,611,18],[685,22,611,20,"s3"],[685,24,611,22],[685,25,611,23],[686,6,613,4],[686,13,613,11,"s0"],[686,15,613,13],[687,4,614,2],[688,4,616,2],[688,13,616,11,"peg$parseline"],[688,26,616,24,"peg$parseline"],[688,27,616,24],[688,29,616,27],[689,6,617,4],[689,10,617,8,"s0"],[689,12,617,10],[689,14,617,12,"s1"],[689,16,617,14],[689,18,617,16,"s2"],[689,20,617,18],[689,22,617,20,"s3"],[689,24,617,22],[690,6,619,4,"s0"],[690,8,619,6],[690,11,619,9,"peg$currPos"],[690,22,619,20],[691,6,620,4,"s1"],[691,8,620,6],[691,11,620,9,"peg$parsecomment"],[691,27,620,25],[691,28,620,26],[691,29,620,27],[692,6,621,4],[692,10,621,8,"s1"],[692,12,621,10],[692,17,621,15,"peg$FAILED"],[692,27,621,25],[692,29,621,27],[693,8,622,6,"s1"],[693,10,622,8],[693,13,622,11],[693,17,622,15],[694,6,623,4],[695,6,624,4,"s2"],[695,8,624,6],[695,11,624,9],[695,13,624,11],[696,6,625,4,"s3"],[696,8,625,6],[696,11,625,9,"peg$parsemove"],[696,24,625,22],[696,25,625,23],[696,26,625,24],[697,6,626,4],[697,13,626,11,"s3"],[697,15,626,13],[697,20,626,18,"peg$FAILED"],[697,30,626,28],[697,32,626,30],[698,8,627,6,"s2"],[698,10,627,8],[698,11,627,9,"push"],[698,15,627,13],[698,16,627,14,"s3"],[698,18,627,16],[698,19,627,17],[699,8,628,6,"s3"],[699,10,628,8],[699,13,628,11,"peg$parsemove"],[699,26,628,24],[699,27,628,25],[699,28,628,26],[700,6,629,4],[701,6,630,4,"s0"],[701,8,630,6],[701,11,630,9,"peg$f4"],[701,17,630,15],[701,18,630,16,"s1"],[701,20,630,18],[701,22,630,20,"s2"],[701,24,630,22],[701,25,630,23],[702,6,632,4],[702,13,632,11,"s0"],[702,15,632,13],[703,4,633,2],[704,4,635,2],[704,13,635,11,"peg$parsemove"],[704,26,635,24,"peg$parsemove"],[704,27,635,24],[704,29,635,27],[705,6,636,4],[705,10,636,8,"s0"],[705,12,636,10],[705,14,636,12,"s4"],[705,16,636,14],[705,18,636,16,"s5"],[705,20,636,18],[705,22,636,20,"s6"],[705,24,636,22],[705,26,636,24,"s7"],[705,28,636,26],[705,30,636,28,"s8"],[705,32,636,30],[705,34,636,32,"s9"],[705,36,636,34],[705,38,636,36,"s10"],[705,41,636,39],[706,6,638,4,"s0"],[706,8,638,6],[706,11,638,9,"peg$currPos"],[706,22,638,20],[707,6,639,4,"peg$parse_"],[707,16,639,14],[707,17,639,15],[707,18,639,16],[708,6,640,4,"peg$parsemoveNumber"],[708,25,640,23],[708,26,640,24],[708,27,640,25],[709,6,641,4,"peg$parse_"],[709,16,641,14],[709,17,641,15],[709,18,641,16],[710,6,642,4,"s4"],[710,8,642,6],[710,11,642,9,"peg$parsesan"],[710,23,642,21],[710,24,642,22],[710,25,642,23],[711,6,643,4],[711,10,643,8,"s4"],[711,12,643,10],[711,17,643,15,"peg$FAILED"],[711,27,643,25],[711,29,643,27],[712,8,644,6,"s5"],[712,10,644,8],[712,13,644,11,"peg$parsesuffixAnnotation"],[712,38,644,36],[712,39,644,37],[712,40,644,38],[713,8,645,6],[713,12,645,10,"s5"],[713,14,645,12],[713,19,645,17,"peg$FAILED"],[713,29,645,27],[713,31,645,29],[714,10,646,8,"s5"],[714,12,646,10],[714,15,646,13],[714,19,646,17],[715,8,647,6],[716,8,648,6,"s6"],[716,10,648,8],[716,13,648,11],[716,15,648,13],[717,8,649,6,"s7"],[717,10,649,8],[717,13,649,11,"peg$parsenag"],[717,25,649,23],[717,26,649,24],[717,27,649,25],[718,8,650,6],[718,15,650,13,"s7"],[718,17,650,15],[718,22,650,20,"peg$FAILED"],[718,32,650,30],[718,34,650,32],[719,10,651,8,"s6"],[719,12,651,10],[719,13,651,11,"push"],[719,17,651,15],[719,18,651,16,"s7"],[719,20,651,18],[719,21,651,19],[720,10,652,8,"s7"],[720,12,652,10],[720,15,652,13,"peg$parsenag"],[720,27,652,25],[720,28,652,26],[720,29,652,27],[721,8,653,6],[722,8,654,6,"s7"],[722,10,654,8],[722,13,654,11,"peg$parse_"],[722,23,654,21],[722,24,654,22],[722,25,654,23],[723,8,655,6,"s8"],[723,10,655,8],[723,13,655,11,"peg$parsecomment"],[723,29,655,27],[723,30,655,28],[723,31,655,29],[724,8,656,6],[724,12,656,10,"s8"],[724,14,656,12],[724,19,656,17,"peg$FAILED"],[724,29,656,27],[724,31,656,29],[725,10,657,8,"s8"],[725,12,657,10],[725,15,657,13],[725,19,657,17],[726,8,658,6],[727,8,659,6,"s9"],[727,10,659,8],[727,13,659,11],[727,15,659,13],[728,8,660,6,"s10"],[728,11,660,9],[728,14,660,12,"peg$parsevariation"],[728,32,660,30],[728,33,660,31],[728,34,660,32],[729,8,661,6],[729,15,661,13,"s10"],[729,18,661,16],[729,23,661,21,"peg$FAILED"],[729,33,661,31],[729,35,661,33],[730,10,662,8,"s9"],[730,12,662,10],[730,13,662,11,"push"],[730,17,662,15],[730,18,662,16,"s10"],[730,21,662,19],[730,22,662,20],[731,10,663,8,"s10"],[731,13,663,11],[731,16,663,14,"peg$parsevariation"],[731,34,663,32],[731,35,663,33],[731,36,663,34],[732,8,664,6],[733,8,665,6,"s0"],[733,10,665,8],[733,13,665,11,"peg$f5"],[733,19,665,17],[733,20,665,18,"s4"],[733,22,665,20],[733,24,665,22,"s5"],[733,26,665,24],[733,28,665,26,"s6"],[733,30,665,28],[733,32,665,30,"s8"],[733,34,665,32],[733,36,665,34,"s9"],[733,38,665,36],[733,39,665,37],[734,6,666,4],[734,7,666,5],[734,13,666,11],[735,8,667,6,"peg$currPos"],[735,19,667,17],[735,22,667,20,"s0"],[735,24,667,22],[736,8,668,6,"s0"],[736,10,668,8],[736,13,668,11,"peg$FAILED"],[736,23,668,21],[737,6,669,4],[738,6,671,4],[738,13,671,11,"s0"],[738,15,671,13],[739,4,672,2],[740,4,674,2],[740,13,674,11,"peg$parsemoveNumber"],[740,32,674,30,"peg$parsemoveNumber"],[740,33,674,30],[740,35,674,33],[741,6,675,4],[741,10,675,8,"s0"],[741,12,675,10],[741,14,675,12,"s1"],[741,16,675,14],[741,18,675,16,"s2"],[741,20,675,18],[741,22,675,20,"s3"],[741,24,675,22],[741,26,675,24,"s4"],[741,28,675,26],[741,30,675,28,"s5"],[741,32,675,30],[742,6,677,4,"peg$silentFails"],[742,21,677,19],[742,23,677,21],[743,6,678,4,"s0"],[743,8,678,6],[743,11,678,9,"peg$currPos"],[743,22,678,20],[744,6,679,4,"s1"],[744,8,679,6],[744,11,679,9],[744,13,679,11],[745,6,680,4,"s2"],[745,8,680,6],[745,11,680,9,"input"],[745,16,680,14],[745,17,680,15,"charAt"],[745,23,680,21],[745,24,680,22,"peg$currPos"],[745,35,680,33],[745,36,680,34],[746,6,681,4],[746,10,681,8,"peg$r2"],[746,16,681,14],[746,17,681,15,"test"],[746,21,681,19],[746,22,681,20,"s2"],[746,24,681,22],[746,25,681,23],[746,27,681,25],[747,8,682,6,"peg$currPos"],[747,19,682,17],[747,21,682,19],[748,6,683,4],[748,7,683,5],[748,13,683,11],[749,8,684,6,"s2"],[749,10,684,8],[749,13,684,11,"peg$FAILED"],[749,23,684,21],[750,8,685,6],[750,12,685,10,"peg$silentFails"],[750,27,685,25],[750,32,685,30],[750,33,685,31],[750,35,685,33],[751,10,685,35,"peg$fail"],[751,18,685,43],[751,19,685,44,"peg$e9"],[751,25,685,50],[751,26,685,51],[752,8,685,53],[753,6,686,4],[754,6,687,4],[754,13,687,11,"s2"],[754,15,687,13],[754,20,687,18,"peg$FAILED"],[754,30,687,28],[754,32,687,30],[755,8,688,6,"s1"],[755,10,688,8],[755,11,688,9,"push"],[755,15,688,13],[755,16,688,14,"s2"],[755,18,688,16],[755,19,688,17],[756,8,689,6,"s2"],[756,10,689,8],[756,13,689,11,"input"],[756,18,689,16],[756,19,689,17,"charAt"],[756,25,689,23],[756,26,689,24,"peg$currPos"],[756,37,689,35],[756,38,689,36],[757,8,690,6],[757,12,690,10,"peg$r2"],[757,18,690,16],[757,19,690,17,"test"],[757,23,690,21],[757,24,690,22,"s2"],[757,26,690,24],[757,27,690,25],[757,29,690,27],[758,10,691,8,"peg$currPos"],[758,21,691,19],[758,23,691,21],[759,8,692,6],[759,9,692,7],[759,15,692,13],[760,10,693,8,"s2"],[760,12,693,10],[760,15,693,13,"peg$FAILED"],[760,25,693,23],[761,10,694,8],[761,14,694,12,"peg$silentFails"],[761,29,694,27],[761,34,694,32],[761,35,694,33],[761,37,694,35],[762,12,694,37,"peg$fail"],[762,20,694,45],[762,21,694,46,"peg$e9"],[762,27,694,52],[762,28,694,53],[763,10,694,55],[764,8,695,6],[765,6,696,4],[766,6,697,4],[766,10,697,8,"input"],[766,15,697,13],[766,16,697,14,"charCodeAt"],[766,26,697,24],[766,27,697,25,"peg$currPos"],[766,38,697,36],[766,39,697,37],[766,44,697,42],[766,46,697,44],[766,48,697,46],[767,8,698,6,"s2"],[767,10,698,8],[767,13,698,11,"peg$c3"],[767,19,698,17],[768,8,699,6,"peg$currPos"],[768,19,699,17],[768,21,699,19],[769,6,700,4],[769,7,700,5],[769,13,700,11],[770,8,701,6,"s2"],[770,10,701,8],[770,13,701,11,"peg$FAILED"],[770,23,701,21],[771,8,702,6],[771,12,702,10,"peg$silentFails"],[771,27,702,25],[771,32,702,30],[771,33,702,31],[771,35,702,33],[772,10,702,35,"peg$fail"],[772,18,702,43],[772,19,702,44,"peg$e10"],[772,26,702,51],[772,27,702,52],[773,8,702,54],[774,6,703,4],[775,6,704,4],[775,10,704,8,"s2"],[775,12,704,10],[775,17,704,15,"peg$FAILED"],[775,27,704,25],[775,29,704,27],[776,8,705,6,"s3"],[776,10,705,8],[776,13,705,11,"peg$parse_"],[776,23,705,21],[776,24,705,22],[776,25,705,23],[777,8,706,6,"s4"],[777,10,706,8],[777,13,706,11],[777,15,706,13],[778,8,707,6,"s5"],[778,10,707,8],[778,13,707,11,"input"],[778,18,707,16],[778,19,707,17,"charAt"],[778,25,707,23],[778,26,707,24,"peg$currPos"],[778,37,707,35],[778,38,707,36],[779,8,708,6],[779,12,708,10,"peg$r3"],[779,18,708,16],[779,19,708,17,"test"],[779,23,708,21],[779,24,708,22,"s5"],[779,26,708,24],[779,27,708,25],[779,29,708,27],[780,10,709,8,"peg$currPos"],[780,21,709,19],[780,23,709,21],[781,8,710,6],[781,9,710,7],[781,15,710,13],[782,10,711,8,"s5"],[782,12,711,10],[782,15,711,13,"peg$FAILED"],[782,25,711,23],[783,10,712,8],[783,14,712,12,"peg$silentFails"],[783,29,712,27],[783,34,712,32],[783,35,712,33],[783,37,712,35],[784,12,712,37,"peg$fail"],[784,20,712,45],[784,21,712,46,"peg$e11"],[784,28,712,53],[784,29,712,54],[785,10,712,56],[786,8,713,6],[787,8,714,6],[787,15,714,13,"s5"],[787,17,714,15],[787,22,714,20,"peg$FAILED"],[787,32,714,30],[787,34,714,32],[788,10,715,8,"s4"],[788,12,715,10],[788,13,715,11,"push"],[788,17,715,15],[788,18,715,16,"s5"],[788,20,715,18],[788,21,715,19],[789,10,716,8,"s5"],[789,12,716,10],[789,15,716,13,"input"],[789,20,716,18],[789,21,716,19,"charAt"],[789,27,716,25],[789,28,716,26,"peg$currPos"],[789,39,716,37],[789,40,716,38],[790,10,717,8],[790,14,717,12,"peg$r3"],[790,20,717,18],[790,21,717,19,"test"],[790,25,717,23],[790,26,717,24,"s5"],[790,28,717,26],[790,29,717,27],[790,31,717,29],[791,12,718,10,"peg$currPos"],[791,23,718,21],[791,25,718,23],[792,10,719,8],[792,11,719,9],[792,17,719,15],[793,12,720,10,"s5"],[793,14,720,12],[793,17,720,15,"peg$FAILED"],[793,27,720,25],[794,12,721,10],[794,16,721,14,"peg$silentFails"],[794,31,721,29],[794,36,721,34],[794,37,721,35],[794,39,721,37],[795,14,721,39,"peg$fail"],[795,22,721,47],[795,23,721,48,"peg$e11"],[795,30,721,55],[795,31,721,56],[796,12,721,58],[797,10,722,8],[798,8,723,6],[799,8,724,6,"s1"],[799,10,724,8],[799,13,724,11],[799,14,724,12,"s1"],[799,16,724,14],[799,18,724,16,"s2"],[799,20,724,18],[799,22,724,20,"s3"],[799,24,724,22],[799,26,724,24,"s4"],[799,28,724,26],[799,29,724,27],[800,8,725,6,"s0"],[800,10,725,8],[800,13,725,11,"s1"],[800,15,725,13],[801,6,726,4],[801,7,726,5],[801,13,726,11],[802,8,727,6,"peg$currPos"],[802,19,727,17],[802,22,727,20,"s0"],[802,24,727,22],[803,8,728,6,"s0"],[803,10,728,8],[803,13,728,11,"peg$FAILED"],[803,23,728,21],[804,6,729,4],[805,6,730,4,"peg$silentFails"],[805,21,730,19],[805,23,730,21],[806,6,731,4],[806,10,731,8,"s0"],[806,12,731,10],[806,17,731,15,"peg$FAILED"],[806,27,731,25],[806,29,731,27],[807,8,732,6,"s1"],[807,10,732,8],[807,13,732,11,"peg$FAILED"],[807,23,732,21],[808,8,733,6],[808,12,733,10,"peg$silentFails"],[808,27,733,25],[808,32,733,30],[808,33,733,31],[808,35,733,33],[809,10,733,35,"peg$fail"],[809,18,733,43],[809,19,733,44,"peg$e8"],[809,25,733,50],[809,26,733,51],[810,8,733,53],[811,6,734,4],[812,6,736,4],[812,13,736,11,"s0"],[812,15,736,13],[813,4,737,2],[814,4,739,2],[814,13,739,11,"peg$parsesan"],[814,25,739,23,"peg$parsesan"],[814,26,739,23],[814,28,739,26],[815,6,740,4],[815,10,740,8,"s0"],[815,12,740,10],[815,14,740,12,"s1"],[815,16,740,14],[815,18,740,16,"s2"],[815,20,740,18],[815,22,740,20,"s3"],[815,24,740,22],[815,26,740,24,"s4"],[815,28,740,26],[815,30,740,28,"s5"],[815,32,740,30],[816,6,742,4,"peg$silentFails"],[816,21,742,19],[816,23,742,21],[817,6,743,4,"s0"],[817,8,743,6],[817,11,743,9,"peg$currPos"],[817,22,743,20],[818,6,744,4,"s1"],[818,8,744,6],[818,11,744,9,"peg$currPos"],[818,22,744,20],[819,6,745,4],[819,10,745,8,"input"],[819,15,745,13],[819,16,745,14,"substr"],[819,22,745,20],[819,23,745,21,"peg$currPos"],[819,34,745,32],[819,36,745,34],[819,37,745,35],[819,38,745,36],[819,43,745,41,"peg$c4"],[819,49,745,47],[819,51,745,49],[820,8,746,6,"s2"],[820,10,746,8],[820,13,746,11,"peg$c4"],[820,19,746,17],[821,8,747,6,"peg$currPos"],[821,19,747,17],[821,23,747,21],[821,24,747,22],[822,6,748,4],[822,7,748,5],[822,13,748,11],[823,8,749,6,"s2"],[823,10,749,8],[823,13,749,11,"peg$FAILED"],[823,23,749,21],[824,8,750,6],[824,12,750,10,"peg$silentFails"],[824,27,750,25],[824,32,750,30],[824,33,750,31],[824,35,750,33],[825,10,750,35,"peg$fail"],[825,18,750,43],[825,19,750,44,"peg$e13"],[825,26,750,51],[825,27,750,52],[826,8,750,54],[827,6,751,4],[828,6,752,4],[828,10,752,8,"s2"],[828,12,752,10],[828,17,752,15,"peg$FAILED"],[828,27,752,25],[828,29,752,27],[829,8,753,6],[829,12,753,10,"input"],[829,17,753,15],[829,18,753,16,"substr"],[829,24,753,22],[829,25,753,23,"peg$currPos"],[829,36,753,34],[829,38,753,36],[829,39,753,37],[829,40,753,38],[829,45,753,43,"peg$c5"],[829,51,753,49],[829,53,753,51],[830,10,754,8,"s2"],[830,12,754,10],[830,15,754,13,"peg$c5"],[830,21,754,19],[831,10,755,8,"peg$currPos"],[831,21,755,19],[831,25,755,23],[831,26,755,24],[832,8,756,6],[832,9,756,7],[832,15,756,13],[833,10,757,8,"s2"],[833,12,757,10],[833,15,757,13,"peg$FAILED"],[833,25,757,23],[834,10,758,8],[834,14,758,12,"peg$silentFails"],[834,29,758,27],[834,34,758,32],[834,35,758,33],[834,37,758,35],[835,12,758,37,"peg$fail"],[835,20,758,45],[835,21,758,46,"peg$e14"],[835,28,758,53],[835,29,758,54],[836,10,758,56],[837,8,759,6],[838,8,760,6],[838,12,760,10,"s2"],[838,14,760,12],[838,19,760,17,"peg$FAILED"],[838,29,760,27],[838,31,760,29],[839,10,761,8],[839,14,761,12,"input"],[839,19,761,17],[839,20,761,18,"substr"],[839,26,761,24],[839,27,761,25,"peg$currPos"],[839,38,761,36],[839,40,761,38],[839,41,761,39],[839,42,761,40],[839,47,761,45,"peg$c6"],[839,53,761,51],[839,55,761,53],[840,12,762,10,"s2"],[840,14,762,12],[840,17,762,15,"peg$c6"],[840,23,762,21],[841,12,763,10,"peg$currPos"],[841,23,763,21],[841,27,763,25],[841,28,763,26],[842,10,764,8],[842,11,764,9],[842,17,764,15],[843,12,765,10,"s2"],[843,14,765,12],[843,17,765,15,"peg$FAILED"],[843,27,765,25],[844,12,766,10],[844,16,766,14,"peg$silentFails"],[844,31,766,29],[844,36,766,34],[844,37,766,35],[844,39,766,37],[845,14,766,39,"peg$fail"],[845,22,766,47],[845,23,766,48,"peg$e15"],[845,30,766,55],[845,31,766,56],[846,12,766,58],[847,10,767,8],[848,10,768,8],[848,14,768,12,"s2"],[848,16,768,14],[848,21,768,19,"peg$FAILED"],[848,31,768,29],[848,33,768,31],[849,12,769,10],[849,16,769,14,"input"],[849,21,769,19],[849,22,769,20,"substr"],[849,28,769,26],[849,29,769,27,"peg$currPos"],[849,40,769,38],[849,42,769,40],[849,43,769,41],[849,44,769,42],[849,49,769,47,"peg$c7"],[849,55,769,53],[849,57,769,55],[850,14,770,12,"s2"],[850,16,770,14],[850,19,770,17,"peg$c7"],[850,25,770,23],[851,14,771,12,"peg$currPos"],[851,25,771,23],[851,29,771,27],[851,30,771,28],[852,12,772,10],[852,13,772,11],[852,19,772,17],[853,14,773,12,"s2"],[853,16,773,14],[853,19,773,17,"peg$FAILED"],[853,29,773,27],[854,14,774,12],[854,18,774,16,"peg$silentFails"],[854,33,774,31],[854,38,774,36],[854,39,774,37],[854,41,774,39],[855,16,774,41,"peg$fail"],[855,24,774,49],[855,25,774,50,"peg$e16"],[855,32,774,57],[855,33,774,58],[856,14,774,60],[857,12,775,10],[858,12,776,10],[858,16,776,14,"s2"],[858,18,776,16],[858,23,776,21,"peg$FAILED"],[858,33,776,31],[858,35,776,33],[859,14,777,12,"s2"],[859,16,777,14],[859,19,777,17,"peg$currPos"],[859,30,777,28],[860,14,778,12,"s3"],[860,16,778,14],[860,19,778,17,"input"],[860,24,778,22],[860,25,778,23,"charAt"],[860,31,778,29],[860,32,778,30,"peg$currPos"],[860,43,778,41],[860,44,778,42],[861,14,779,12],[861,18,779,16,"peg$r0"],[861,24,779,22],[861,25,779,23,"test"],[861,29,779,27],[861,30,779,28,"s3"],[861,32,779,30],[861,33,779,31],[861,35,779,33],[862,16,780,14,"peg$currPos"],[862,27,780,25],[862,29,780,27],[863,14,781,12],[863,15,781,13],[863,21,781,19],[864,16,782,14,"s3"],[864,18,782,16],[864,21,782,19,"peg$FAILED"],[864,31,782,29],[865,16,783,14],[865,20,783,18,"peg$silentFails"],[865,35,783,33],[865,40,783,38],[865,41,783,39],[865,43,783,41],[866,18,783,43,"peg$fail"],[866,26,783,51],[866,27,783,52,"peg$e5"],[866,33,783,58],[866,34,783,59],[867,16,783,61],[868,14,784,12],[869,14,785,12],[869,18,785,16,"s3"],[869,20,785,18],[869,25,785,23,"peg$FAILED"],[869,35,785,33],[869,37,785,35],[870,16,786,14,"s4"],[870,18,786,16],[870,21,786,19],[870,23,786,21],[871,16,787,14,"s5"],[871,18,787,16],[871,21,787,19,"input"],[871,26,787,24],[871,27,787,25,"charAt"],[871,33,787,31],[871,34,787,32,"peg$currPos"],[871,45,787,43],[871,46,787,44],[872,16,788,14],[872,20,788,18,"peg$r4"],[872,26,788,24],[872,27,788,25,"test"],[872,31,788,29],[872,32,788,30,"s5"],[872,34,788,32],[872,35,788,33],[872,37,788,35],[873,18,789,16,"peg$currPos"],[873,29,789,27],[873,31,789,29],[874,16,790,14],[874,17,790,15],[874,23,790,21],[875,18,791,16,"s5"],[875,20,791,18],[875,23,791,21,"peg$FAILED"],[875,33,791,31],[876,18,792,16],[876,22,792,20,"peg$silentFails"],[876,37,792,35],[876,42,792,40],[876,43,792,41],[876,45,792,43],[877,20,792,45,"peg$fail"],[877,28,792,53],[877,29,792,54,"peg$e17"],[877,36,792,61],[877,37,792,62],[878,18,792,64],[879,16,793,14],[880,16,794,14],[880,20,794,18,"s5"],[880,22,794,20],[880,27,794,25,"peg$FAILED"],[880,37,794,35],[880,39,794,37],[881,18,795,16],[881,25,795,23,"s5"],[881,27,795,25],[881,32,795,30,"peg$FAILED"],[881,42,795,40],[881,44,795,42],[882,20,796,18,"s4"],[882,22,796,20],[882,23,796,21,"push"],[882,27,796,25],[882,28,796,26,"s5"],[882,30,796,28],[882,31,796,29],[883,20,797,18,"s5"],[883,22,797,20],[883,25,797,23,"input"],[883,30,797,28],[883,31,797,29,"charAt"],[883,37,797,35],[883,38,797,36,"peg$currPos"],[883,49,797,47],[883,50,797,48],[884,20,798,18],[884,24,798,22,"peg$r4"],[884,30,798,28],[884,31,798,29,"test"],[884,35,798,33],[884,36,798,34,"s5"],[884,38,798,36],[884,39,798,37],[884,41,798,39],[885,22,799,20,"peg$currPos"],[885,33,799,31],[885,35,799,33],[886,20,800,18],[886,21,800,19],[886,27,800,25],[887,22,801,20,"s5"],[887,24,801,22],[887,27,801,25,"peg$FAILED"],[887,37,801,35],[888,22,802,20],[888,26,802,24,"peg$silentFails"],[888,41,802,39],[888,46,802,44],[888,47,802,45],[888,49,802,47],[889,24,802,49,"peg$fail"],[889,32,802,57],[889,33,802,58,"peg$e17"],[889,40,802,65],[889,41,802,66],[890,22,802,68],[891,20,803,18],[892,18,804,16],[893,16,805,14],[893,17,805,15],[893,23,805,21],[894,18,806,16,"s4"],[894,20,806,18],[894,23,806,21,"peg$FAILED"],[894,33,806,31],[895,16,807,14],[896,16,808,14],[896,20,808,18,"s4"],[896,22,808,20],[896,27,808,25,"peg$FAILED"],[896,37,808,35],[896,39,808,37],[897,18,809,16,"s3"],[897,20,809,18],[897,23,809,21],[897,24,809,22,"s3"],[897,26,809,24],[897,28,809,26,"s4"],[897,30,809,28],[897,31,809,29],[898,18,810,16,"s2"],[898,20,810,18],[898,23,810,21,"s3"],[898,25,810,23],[899,16,811,14],[899,17,811,15],[899,23,811,21],[900,18,812,16,"peg$currPos"],[900,29,812,27],[900,32,812,30,"s2"],[900,34,812,32],[901,18,813,16,"s2"],[901,20,813,18],[901,23,813,21,"peg$FAILED"],[901,33,813,31],[902,16,814,14],[903,14,815,12],[903,15,815,13],[903,21,815,19],[904,16,816,14,"peg$currPos"],[904,27,816,25],[904,30,816,28,"s2"],[904,32,816,30],[905,16,817,14,"s2"],[905,18,817,16],[905,21,817,19,"peg$FAILED"],[905,31,817,29],[906,14,818,12],[907,12,819,10],[908,10,820,8],[909,8,821,6],[910,6,822,4],[911,6,823,4],[911,10,823,8,"s2"],[911,12,823,10],[911,17,823,15,"peg$FAILED"],[911,27,823,25],[911,29,823,27],[912,8,824,6,"s3"],[912,10,824,8],[912,13,824,11,"input"],[912,18,824,16],[912,19,824,17,"charAt"],[912,25,824,23],[912,26,824,24,"peg$currPos"],[912,37,824,35],[912,38,824,36],[913,8,825,6],[913,12,825,10,"peg$r5"],[913,18,825,16],[913,19,825,17,"test"],[913,23,825,21],[913,24,825,22,"s3"],[913,26,825,24],[913,27,825,25],[913,29,825,27],[914,10,826,8,"peg$currPos"],[914,21,826,19],[914,23,826,21],[915,8,827,6],[915,9,827,7],[915,15,827,13],[916,10,828,8,"s3"],[916,12,828,10],[916,15,828,13,"peg$FAILED"],[916,25,828,23],[917,10,829,8],[917,14,829,12,"peg$silentFails"],[917,29,829,27],[917,34,829,32],[917,35,829,33],[917,37,829,35],[918,12,829,37,"peg$fail"],[918,20,829,45],[918,21,829,46,"peg$e18"],[918,28,829,53],[918,29,829,54],[919,10,829,56],[920,8,830,6],[921,8,831,6],[921,12,831,10,"s3"],[921,14,831,12],[921,19,831,17,"peg$FAILED"],[921,29,831,27],[921,31,831,29],[922,10,832,8,"s3"],[922,12,832,10],[922,15,832,13],[922,19,832,17],[923,8,833,6],[924,8,834,6,"s2"],[924,10,834,8],[924,13,834,11],[924,14,834,12,"s2"],[924,16,834,14],[924,18,834,16,"s3"],[924,20,834,18],[924,21,834,19],[925,8,835,6,"s1"],[925,10,835,8],[925,13,835,11,"s2"],[925,15,835,13],[926,6,836,4],[926,7,836,5],[926,13,836,11],[927,8,837,6,"peg$currPos"],[927,19,837,17],[927,22,837,20,"s1"],[927,24,837,22],[928,8,838,6,"s1"],[928,10,838,8],[928,13,838,11,"peg$FAILED"],[928,23,838,21],[929,6,839,4],[930,6,840,4],[930,10,840,8,"s1"],[930,12,840,10],[930,17,840,15,"peg$FAILED"],[930,27,840,25],[930,29,840,27],[931,8,841,6,"s0"],[931,10,841,8],[931,13,841,11,"input"],[931,18,841,16],[931,19,841,17,"substring"],[931,28,841,26],[931,29,841,27,"s0"],[931,31,841,29],[931,33,841,31,"peg$currPos"],[931,44,841,42],[931,45,841,43],[932,6,842,4],[932,7,842,5],[932,13,842,11],[933,8,843,6,"s0"],[933,10,843,8],[933,13,843,11,"s1"],[933,15,843,13],[934,6,844,4],[935,6,845,4,"peg$silentFails"],[935,21,845,19],[935,23,845,21],[936,6,846,4],[936,10,846,8,"s0"],[936,12,846,10],[936,17,846,15,"peg$FAILED"],[936,27,846,25],[936,29,846,27],[937,8,847,6,"s1"],[937,10,847,8],[937,13,847,11,"peg$FAILED"],[937,23,847,21],[938,8,848,6],[938,12,848,10,"peg$silentFails"],[938,27,848,25],[938,32,848,30],[938,33,848,31],[938,35,848,33],[939,10,848,35,"peg$fail"],[939,18,848,43],[939,19,848,44,"peg$e12"],[939,26,848,51],[939,27,848,52],[940,8,848,54],[941,6,849,4],[942,6,851,4],[942,13,851,11,"s0"],[942,15,851,13],[943,4,852,2],[944,4,854,2],[944,13,854,11,"peg$parsesuffixAnnotation"],[944,38,854,36,"peg$parsesuffixAnnotation"],[944,39,854,36],[944,41,854,39],[945,6,855,4],[945,10,855,8,"s0"],[945,12,855,10],[945,14,855,12,"s1"],[945,16,855,14],[945,18,855,16,"s2"],[945,20,855,18],[946,6,857,4,"peg$silentFails"],[946,21,857,19],[946,23,857,21],[947,6,858,4,"s0"],[947,8,858,6],[947,11,858,9,"peg$currPos"],[947,22,858,20],[948,6,859,4,"s1"],[948,8,859,6],[948,11,859,9],[948,13,859,11],[949,6,860,4,"s2"],[949,8,860,6],[949,11,860,9,"input"],[949,16,860,14],[949,17,860,15,"charAt"],[949,23,860,21],[949,24,860,22,"peg$currPos"],[949,35,860,33],[949,36,860,34],[950,6,861,4],[950,10,861,8,"peg$r6"],[950,16,861,14],[950,17,861,15,"test"],[950,21,861,19],[950,22,861,20,"s2"],[950,24,861,22],[950,25,861,23],[950,27,861,25],[951,8,862,6,"peg$currPos"],[951,19,862,17],[951,21,862,19],[952,6,863,4],[952,7,863,5],[952,13,863,11],[953,8,864,6,"s2"],[953,10,864,8],[953,13,864,11,"peg$FAILED"],[953,23,864,21],[954,8,865,6],[954,12,865,10,"peg$silentFails"],[954,27,865,25],[954,32,865,30],[954,33,865,31],[954,35,865,33],[955,10,865,35,"peg$fail"],[955,18,865,43],[955,19,865,44,"peg$e20"],[955,26,865,51],[955,27,865,52],[956,8,865,54],[957,6,866,4],[958,6,867,4],[958,13,867,11,"s2"],[958,15,867,13],[958,20,867,18,"peg$FAILED"],[958,30,867,28],[958,32,867,30],[959,8,868,6,"s1"],[959,10,868,8],[959,11,868,9,"push"],[959,15,868,13],[959,16,868,14,"s2"],[959,18,868,16],[959,19,868,17],[960,8,869,6],[960,12,869,10,"s1"],[960,14,869,12],[960,15,869,13,"length"],[960,21,869,19],[960,25,869,23],[960,26,869,24],[960,28,869,26],[961,10,870,8,"s2"],[961,12,870,10],[961,15,870,13,"peg$FAILED"],[961,25,870,23],[962,8,871,6],[962,9,871,7],[962,15,871,13],[963,10,872,8,"s2"],[963,12,872,10],[963,15,872,13,"input"],[963,20,872,18],[963,21,872,19,"charAt"],[963,27,872,25],[963,28,872,26,"peg$currPos"],[963,39,872,37],[963,40,872,38],[964,10,873,8],[964,14,873,12,"peg$r6"],[964,20,873,18],[964,21,873,19,"test"],[964,25,873,23],[964,26,873,24,"s2"],[964,28,873,26],[964,29,873,27],[964,31,873,29],[965,12,874,10,"peg$currPos"],[965,23,874,21],[965,25,874,23],[966,10,875,8],[966,11,875,9],[966,17,875,15],[967,12,876,10,"s2"],[967,14,876,12],[967,17,876,15,"peg$FAILED"],[967,27,876,25],[968,12,877,10],[968,16,877,14,"peg$silentFails"],[968,31,877,29],[968,36,877,34],[968,37,877,35],[968,39,877,37],[969,14,877,39,"peg$fail"],[969,22,877,47],[969,23,877,48,"peg$e20"],[969,30,877,55],[969,31,877,56],[970,12,877,58],[971,10,878,8],[972,8,879,6],[973,6,880,4],[974,6,881,4],[974,10,881,8,"s1"],[974,12,881,10],[974,13,881,11,"length"],[974,19,881,17],[974,22,881,20],[974,23,881,21],[974,25,881,23],[975,8,882,6,"peg$currPos"],[975,19,882,17],[975,22,882,20,"s0"],[975,24,882,22],[976,8,883,6,"s0"],[976,10,883,8],[976,13,883,11,"peg$FAILED"],[976,23,883,21],[977,6,884,4],[977,7,884,5],[977,13,884,11],[978,8,885,6,"s0"],[978,10,885,8],[978,13,885,11,"s1"],[978,15,885,13],[979,6,886,4],[980,6,887,4,"peg$silentFails"],[980,21,887,19],[980,23,887,21],[981,6,888,4],[981,10,888,8,"s0"],[981,12,888,10],[981,17,888,15,"peg$FAILED"],[981,27,888,25],[981,29,888,27],[982,8,889,6,"s1"],[982,10,889,8],[982,13,889,11,"peg$FAILED"],[982,23,889,21],[983,8,890,6],[983,12,890,10,"peg$silentFails"],[983,27,890,25],[983,32,890,30],[983,33,890,31],[983,35,890,33],[984,10,890,35,"peg$fail"],[984,18,890,43],[984,19,890,44,"peg$e19"],[984,26,890,51],[984,27,890,52],[985,8,890,54],[986,6,891,4],[987,6,893,4],[987,13,893,11,"s0"],[987,15,893,13],[988,4,894,2],[989,4,896,2],[989,13,896,11,"peg$parsenag"],[989,25,896,23,"peg$parsenag"],[989,26,896,23],[989,28,896,26],[990,6,897,4],[990,10,897,8,"s0"],[990,12,897,10],[990,14,897,12,"s2"],[990,16,897,14],[990,18,897,16,"s3"],[990,20,897,18],[990,22,897,20,"s4"],[990,24,897,22],[990,26,897,24,"s5"],[990,28,897,26],[991,6,899,4,"peg$silentFails"],[991,21,899,19],[991,23,899,21],[992,6,900,4,"s0"],[992,8,900,6],[992,11,900,9,"peg$currPos"],[992,22,900,20],[993,6,901,4,"peg$parse_"],[993,16,901,14],[993,17,901,15],[993,18,901,16],[994,6,902,4],[994,10,902,8,"input"],[994,15,902,13],[994,16,902,14,"charCodeAt"],[994,26,902,24],[994,27,902,25,"peg$currPos"],[994,38,902,36],[994,39,902,37],[994,44,902,42],[994,46,902,44],[994,48,902,46],[995,8,903,6,"s2"],[995,10,903,8],[995,13,903,11,"peg$c8"],[995,19,903,17],[996,8,904,6,"peg$currPos"],[996,19,904,17],[996,21,904,19],[997,6,905,4],[997,7,905,5],[997,13,905,11],[998,8,906,6,"s2"],[998,10,906,8],[998,13,906,11,"peg$FAILED"],[998,23,906,21],[999,8,907,6],[999,12,907,10,"peg$silentFails"],[999,27,907,25],[999,32,907,30],[999,33,907,31],[999,35,907,33],[1000,10,907,35,"peg$fail"],[1000,18,907,43],[1000,19,907,44,"peg$e22"],[1000,26,907,51],[1000,27,907,52],[1001,8,907,54],[1002,6,908,4],[1003,6,909,4],[1003,10,909,8,"s2"],[1003,12,909,10],[1003,17,909,15,"peg$FAILED"],[1003,27,909,25],[1003,29,909,27],[1004,8,910,6,"s3"],[1004,10,910,8],[1004,13,910,11,"peg$currPos"],[1004,24,910,22],[1005,8,911,6,"s4"],[1005,10,911,8],[1005,13,911,11],[1005,15,911,13],[1006,8,912,6,"s5"],[1006,10,912,8],[1006,13,912,11,"input"],[1006,18,912,16],[1006,19,912,17,"charAt"],[1006,25,912,23],[1006,26,912,24,"peg$currPos"],[1006,37,912,35],[1006,38,912,36],[1007,8,913,6],[1007,12,913,10,"peg$r2"],[1007,18,913,16],[1007,19,913,17,"test"],[1007,23,913,21],[1007,24,913,22,"s5"],[1007,26,913,24],[1007,27,913,25],[1007,29,913,27],[1008,10,914,8,"peg$currPos"],[1008,21,914,19],[1008,23,914,21],[1009,8,915,6],[1009,9,915,7],[1009,15,915,13],[1010,10,916,8,"s5"],[1010,12,916,10],[1010,15,916,13,"peg$FAILED"],[1010,25,916,23],[1011,10,917,8],[1011,14,917,12,"peg$silentFails"],[1011,29,917,27],[1011,34,917,32],[1011,35,917,33],[1011,37,917,35],[1012,12,917,37,"peg$fail"],[1012,20,917,45],[1012,21,917,46,"peg$e9"],[1012,27,917,52],[1012,28,917,53],[1013,10,917,55],[1014,8,918,6],[1015,8,919,6],[1015,12,919,10,"s5"],[1015,14,919,12],[1015,19,919,17,"peg$FAILED"],[1015,29,919,27],[1015,31,919,29],[1016,10,920,8],[1016,17,920,15,"s5"],[1016,19,920,17],[1016,24,920,22,"peg$FAILED"],[1016,34,920,32],[1016,36,920,34],[1017,12,921,10,"s4"],[1017,14,921,12],[1017,15,921,13,"push"],[1017,19,921,17],[1017,20,921,18,"s5"],[1017,22,921,20],[1017,23,921,21],[1018,12,922,10,"s5"],[1018,14,922,12],[1018,17,922,15,"input"],[1018,22,922,20],[1018,23,922,21,"charAt"],[1018,29,922,27],[1018,30,922,28,"peg$currPos"],[1018,41,922,39],[1018,42,922,40],[1019,12,923,10],[1019,16,923,14,"peg$r2"],[1019,22,923,20],[1019,23,923,21,"test"],[1019,27,923,25],[1019,28,923,26,"s5"],[1019,30,923,28],[1019,31,923,29],[1019,33,923,31],[1020,14,924,12,"peg$currPos"],[1020,25,924,23],[1020,27,924,25],[1021,12,925,10],[1021,13,925,11],[1021,19,925,17],[1022,14,926,12,"s5"],[1022,16,926,14],[1022,19,926,17,"peg$FAILED"],[1022,29,926,27],[1023,14,927,12],[1023,18,927,16,"peg$silentFails"],[1023,33,927,31],[1023,38,927,36],[1023,39,927,37],[1023,41,927,39],[1024,16,927,41,"peg$fail"],[1024,24,927,49],[1024,25,927,50,"peg$e9"],[1024,31,927,56],[1024,32,927,57],[1025,14,927,59],[1026,12,928,10],[1027,10,929,8],[1028,8,930,6],[1028,9,930,7],[1028,15,930,13],[1029,10,931,8,"s4"],[1029,12,931,10],[1029,15,931,13,"peg$FAILED"],[1029,25,931,23],[1030,8,932,6],[1031,8,933,6],[1031,12,933,10,"s4"],[1031,14,933,12],[1031,19,933,17,"peg$FAILED"],[1031,29,933,27],[1031,31,933,29],[1032,10,934,8,"s3"],[1032,12,934,10],[1032,15,934,13,"input"],[1032,20,934,18],[1032,21,934,19,"substring"],[1032,30,934,28],[1032,31,934,29,"s3"],[1032,33,934,31],[1032,35,934,33,"peg$currPos"],[1032,46,934,44],[1032,47,934,45],[1033,8,935,6],[1033,9,935,7],[1033,15,935,13],[1034,10,936,8,"s3"],[1034,12,936,10],[1034,15,936,13,"s4"],[1034,17,936,15],[1035,8,937,6],[1036,8,938,6],[1036,12,938,10,"s3"],[1036,14,938,12],[1036,19,938,17,"peg$FAILED"],[1036,29,938,27],[1036,31,938,29],[1037,10,939,8,"s0"],[1037,12,939,10],[1037,15,939,13,"peg$f6"],[1037,21,939,19],[1037,22,939,20,"s3"],[1037,24,939,22],[1037,25,939,23],[1038,8,940,6],[1038,9,940,7],[1038,15,940,13],[1039,10,941,8,"peg$currPos"],[1039,21,941,19],[1039,24,941,22,"s0"],[1039,26,941,24],[1040,10,942,8,"s0"],[1040,12,942,10],[1040,15,942,13,"peg$FAILED"],[1040,25,942,23],[1041,8,943,6],[1042,6,944,4],[1042,7,944,5],[1042,13,944,11],[1043,8,945,6,"peg$currPos"],[1043,19,945,17],[1043,22,945,20,"s0"],[1043,24,945,22],[1044,8,946,6,"s0"],[1044,10,946,8],[1044,13,946,11,"peg$FAILED"],[1044,23,946,21],[1045,6,947,4],[1046,6,948,4,"peg$silentFails"],[1046,21,948,19],[1046,23,948,21],[1047,6,949,4],[1047,10,949,8,"s0"],[1047,12,949,10],[1047,17,949,15,"peg$FAILED"],[1047,27,949,25],[1047,29,949,27],[1048,8,950,6],[1048,12,950,10,"peg$silentFails"],[1048,27,950,25],[1048,32,950,30],[1048,33,950,31],[1048,35,950,33],[1049,10,950,35,"peg$fail"],[1049,18,950,43],[1049,19,950,44,"peg$e21"],[1049,26,950,51],[1049,27,950,52],[1050,8,950,54],[1051,6,951,4],[1052,6,953,4],[1052,13,953,11,"s0"],[1052,15,953,13],[1053,4,954,2],[1054,4,956,2],[1054,13,956,11,"peg$parsecomment"],[1054,29,956,27,"peg$parsecomment"],[1054,30,956,27],[1054,32,956,30],[1055,6,957,4],[1055,10,957,8,"s0"],[1055,12,957,10],[1056,6,959,4,"s0"],[1056,8,959,6],[1056,11,959,9,"peg$parsebraceComment"],[1056,32,959,30],[1056,33,959,31],[1056,34,959,32],[1057,6,960,4],[1057,10,960,8,"s0"],[1057,12,960,10],[1057,17,960,15,"peg$FAILED"],[1057,27,960,25],[1057,29,960,27],[1058,8,961,6,"s0"],[1058,10,961,8],[1058,13,961,11,"peg$parserestOfLineComment"],[1058,39,961,37],[1058,40,961,38],[1058,41,961,39],[1059,6,962,4],[1060,6,964,4],[1060,13,964,11,"s0"],[1060,15,964,13],[1061,4,965,2],[1062,4,967,2],[1062,13,967,11,"peg$parsebraceComment"],[1062,34,967,32,"peg$parsebraceComment"],[1062,35,967,32],[1062,37,967,35],[1063,6,968,4],[1063,10,968,8,"s0"],[1063,12,968,10],[1063,14,968,12,"s1"],[1063,16,968,14],[1063,18,968,16,"s2"],[1063,20,968,18],[1063,22,968,20,"s3"],[1063,24,968,22],[1063,26,968,24,"s4"],[1063,28,968,26],[1064,6,970,4,"peg$silentFails"],[1064,21,970,19],[1064,23,970,21],[1065,6,971,4,"s0"],[1065,8,971,6],[1065,11,971,9,"peg$currPos"],[1065,22,971,20],[1066,6,972,4],[1066,10,972,8,"input"],[1066,15,972,13],[1066,16,972,14,"charCodeAt"],[1066,26,972,24],[1066,27,972,25,"peg$currPos"],[1066,38,972,36],[1066,39,972,37],[1066,44,972,42],[1066,47,972,45],[1066,49,972,47],[1067,8,973,6,"s1"],[1067,10,973,8],[1067,13,973,11,"peg$c9"],[1067,19,973,17],[1068,8,974,6,"peg$currPos"],[1068,19,974,17],[1068,21,974,19],[1069,6,975,4],[1069,7,975,5],[1069,13,975,11],[1070,8,976,6,"s1"],[1070,10,976,8],[1070,13,976,11,"peg$FAILED"],[1070,23,976,21],[1071,8,977,6],[1071,12,977,10,"peg$silentFails"],[1071,27,977,25],[1071,32,977,30],[1071,33,977,31],[1071,35,977,33],[1072,10,977,35,"peg$fail"],[1072,18,977,43],[1072,19,977,44,"peg$e24"],[1072,26,977,51],[1072,27,977,52],[1073,8,977,54],[1074,6,978,4],[1075,6,979,4],[1075,10,979,8,"s1"],[1075,12,979,10],[1075,17,979,15,"peg$FAILED"],[1075,27,979,25],[1075,29,979,27],[1076,8,980,6,"s2"],[1076,10,980,8],[1076,13,980,11,"peg$currPos"],[1076,24,980,22],[1077,8,981,6,"s3"],[1077,10,981,8],[1077,13,981,11],[1077,15,981,13],[1078,8,982,6,"s4"],[1078,10,982,8],[1078,13,982,11,"input"],[1078,18,982,16],[1078,19,982,17,"charAt"],[1078,25,982,23],[1078,26,982,24,"peg$currPos"],[1078,37,982,35],[1078,38,982,36],[1079,8,983,6],[1079,12,983,10,"peg$r7"],[1079,18,983,16],[1079,19,983,17,"test"],[1079,23,983,21],[1079,24,983,22,"s4"],[1079,26,983,24],[1079,27,983,25],[1079,29,983,27],[1080,10,984,8,"peg$currPos"],[1080,21,984,19],[1080,23,984,21],[1081,8,985,6],[1081,9,985,7],[1081,15,985,13],[1082,10,986,8,"s4"],[1082,12,986,10],[1082,15,986,13,"peg$FAILED"],[1082,25,986,23],[1083,10,987,8],[1083,14,987,12,"peg$silentFails"],[1083,29,987,27],[1083,34,987,32],[1083,35,987,33],[1083,37,987,35],[1084,12,987,37,"peg$fail"],[1084,20,987,45],[1084,21,987,46,"peg$e25"],[1084,28,987,53],[1084,29,987,54],[1085,10,987,56],[1086,8,988,6],[1087,8,989,6],[1087,15,989,13,"s4"],[1087,17,989,15],[1087,22,989,20,"peg$FAILED"],[1087,32,989,30],[1087,34,989,32],[1088,10,990,8,"s3"],[1088,12,990,10],[1088,13,990,11,"push"],[1088,17,990,15],[1088,18,990,16,"s4"],[1088,20,990,18],[1088,21,990,19],[1089,10,991,8,"s4"],[1089,12,991,10],[1089,15,991,13,"input"],[1089,20,991,18],[1089,21,991,19,"charAt"],[1089,27,991,25],[1089,28,991,26,"peg$currPos"],[1089,39,991,37],[1089,40,991,38],[1090,10,992,8],[1090,14,992,12,"peg$r7"],[1090,20,992,18],[1090,21,992,19,"test"],[1090,25,992,23],[1090,26,992,24,"s4"],[1090,28,992,26],[1090,29,992,27],[1090,31,992,29],[1091,12,993,10,"peg$currPos"],[1091,23,993,21],[1091,25,993,23],[1092,10,994,8],[1092,11,994,9],[1092,17,994,15],[1093,12,995,10,"s4"],[1093,14,995,12],[1093,17,995,15,"peg$FAILED"],[1093,27,995,25],[1094,12,996,10],[1094,16,996,14,"peg$silentFails"],[1094,31,996,29],[1094,36,996,34],[1094,37,996,35],[1094,39,996,37],[1095,14,996,39,"peg$fail"],[1095,22,996,47],[1095,23,996,48,"peg$e25"],[1095,30,996,55],[1095,31,996,56],[1096,12,996,58],[1097,10,997,8],[1098,8,998,6],[1099,8,999,6,"s2"],[1099,10,999,8],[1099,13,999,11,"input"],[1099,18,999,16],[1099,19,999,17,"substring"],[1099,28,999,26],[1099,29,999,27,"s2"],[1099,31,999,29],[1099,33,999,31,"peg$currPos"],[1099,44,999,42],[1099,45,999,43],[1100,8,1000,6],[1100,12,1000,10,"input"],[1100,17,1000,15],[1100,18,1000,16,"charCodeAt"],[1100,28,1000,26],[1100,29,1000,27,"peg$currPos"],[1100,40,1000,38],[1100,41,1000,39],[1100,46,1000,44],[1100,49,1000,47],[1100,51,1000,49],[1101,10,1001,8,"s3"],[1101,12,1001,10],[1101,15,1001,13,"peg$c10"],[1101,22,1001,20],[1102,10,1002,8,"peg$currPos"],[1102,21,1002,19],[1102,23,1002,21],[1103,8,1003,6],[1103,9,1003,7],[1103,15,1003,13],[1104,10,1004,8,"s3"],[1104,12,1004,10],[1104,15,1004,13,"peg$FAILED"],[1104,25,1004,23],[1105,10,1005,8],[1105,14,1005,12,"peg$silentFails"],[1105,29,1005,27],[1105,34,1005,32],[1105,35,1005,33],[1105,37,1005,35],[1106,12,1005,37,"peg$fail"],[1106,20,1005,45],[1106,21,1005,46,"peg$e26"],[1106,28,1005,53],[1106,29,1005,54],[1107,10,1005,56],[1108,8,1006,6],[1109,8,1007,6],[1109,12,1007,10,"s3"],[1109,14,1007,12],[1109,19,1007,17,"peg$FAILED"],[1109,29,1007,27],[1109,31,1007,29],[1110,10,1008,8,"s0"],[1110,12,1008,10],[1110,15,1008,13,"peg$f7"],[1110,21,1008,19],[1110,22,1008,20,"s2"],[1110,24,1008,22],[1110,25,1008,23],[1111,8,1009,6],[1111,9,1009,7],[1111,15,1009,13],[1112,10,1010,8,"peg$currPos"],[1112,21,1010,19],[1112,24,1010,22,"s0"],[1112,26,1010,24],[1113,10,1011,8,"s0"],[1113,12,1011,10],[1113,15,1011,13,"peg$FAILED"],[1113,25,1011,23],[1114,8,1012,6],[1115,6,1013,4],[1115,7,1013,5],[1115,13,1013,11],[1116,8,1014,6,"peg$currPos"],[1116,19,1014,17],[1116,22,1014,20,"s0"],[1116,24,1014,22],[1117,8,1015,6,"s0"],[1117,10,1015,8],[1117,13,1015,11,"peg$FAILED"],[1117,23,1015,21],[1118,6,1016,4],[1119,6,1017,4,"peg$silentFails"],[1119,21,1017,19],[1119,23,1017,21],[1120,6,1018,4],[1120,10,1018,8,"s0"],[1120,12,1018,10],[1120,17,1018,15,"peg$FAILED"],[1120,27,1018,25],[1120,29,1018,27],[1121,8,1019,6,"s1"],[1121,10,1019,8],[1121,13,1019,11,"peg$FAILED"],[1121,23,1019,21],[1122,8,1020,6],[1122,12,1020,10,"peg$silentFails"],[1122,27,1020,25],[1122,32,1020,30],[1122,33,1020,31],[1122,35,1020,33],[1123,10,1020,35,"peg$fail"],[1123,18,1020,43],[1123,19,1020,44,"peg$e23"],[1123,26,1020,51],[1123,27,1020,52],[1124,8,1020,54],[1125,6,1021,4],[1126,6,1023,4],[1126,13,1023,11,"s0"],[1126,15,1023,13],[1127,4,1024,2],[1128,4,1026,2],[1128,13,1026,11,"peg$parserestOfLineComment"],[1128,39,1026,37,"peg$parserestOfLineComment"],[1128,40,1026,37],[1128,42,1026,40],[1129,6,1027,4],[1129,10,1027,8,"s0"],[1129,12,1027,10],[1129,14,1027,12,"s1"],[1129,16,1027,14],[1129,18,1027,16,"s2"],[1129,20,1027,18],[1129,22,1027,20,"s3"],[1129,24,1027,22],[1129,26,1027,24,"s4"],[1129,28,1027,26],[1130,6,1029,4,"peg$silentFails"],[1130,21,1029,19],[1130,23,1029,21],[1131,6,1030,4,"s0"],[1131,8,1030,6],[1131,11,1030,9,"peg$currPos"],[1131,22,1030,20],[1132,6,1031,4],[1132,10,1031,8,"input"],[1132,15,1031,13],[1132,16,1031,14,"charCodeAt"],[1132,26,1031,24],[1132,27,1031,25,"peg$currPos"],[1132,38,1031,36],[1132,39,1031,37],[1132,44,1031,42],[1132,46,1031,44],[1132,48,1031,46],[1133,8,1032,6,"s1"],[1133,10,1032,8],[1133,13,1032,11,"peg$c11"],[1133,20,1032,18],[1134,8,1033,6,"peg$currPos"],[1134,19,1033,17],[1134,21,1033,19],[1135,6,1034,4],[1135,7,1034,5],[1135,13,1034,11],[1136,8,1035,6,"s1"],[1136,10,1035,8],[1136,13,1035,11,"peg$FAILED"],[1136,23,1035,21],[1137,8,1036,6],[1137,12,1036,10,"peg$silentFails"],[1137,27,1036,25],[1137,32,1036,30],[1137,33,1036,31],[1137,35,1036,33],[1138,10,1036,35,"peg$fail"],[1138,18,1036,43],[1138,19,1036,44,"peg$e28"],[1138,26,1036,51],[1138,27,1036,52],[1139,8,1036,54],[1140,6,1037,4],[1141,6,1038,4],[1141,10,1038,8,"s1"],[1141,12,1038,10],[1141,17,1038,15,"peg$FAILED"],[1141,27,1038,25],[1141,29,1038,27],[1142,8,1039,6,"s2"],[1142,10,1039,8],[1142,13,1039,11,"peg$currPos"],[1142,24,1039,22],[1143,8,1040,6,"s3"],[1143,10,1040,8],[1143,13,1040,11],[1143,15,1040,13],[1144,8,1041,6,"s4"],[1144,10,1041,8],[1144,13,1041,11,"input"],[1144,18,1041,16],[1144,19,1041,17,"charAt"],[1144,25,1041,23],[1144,26,1041,24,"peg$currPos"],[1144,37,1041,35],[1144,38,1041,36],[1145,8,1042,6],[1145,12,1042,10,"peg$r8"],[1145,18,1042,16],[1145,19,1042,17,"test"],[1145,23,1042,21],[1145,24,1042,22,"s4"],[1145,26,1042,24],[1145,27,1042,25],[1145,29,1042,27],[1146,10,1043,8,"peg$currPos"],[1146,21,1043,19],[1146,23,1043,21],[1147,8,1044,6],[1147,9,1044,7],[1147,15,1044,13],[1148,10,1045,8,"s4"],[1148,12,1045,10],[1148,15,1045,13,"peg$FAILED"],[1148,25,1045,23],[1149,10,1046,8],[1149,14,1046,12,"peg$silentFails"],[1149,29,1046,27],[1149,34,1046,32],[1149,35,1046,33],[1149,37,1046,35],[1150,12,1046,37,"peg$fail"],[1150,20,1046,45],[1150,21,1046,46,"peg$e29"],[1150,28,1046,53],[1150,29,1046,54],[1151,10,1046,56],[1152,8,1047,6],[1153,8,1048,6],[1153,15,1048,13,"s4"],[1153,17,1048,15],[1153,22,1048,20,"peg$FAILED"],[1153,32,1048,30],[1153,34,1048,32],[1154,10,1049,8,"s3"],[1154,12,1049,10],[1154,13,1049,11,"push"],[1154,17,1049,15],[1154,18,1049,16,"s4"],[1154,20,1049,18],[1154,21,1049,19],[1155,10,1050,8,"s4"],[1155,12,1050,10],[1155,15,1050,13,"input"],[1155,20,1050,18],[1155,21,1050,19,"charAt"],[1155,27,1050,25],[1155,28,1050,26,"peg$currPos"],[1155,39,1050,37],[1155,40,1050,38],[1156,10,1051,8],[1156,14,1051,12,"peg$r8"],[1156,20,1051,18],[1156,21,1051,19,"test"],[1156,25,1051,23],[1156,26,1051,24,"s4"],[1156,28,1051,26],[1156,29,1051,27],[1156,31,1051,29],[1157,12,1052,10,"peg$currPos"],[1157,23,1052,21],[1157,25,1052,23],[1158,10,1053,8],[1158,11,1053,9],[1158,17,1053,15],[1159,12,1054,10,"s4"],[1159,14,1054,12],[1159,17,1054,15,"peg$FAILED"],[1159,27,1054,25],[1160,12,1055,10],[1160,16,1055,14,"peg$silentFails"],[1160,31,1055,29],[1160,36,1055,34],[1160,37,1055,35],[1160,39,1055,37],[1161,14,1055,39,"peg$fail"],[1161,22,1055,47],[1161,23,1055,48,"peg$e29"],[1161,30,1055,55],[1161,31,1055,56],[1162,12,1055,58],[1163,10,1056,8],[1164,8,1057,6],[1165,8,1058,6,"s2"],[1165,10,1058,8],[1165,13,1058,11,"input"],[1165,18,1058,16],[1165,19,1058,17,"substring"],[1165,28,1058,26],[1165,29,1058,27,"s2"],[1165,31,1058,29],[1165,33,1058,31,"peg$currPos"],[1165,44,1058,42],[1165,45,1058,43],[1166,8,1059,6,"s0"],[1166,10,1059,8],[1166,13,1059,11,"peg$f8"],[1166,19,1059,17],[1166,20,1059,18,"s2"],[1166,22,1059,20],[1166,23,1059,21],[1167,6,1060,4],[1167,7,1060,5],[1167,13,1060,11],[1168,8,1061,6,"peg$currPos"],[1168,19,1061,17],[1168,22,1061,20,"s0"],[1168,24,1061,22],[1169,8,1062,6,"s0"],[1169,10,1062,8],[1169,13,1062,11,"peg$FAILED"],[1169,23,1062,21],[1170,6,1063,4],[1171,6,1064,4,"peg$silentFails"],[1171,21,1064,19],[1171,23,1064,21],[1172,6,1065,4],[1172,10,1065,8,"s0"],[1172,12,1065,10],[1172,17,1065,15,"peg$FAILED"],[1172,27,1065,25],[1172,29,1065,27],[1173,8,1066,6,"s1"],[1173,10,1066,8],[1173,13,1066,11,"peg$FAILED"],[1173,23,1066,21],[1174,8,1067,6],[1174,12,1067,10,"peg$silentFails"],[1174,27,1067,25],[1174,32,1067,30],[1174,33,1067,31],[1174,35,1067,33],[1175,10,1067,35,"peg$fail"],[1175,18,1067,43],[1175,19,1067,44,"peg$e27"],[1175,26,1067,51],[1175,27,1067,52],[1176,8,1067,54],[1177,6,1068,4],[1178,6,1070,4],[1178,13,1070,11,"s0"],[1178,15,1070,13],[1179,4,1071,2],[1180,4,1073,2],[1180,13,1073,11,"peg$parsevariation"],[1180,31,1073,29,"peg$parsevariation"],[1180,32,1073,29],[1180,34,1073,32],[1181,6,1074,4],[1181,10,1074,8,"s0"],[1181,12,1074,10],[1181,14,1074,12,"s2"],[1181,16,1074,14],[1181,18,1074,16,"s3"],[1181,20,1074,18],[1181,22,1074,20,"s5"],[1181,24,1074,22],[1182,6,1076,4,"peg$silentFails"],[1182,21,1076,19],[1182,23,1076,21],[1183,6,1077,4,"s0"],[1183,8,1077,6],[1183,11,1077,9,"peg$currPos"],[1183,22,1077,20],[1184,6,1078,4,"peg$parse_"],[1184,16,1078,14],[1184,17,1078,15],[1184,18,1078,16],[1185,6,1079,4],[1185,10,1079,8,"input"],[1185,15,1079,13],[1185,16,1079,14,"charCodeAt"],[1185,26,1079,24],[1185,27,1079,25,"peg$currPos"],[1185,38,1079,36],[1185,39,1079,37],[1185,44,1079,42],[1185,46,1079,44],[1185,48,1079,46],[1186,8,1080,6,"s2"],[1186,10,1080,8],[1186,13,1080,11,"peg$c12"],[1186,20,1080,18],[1187,8,1081,6,"peg$currPos"],[1187,19,1081,17],[1187,21,1081,19],[1188,6,1082,4],[1188,7,1082,5],[1188,13,1082,11],[1189,8,1083,6,"s2"],[1189,10,1083,8],[1189,13,1083,11,"peg$FAILED"],[1189,23,1083,21],[1190,8,1084,6],[1190,12,1084,10,"peg$silentFails"],[1190,27,1084,25],[1190,32,1084,30],[1190,33,1084,31],[1190,35,1084,33],[1191,10,1084,35,"peg$fail"],[1191,18,1084,43],[1191,19,1084,44,"peg$e31"],[1191,26,1084,51],[1191,27,1084,52],[1192,8,1084,54],[1193,6,1085,4],[1194,6,1086,4],[1194,10,1086,8,"s2"],[1194,12,1086,10],[1194,17,1086,15,"peg$FAILED"],[1194,27,1086,25],[1194,29,1086,27],[1195,8,1087,6,"s3"],[1195,10,1087,8],[1195,13,1087,11,"peg$parseline"],[1195,26,1087,24],[1195,27,1087,25],[1195,28,1087,26],[1196,8,1088,6],[1196,12,1088,10,"s3"],[1196,14,1088,12],[1196,19,1088,17,"peg$FAILED"],[1196,29,1088,27],[1196,31,1088,29],[1197,10,1089,8,"peg$parse_"],[1197,20,1089,18],[1197,21,1089,19],[1197,22,1089,20],[1198,10,1090,8],[1198,14,1090,12,"input"],[1198,19,1090,17],[1198,20,1090,18,"charCodeAt"],[1198,30,1090,28],[1198,31,1090,29,"peg$currPos"],[1198,42,1090,40],[1198,43,1090,41],[1198,48,1090,46],[1198,50,1090,48],[1198,52,1090,50],[1199,12,1091,10,"s5"],[1199,14,1091,12],[1199,17,1091,15,"peg$c13"],[1199,24,1091,22],[1200,12,1092,10,"peg$currPos"],[1200,23,1092,21],[1200,25,1092,23],[1201,10,1093,8],[1201,11,1093,9],[1201,17,1093,15],[1202,12,1094,10,"s5"],[1202,14,1094,12],[1202,17,1094,15,"peg$FAILED"],[1202,27,1094,25],[1203,12,1095,10],[1203,16,1095,14,"peg$silentFails"],[1203,31,1095,29],[1203,36,1095,34],[1203,37,1095,35],[1203,39,1095,37],[1204,14,1095,39,"peg$fail"],[1204,22,1095,47],[1204,23,1095,48,"peg$e32"],[1204,30,1095,55],[1204,31,1095,56],[1205,12,1095,58],[1206,10,1096,8],[1207,10,1097,8],[1207,14,1097,12,"s5"],[1207,16,1097,14],[1207,21,1097,19,"peg$FAILED"],[1207,31,1097,29],[1207,33,1097,31],[1208,12,1098,10,"s0"],[1208,14,1098,12],[1208,17,1098,15,"peg$f9"],[1208,23,1098,21],[1208,24,1098,22,"s3"],[1208,26,1098,24],[1208,27,1098,25],[1209,10,1099,8],[1209,11,1099,9],[1209,17,1099,15],[1210,12,1100,10,"peg$currPos"],[1210,23,1100,21],[1210,26,1100,24,"s0"],[1210,28,1100,26],[1211,12,1101,10,"s0"],[1211,14,1101,12],[1211,17,1101,15,"peg$FAILED"],[1211,27,1101,25],[1212,10,1102,8],[1213,8,1103,6],[1213,9,1103,7],[1213,15,1103,13],[1214,10,1104,8,"peg$currPos"],[1214,21,1104,19],[1214,24,1104,22,"s0"],[1214,26,1104,24],[1215,10,1105,8,"s0"],[1215,12,1105,10],[1215,15,1105,13,"peg$FAILED"],[1215,25,1105,23],[1216,8,1106,6],[1217,6,1107,4],[1217,7,1107,5],[1217,13,1107,11],[1218,8,1108,6,"peg$currPos"],[1218,19,1108,17],[1218,22,1108,20,"s0"],[1218,24,1108,22],[1219,8,1109,6,"s0"],[1219,10,1109,8],[1219,13,1109,11,"peg$FAILED"],[1219,23,1109,21],[1220,6,1110,4],[1221,6,1111,4,"peg$silentFails"],[1221,21,1111,19],[1221,23,1111,21],[1222,6,1112,4],[1222,10,1112,8,"s0"],[1222,12,1112,10],[1222,17,1112,15,"peg$FAILED"],[1222,27,1112,25],[1222,29,1112,27],[1223,8,1113,6],[1223,12,1113,10,"peg$silentFails"],[1223,27,1113,25],[1223,32,1113,30],[1223,33,1113,31],[1223,35,1113,33],[1224,10,1113,35,"peg$fail"],[1224,18,1113,43],[1224,19,1113,44,"peg$e30"],[1224,26,1113,51],[1224,27,1113,52],[1225,8,1113,54],[1226,6,1114,4],[1227,6,1116,4],[1227,13,1116,11,"s0"],[1227,15,1116,13],[1228,4,1117,2],[1229,4,1119,2],[1229,13,1119,11,"peg$parsegameTerminationMarker"],[1229,43,1119,41,"peg$parsegameTerminationMarker"],[1229,44,1119,41],[1229,46,1119,44],[1230,6,1120,4],[1230,10,1120,8,"s0"],[1230,12,1120,10],[1230,14,1120,12,"s1"],[1230,16,1120,14],[1230,18,1120,16,"s3"],[1230,20,1120,18],[1231,6,1122,4,"peg$silentFails"],[1231,21,1122,19],[1231,23,1122,21],[1232,6,1123,4,"s0"],[1232,8,1123,6],[1232,11,1123,9,"peg$currPos"],[1232,22,1123,20],[1233,6,1124,4],[1233,10,1124,8,"input"],[1233,15,1124,13],[1233,16,1124,14,"substr"],[1233,22,1124,20],[1233,23,1124,21,"peg$currPos"],[1233,34,1124,32],[1233,36,1124,34],[1233,37,1124,35],[1233,38,1124,36],[1233,43,1124,41,"peg$c14"],[1233,50,1124,48],[1233,52,1124,50],[1234,8,1125,6,"s1"],[1234,10,1125,8],[1234,13,1125,11,"peg$c14"],[1234,20,1125,18],[1235,8,1126,6,"peg$currPos"],[1235,19,1126,17],[1235,23,1126,21],[1235,24,1126,22],[1236,6,1127,4],[1236,7,1127,5],[1236,13,1127,11],[1237,8,1128,6,"s1"],[1237,10,1128,8],[1237,13,1128,11,"peg$FAILED"],[1237,23,1128,21],[1238,8,1129,6],[1238,12,1129,10,"peg$silentFails"],[1238,27,1129,25],[1238,32,1129,30],[1238,33,1129,31],[1238,35,1129,33],[1239,10,1129,35,"peg$fail"],[1239,18,1129,43],[1239,19,1129,44,"peg$e34"],[1239,26,1129,51],[1239,27,1129,52],[1240,8,1129,54],[1241,6,1130,4],[1242,6,1131,4],[1242,10,1131,8,"s1"],[1242,12,1131,10],[1242,17,1131,15,"peg$FAILED"],[1242,27,1131,25],[1242,29,1131,27],[1243,8,1132,6],[1243,12,1132,10,"input"],[1243,17,1132,15],[1243,18,1132,16,"substr"],[1243,24,1132,22],[1243,25,1132,23,"peg$currPos"],[1243,36,1132,34],[1243,38,1132,36],[1243,39,1132,37],[1243,40,1132,38],[1243,45,1132,43,"peg$c15"],[1243,52,1132,50],[1243,54,1132,52],[1244,10,1133,8,"s1"],[1244,12,1133,10],[1244,15,1133,13,"peg$c15"],[1244,22,1133,20],[1245,10,1134,8,"peg$currPos"],[1245,21,1134,19],[1245,25,1134,23],[1245,26,1134,24],[1246,8,1135,6],[1246,9,1135,7],[1246,15,1135,13],[1247,10,1136,8,"s1"],[1247,12,1136,10],[1247,15,1136,13,"peg$FAILED"],[1247,25,1136,23],[1248,10,1137,8],[1248,14,1137,12,"peg$silentFails"],[1248,29,1137,27],[1248,34,1137,32],[1248,35,1137,33],[1248,37,1137,35],[1249,12,1137,37,"peg$fail"],[1249,20,1137,45],[1249,21,1137,46,"peg$e35"],[1249,28,1137,53],[1249,29,1137,54],[1250,10,1137,56],[1251,8,1138,6],[1252,8,1139,6],[1252,12,1139,10,"s1"],[1252,14,1139,12],[1252,19,1139,17,"peg$FAILED"],[1252,29,1139,27],[1252,31,1139,29],[1253,10,1140,8],[1253,14,1140,12,"input"],[1253,19,1140,17],[1253,20,1140,18,"substr"],[1253,26,1140,24],[1253,27,1140,25,"peg$currPos"],[1253,38,1140,36],[1253,40,1140,38],[1253,41,1140,39],[1253,42,1140,40],[1253,47,1140,45,"peg$c16"],[1253,54,1140,52],[1253,56,1140,54],[1254,12,1141,10,"s1"],[1254,14,1141,12],[1254,17,1141,15,"peg$c16"],[1254,24,1141,22],[1255,12,1142,10,"peg$currPos"],[1255,23,1142,21],[1255,27,1142,25],[1255,28,1142,26],[1256,10,1143,8],[1256,11,1143,9],[1256,17,1143,15],[1257,12,1144,10,"s1"],[1257,14,1144,12],[1257,17,1144,15,"peg$FAILED"],[1257,27,1144,25],[1258,12,1145,10],[1258,16,1145,14,"peg$silentFails"],[1258,31,1145,29],[1258,36,1145,34],[1258,37,1145,35],[1258,39,1145,37],[1259,14,1145,39,"peg$fail"],[1259,22,1145,47],[1259,23,1145,48,"peg$e36"],[1259,30,1145,55],[1259,31,1145,56],[1260,12,1145,58],[1261,10,1146,8],[1262,10,1147,8],[1262,14,1147,12,"s1"],[1262,16,1147,14],[1262,21,1147,19,"peg$FAILED"],[1262,31,1147,29],[1262,33,1147,31],[1263,12,1148,10],[1263,16,1148,14,"input"],[1263,21,1148,19],[1263,22,1148,20,"charCodeAt"],[1263,32,1148,30],[1263,33,1148,31,"peg$currPos"],[1263,44,1148,42],[1263,45,1148,43],[1263,50,1148,48],[1263,52,1148,50],[1263,54,1148,52],[1264,14,1149,12,"s1"],[1264,16,1149,14],[1264,19,1149,17,"peg$c17"],[1264,26,1149,24],[1265,14,1150,12,"peg$currPos"],[1265,25,1150,23],[1265,27,1150,25],[1266,12,1151,10],[1266,13,1151,11],[1266,19,1151,17],[1267,14,1152,12,"s1"],[1267,16,1152,14],[1267,19,1152,17,"peg$FAILED"],[1267,29,1152,27],[1268,14,1153,12],[1268,18,1153,16,"peg$silentFails"],[1268,33,1153,31],[1268,38,1153,36],[1268,39,1153,37],[1268,41,1153,39],[1269,16,1153,41,"peg$fail"],[1269,24,1153,49],[1269,25,1153,50,"peg$e37"],[1269,32,1153,57],[1269,33,1153,58],[1270,14,1153,60],[1271,12,1154,10],[1272,10,1155,8],[1273,8,1156,6],[1274,6,1157,4],[1275,6,1158,4],[1275,10,1158,8,"s1"],[1275,12,1158,10],[1275,17,1158,15,"peg$FAILED"],[1275,27,1158,25],[1275,29,1158,27],[1276,8,1159,6,"peg$parse_"],[1276,18,1159,16],[1276,19,1159,17],[1276,20,1159,18],[1277,8,1160,6,"s3"],[1277,10,1160,8],[1277,13,1160,11,"peg$parsecomment"],[1277,29,1160,27],[1277,30,1160,28],[1277,31,1160,29],[1278,8,1161,6],[1278,12,1161,10,"s3"],[1278,14,1161,12],[1278,19,1161,17,"peg$FAILED"],[1278,29,1161,27],[1278,31,1161,29],[1279,10,1162,8,"s3"],[1279,12,1162,10],[1279,15,1162,13],[1279,19,1162,17],[1280,8,1163,6],[1281,8,1164,6,"s0"],[1281,10,1164,8],[1281,13,1164,11,"peg$f10"],[1281,20,1164,18],[1281,21,1164,19,"s1"],[1281,23,1164,21],[1281,25,1164,23,"s3"],[1281,27,1164,25],[1281,28,1164,26],[1282,6,1165,4],[1282,7,1165,5],[1282,13,1165,11],[1283,8,1166,6,"peg$currPos"],[1283,19,1166,17],[1283,22,1166,20,"s0"],[1283,24,1166,22],[1284,8,1167,6,"s0"],[1284,10,1167,8],[1284,13,1167,11,"peg$FAILED"],[1284,23,1167,21],[1285,6,1168,4],[1286,6,1169,4,"peg$silentFails"],[1286,21,1169,19],[1286,23,1169,21],[1287,6,1170,4],[1287,10,1170,8,"s0"],[1287,12,1170,10],[1287,17,1170,15,"peg$FAILED"],[1287,27,1170,25],[1287,29,1170,27],[1288,8,1171,6,"s1"],[1288,10,1171,8],[1288,13,1171,11,"peg$FAILED"],[1288,23,1171,21],[1289,8,1172,6],[1289,12,1172,10,"peg$silentFails"],[1289,27,1172,25],[1289,32,1172,30],[1289,33,1172,31],[1289,35,1172,33],[1290,10,1172,35,"peg$fail"],[1290,18,1172,43],[1290,19,1172,44,"peg$e33"],[1290,26,1172,51],[1290,27,1172,52],[1291,8,1172,54],[1292,6,1173,4],[1293,6,1175,4],[1293,13,1175,11,"s0"],[1293,15,1175,13],[1294,4,1176,2],[1295,4,1178,2],[1295,13,1178,11,"peg$parse_"],[1295,23,1178,21,"peg$parse_"],[1295,24,1178,21],[1295,26,1178,24],[1296,6,1179,4],[1296,10,1179,8,"s0"],[1296,12,1179,10],[1296,14,1179,12,"s1"],[1296,16,1179,14],[1297,6,1181,4,"peg$silentFails"],[1297,21,1181,19],[1297,23,1181,21],[1298,6,1182,4,"s0"],[1298,8,1182,6],[1298,11,1182,9],[1298,13,1182,11],[1299,6,1183,4,"s1"],[1299,8,1183,6],[1299,11,1183,9,"input"],[1299,16,1183,14],[1299,17,1183,15,"charAt"],[1299,23,1183,21],[1299,24,1183,22,"peg$currPos"],[1299,35,1183,33],[1299,36,1183,34],[1300,6,1184,4],[1300,10,1184,8,"peg$r9"],[1300,16,1184,14],[1300,17,1184,15,"test"],[1300,21,1184,19],[1300,22,1184,20,"s1"],[1300,24,1184,22],[1300,25,1184,23],[1300,27,1184,25],[1301,8,1185,6,"peg$currPos"],[1301,19,1185,17],[1301,21,1185,19],[1302,6,1186,4],[1302,7,1186,5],[1302,13,1186,11],[1303,8,1187,6,"s1"],[1303,10,1187,8],[1303,13,1187,11,"peg$FAILED"],[1303,23,1187,21],[1304,8,1188,6],[1304,12,1188,10,"peg$silentFails"],[1304,27,1188,25],[1304,32,1188,30],[1304,33,1188,31],[1304,35,1188,33],[1305,10,1188,35,"peg$fail"],[1305,18,1188,43],[1305,19,1188,44,"peg$e39"],[1305,26,1188,51],[1305,27,1188,52],[1306,8,1188,54],[1307,6,1189,4],[1308,6,1190,4],[1308,13,1190,11,"s1"],[1308,15,1190,13],[1308,20,1190,18,"peg$FAILED"],[1308,30,1190,28],[1308,32,1190,30],[1309,8,1191,6,"s0"],[1309,10,1191,8],[1309,11,1191,9,"push"],[1309,15,1191,13],[1309,16,1191,14,"s1"],[1309,18,1191,16],[1309,19,1191,17],[1310,8,1192,6,"s1"],[1310,10,1192,8],[1310,13,1192,11,"input"],[1310,18,1192,16],[1310,19,1192,17,"charAt"],[1310,25,1192,23],[1310,26,1192,24,"peg$currPos"],[1310,37,1192,35],[1310,38,1192,36],[1311,8,1193,6],[1311,12,1193,10,"peg$r9"],[1311,18,1193,16],[1311,19,1193,17,"test"],[1311,23,1193,21],[1311,24,1193,22,"s1"],[1311,26,1193,24],[1311,27,1193,25],[1311,29,1193,27],[1312,10,1194,8,"peg$currPos"],[1312,21,1194,19],[1312,23,1194,21],[1313,8,1195,6],[1313,9,1195,7],[1313,15,1195,13],[1314,10,1196,8,"s1"],[1314,12,1196,10],[1314,15,1196,13,"peg$FAILED"],[1314,25,1196,23],[1315,10,1197,8],[1315,14,1197,12,"peg$silentFails"],[1315,29,1197,27],[1315,34,1197,32],[1315,35,1197,33],[1315,37,1197,35],[1316,12,1197,37,"peg$fail"],[1316,20,1197,45],[1316,21,1197,46,"peg$e39"],[1316,28,1197,53],[1316,29,1197,54],[1317,10,1197,56],[1318,8,1198,6],[1319,6,1199,4],[1320,6,1200,4,"peg$silentFails"],[1320,21,1200,19],[1320,23,1200,21],[1321,6,1201,4,"s1"],[1321,8,1201,6],[1321,11,1201,9,"peg$FAILED"],[1321,21,1201,19],[1322,6,1202,4],[1322,10,1202,8,"peg$silentFails"],[1322,25,1202,23],[1322,30,1202,28],[1322,31,1202,29],[1322,33,1202,31],[1323,8,1202,33,"peg$fail"],[1323,16,1202,41],[1323,17,1202,42,"peg$e38"],[1323,24,1202,49],[1323,25,1202,50],[1324,6,1202,52],[1325,6,1204,4],[1325,13,1204,11,"s0"],[1325,15,1204,13],[1326,4,1205,2],[1327,4,1207,2,"peg$result"],[1327,14,1207,12],[1327,17,1207,15,"peg$startRuleFunction"],[1327,38,1207,36],[1327,39,1207,37],[1327,40,1207,38],[1328,4,1209,2],[1328,8,1209,6,"options"],[1328,15,1209,13],[1328,16,1209,14,"peg$library"],[1328,27,1209,25],[1328,29,1209,27],[1329,6,1210,4],[1329,13,1210,11],[1329,31,1210,31],[1330,8,1211,6,"peg$result"],[1330,18,1211,16],[1331,8,1212,6,"peg$currPos"],[1331,19,1212,17],[1332,8,1213,6,"peg$FAILED"],[1332,18,1213,16],[1333,8,1214,6,"peg$maxFailExpected"],[1333,27,1214,25],[1334,8,1215,6,"peg$maxFailPos"],[1335,6,1216,4],[1335,7,1216,5],[1336,4,1217,2],[1337,4,1218,2],[1337,8,1218,6,"peg$result"],[1337,18,1218,16],[1337,23,1218,21,"peg$FAILED"],[1337,33,1218,31],[1337,37,1218,35,"peg$currPos"],[1337,48,1218,46],[1337,53,1218,51,"input"],[1337,58,1218,56],[1337,59,1218,57,"length"],[1337,65,1218,63],[1337,67,1218,65],[1338,6,1219,4],[1338,13,1219,11,"peg$result"],[1338,23,1219,21],[1339,4,1220,2],[1339,5,1220,3],[1339,11,1220,9],[1340,6,1221,4],[1340,10,1221,8,"peg$result"],[1340,20,1221,18],[1340,25,1221,23,"peg$FAILED"],[1340,35,1221,33],[1340,39,1221,37,"peg$currPos"],[1340,50,1221,48],[1340,53,1221,51,"input"],[1340,58,1221,56],[1340,59,1221,57,"length"],[1340,65,1221,63],[1340,67,1221,65],[1341,8,1222,6,"peg$fail"],[1341,16,1222,14],[1341,17,1222,15,"peg$endExpectation"],[1341,35,1222,33],[1341,36,1222,34],[1341,37,1222,35],[1341,38,1222,36],[1342,6,1223,4],[1343,6,1225,4],[1343,12,1225,10,"peg$buildStructuredError"],[1343,36,1225,34],[1343,37,1226,6,"peg$maxFailExpected"],[1343,56,1226,25],[1343,58,1227,6,"peg$maxFailPos"],[1343,72,1227,20],[1343,75,1227,23,"input"],[1343,80,1227,28],[1343,81,1227,29,"length"],[1343,87,1227,35],[1343,90,1227,38,"input"],[1343,95,1227,43],[1343,96,1227,44,"charAt"],[1343,102,1227,50],[1343,103,1227,51,"peg$maxFailPos"],[1343,117,1227,65],[1343,118,1227,66],[1343,121,1227,69],[1343,125,1227,73],[1343,127,1228,6,"peg$maxFailPos"],[1343,141,1228,20],[1343,144,1228,23,"input"],[1343,149,1228,28],[1343,150,1228,29,"length"],[1343,156,1228,35],[1343,159,1229,10,"peg$computeLocation"],[1343,178,1229,29],[1343,179,1229,30,"peg$maxFailPos"],[1343,193,1229,44],[1343,195,1229,46,"peg$maxFailPos"],[1343,209,1229,60],[1343,212,1229,63],[1343,213,1229,64],[1343,214,1229,65],[1343,217,1230,10,"peg$computeLocation"],[1343,236,1230,29],[1343,237,1230,30,"peg$maxFailPos"],[1343,251,1230,44],[1343,253,1230,46,"peg$maxFailPos"],[1343,267,1230,60],[1343,268,1231,4],[1343,269,1231,5],[1344,4,1232,2],[1345,2,1233,0],[1347,2,1235,0],[1348,0,1236,0],[1349,0,1237,0],[1350,0,1238,0],[1351,0,1239,0],[1352,0,1240,0],[1353,0,1241,0],[1354,0,1242,0],[1355,0,1243,0],[1356,0,1244,0],[1357,0,1245,0],[1358,0,1246,0],[1359,0,1247,0],[1360,0,1248,0],[1361,0,1249,0],[1362,0,1250,0],[1363,0,1251,0],[1364,0,1252,0],[1365,0,1253,0],[1366,0,1254,0],[1367,0,1255,0],[1368,0,1256,0],[1369,0,1257,0],[1370,0,1258,0],[1371,0,1259,0],[1372,0,1260,0],[1373,2,1261,0],[1373,8,1261,6,"MASK64"],[1373,14,1261,12],[1373,17,1261,15],[1373,36,1261,34],[1374,2,1262,0],[1374,11,1262,9,"rotl"],[1374,15,1262,13,"rotl"],[1374,16,1262,14,"x"],[1374,17,1262,15],[1374,19,1262,17,"k"],[1374,20,1262,18],[1374,22,1262,20],[1375,4,1263,4],[1375,11,1263,11],[1375,12,1263,13,"x"],[1375,13,1263,14],[1375,17,1263,18,"k"],[1375,18,1263,19],[1375,21,1263,24,"x"],[1375,22,1263,25],[1375,26,1263,30],[1375,29,1263,33],[1375,32,1263,36,"k"],[1375,33,1263,39],[1375,37,1263,43],[1375,56,1263,62],[1376,2,1264,0],[1377,2,1265,0],[1377,11,1265,9,"wrappingMul"],[1377,22,1265,20,"wrappingMul"],[1377,23,1265,21,"x"],[1377,24,1265,22],[1377,26,1265,24,"y"],[1377,27,1265,25],[1377,29,1265,27],[1378,4,1266,4],[1378,11,1266,12,"x"],[1378,12,1266,13],[1378,15,1266,16,"y"],[1378,16,1266,17],[1378,19,1266,21,"MASK64"],[1378,25,1266,27],[1379,2,1267,0],[1380,2,1268,0],[1381,2,1269,0],[1381,11,1269,9,"xoroshiro128"],[1381,23,1269,21,"xoroshiro128"],[1381,24,1269,22,"state"],[1381,29,1269,27],[1381,31,1269,29],[1382,4,1270,4],[1382,11,1270,11],[1382,23,1270,23],[1383,6,1271,8],[1383,10,1271,12,"s0"],[1383,12,1271,14],[1383,15,1271,17,"BigInt"],[1383,21,1271,23],[1383,22,1271,24,"state"],[1383,27,1271,29],[1383,30,1271,32,"MASK64"],[1383,36,1271,38],[1383,37,1271,39],[1384,6,1272,8],[1384,10,1272,12,"s1"],[1384,12,1272,14],[1384,15,1272,17,"BigInt"],[1384,21,1272,23],[1384,22,1272,25,"state"],[1384,27,1272,30],[1384,31,1272,34],[1384,34,1272,37],[1384,37,1272,41,"MASK64"],[1384,43,1272,47],[1384,44,1272,48],[1385,6,1273,8],[1385,12,1273,14,"result"],[1385,18,1273,20],[1385,21,1273,23,"wrappingMul"],[1385,32,1273,34],[1385,33,1273,35,"rotl"],[1385,37,1273,39],[1385,38,1273,40,"wrappingMul"],[1385,49,1273,51],[1385,50,1273,52,"s0"],[1385,52,1273,54],[1385,54,1273,56],[1385,56,1273,58],[1385,57,1273,59],[1385,59,1273,61],[1385,61,1273,63],[1385,62,1273,64],[1385,64,1273,66],[1385,66,1273,68],[1385,67,1273,69],[1386,6,1274,8,"s1"],[1386,8,1274,10],[1386,12,1274,14,"s0"],[1386,14,1274,16],[1387,6,1275,8,"s0"],[1387,8,1275,10],[1387,11,1275,13],[1387,12,1275,14,"rotl"],[1387,16,1275,18],[1387,17,1275,19,"s0"],[1387,19,1275,21],[1387,21,1275,23],[1387,24,1275,26],[1387,25,1275,27],[1387,28,1275,30,"s1"],[1387,30,1275,32],[1387,33,1275,36,"s1"],[1387,35,1275,38],[1387,39,1275,42],[1387,42,1275,46],[1387,46,1275,50,"MASK64"],[1387,52,1275,56],[1388,6,1276,8,"s1"],[1388,8,1276,10],[1388,11,1276,13,"rotl"],[1388,15,1276,17],[1388,16,1276,18,"s1"],[1388,18,1276,20],[1388,20,1276,22],[1388,23,1276,25],[1388,24,1276,26],[1389,6,1277,8,"state"],[1389,11,1277,13],[1389,14,1277,17,"s1"],[1389,16,1277,19],[1389,20,1277,23],[1389,23,1277,26],[1389,26,1277,30,"s0"],[1389,28,1277,32],[1390,6,1278,8],[1390,13,1278,15,"result"],[1390,19,1278,21],[1391,4,1279,4],[1391,5,1279,5],[1392,2,1280,0],[1393,2,1281,0],[1393,8,1281,6,"rand"],[1393,12,1281,10],[1393,15,1281,13,"xoroshiro128"],[1393,27,1281,25],[1393,28,1281,26],[1393,63,1281,61],[1393,64,1281,62],[1394,2,1282,0],[1394,8,1282,6,"PIECE_KEYS"],[1394,18,1282,16],[1394,21,1282,19,"Array"],[1394,26,1282,24],[1394,27,1282,25,"from"],[1394,31,1282,29],[1394,32,1282,30],[1395,4,1282,32,"length"],[1395,10,1282,38],[1395,12,1282,40],[1396,2,1282,42],[1396,3,1282,43],[1396,5,1282,45],[1396,11,1282,51,"Array"],[1396,16,1282,56],[1396,17,1282,57,"from"],[1396,21,1282,61],[1396,22,1282,62],[1397,4,1282,64,"length"],[1397,10,1282,70],[1397,12,1282,72],[1398,2,1282,74],[1398,3,1282,75],[1398,5,1282,77],[1398,11,1282,83,"Array"],[1398,16,1282,88],[1398,17,1282,89,"from"],[1398,21,1282,93],[1398,22,1282,94],[1399,4,1282,96,"length"],[1399,10,1282,102],[1399,12,1282,104],[1400,2,1282,108],[1400,3,1282,109],[1400,5,1282,111],[1400,11,1282,117,"rand"],[1400,15,1282,121],[1400,16,1282,122],[1400,17,1282,123],[1400,18,1282,124],[1400,19,1282,125],[1400,20,1282,126],[1401,2,1283,0],[1401,8,1283,6,"EP_KEYS"],[1401,15,1283,13],[1401,18,1283,16,"Array"],[1401,23,1283,21],[1401,24,1283,22,"from"],[1401,28,1283,26],[1401,29,1283,27],[1402,4,1283,29,"length"],[1402,10,1283,35],[1402,12,1283,37],[1403,2,1283,39],[1403,3,1283,40],[1403,5,1283,42],[1403,11,1283,48,"rand"],[1403,15,1283,52],[1403,16,1283,53],[1403,17,1283,54],[1403,18,1283,55],[1404,2,1284,0],[1404,8,1284,6,"CASTLING_KEYS"],[1404,21,1284,19],[1404,24,1284,22,"Array"],[1404,29,1284,27],[1404,30,1284,28,"from"],[1404,34,1284,32],[1404,35,1284,33],[1405,4,1284,35,"length"],[1405,10,1284,41],[1405,12,1284,43],[1406,2,1284,46],[1406,3,1284,47],[1406,5,1284,49],[1406,11,1284,55,"rand"],[1406,15,1284,59],[1406,16,1284,60],[1406,17,1284,61],[1406,18,1284,62],[1407,2,1285,0],[1407,8,1285,6,"SIDE_KEY"],[1407,16,1285,14],[1407,19,1285,17,"rand"],[1407,23,1285,21],[1407,24,1285,22],[1407,25,1285,23],[1408,2,1286,0],[1408,8,1286,6,"WHITE"],[1408,13,1286,11],[1408,16,1286,14],[1408,19,1286,17],[1409,2,1287,0],[1409,8,1287,6,"BLACK"],[1409,13,1287,11],[1409,16,1287,14],[1409,19,1287,17],[1410,2,1288,0],[1410,8,1288,6,"PAWN"],[1410,12,1288,10],[1410,15,1288,13],[1410,18,1288,16],[1411,2,1289,0],[1411,8,1289,6,"KNIGHT"],[1411,14,1289,12],[1411,17,1289,15],[1411,20,1289,18],[1412,2,1290,0],[1412,8,1290,6,"BISHOP"],[1412,14,1290,12],[1412,17,1290,15],[1412,20,1290,18],[1413,2,1291,0],[1413,8,1291,6,"ROOK"],[1413,12,1291,10],[1413,15,1291,13],[1413,18,1291,16],[1414,2,1292,0],[1414,8,1292,6,"QUEEN"],[1414,13,1292,11],[1414,16,1292,14],[1414,19,1292,17],[1415,2,1293,0],[1415,8,1293,6,"KING"],[1415,12,1293,10],[1415,15,1293,13],[1415,18,1293,16],[1416,2,1294,0],[1416,8,1294,6,"DEFAULT_POSITION"],[1416,24,1294,22],[1416,27,1294,25],[1416,85,1294,83],[1417,2,1295,0],[1417,8,1295,6,"Move"],[1417,12,1295,10],[1417,13,1295,11],[1418,4,1302,4],[1419,0,1303,0],[1420,0,1304,0],[1421,0,1305,0],[1422,0,1306,0],[1423,0,1307,0],[1425,4,1313,4,"constructor"],[1425,15,1313,15,"constructor"],[1425,16,1313,16,"chess"],[1425,21,1313,21],[1425,23,1313,23,"internal"],[1425,31,1313,31],[1425,33,1313,33],[1426,6,1314,8],[1426,12,1314,14],[1427,8,1314,16,"color"],[1427,13,1314,21],[1428,8,1314,23,"piece"],[1428,13,1314,28],[1429,8,1314,30,"from"],[1429,12,1314,34],[1430,8,1314,36,"to"],[1430,10,1314,38],[1431,8,1314,40,"flags"],[1431,13,1314,45],[1432,8,1314,47,"captured"],[1432,16,1314,55],[1433,8,1314,57,"promotion"],[1434,6,1314,67],[1434,7,1314,68],[1434,10,1314,71,"internal"],[1434,18,1314,79],[1435,6,1315,8],[1435,12,1315,14,"fromAlgebraic"],[1435,25,1315,27],[1435,28,1315,30,"algebraic"],[1435,37,1315,39],[1435,38,1315,40,"from"],[1435,42,1315,44],[1435,43,1315,45],[1436,6,1316,8],[1436,12,1316,14,"toAlgebraic"],[1436,23,1316,25],[1436,26,1316,28,"algebraic"],[1436,35,1316,37],[1436,36,1316,38,"to"],[1436,38,1316,40],[1436,39,1316,41],[1437,6,1317,8],[1437,10,1317,12],[1437,11,1317,13,"color"],[1437,16,1317,18],[1437,19,1317,21,"color"],[1437,24,1317,26],[1438,6,1318,8],[1438,10,1318,12],[1438,11,1318,13,"piece"],[1438,16,1318,18],[1438,19,1318,21,"piece"],[1438,24,1318,26],[1439,6,1319,8],[1439,10,1319,12],[1439,11,1319,13,"from"],[1439,15,1319,17],[1439,18,1319,20,"fromAlgebraic"],[1439,31,1319,33],[1440,6,1320,8],[1440,10,1320,12],[1440,11,1320,13,"to"],[1440,13,1320,15],[1440,16,1320,18,"toAlgebraic"],[1440,27,1320,29],[1441,6,1321,8],[1442,0,1322,0],[1443,0,1323,0],[1444,0,1324,0],[1445,0,1325,0],[1446,6,1326,8],[1446,10,1326,12],[1446,11,1326,13,"san"],[1446,14,1326,16],[1446,17,1326,19,"chess"],[1446,22,1326,24],[1446,23,1326,25],[1446,35,1326,37],[1446,36,1326,38],[1446,37,1326,39,"internal"],[1446,45,1326,47],[1446,47,1326,49,"chess"],[1446,52,1326,54],[1446,53,1326,55],[1446,61,1326,63],[1446,62,1326,64],[1446,63,1326,65],[1447,8,1326,67,"legal"],[1447,13,1326,72],[1447,15,1326,74],[1448,6,1326,79],[1448,7,1326,80],[1448,8,1326,81],[1448,9,1326,82],[1449,6,1327,8],[1449,10,1327,12],[1449,11,1327,13,"lan"],[1449,14,1327,16],[1449,17,1327,19,"fromAlgebraic"],[1449,30,1327,32],[1449,33,1327,35,"toAlgebraic"],[1449,44,1327,46],[1450,6,1328,8],[1450,10,1328,12],[1450,11,1328,13,"before"],[1450,17,1328,19],[1450,20,1328,22,"chess"],[1450,25,1328,27],[1450,26,1328,28,"fen"],[1450,29,1328,31],[1450,30,1328,32],[1450,31,1328,33],[1451,6,1329,8],[1452,6,1330,8,"chess"],[1452,11,1330,13],[1452,12,1330,14],[1452,23,1330,25],[1452,24,1330,26],[1452,25,1330,27,"internal"],[1452,33,1330,35],[1452,34,1330,36],[1453,6,1331,8],[1453,10,1331,12],[1453,11,1331,13,"after"],[1453,16,1331,18],[1453,19,1331,21,"chess"],[1453,24,1331,26],[1453,25,1331,27,"fen"],[1453,28,1331,30],[1453,29,1331,31],[1453,30,1331,32],[1454,6,1332,8,"chess"],[1454,11,1332,13],[1454,12,1332,14],[1454,23,1332,25],[1454,24,1332,26],[1454,25,1332,27],[1454,26,1332,28],[1455,6,1333,8],[1456,6,1334,8],[1456,10,1334,12],[1456,11,1334,13,"flags"],[1456,16,1334,18],[1456,19,1334,21],[1456,21,1334,23],[1457,6,1335,8],[1457,11,1335,13],[1457,17,1335,19,"flag"],[1457,21,1335,23],[1457,25,1335,27,"BITS"],[1457,29,1335,31],[1457,31,1335,33],[1458,8,1336,12],[1458,12,1336,16,"BITS"],[1458,16,1336,20],[1458,17,1336,21,"flag"],[1458,21,1336,25],[1458,22,1336,26],[1458,25,1336,29,"flags"],[1458,30,1336,34],[1458,32,1336,36],[1459,10,1337,16],[1459,14,1337,20],[1459,15,1337,21,"flags"],[1459,20,1337,26],[1459,24,1337,30,"FLAGS"],[1459,29,1337,35],[1459,30,1337,36,"flag"],[1459,34,1337,40],[1459,35,1337,41],[1460,8,1338,12],[1461,6,1339,8],[1462,6,1340,8],[1462,10,1340,12,"captured"],[1462,18,1340,20],[1462,20,1340,22],[1463,8,1341,12],[1463,12,1341,16],[1463,13,1341,17,"captured"],[1463,21,1341,25],[1463,24,1341,28,"captured"],[1463,32,1341,36],[1464,6,1342,8],[1465,6,1343,8],[1465,10,1343,12,"promotion"],[1465,19,1343,21],[1465,21,1343,23],[1466,8,1344,12],[1466,12,1344,16],[1466,13,1344,17,"promotion"],[1466,22,1344,26],[1466,25,1344,29,"promotion"],[1466,34,1344,38],[1467,8,1345,12],[1467,12,1345,16],[1467,13,1345,17,"lan"],[1467,16,1345,20],[1467,20,1345,24,"promotion"],[1467,29,1345,33],[1468,6,1346,8],[1469,4,1347,4],[1470,4,1348,4,"isCapture"],[1470,13,1348,13,"isCapture"],[1470,14,1348,13],[1470,16,1348,16],[1471,6,1349,8],[1471,13,1349,15],[1471,17,1349,19],[1471,18,1349,20,"flags"],[1471,23,1349,25],[1471,24,1349,26,"indexOf"],[1471,31,1349,33],[1471,32,1349,34,"FLAGS"],[1471,37,1349,39],[1471,38,1349,40],[1471,47,1349,49],[1471,48,1349,50],[1471,49,1349,51],[1471,52,1349,54],[1471,53,1349,55],[1471,54,1349,56],[1472,4,1350,4],[1473,4,1351,4,"isPromotion"],[1473,15,1351,15,"isPromotion"],[1473,16,1351,15],[1473,18,1351,18],[1474,6,1352,8],[1474,13,1352,15],[1474,17,1352,19],[1474,18,1352,20,"flags"],[1474,23,1352,25],[1474,24,1352,26,"indexOf"],[1474,31,1352,33],[1474,32,1352,34,"FLAGS"],[1474,37,1352,39],[1474,38,1352,40],[1474,49,1352,51],[1474,50,1352,52],[1474,51,1352,53],[1474,54,1352,56],[1474,55,1352,57],[1474,56,1352,58],[1475,4,1353,4],[1476,4,1354,4,"isEnPassant"],[1476,15,1354,15,"isEnPassant"],[1476,16,1354,15],[1476,18,1354,18],[1477,6,1355,8],[1477,13,1355,15],[1477,17,1355,19],[1477,18,1355,20,"flags"],[1477,23,1355,25],[1477,24,1355,26,"indexOf"],[1477,31,1355,33],[1477,32,1355,34,"FLAGS"],[1477,37,1355,39],[1477,38,1355,40],[1477,50,1355,52],[1477,51,1355,53],[1477,52,1355,54],[1477,55,1355,57],[1477,56,1355,58],[1477,57,1355,59],[1478,4,1356,4],[1479,4,1357,4,"isKingsideCastle"],[1479,20,1357,20,"isKingsideCastle"],[1479,21,1357,20],[1479,23,1357,23],[1480,6,1358,8],[1480,13,1358,15],[1480,17,1358,19],[1480,18,1358,20,"flags"],[1480,23,1358,25],[1480,24,1358,26,"indexOf"],[1480,31,1358,33],[1480,32,1358,34,"FLAGS"],[1480,37,1358,39],[1480,38,1358,40],[1480,52,1358,54],[1480,53,1358,55],[1480,54,1358,56],[1480,57,1358,59],[1480,58,1358,60],[1480,59,1358,61],[1481,4,1359,4],[1482,4,1360,4,"isQueensideCastle"],[1482,21,1360,21,"isQueensideCastle"],[1482,22,1360,21],[1482,24,1360,24],[1483,6,1361,8],[1483,13,1361,15],[1483,17,1361,19],[1483,18,1361,20,"flags"],[1483,23,1361,25],[1483,24,1361,26,"indexOf"],[1483,31,1361,33],[1483,32,1361,34,"FLAGS"],[1483,37,1361,39],[1483,38,1361,40],[1483,52,1361,54],[1483,53,1361,55],[1483,54,1361,56],[1483,57,1361,59],[1483,58,1361,60],[1483,59,1361,61],[1484,4,1362,4],[1485,4,1363,4,"isBigPawn"],[1485,13,1363,13,"isBigPawn"],[1485,14,1363,13],[1485,16,1363,16],[1486,6,1364,8],[1486,13,1364,15],[1486,17,1364,19],[1486,18,1364,20,"flags"],[1486,23,1364,25],[1486,24,1364,26,"indexOf"],[1486,31,1364,33],[1486,32,1364,34,"FLAGS"],[1486,37,1364,39],[1486,38,1364,40],[1486,48,1364,50],[1486,49,1364,51],[1486,50,1364,52],[1486,53,1364,55],[1486,54,1364,56],[1486,55,1364,57],[1487,4,1365,4],[1488,2,1366,0],[1489,2,1367,0],[1489,8,1367,6,"EMPTY"],[1489,13,1367,11],[1489,16,1367,14],[1489,17,1367,15],[1489,18,1367,16],[1490,2,1368,0],[1490,8,1368,6,"FLAGS"],[1490,13,1368,11],[1490,16,1368,14],[1491,4,1369,4,"NORMAL"],[1491,10,1369,10],[1491,12,1369,12],[1491,15,1369,15],[1492,4,1370,4,"CAPTURE"],[1492,11,1370,11],[1492,13,1370,13],[1492,16,1370,16],[1493,4,1371,4,"BIG_PAWN"],[1493,12,1371,12],[1493,14,1371,14],[1493,17,1371,17],[1494,4,1372,4,"EP_CAPTURE"],[1494,14,1372,14],[1494,16,1372,16],[1494,19,1372,19],[1495,4,1373,4,"PROMOTION"],[1495,13,1373,13],[1495,15,1373,15],[1495,18,1373,18],[1496,4,1374,4,"KSIDE_CASTLE"],[1496,16,1374,16],[1496,18,1374,18],[1496,21,1374,21],[1497,4,1375,4,"QSIDE_CASTLE"],[1497,16,1375,16],[1497,18,1375,18],[1497,21,1375,21],[1498,4,1376,4,"NULL_MOVE"],[1498,13,1376,13],[1498,15,1376,15],[1499,2,1377,0],[1499,3,1377,1],[1500,2,1378,0],[1501,2,1379,0],[1501,8,1379,6,"SQUARES"],[1501,15,1379,13],[1501,18,1379,16],[1501,19,1380,4],[1501,23,1380,8],[1501,25,1380,10],[1501,29,1380,14],[1501,31,1380,16],[1501,35,1380,20],[1501,37,1380,22],[1501,41,1380,26],[1501,43,1380,28],[1501,47,1380,32],[1501,49,1380,34],[1501,53,1380,38],[1501,55,1380,40],[1501,59,1380,44],[1501,61,1380,46],[1501,65,1380,50],[1501,67,1381,4],[1501,71,1381,8],[1501,73,1381,10],[1501,77,1381,14],[1501,79,1381,16],[1501,83,1381,20],[1501,85,1381,22],[1501,89,1381,26],[1501,91,1381,28],[1501,95,1381,32],[1501,97,1381,34],[1501,101,1381,38],[1501,103,1381,40],[1501,107,1381,44],[1501,109,1381,46],[1501,113,1381,50],[1501,115,1382,4],[1501,119,1382,8],[1501,121,1382,10],[1501,125,1382,14],[1501,127,1382,16],[1501,131,1382,20],[1501,133,1382,22],[1501,137,1382,26],[1501,139,1382,28],[1501,143,1382,32],[1501,145,1382,34],[1501,149,1382,38],[1501,151,1382,40],[1501,155,1382,44],[1501,157,1382,46],[1501,161,1382,50],[1501,163,1383,4],[1501,167,1383,8],[1501,169,1383,10],[1501,173,1383,14],[1501,175,1383,16],[1501,179,1383,20],[1501,181,1383,22],[1501,185,1383,26],[1501,187,1383,28],[1501,191,1383,32],[1501,193,1383,34],[1501,197,1383,38],[1501,199,1383,40],[1501,203,1383,44],[1501,205,1383,46],[1501,209,1383,50],[1501,211,1384,4],[1501,215,1384,8],[1501,217,1384,10],[1501,221,1384,14],[1501,223,1384,16],[1501,227,1384,20],[1501,229,1384,22],[1501,233,1384,26],[1501,235,1384,28],[1501,239,1384,32],[1501,241,1384,34],[1501,245,1384,38],[1501,247,1384,40],[1501,251,1384,44],[1501,253,1384,46],[1501,257,1384,50],[1501,259,1385,4],[1501,263,1385,8],[1501,265,1385,10],[1501,269,1385,14],[1501,271,1385,16],[1501,275,1385,20],[1501,277,1385,22],[1501,281,1385,26],[1501,283,1385,28],[1501,287,1385,32],[1501,289,1385,34],[1501,293,1385,38],[1501,295,1385,40],[1501,299,1385,44],[1501,301,1385,46],[1501,305,1385,50],[1501,307,1386,4],[1501,311,1386,8],[1501,313,1386,10],[1501,317,1386,14],[1501,319,1386,16],[1501,323,1386,20],[1501,325,1386,22],[1501,329,1386,26],[1501,331,1386,28],[1501,335,1386,32],[1501,337,1386,34],[1501,341,1386,38],[1501,343,1386,40],[1501,347,1386,44],[1501,349,1386,46],[1501,353,1386,50],[1501,355,1387,4],[1501,359,1387,8],[1501,361,1387,10],[1501,365,1387,14],[1501,367,1387,16],[1501,371,1387,20],[1501,373,1387,22],[1501,377,1387,26],[1501,379,1387,28],[1501,383,1387,32],[1501,385,1387,34],[1501,389,1387,38],[1501,391,1387,40],[1501,395,1387,44],[1501,397,1387,46],[1501,401,1387,50],[1501,402,1388,1],[1502,2,1389,0],[1502,8,1389,6,"BITS"],[1502,12,1389,10],[1502,15,1389,13],[1503,4,1390,4,"NORMAL"],[1503,10,1390,10],[1503,12,1390,12],[1503,13,1390,13],[1504,4,1391,4,"CAPTURE"],[1504,11,1391,11],[1504,13,1391,13],[1504,14,1391,14],[1505,4,1392,4,"BIG_PAWN"],[1505,12,1392,12],[1505,14,1392,14],[1505,15,1392,15],[1506,4,1393,4,"EP_CAPTURE"],[1506,14,1393,14],[1506,16,1393,16],[1506,17,1393,17],[1507,4,1394,4,"PROMOTION"],[1507,13,1394,13],[1507,15,1394,15],[1507,17,1394,17],[1508,4,1395,4,"KSIDE_CASTLE"],[1508,16,1395,16],[1508,18,1395,18],[1508,20,1395,20],[1509,4,1396,4,"QSIDE_CASTLE"],[1509,16,1396,16],[1509,18,1396,18],[1509,20,1396,20],[1510,4,1397,4,"NULL_MOVE"],[1510,13,1397,13],[1510,15,1397,15],[1511,2,1398,0],[1511,3,1398,1],[1512,2,1399,0],[1513,2,1400,0],[1514,2,1401,0],[1514,8,1401,6,"SEVEN_TAG_ROSTER"],[1514,24,1401,22],[1514,27,1401,25],[1515,4,1402,4,"Event"],[1515,9,1402,9],[1515,11,1402,11],[1515,14,1402,14],[1516,4,1403,4,"Site"],[1516,8,1403,8],[1516,10,1403,10],[1516,13,1403,13],[1517,4,1404,4,"Date"],[1517,8,1404,8],[1517,10,1404,10],[1517,22,1404,22],[1518,4,1405,4,"Round"],[1518,9,1405,9],[1518,11,1405,11],[1518,14,1405,14],[1519,4,1406,4,"White"],[1519,9,1406,9],[1519,11,1406,11],[1519,14,1406,14],[1520,4,1407,4,"Black"],[1520,9,1407,9],[1520,11,1407,11],[1520,14,1407,14],[1521,4,1408,4,"Result"],[1521,10,1408,10],[1521,12,1408,12],[1522,2,1409,0],[1522,3,1409,1],[1523,2,1410,0],[1524,0,1411,0],[1525,0,1412,0],[1526,0,1413,0],[1527,2,1414,0],[1527,8,1414,6,"SUPLEMENTAL_TAGS"],[1527,24,1414,22],[1527,27,1414,25],[1528,4,1415,4,"WhiteTitle"],[1528,14,1415,14],[1528,16,1415,16],[1528,20,1415,20],[1529,4,1416,4,"BlackTitle"],[1529,14,1416,14],[1529,16,1416,16],[1529,20,1416,20],[1530,4,1417,4,"WhiteElo"],[1530,12,1417,12],[1530,14,1417,14],[1530,18,1417,18],[1531,4,1418,4,"BlackElo"],[1531,12,1418,12],[1531,14,1418,14],[1531,18,1418,18],[1532,4,1419,4,"WhiteUSCF"],[1532,13,1419,13],[1532,15,1419,15],[1532,19,1419,19],[1533,4,1420,4,"BlackUSCF"],[1533,13,1420,13],[1533,15,1420,15],[1533,19,1420,19],[1534,4,1421,4,"WhiteNA"],[1534,11,1421,11],[1534,13,1421,13],[1534,17,1421,17],[1535,4,1422,4,"BlackNA"],[1535,11,1422,11],[1535,13,1422,13],[1535,17,1422,17],[1536,4,1423,4,"WhiteType"],[1536,13,1423,13],[1536,15,1423,15],[1536,19,1423,19],[1537,4,1424,4,"BlackType"],[1537,13,1424,13],[1537,15,1424,15],[1537,19,1424,19],[1538,4,1425,4,"EventDate"],[1538,13,1425,13],[1538,15,1425,15],[1538,19,1425,19],[1539,4,1426,4,"EventSponsor"],[1539,16,1426,16],[1539,18,1426,18],[1539,22,1426,22],[1540,4,1427,4,"Section"],[1540,11,1427,11],[1540,13,1427,13],[1540,17,1427,17],[1541,4,1428,4,"Stage"],[1541,9,1428,9],[1541,11,1428,11],[1541,15,1428,15],[1542,4,1429,4,"Board"],[1542,9,1429,9],[1542,11,1429,11],[1542,15,1429,15],[1543,4,1430,4,"Opening"],[1543,11,1430,11],[1543,13,1430,13],[1543,17,1430,17],[1544,4,1431,4,"Variation"],[1544,13,1431,13],[1544,15,1431,15],[1544,19,1431,19],[1545,4,1432,4,"SubVariation"],[1545,16,1432,16],[1545,18,1432,18],[1545,22,1432,22],[1546,4,1433,4,"ECO"],[1546,7,1433,7],[1546,9,1433,9],[1546,13,1433,13],[1547,4,1434,4,"NIC"],[1547,7,1434,7],[1547,9,1434,9],[1547,13,1434,13],[1548,4,1435,4,"Time"],[1548,8,1435,8],[1548,10,1435,10],[1548,14,1435,14],[1549,4,1436,4,"UTCTime"],[1549,11,1436,11],[1549,13,1436,13],[1549,17,1436,17],[1550,4,1437,4,"UTCDate"],[1550,11,1437,11],[1550,13,1437,13],[1550,17,1437,17],[1551,4,1438,4,"TimeControl"],[1551,15,1438,15],[1551,17,1438,17],[1551,21,1438,21],[1552,4,1439,4,"SetUp"],[1552,9,1439,9],[1552,11,1439,11],[1552,15,1439,15],[1553,4,1440,4,"FEN"],[1553,7,1440,7],[1553,9,1440,9],[1553,13,1440,13],[1554,4,1441,4,"Termination"],[1554,15,1441,15],[1554,17,1441,17],[1554,21,1441,21],[1555,4,1442,4,"Annotator"],[1555,13,1442,13],[1555,15,1442,15],[1555,19,1442,19],[1556,4,1443,4,"Mode"],[1556,8,1443,8],[1556,10,1443,10],[1556,14,1443,14],[1557,4,1444,4,"PlyCount"],[1557,12,1444,12],[1557,14,1444,14],[1558,2,1445,0],[1558,3,1445,1],[1559,2,1446,0],[1559,8,1446,6,"HEADER_TEMPLATE"],[1559,23,1446,21],[1559,26,1446,24],[1560,4,1447,4],[1560,7,1447,7,"SEVEN_TAG_ROSTER"],[1560,23,1447,23],[1561,4,1448,4],[1561,7,1448,7,"SUPLEMENTAL_TAGS"],[1562,2,1449,0],[1562,3,1449,1],[1563,2,1450,0],[1564,2,1451,0],[1565,0,1452,0],[1566,0,1453,0],[1567,0,1454,0],[1568,0,1455,0],[1569,0,1456,0],[1570,0,1457,0],[1571,0,1458,0],[1572,0,1459,0],[1573,0,1460,0],[1574,0,1461,0],[1575,0,1462,0],[1576,0,1463,0],[1577,0,1464,0],[1578,0,1465,0],[1579,0,1466,0],[1580,0,1467,0],[1581,0,1468,0],[1582,0,1469,0],[1583,0,1470,0],[1584,0,1471,0],[1585,0,1472,0],[1586,0,1473,0],[1587,0,1474,0],[1588,0,1475,0],[1589,0,1476,0],[1590,0,1477,0],[1591,0,1478,0],[1592,0,1479,0],[1593,0,1480,0],[1594,0,1481,0],[1595,0,1482,0],[1596,0,1483,0],[1597,0,1484,0],[1598,0,1485,0],[1599,0,1486,0],[1600,0,1487,0],[1601,0,1488,0],[1602,2,1489,0],[1603,2,1490,0],[1604,2,1491,0],[1604,8,1491,6,"Ox88"],[1604,12,1491,10],[1604,15,1491,13],[1605,4,1492,4,"a8"],[1605,6,1492,6],[1605,8,1492,8],[1605,9,1492,9],[1606,4,1492,11,"b8"],[1606,6,1492,13],[1606,8,1492,15],[1606,9,1492,16],[1607,4,1492,18,"c8"],[1607,6,1492,20],[1607,8,1492,22],[1607,9,1492,23],[1608,4,1492,25,"d8"],[1608,6,1492,27],[1608,8,1492,29],[1608,9,1492,30],[1609,4,1492,32,"e8"],[1609,6,1492,34],[1609,8,1492,36],[1609,9,1492,37],[1610,4,1492,39,"f8"],[1610,6,1492,41],[1610,8,1492,43],[1610,9,1492,44],[1611,4,1492,46,"g8"],[1611,6,1492,48],[1611,8,1492,50],[1611,9,1492,51],[1612,4,1492,53,"h8"],[1612,6,1492,55],[1612,8,1492,57],[1612,9,1492,58],[1613,4,1493,4,"a7"],[1613,6,1493,6],[1613,8,1493,8],[1613,10,1493,10],[1614,4,1493,12,"b7"],[1614,6,1493,14],[1614,8,1493,16],[1614,10,1493,18],[1615,4,1493,20,"c7"],[1615,6,1493,22],[1615,8,1493,24],[1615,10,1493,26],[1616,4,1493,28,"d7"],[1616,6,1493,30],[1616,8,1493,32],[1616,10,1493,34],[1617,4,1493,36,"e7"],[1617,6,1493,38],[1617,8,1493,40],[1617,10,1493,42],[1618,4,1493,44,"f7"],[1618,6,1493,46],[1618,8,1493,48],[1618,10,1493,50],[1619,4,1493,52,"g7"],[1619,6,1493,54],[1619,8,1493,56],[1619,10,1493,58],[1620,4,1493,60,"h7"],[1620,6,1493,62],[1620,8,1493,64],[1620,10,1493,66],[1621,4,1494,4,"a6"],[1621,6,1494,6],[1621,8,1494,8],[1621,10,1494,10],[1622,4,1494,12,"b6"],[1622,6,1494,14],[1622,8,1494,16],[1622,10,1494,18],[1623,4,1494,20,"c6"],[1623,6,1494,22],[1623,8,1494,24],[1623,10,1494,26],[1624,4,1494,28,"d6"],[1624,6,1494,30],[1624,8,1494,32],[1624,10,1494,34],[1625,4,1494,36,"e6"],[1625,6,1494,38],[1625,8,1494,40],[1625,10,1494,42],[1626,4,1494,44,"f6"],[1626,6,1494,46],[1626,8,1494,48],[1626,10,1494,50],[1627,4,1494,52,"g6"],[1627,6,1494,54],[1627,8,1494,56],[1627,10,1494,58],[1628,4,1494,60,"h6"],[1628,6,1494,62],[1628,8,1494,64],[1628,10,1494,66],[1629,4,1495,4,"a5"],[1629,6,1495,6],[1629,8,1495,8],[1629,10,1495,10],[1630,4,1495,12,"b5"],[1630,6,1495,14],[1630,8,1495,16],[1630,10,1495,18],[1631,4,1495,20,"c5"],[1631,6,1495,22],[1631,8,1495,24],[1631,10,1495,26],[1632,4,1495,28,"d5"],[1632,6,1495,30],[1632,8,1495,32],[1632,10,1495,34],[1633,4,1495,36,"e5"],[1633,6,1495,38],[1633,8,1495,40],[1633,10,1495,42],[1634,4,1495,44,"f5"],[1634,6,1495,46],[1634,8,1495,48],[1634,10,1495,50],[1635,4,1495,52,"g5"],[1635,6,1495,54],[1635,8,1495,56],[1635,10,1495,58],[1636,4,1495,60,"h5"],[1636,6,1495,62],[1636,8,1495,64],[1636,10,1495,66],[1637,4,1496,4,"a4"],[1637,6,1496,6],[1637,8,1496,8],[1637,10,1496,10],[1638,4,1496,12,"b4"],[1638,6,1496,14],[1638,8,1496,16],[1638,10,1496,18],[1639,4,1496,20,"c4"],[1639,6,1496,22],[1639,8,1496,24],[1639,10,1496,26],[1640,4,1496,28,"d4"],[1640,6,1496,30],[1640,8,1496,32],[1640,10,1496,34],[1641,4,1496,36,"e4"],[1641,6,1496,38],[1641,8,1496,40],[1641,10,1496,42],[1642,4,1496,44,"f4"],[1642,6,1496,46],[1642,8,1496,48],[1642,10,1496,50],[1643,4,1496,52,"g4"],[1643,6,1496,54],[1643,8,1496,56],[1643,10,1496,58],[1644,4,1496,60,"h4"],[1644,6,1496,62],[1644,8,1496,64],[1644,10,1496,66],[1645,4,1497,4,"a3"],[1645,6,1497,6],[1645,8,1497,8],[1645,10,1497,10],[1646,4,1497,12,"b3"],[1646,6,1497,14],[1646,8,1497,16],[1646,10,1497,18],[1647,4,1497,20,"c3"],[1647,6,1497,22],[1647,8,1497,24],[1647,10,1497,26],[1648,4,1497,28,"d3"],[1648,6,1497,30],[1648,8,1497,32],[1648,10,1497,34],[1649,4,1497,36,"e3"],[1649,6,1497,38],[1649,8,1497,40],[1649,10,1497,42],[1650,4,1497,44,"f3"],[1650,6,1497,46],[1650,8,1497,48],[1650,10,1497,50],[1651,4,1497,52,"g3"],[1651,6,1497,54],[1651,8,1497,56],[1651,10,1497,58],[1652,4,1497,60,"h3"],[1652,6,1497,62],[1652,8,1497,64],[1652,10,1497,66],[1653,4,1498,4,"a2"],[1653,6,1498,6],[1653,8,1498,8],[1653,10,1498,10],[1654,4,1498,12,"b2"],[1654,6,1498,14],[1654,8,1498,16],[1654,10,1498,18],[1655,4,1498,20,"c2"],[1655,6,1498,22],[1655,8,1498,24],[1655,10,1498,26],[1656,4,1498,28,"d2"],[1656,6,1498,30],[1656,8,1498,32],[1656,10,1498,34],[1657,4,1498,36,"e2"],[1657,6,1498,38],[1657,8,1498,40],[1657,11,1498,43],[1658,4,1498,45,"f2"],[1658,6,1498,47],[1658,8,1498,49],[1658,11,1498,52],[1659,4,1498,54,"g2"],[1659,6,1498,56],[1659,8,1498,58],[1659,11,1498,61],[1660,4,1498,63,"h2"],[1660,6,1498,65],[1660,8,1498,67],[1660,11,1498,70],[1661,4,1499,4,"a1"],[1661,6,1499,6],[1661,8,1499,8],[1661,11,1499,11],[1662,4,1499,13,"b1"],[1662,6,1499,15],[1662,8,1499,17],[1662,11,1499,20],[1663,4,1499,22,"c1"],[1663,6,1499,24],[1663,8,1499,26],[1663,11,1499,29],[1664,4,1499,31,"d1"],[1664,6,1499,33],[1664,8,1499,35],[1664,11,1499,38],[1665,4,1499,40,"e1"],[1665,6,1499,42],[1665,8,1499,44],[1665,11,1499,47],[1666,4,1499,49,"f1"],[1666,6,1499,51],[1666,8,1499,53],[1666,11,1499,56],[1667,4,1499,58,"g1"],[1667,6,1499,60],[1667,8,1499,62],[1667,11,1499,65],[1668,4,1499,67,"h1"],[1668,6,1499,69],[1668,8,1499,71],[1669,2,1500,0],[1669,3,1500,1],[1670,2,1501,0],[1670,8,1501,6,"PAWN_OFFSETS"],[1670,20,1501,18],[1670,23,1501,21],[1671,4,1502,4,"b"],[1671,5,1502,5],[1671,7,1502,7],[1671,8,1502,8],[1671,10,1502,10],[1671,12,1502,12],[1671,14,1502,14],[1671,16,1502,16],[1671,18,1502,18],[1671,20,1502,20],[1671,22,1502,22],[1671,23,1502,23],[1672,4,1503,4,"w"],[1672,5,1503,5],[1672,7,1503,7],[1672,8,1503,8],[1672,9,1503,9],[1672,11,1503,11],[1672,13,1503,13],[1672,14,1503,14],[1672,16,1503,16],[1672,18,1503,18],[1672,19,1503,19],[1672,21,1503,21],[1672,23,1503,23],[1672,24,1503,24],[1672,26,1503,26],[1673,2,1504,0],[1673,3,1504,1],[1674,2,1505,0],[1674,8,1505,6,"PIECE_OFFSETS"],[1674,21,1505,19],[1674,24,1505,22],[1675,4,1506,4,"n"],[1675,5,1506,5],[1675,7,1506,7],[1675,8,1506,8],[1675,9,1506,9],[1675,11,1506,11],[1675,13,1506,13],[1675,14,1506,14],[1675,16,1506,16],[1675,18,1506,18],[1675,19,1506,19],[1675,21,1506,21],[1675,23,1506,23],[1675,24,1506,24],[1675,26,1506,26],[1675,28,1506,28],[1675,30,1506,30],[1675,32,1506,32],[1675,34,1506,34],[1675,36,1506,36],[1675,38,1506,38],[1675,40,1506,40],[1675,42,1506,42],[1675,43,1506,43],[1676,4,1507,4,"b"],[1676,5,1507,5],[1676,7,1507,7],[1676,8,1507,8],[1676,9,1507,9],[1676,11,1507,11],[1676,13,1507,13],[1676,14,1507,14],[1676,16,1507,16],[1676,18,1507,18],[1676,20,1507,20],[1676,22,1507,22],[1676,24,1507,24],[1676,25,1507,25],[1677,4,1508,4,"r"],[1677,5,1508,5],[1677,7,1508,7],[1677,8,1508,8],[1677,9,1508,9],[1677,11,1508,11],[1677,13,1508,13],[1677,14,1508,14],[1677,16,1508,16],[1677,18,1508,18],[1677,20,1508,20],[1677,21,1508,21],[1677,22,1508,22],[1677,23,1508,23],[1678,4,1509,4,"q"],[1678,5,1509,5],[1678,7,1509,7],[1678,8,1509,8],[1678,9,1509,9],[1678,11,1509,11],[1678,13,1509,13],[1678,14,1509,14],[1678,16,1509,16],[1678,18,1509,18],[1678,19,1509,19],[1678,21,1509,21],[1678,23,1509,23],[1678,24,1509,24],[1678,26,1509,26],[1678,28,1509,28],[1678,30,1509,30],[1678,32,1509,32],[1678,34,1509,34],[1678,36,1509,36],[1678,38,1509,38],[1678,39,1509,39],[1678,40,1509,40],[1678,41,1509,41],[1679,4,1510,4,"k"],[1679,5,1510,5],[1679,7,1510,7],[1679,8,1510,8],[1679,9,1510,9],[1679,11,1510,11],[1679,13,1510,13],[1679,14,1510,14],[1679,16,1510,16],[1679,18,1510,18],[1679,19,1510,19],[1679,21,1510,21],[1679,23,1510,23],[1679,24,1510,24],[1679,26,1510,26],[1679,28,1510,28],[1679,30,1510,30],[1679,32,1510,32],[1679,34,1510,34],[1679,36,1510,36],[1679,38,1510,38],[1679,39,1510,39],[1679,40,1510,40],[1680,2,1511,0],[1680,3,1511,1],[1681,2,1512,0],[1682,2,1513,0],[1682,8,1513,6,"ATTACKS"],[1682,15,1513,13],[1682,18,1513,16],[1682,19,1514,4],[1682,21,1514,6],[1682,23,1514,8],[1682,24,1514,9],[1682,26,1514,11],[1682,27,1514,12],[1682,29,1514,14],[1682,30,1514,15],[1682,32,1514,17],[1682,33,1514,18],[1682,35,1514,20],[1682,36,1514,21],[1682,38,1514,23],[1682,39,1514,24],[1682,41,1514,26],[1682,43,1514,28],[1682,45,1514,30],[1682,46,1514,31],[1682,48,1514,33],[1682,49,1514,34],[1682,51,1514,36],[1682,52,1514,37],[1682,54,1514,39],[1682,55,1514,40],[1682,57,1514,42],[1682,58,1514,43],[1682,60,1514,45],[1682,61,1514,46],[1682,63,1514,48],[1682,65,1514,50],[1682,67,1514,52],[1682,68,1514,53],[1682,70,1515,4],[1682,71,1515,5],[1682,73,1515,7],[1682,75,1515,9],[1682,77,1515,11],[1682,78,1515,12],[1682,80,1515,14],[1682,81,1515,15],[1682,83,1515,17],[1682,84,1515,18],[1682,86,1515,20],[1682,87,1515,21],[1682,89,1515,23],[1682,90,1515,24],[1682,92,1515,26],[1682,94,1515,28],[1682,96,1515,30],[1682,97,1515,31],[1682,99,1515,33],[1682,100,1515,34],[1682,102,1515,36],[1682,103,1515,37],[1682,105,1515,39],[1682,106,1515,40],[1682,108,1515,42],[1682,109,1515,43],[1682,111,1515,45],[1682,113,1515,47],[1682,115,1515,49],[1682,116,1515,50],[1682,118,1515,52],[1682,119,1515,53],[1682,121,1516,4],[1682,122,1516,5],[1682,124,1516,7],[1682,125,1516,8],[1682,127,1516,10],[1682,129,1516,12],[1682,131,1516,14],[1682,132,1516,15],[1682,134,1516,17],[1682,135,1516,18],[1682,137,1516,20],[1682,138,1516,21],[1682,140,1516,23],[1682,141,1516,24],[1682,143,1516,26],[1682,145,1516,28],[1682,147,1516,30],[1682,148,1516,31],[1682,150,1516,33],[1682,151,1516,34],[1682,153,1516,36],[1682,154,1516,37],[1682,156,1516,39],[1682,157,1516,40],[1682,159,1516,42],[1682,161,1516,44],[1682,163,1516,46],[1682,164,1516,47],[1682,166,1516,49],[1682,167,1516,50],[1682,169,1516,52],[1682,170,1516,53],[1682,172,1517,4],[1682,173,1517,5],[1682,175,1517,7],[1682,176,1517,8],[1682,178,1517,10],[1682,179,1517,11],[1682,181,1517,13],[1682,183,1517,15],[1682,185,1517,17],[1682,186,1517,18],[1682,188,1517,20],[1682,189,1517,21],[1682,191,1517,23],[1682,192,1517,24],[1682,194,1517,26],[1682,196,1517,28],[1682,198,1517,30],[1682,199,1517,31],[1682,201,1517,33],[1682,202,1517,34],[1682,204,1517,36],[1682,205,1517,37],[1682,207,1517,39],[1682,209,1517,41],[1682,211,1517,43],[1682,212,1517,44],[1682,214,1517,46],[1682,215,1517,47],[1682,217,1517,49],[1682,218,1517,50],[1682,220,1517,52],[1682,221,1517,53],[1682,223,1518,4],[1682,224,1518,5],[1682,226,1518,7],[1682,227,1518,8],[1682,229,1518,10],[1682,230,1518,11],[1682,232,1518,13],[1682,233,1518,14],[1682,235,1518,16],[1682,237,1518,18],[1682,239,1518,20],[1682,240,1518,21],[1682,242,1518,23],[1682,243,1518,24],[1682,245,1518,26],[1682,247,1518,28],[1682,249,1518,30],[1682,250,1518,31],[1682,252,1518,33],[1682,253,1518,34],[1682,255,1518,36],[1682,257,1518,38],[1682,259,1518,40],[1682,260,1518,41],[1682,262,1518,43],[1682,263,1518,44],[1682,265,1518,46],[1682,266,1518,47],[1682,268,1518,49],[1682,269,1518,50],[1682,271,1518,52],[1682,272,1518,53],[1682,274,1519,4],[1682,275,1519,5],[1682,277,1519,7],[1682,278,1519,8],[1682,280,1519,10],[1682,281,1519,11],[1682,283,1519,13],[1682,284,1519,14],[1682,286,1519,16],[1682,287,1519,17],[1682,289,1519,19],[1682,291,1519,21],[1682,293,1519,23],[1682,294,1519,24],[1682,296,1519,26],[1682,298,1519,28],[1682,300,1519,30],[1682,301,1519,31],[1682,303,1519,33],[1682,305,1519,35],[1682,307,1519,37],[1682,308,1519,38],[1682,310,1519,40],[1682,311,1519,41],[1682,313,1519,43],[1682,314,1519,44],[1682,316,1519,46],[1682,317,1519,47],[1682,319,1519,49],[1682,320,1519,50],[1682,322,1519,52],[1682,323,1519,53],[1682,325,1520,4],[1682,326,1520,5],[1682,328,1520,7],[1682,329,1520,8],[1682,331,1520,10],[1682,332,1520,11],[1682,334,1520,13],[1682,335,1520,14],[1682,337,1520,16],[1682,338,1520,17],[1682,340,1520,19],[1682,341,1520,20],[1682,343,1520,22],[1682,345,1520,24],[1682,347,1520,26],[1682,349,1520,28],[1682,351,1520,30],[1682,353,1520,32],[1682,355,1520,34],[1682,356,1520,35],[1682,358,1520,37],[1682,359,1520,38],[1682,361,1520,40],[1682,362,1520,41],[1682,364,1520,43],[1682,365,1520,44],[1682,367,1520,46],[1682,368,1520,47],[1682,370,1520,49],[1682,371,1520,50],[1682,373,1520,52],[1682,374,1520,53],[1682,376,1521,4],[1682,378,1521,6],[1682,380,1521,8],[1682,382,1521,10],[1682,384,1521,12],[1682,386,1521,14],[1682,388,1521,16],[1682,390,1521,18],[1682,392,1521,20],[1682,394,1521,22],[1682,396,1521,24],[1682,398,1521,26],[1682,400,1521,28],[1682,402,1521,30],[1682,404,1521,32],[1682,405,1521,33],[1682,407,1521,35],[1682,409,1521,37],[1682,411,1521,39],[1682,413,1521,41],[1682,415,1521,43],[1682,417,1521,45],[1682,419,1521,47],[1682,421,1521,49],[1682,423,1521,51],[1682,425,1521,53],[1682,427,1521,55],[1682,429,1521,57],[1682,431,1521,59],[1682,433,1521,61],[1682,435,1521,63],[1682,436,1521,64],[1682,438,1522,4],[1682,439,1522,5],[1682,441,1522,7],[1682,442,1522,8],[1682,444,1522,10],[1682,445,1522,11],[1682,447,1522,13],[1682,448,1522,14],[1682,450,1522,16],[1682,451,1522,17],[1682,453,1522,19],[1682,454,1522,20],[1682,456,1522,22],[1682,458,1522,24],[1682,460,1522,26],[1682,462,1522,28],[1682,464,1522,30],[1682,466,1522,32],[1682,468,1522,34],[1682,469,1522,35],[1682,471,1522,37],[1682,472,1522,38],[1682,474,1522,40],[1682,475,1522,41],[1682,477,1522,43],[1682,478,1522,44],[1682,480,1522,46],[1682,481,1522,47],[1682,483,1522,49],[1682,484,1522,50],[1682,486,1522,52],[1682,487,1522,53],[1682,489,1523,4],[1682,490,1523,5],[1682,492,1523,7],[1682,493,1523,8],[1682,495,1523,10],[1682,496,1523,11],[1682,498,1523,13],[1682,499,1523,14],[1682,501,1523,16],[1682,502,1523,17],[1682,504,1523,19],[1682,506,1523,21],[1682,508,1523,23],[1682,509,1523,24],[1682,511,1523,26],[1682,513,1523,28],[1682,515,1523,30],[1682,516,1523,31],[1682,518,1523,33],[1682,520,1523,35],[1682,522,1523,37],[1682,523,1523,38],[1682,525,1523,40],[1682,526,1523,41],[1682,528,1523,43],[1682,529,1523,44],[1682,531,1523,46],[1682,532,1523,47],[1682,534,1523,49],[1682,535,1523,50],[1682,537,1523,52],[1682,538,1523,53],[1682,540,1524,4],[1682,541,1524,5],[1682,543,1524,7],[1682,544,1524,8],[1682,546,1524,10],[1682,547,1524,11],[1682,549,1524,13],[1682,550,1524,14],[1682,552,1524,16],[1682,554,1524,18],[1682,556,1524,20],[1682,557,1524,21],[1682,559,1524,23],[1682,560,1524,24],[1682,562,1524,26],[1682,564,1524,28],[1682,566,1524,30],[1682,567,1524,31],[1682,569,1524,33],[1682,570,1524,34],[1682,572,1524,36],[1682,574,1524,38],[1682,576,1524,40],[1682,577,1524,41],[1682,579,1524,43],[1682,580,1524,44],[1682,582,1524,46],[1682,583,1524,47],[1682,585,1524,49],[1682,586,1524,50],[1682,588,1524,52],[1682,589,1524,53],[1682,591,1525,4],[1682,592,1525,5],[1682,594,1525,7],[1682,595,1525,8],[1682,597,1525,10],[1682,598,1525,11],[1682,600,1525,13],[1682,602,1525,15],[1682,604,1525,17],[1682,605,1525,18],[1682,607,1525,20],[1682,608,1525,21],[1682,610,1525,23],[1682,611,1525,24],[1682,613,1525,26],[1682,615,1525,28],[1682,617,1525,30],[1682,618,1525,31],[1682,620,1525,33],[1682,621,1525,34],[1682,623,1525,36],[1682,624,1525,37],[1682,626,1525,39],[1682,628,1525,41],[1682,630,1525,43],[1682,631,1525,44],[1682,633,1525,46],[1682,634,1525,47],[1682,636,1525,49],[1682,637,1525,50],[1682,639,1525,52],[1682,640,1525,53],[1682,642,1526,4],[1682,643,1526,5],[1682,645,1526,7],[1682,646,1526,8],[1682,648,1526,10],[1682,650,1526,12],[1682,652,1526,14],[1682,653,1526,15],[1682,655,1526,17],[1682,656,1526,18],[1682,658,1526,20],[1682,659,1526,21],[1682,661,1526,23],[1682,662,1526,24],[1682,664,1526,26],[1682,666,1526,28],[1682,668,1526,30],[1682,669,1526,31],[1682,671,1526,33],[1682,672,1526,34],[1682,674,1526,36],[1682,675,1526,37],[1682,677,1526,39],[1682,678,1526,40],[1682,680,1526,42],[1682,682,1526,44],[1682,684,1526,46],[1682,685,1526,47],[1682,687,1526,49],[1682,688,1526,50],[1682,690,1526,52],[1682,691,1526,53],[1682,693,1527,4],[1682,694,1527,5],[1682,696,1527,7],[1682,698,1527,9],[1682,700,1527,11],[1682,701,1527,12],[1682,703,1527,14],[1682,704,1527,15],[1682,706,1527,17],[1682,707,1527,18],[1682,709,1527,20],[1682,710,1527,21],[1682,712,1527,23],[1682,713,1527,24],[1682,715,1527,26],[1682,717,1527,28],[1682,719,1527,30],[1682,720,1527,31],[1682,722,1527,33],[1682,723,1527,34],[1682,725,1527,36],[1682,726,1527,37],[1682,728,1527,39],[1682,729,1527,40],[1682,731,1527,42],[1682,732,1527,43],[1682,734,1527,45],[1682,736,1527,47],[1682,738,1527,49],[1682,739,1527,50],[1682,741,1527,52],[1682,742,1527,53],[1682,744,1528,4],[1682,746,1528,6],[1682,748,1528,8],[1682,749,1528,9],[1682,751,1528,11],[1682,752,1528,12],[1682,754,1528,14],[1682,755,1528,15],[1682,757,1528,17],[1682,758,1528,18],[1682,760,1528,20],[1682,761,1528,21],[1682,763,1528,23],[1682,764,1528,24],[1682,766,1528,26],[1682,768,1528,28],[1682,770,1528,30],[1682,771,1528,31],[1682,773,1528,33],[1682,774,1528,34],[1682,776,1528,36],[1682,777,1528,37],[1682,779,1528,39],[1682,780,1528,40],[1682,782,1528,42],[1682,783,1528,43],[1682,785,1528,45],[1682,786,1528,46],[1682,788,1528,48],[1682,790,1528,50],[1682,791,1529,1],[1683,2,1530,0],[1684,2,1531,0],[1684,8,1531,6,"RAYS"],[1684,12,1531,10],[1684,15,1531,13],[1684,16,1532,4],[1684,18,1532,6],[1684,20,1532,8],[1684,21,1532,9],[1684,23,1532,11],[1684,24,1532,12],[1684,26,1532,14],[1684,27,1532,15],[1684,29,1532,17],[1684,30,1532,18],[1684,32,1532,20],[1684,33,1532,21],[1684,35,1532,23],[1684,36,1532,24],[1684,38,1532,26],[1684,40,1532,28],[1684,42,1532,30],[1684,43,1532,31],[1684,45,1532,33],[1684,46,1532,34],[1684,48,1532,36],[1684,49,1532,37],[1684,51,1532,39],[1684,52,1532,40],[1684,54,1532,42],[1684,55,1532,43],[1684,57,1532,45],[1684,58,1532,46],[1684,60,1532,48],[1684,62,1532,50],[1684,64,1532,52],[1684,65,1532,53],[1684,67,1533,4],[1684,68,1533,5],[1684,70,1533,7],[1684,72,1533,9],[1684,74,1533,11],[1684,75,1533,12],[1684,77,1533,14],[1684,78,1533,15],[1684,80,1533,17],[1684,81,1533,18],[1684,83,1533,20],[1684,84,1533,21],[1684,86,1533,23],[1684,87,1533,24],[1684,89,1533,26],[1684,91,1533,28],[1684,93,1533,30],[1684,94,1533,31],[1684,96,1533,33],[1684,97,1533,34],[1684,99,1533,36],[1684,100,1533,37],[1684,102,1533,39],[1684,103,1533,40],[1684,105,1533,42],[1684,106,1533,43],[1684,108,1533,45],[1684,110,1533,47],[1684,112,1533,49],[1684,113,1533,50],[1684,115,1533,52],[1684,116,1533,53],[1684,118,1534,4],[1684,119,1534,5],[1684,121,1534,7],[1684,122,1534,8],[1684,124,1534,10],[1684,126,1534,12],[1684,128,1534,14],[1684,129,1534,15],[1684,131,1534,17],[1684,132,1534,18],[1684,134,1534,20],[1684,135,1534,21],[1684,137,1534,23],[1684,138,1534,24],[1684,140,1534,26],[1684,142,1534,28],[1684,144,1534,30],[1684,145,1534,31],[1684,147,1534,33],[1684,148,1534,34],[1684,150,1534,36],[1684,151,1534,37],[1684,153,1534,39],[1684,154,1534,40],[1684,156,1534,42],[1684,158,1534,44],[1684,160,1534,46],[1684,161,1534,47],[1684,163,1534,49],[1684,164,1534,50],[1684,166,1534,52],[1684,167,1534,53],[1684,169,1535,4],[1684,170,1535,5],[1684,172,1535,7],[1684,173,1535,8],[1684,175,1535,10],[1684,176,1535,11],[1684,178,1535,13],[1684,180,1535,15],[1684,182,1535,17],[1684,183,1535,18],[1684,185,1535,20],[1684,186,1535,21],[1684,188,1535,23],[1684,189,1535,24],[1684,191,1535,26],[1684,193,1535,28],[1684,195,1535,30],[1684,196,1535,31],[1684,198,1535,33],[1684,199,1535,34],[1684,201,1535,36],[1684,202,1535,37],[1684,204,1535,39],[1684,206,1535,41],[1684,208,1535,43],[1684,209,1535,44],[1684,211,1535,46],[1684,212,1535,47],[1684,214,1535,49],[1684,215,1535,50],[1684,217,1535,52],[1684,218,1535,53],[1684,220,1536,4],[1684,221,1536,5],[1684,223,1536,7],[1684,224,1536,8],[1684,226,1536,10],[1684,227,1536,11],[1684,229,1536,13],[1684,230,1536,14],[1684,232,1536,16],[1684,234,1536,18],[1684,236,1536,20],[1684,237,1536,21],[1684,239,1536,23],[1684,240,1536,24],[1684,242,1536,26],[1684,244,1536,28],[1684,246,1536,30],[1684,247,1536,31],[1684,249,1536,33],[1684,250,1536,34],[1684,252,1536,36],[1684,254,1536,38],[1684,256,1536,40],[1684,257,1536,41],[1684,259,1536,43],[1684,260,1536,44],[1684,262,1536,46],[1684,263,1536,47],[1684,265,1536,49],[1684,266,1536,50],[1684,268,1536,52],[1684,269,1536,53],[1684,271,1537,4],[1684,272,1537,5],[1684,274,1537,7],[1684,275,1537,8],[1684,277,1537,10],[1684,278,1537,11],[1684,280,1537,13],[1684,281,1537,14],[1684,283,1537,16],[1684,284,1537,17],[1684,286,1537,19],[1684,288,1537,21],[1684,290,1537,23],[1684,291,1537,24],[1684,293,1537,26],[1684,295,1537,28],[1684,297,1537,30],[1684,298,1537,31],[1684,300,1537,33],[1684,302,1537,35],[1684,304,1537,37],[1684,305,1537,38],[1684,307,1537,40],[1684,308,1537,41],[1684,310,1537,43],[1684,311,1537,44],[1684,313,1537,46],[1684,314,1537,47],[1684,316,1537,49],[1684,317,1537,50],[1684,319,1537,52],[1684,320,1537,53],[1684,322,1538,4],[1684,323,1538,5],[1684,325,1538,7],[1684,326,1538,8],[1684,328,1538,10],[1684,329,1538,11],[1684,331,1538,13],[1684,332,1538,14],[1684,334,1538,16],[1684,335,1538,17],[1684,337,1538,19],[1684,338,1538,20],[1684,340,1538,22],[1684,342,1538,24],[1684,344,1538,26],[1684,346,1538,28],[1684,348,1538,30],[1684,350,1538,32],[1684,352,1538,34],[1684,353,1538,35],[1684,355,1538,37],[1684,356,1538,38],[1684,358,1538,40],[1684,359,1538,41],[1684,361,1538,43],[1684,362,1538,44],[1684,364,1538,46],[1684,365,1538,47],[1684,367,1538,49],[1684,368,1538,50],[1684,370,1538,52],[1684,371,1538,53],[1684,373,1539,4],[1684,374,1539,5],[1684,376,1539,7],[1684,377,1539,8],[1684,379,1539,10],[1684,380,1539,11],[1684,382,1539,13],[1684,383,1539,14],[1684,385,1539,16],[1684,386,1539,17],[1684,388,1539,19],[1684,389,1539,20],[1684,391,1539,22],[1684,392,1539,23],[1684,394,1539,25],[1684,395,1539,26],[1684,397,1539,28],[1684,398,1539,29],[1684,399,1539,30],[1684,401,1539,32],[1684,402,1539,33],[1684,403,1539,34],[1684,405,1539,36],[1684,406,1539,37],[1684,407,1539,38],[1684,409,1539,40],[1684,410,1539,41],[1684,411,1539,42],[1684,413,1539,44],[1684,414,1539,45],[1684,415,1539,46],[1684,417,1539,48],[1684,418,1539,49],[1684,419,1539,50],[1684,421,1539,52],[1684,422,1539,53],[1684,423,1539,54],[1684,425,1539,56],[1684,426,1539,57],[1684,428,1540,4],[1684,429,1540,5],[1684,431,1540,7],[1684,432,1540,8],[1684,434,1540,10],[1684,435,1540,11],[1684,437,1540,13],[1684,438,1540,14],[1684,440,1540,16],[1684,441,1540,17],[1684,443,1540,19],[1684,444,1540,20],[1684,446,1540,22],[1684,447,1540,23],[1684,449,1540,25],[1684,451,1540,27],[1684,452,1540,28],[1684,454,1540,30],[1684,456,1540,32],[1684,457,1540,33],[1684,459,1540,35],[1684,461,1540,37],[1684,462,1540,38],[1684,464,1540,40],[1684,465,1540,41],[1684,467,1540,43],[1684,468,1540,44],[1684,470,1540,46],[1684,471,1540,47],[1684,473,1540,49],[1684,474,1540,50],[1684,476,1540,52],[1684,477,1540,53],[1684,479,1540,55],[1684,480,1540,56],[1684,482,1541,4],[1684,483,1541,5],[1684,485,1541,7],[1684,486,1541,8],[1684,488,1541,10],[1684,489,1541,11],[1684,491,1541,13],[1684,492,1541,14],[1684,494,1541,16],[1684,495,1541,17],[1684,497,1541,19],[1684,498,1541,20],[1684,500,1541,22],[1684,502,1541,24],[1684,503,1541,25],[1684,505,1541,27],[1684,506,1541,28],[1684,508,1541,30],[1684,510,1541,32],[1684,511,1541,33],[1684,513,1541,35],[1684,514,1541,36],[1684,516,1541,38],[1684,518,1541,40],[1684,519,1541,41],[1684,521,1541,43],[1684,522,1541,44],[1684,524,1541,46],[1684,525,1541,47],[1684,527,1541,49],[1684,528,1541,50],[1684,530,1541,52],[1684,531,1541,53],[1684,533,1541,55],[1684,534,1541,56],[1684,536,1542,4],[1684,537,1542,5],[1684,539,1542,7],[1684,540,1542,8],[1684,542,1542,10],[1684,543,1542,11],[1684,545,1542,13],[1684,546,1542,14],[1684,548,1542,16],[1684,549,1542,17],[1684,551,1542,19],[1684,553,1542,21],[1684,554,1542,22],[1684,556,1542,24],[1684,557,1542,25],[1684,559,1542,27],[1684,560,1542,28],[1684,562,1542,30],[1684,564,1542,32],[1684,565,1542,33],[1684,567,1542,35],[1684,568,1542,36],[1684,570,1542,38],[1684,571,1542,39],[1684,573,1542,41],[1684,575,1542,43],[1684,576,1542,44],[1684,578,1542,46],[1684,579,1542,47],[1684,581,1542,49],[1684,582,1542,50],[1684,584,1542,52],[1684,585,1542,53],[1684,587,1542,55],[1684,588,1542,56],[1684,590,1543,4],[1684,591,1543,5],[1684,593,1543,7],[1684,594,1543,8],[1684,596,1543,10],[1684,597,1543,11],[1684,599,1543,13],[1684,600,1543,14],[1684,602,1543,16],[1684,604,1543,18],[1684,605,1543,19],[1684,607,1543,21],[1684,608,1543,22],[1684,610,1543,24],[1684,611,1543,25],[1684,613,1543,27],[1684,614,1543,28],[1684,616,1543,30],[1684,618,1543,32],[1684,619,1543,33],[1684,621,1543,35],[1684,622,1543,36],[1684,624,1543,38],[1684,625,1543,39],[1684,627,1543,41],[1684,628,1543,42],[1684,630,1543,44],[1684,632,1543,46],[1684,633,1543,47],[1684,635,1543,49],[1684,636,1543,50],[1684,638,1543,52],[1684,639,1543,53],[1684,641,1543,55],[1684,642,1543,56],[1684,644,1544,4],[1684,645,1544,5],[1684,647,1544,7],[1684,648,1544,8],[1684,650,1544,10],[1684,651,1544,11],[1684,653,1544,13],[1684,655,1544,15],[1684,656,1544,16],[1684,658,1544,18],[1684,659,1544,19],[1684,661,1544,21],[1684,662,1544,22],[1684,664,1544,24],[1684,665,1544,25],[1684,667,1544,27],[1684,668,1544,28],[1684,670,1544,30],[1684,672,1544,32],[1684,673,1544,33],[1684,675,1544,35],[1684,676,1544,36],[1684,678,1544,38],[1684,679,1544,39],[1684,681,1544,41],[1684,682,1544,42],[1684,684,1544,44],[1684,685,1544,45],[1684,687,1544,47],[1684,689,1544,49],[1684,690,1544,50],[1684,692,1544,52],[1684,693,1544,53],[1684,695,1544,55],[1684,696,1544,56],[1684,698,1545,4],[1684,699,1545,5],[1684,701,1545,7],[1684,702,1545,8],[1684,704,1545,10],[1684,706,1545,12],[1684,707,1545,13],[1684,709,1545,15],[1684,710,1545,16],[1684,712,1545,18],[1684,713,1545,19],[1684,715,1545,21],[1684,716,1545,22],[1684,718,1545,24],[1684,719,1545,25],[1684,721,1545,27],[1684,722,1545,28],[1684,724,1545,30],[1684,726,1545,32],[1684,727,1545,33],[1684,729,1545,35],[1684,730,1545,36],[1684,732,1545,38],[1684,733,1545,39],[1684,735,1545,41],[1684,736,1545,42],[1684,738,1545,44],[1684,739,1545,45],[1684,741,1545,47],[1684,742,1545,48],[1684,744,1545,50],[1684,746,1545,52],[1684,747,1545,53],[1684,749,1545,55],[1684,750,1545,56],[1684,752,1546,4],[1684,753,1546,5],[1684,755,1546,7],[1684,757,1546,9],[1684,758,1546,10],[1684,760,1546,12],[1684,761,1546,13],[1684,763,1546,15],[1684,764,1546,16],[1684,766,1546,18],[1684,767,1546,19],[1684,769,1546,21],[1684,770,1546,22],[1684,772,1546,24],[1684,773,1546,25],[1684,775,1546,27],[1684,776,1546,28],[1684,778,1546,30],[1684,780,1546,32],[1684,781,1546,33],[1684,783,1546,35],[1684,784,1546,36],[1684,786,1546,38],[1684,787,1546,39],[1684,789,1546,41],[1684,790,1546,42],[1684,792,1546,44],[1684,793,1546,45],[1684,795,1546,47],[1684,796,1546,48],[1684,798,1546,50],[1684,799,1546,51],[1684,801,1546,53],[1684,802,1547,1],[1685,2,1548,0],[1685,8,1548,6,"PIECE_MASKS"],[1685,19,1548,17],[1685,22,1548,20],[1686,4,1548,22,"p"],[1686,5,1548,23],[1686,7,1548,25],[1686,10,1548,28],[1687,4,1548,30,"n"],[1687,5,1548,31],[1687,7,1548,33],[1687,10,1548,36],[1688,4,1548,38,"b"],[1688,5,1548,39],[1688,7,1548,41],[1688,10,1548,44],[1689,4,1548,46,"r"],[1689,5,1548,47],[1689,7,1548,49],[1689,10,1548,52],[1690,4,1548,54,"q"],[1690,5,1548,55],[1690,7,1548,57],[1690,11,1548,61],[1691,4,1548,63,"k"],[1691,5,1548,64],[1691,7,1548,66],[1692,2,1548,71],[1692,3,1548,72],[1693,2,1549,0],[1693,8,1549,6,"SYMBOLS"],[1693,15,1549,13],[1693,18,1549,16],[1693,32,1549,30],[1694,2,1550,0],[1694,8,1550,6,"PROMOTIONS"],[1694,18,1550,16],[1694,21,1550,19],[1694,22,1550,20,"KNIGHT"],[1694,28,1550,26],[1694,30,1550,28,"BISHOP"],[1694,36,1550,34],[1694,38,1550,36,"ROOK"],[1694,42,1550,40],[1694,44,1550,42,"QUEEN"],[1694,49,1550,47],[1694,50,1550,48],[1695,2,1551,0],[1695,8,1551,6,"RANK_1"],[1695,14,1551,12],[1695,17,1551,15],[1695,18,1551,16],[1696,2,1552,0],[1696,8,1552,6,"RANK_2"],[1696,14,1552,12],[1696,17,1552,15],[1696,18,1552,16],[1697,2,1553,0],[1698,0,1554,0],[1699,0,1555,0],[1700,0,1556,0],[1701,0,1557,0],[1702,0,1558,0],[1703,2,1559,0],[1703,8,1559,6,"RANK_7"],[1703,14,1559,12],[1703,17,1559,15],[1703,18,1559,16],[1704,2,1560,0],[1704,8,1560,6,"RANK_8"],[1704,14,1560,12],[1704,17,1560,15],[1704,18,1560,16],[1705,2,1561,0],[1705,8,1561,6,"SIDES"],[1705,13,1561,11],[1705,16,1561,14],[1706,4,1562,4],[1706,5,1562,5,"KING"],[1706,9,1562,9],[1706,12,1562,12,"BITS"],[1706,16,1562,16],[1706,17,1562,17,"KSIDE_CASTLE"],[1706,29,1562,29],[1707,4,1563,4],[1707,5,1563,5,"QUEEN"],[1707,10,1563,10],[1707,13,1563,13,"BITS"],[1707,17,1563,17],[1707,18,1563,18,"QSIDE_CASTLE"],[1708,2,1564,0],[1708,3,1564,1],[1709,2,1565,0],[1709,8,1565,6,"ROOKS"],[1709,13,1565,11],[1709,16,1565,14],[1710,4,1566,4,"w"],[1710,5,1566,5],[1710,7,1566,7],[1710,8,1567,8],[1711,6,1567,10,"square"],[1711,12,1567,16],[1711,14,1567,18,"Ox88"],[1711,18,1567,22],[1711,19,1567,23,"a1"],[1711,21,1567,25],[1712,6,1567,27,"flag"],[1712,10,1567,31],[1712,12,1567,33,"BITS"],[1712,16,1567,37],[1712,17,1567,38,"QSIDE_CASTLE"],[1713,4,1567,51],[1713,5,1567,52],[1713,7,1568,8],[1714,6,1568,10,"square"],[1714,12,1568,16],[1714,14,1568,18,"Ox88"],[1714,18,1568,22],[1714,19,1568,23,"h1"],[1714,21,1568,25],[1715,6,1568,27,"flag"],[1715,10,1568,31],[1715,12,1568,33,"BITS"],[1715,16,1568,37],[1715,17,1568,38,"KSIDE_CASTLE"],[1716,4,1568,51],[1716,5,1568,52],[1716,6,1569,5],[1717,4,1570,4,"b"],[1717,5,1570,5],[1717,7,1570,7],[1717,8,1571,8],[1718,6,1571,10,"square"],[1718,12,1571,16],[1718,14,1571,18,"Ox88"],[1718,18,1571,22],[1718,19,1571,23,"a8"],[1718,21,1571,25],[1719,6,1571,27,"flag"],[1719,10,1571,31],[1719,12,1571,33,"BITS"],[1719,16,1571,37],[1719,17,1571,38,"QSIDE_CASTLE"],[1720,4,1571,51],[1720,5,1571,52],[1720,7,1572,8],[1721,6,1572,10,"square"],[1721,12,1572,16],[1721,14,1572,18,"Ox88"],[1721,18,1572,22],[1721,19,1572,23,"h8"],[1721,21,1572,25],[1722,6,1572,27,"flag"],[1722,10,1572,31],[1722,12,1572,33,"BITS"],[1722,16,1572,37],[1722,17,1572,38,"KSIDE_CASTLE"],[1723,4,1572,51],[1723,5,1572,52],[1724,2,1574,0],[1724,3,1574,1],[1725,2,1575,0],[1725,8,1575,6,"SECOND_RANK"],[1725,19,1575,17],[1725,22,1575,20],[1726,4,1575,22,"b"],[1726,5,1575,23],[1726,7,1575,25,"RANK_7"],[1726,13,1575,31],[1727,4,1575,33,"w"],[1727,5,1575,34],[1727,7,1575,36,"RANK_2"],[1728,2,1575,43],[1728,3,1575,44],[1729,2,1576,0],[1729,8,1576,6,"SAN_NULLMOVE"],[1729,20,1576,18],[1729,23,1576,21],[1729,27,1576,25],[1730,2,1577,0],[1731,2,1578,0],[1731,11,1578,9,"rank"],[1731,15,1578,13,"rank"],[1731,16,1578,14,"square"],[1731,22,1578,20],[1731,24,1578,22],[1732,4,1579,4],[1732,11,1579,11,"square"],[1732,17,1579,17],[1732,21,1579,21],[1732,22,1579,22],[1733,2,1580,0],[1734,2,1581,0],[1735,2,1582,0],[1735,11,1582,9,"file"],[1735,15,1582,13,"file"],[1735,16,1582,14,"square"],[1735,22,1582,20],[1735,24,1582,22],[1736,4,1583,4],[1736,11,1583,11,"square"],[1736,17,1583,17],[1736,20,1583,20],[1736,23,1583,23],[1737,2,1584,0],[1738,2,1585,0],[1738,11,1585,9,"isDigit"],[1738,18,1585,16,"isDigit"],[1738,19,1585,17,"c"],[1738,20,1585,18],[1738,22,1585,20],[1739,4,1586,4],[1739,11,1586,11],[1739,23,1586,23],[1739,24,1586,24,"indexOf"],[1739,31,1586,31],[1739,32,1586,32,"c"],[1739,33,1586,33],[1739,34,1586,34],[1739,39,1586,39],[1739,40,1586,40],[1739,41,1586,41],[1740,2,1587,0],[1741,2,1588,0],[1742,2,1589,0],[1742,11,1589,9,"algebraic"],[1742,20,1589,18,"algebraic"],[1742,21,1589,19,"square"],[1742,27,1589,25],[1742,29,1589,27],[1743,4,1590,4],[1743,10,1590,10,"f"],[1743,11,1590,11],[1743,14,1590,14,"file"],[1743,18,1590,18],[1743,19,1590,19,"square"],[1743,25,1590,25],[1743,26,1590,26],[1744,4,1591,4],[1744,10,1591,10,"r"],[1744,11,1591,11],[1744,14,1591,14,"rank"],[1744,18,1591,18],[1744,19,1591,19,"square"],[1744,25,1591,25],[1744,26,1591,26],[1745,4,1592,4],[1745,11,1592,12],[1745,21,1592,22],[1745,22,1592,23,"substring"],[1745,31,1592,32],[1745,32,1592,33,"f"],[1745,33,1592,34],[1745,35,1592,36,"f"],[1745,36,1592,37],[1745,39,1592,40],[1745,40,1592,41],[1745,41,1592,42],[1745,44,1593,8],[1745,54,1593,18],[1745,55,1593,19,"substring"],[1745,64,1593,28],[1745,65,1593,29,"r"],[1745,66,1593,30],[1745,68,1593,32,"r"],[1745,69,1593,33],[1745,72,1593,36],[1745,73,1593,37],[1745,74,1593,38],[1746,2,1594,0],[1747,2,1595,0],[1747,11,1595,9,"swapColor"],[1747,20,1595,18,"swapColor"],[1747,21,1595,19,"color"],[1747,26,1595,24],[1747,28,1595,26],[1748,4,1596,4],[1748,11,1596,11,"color"],[1748,16,1596,16],[1748,21,1596,21,"WHITE"],[1748,26,1596,26],[1748,29,1596,29,"BLACK"],[1748,34,1596,34],[1748,37,1596,37,"WHITE"],[1748,42,1596,42],[1749,2,1597,0],[1750,2,1598,0],[1750,11,1598,9,"validateFen"],[1750,22,1598,20,"validateFen"],[1750,23,1598,21,"fen"],[1750,26,1598,24],[1750,28,1598,26],[1751,4,1599,4],[1752,4,1600,4],[1752,10,1600,10,"tokens"],[1752,16,1600,16],[1752,19,1600,19,"fen"],[1752,22,1600,22],[1752,23,1600,23,"split"],[1752,28,1600,28],[1752,29,1600,29],[1752,34,1600,34],[1752,35,1600,35],[1753,4,1601,4],[1753,8,1601,8,"tokens"],[1753,14,1601,14],[1753,15,1601,15,"length"],[1753,21,1601,21],[1753,26,1601,26],[1753,27,1601,27],[1753,29,1601,29],[1754,6,1602,8],[1754,13,1602,15],[1755,8,1603,12,"ok"],[1755,10,1603,14],[1755,12,1603,16],[1755,17,1603,21],[1756,8,1604,12,"error"],[1756,13,1604,17],[1756,15,1604,19],[1757,6,1605,8],[1757,7,1605,9],[1758,4,1606,4],[1759,4,1607,4],[1760,4,1608,4],[1760,10,1608,10,"moveNumber"],[1760,20,1608,20],[1760,23,1608,23,"parseInt"],[1760,31,1608,31],[1760,32,1608,32,"tokens"],[1760,38,1608,38],[1760,39,1608,39],[1760,40,1608,40],[1760,41,1608,41],[1760,43,1608,43],[1760,45,1608,45],[1760,46,1608,46],[1761,4,1609,4],[1761,8,1609,8,"isNaN"],[1761,13,1609,13],[1761,14,1609,14,"moveNumber"],[1761,24,1609,24],[1761,25,1609,25],[1761,29,1609,29,"moveNumber"],[1761,39,1609,39],[1761,43,1609,43],[1761,44,1609,44],[1761,46,1609,46],[1762,6,1610,8],[1762,13,1610,15],[1763,8,1611,12,"ok"],[1763,10,1611,14],[1763,12,1611,16],[1763,17,1611,21],[1764,8,1612,12,"error"],[1764,13,1612,17],[1764,15,1612,19],[1765,6,1613,8],[1765,7,1613,9],[1766,4,1614,4],[1767,4,1615,4],[1768,4,1616,4],[1768,10,1616,10,"halfMoves"],[1768,19,1616,19],[1768,22,1616,22,"parseInt"],[1768,30,1616,30],[1768,31,1616,31,"tokens"],[1768,37,1616,37],[1768,38,1616,38],[1768,39,1616,39],[1768,40,1616,40],[1768,42,1616,42],[1768,44,1616,44],[1768,45,1616,45],[1769,4,1617,4],[1769,8,1617,8,"isNaN"],[1769,13,1617,13],[1769,14,1617,14,"halfMoves"],[1769,23,1617,23],[1769,24,1617,24],[1769,28,1617,28,"halfMoves"],[1769,37,1617,37],[1769,40,1617,40],[1769,41,1617,41],[1769,43,1617,43],[1770,6,1618,8],[1770,13,1618,15],[1771,8,1619,12,"ok"],[1771,10,1619,14],[1771,12,1619,16],[1771,17,1619,21],[1772,8,1620,12,"error"],[1772,13,1620,17],[1772,15,1620,19],[1773,6,1621,8],[1773,7,1621,9],[1774,4,1622,4],[1775,4,1623,4],[1776,4,1624,4],[1776,8,1624,8],[1776,9,1624,9],[1776,31,1624,31],[1776,32,1624,32,"test"],[1776,36,1624,36],[1776,37,1624,37,"tokens"],[1776,43,1624,43],[1776,44,1624,44],[1776,45,1624,45],[1776,46,1624,46],[1776,47,1624,47],[1776,49,1624,49],[1777,6,1625,8],[1777,13,1625,15],[1778,8,1625,17,"ok"],[1778,10,1625,19],[1778,12,1625,21],[1778,17,1625,26],[1779,8,1625,28,"error"],[1779,13,1625,33],[1779,15,1625,35],[1780,6,1625,79],[1780,7,1625,80],[1781,4,1626,4],[1782,4,1627,4],[1783,4,1628,4],[1783,8,1628,8],[1783,18,1628,18],[1783,19,1628,19,"test"],[1783,23,1628,23],[1783,24,1628,24,"tokens"],[1783,30,1628,30],[1783,31,1628,31],[1783,32,1628,32],[1783,33,1628,33],[1783,34,1628,34],[1783,36,1628,36],[1784,6,1629,8],[1784,13,1629,15],[1785,8,1629,17,"ok"],[1785,10,1629,19],[1785,12,1629,21],[1785,17,1629,26],[1786,8,1629,28,"error"],[1786,13,1629,33],[1786,15,1629,35],[1787,6,1629,83],[1787,7,1629,84],[1788,4,1630,4],[1789,4,1631,4],[1790,4,1632,4],[1790,8,1632,8],[1790,9,1632,9],[1790,18,1632,18],[1790,19,1632,19,"test"],[1790,23,1632,23],[1790,24,1632,24,"tokens"],[1790,30,1632,30],[1790,31,1632,31],[1790,32,1632,32],[1790,33,1632,33],[1790,34,1632,34],[1790,36,1632,36],[1791,6,1633,8],[1791,13,1633,15],[1792,8,1633,17,"ok"],[1792,10,1633,19],[1792,12,1633,21],[1792,17,1633,26],[1793,8,1633,28,"error"],[1793,13,1633,33],[1793,15,1633,35],[1794,6,1633,74],[1794,7,1633,75],[1795,4,1634,4],[1796,4,1635,4],[1797,4,1636,4],[1797,10,1636,10,"rows"],[1797,14,1636,14],[1797,17,1636,17,"tokens"],[1797,23,1636,23],[1797,24,1636,24],[1797,25,1636,25],[1797,26,1636,26],[1797,27,1636,27,"split"],[1797,32,1636,32],[1797,33,1636,33],[1797,36,1636,36],[1797,37,1636,37],[1798,4,1637,4],[1798,8,1637,8,"rows"],[1798,12,1637,12],[1798,13,1637,13,"length"],[1798,19,1637,19],[1798,24,1637,24],[1798,25,1637,25],[1798,27,1637,27],[1799,6,1638,8],[1799,13,1638,15],[1800,8,1639,12,"ok"],[1800,10,1639,14],[1800,12,1639,16],[1800,17,1639,21],[1801,8,1640,12,"error"],[1801,13,1640,17],[1801,15,1640,19],[1802,6,1641,8],[1802,7,1641,9],[1803,4,1642,4],[1804,4,1643,4],[1805,4,1644,4],[1805,9,1644,9],[1805,13,1644,13,"i"],[1805,14,1644,14],[1805,17,1644,17],[1805,18,1644,18],[1805,20,1644,20,"i"],[1805,21,1644,21],[1805,24,1644,24,"rows"],[1805,28,1644,28],[1805,29,1644,29,"length"],[1805,35,1644,35],[1805,37,1644,37,"i"],[1805,38,1644,38],[1805,40,1644,40],[1805,42,1644,42],[1806,6,1645,8],[1807,6,1646,8],[1807,10,1646,12,"sumFields"],[1807,19,1646,21],[1807,22,1646,24],[1807,23,1646,25],[1808,6,1647,8],[1808,10,1647,12,"previousWasNumber"],[1808,27,1647,29],[1808,30,1647,32],[1808,35,1647,37],[1809,6,1648,8],[1809,11,1648,13],[1809,15,1648,17,"k"],[1809,16,1648,18],[1809,19,1648,21],[1809,20,1648,22],[1809,22,1648,24,"k"],[1809,23,1648,25],[1809,26,1648,28,"rows"],[1809,30,1648,32],[1809,31,1648,33,"i"],[1809,32,1648,34],[1809,33,1648,35],[1809,34,1648,36,"length"],[1809,40,1648,42],[1809,42,1648,44,"k"],[1809,43,1648,45],[1809,45,1648,47],[1809,47,1648,49],[1810,8,1649,12],[1810,12,1649,16,"isDigit"],[1810,19,1649,23],[1810,20,1649,24,"rows"],[1810,24,1649,28],[1810,25,1649,29,"i"],[1810,26,1649,30],[1810,27,1649,31],[1810,28,1649,32,"k"],[1810,29,1649,33],[1810,30,1649,34],[1810,31,1649,35],[1810,33,1649,37],[1811,10,1650,16],[1811,14,1650,20,"previousWasNumber"],[1811,31,1650,37],[1811,33,1650,39],[1812,12,1651,20],[1812,19,1651,27],[1813,14,1652,24,"ok"],[1813,16,1652,26],[1813,18,1652,28],[1813,23,1652,33],[1814,14,1653,24,"error"],[1814,19,1653,29],[1814,21,1653,31],[1815,12,1654,20],[1815,13,1654,21],[1816,10,1655,16],[1817,10,1656,16,"sumFields"],[1817,19,1656,25],[1817,23,1656,29,"parseInt"],[1817,31,1656,37],[1817,32,1656,38,"rows"],[1817,36,1656,42],[1817,37,1656,43,"i"],[1817,38,1656,44],[1817,39,1656,45],[1817,40,1656,46,"k"],[1817,41,1656,47],[1817,42,1656,48],[1817,44,1656,50],[1817,46,1656,52],[1817,47,1656,53],[1818,10,1657,16,"previousWasNumber"],[1818,27,1657,33],[1818,30,1657,36],[1818,34,1657,40],[1819,8,1658,12],[1819,9,1658,13],[1819,15,1659,17],[1820,10,1660,16],[1820,14,1660,20],[1820,15,1660,21],[1820,33,1660,39],[1820,34,1660,40,"test"],[1820,38,1660,44],[1820,39,1660,45,"rows"],[1820,43,1660,49],[1820,44,1660,50,"i"],[1820,45,1660,51],[1820,46,1660,52],[1820,47,1660,53,"k"],[1820,48,1660,54],[1820,49,1660,55],[1820,50,1660,56],[1820,52,1660,58],[1821,12,1661,20],[1821,19,1661,27],[1822,14,1662,24,"ok"],[1822,16,1662,26],[1822,18,1662,28],[1822,23,1662,33],[1823,14,1663,24,"error"],[1823,19,1663,29],[1823,21,1663,31],[1824,12,1664,20],[1824,13,1664,21],[1825,10,1665,16],[1826,10,1666,16,"sumFields"],[1826,19,1666,25],[1826,23,1666,29],[1826,24,1666,30],[1827,10,1667,16,"previousWasNumber"],[1827,27,1667,33],[1827,30,1667,36],[1827,35,1667,41],[1828,8,1668,12],[1829,6,1669,8],[1830,6,1670,8],[1830,10,1670,12,"sumFields"],[1830,19,1670,21],[1830,24,1670,26],[1830,25,1670,27],[1830,27,1670,29],[1831,8,1671,12],[1831,15,1671,19],[1832,10,1672,16,"ok"],[1832,12,1672,18],[1832,14,1672,20],[1832,19,1672,25],[1833,10,1673,16,"error"],[1833,15,1673,21],[1833,17,1673,23],[1834,8,1674,12],[1834,9,1674,13],[1835,6,1675,8],[1836,4,1676,4],[1837,4,1677,4],[1838,4,1678,4],[1838,8,1678,9,"tokens"],[1838,14,1678,15],[1838,15,1678,16],[1838,16,1678,17],[1838,17,1678,18],[1838,18,1678,19],[1838,19,1678,20],[1838,20,1678,21],[1838,24,1678,25],[1838,27,1678,28],[1838,31,1678,32,"tokens"],[1838,37,1678,38],[1838,38,1678,39],[1838,39,1678,40],[1838,40,1678,41],[1838,44,1678,45],[1838,47,1678,48],[1838,51,1679,9,"tokens"],[1838,57,1679,15],[1838,58,1679,16],[1838,59,1679,17],[1838,60,1679,18],[1838,61,1679,19],[1838,62,1679,20],[1838,63,1679,21],[1838,67,1679,25],[1838,70,1679,28],[1838,74,1679,32,"tokens"],[1838,80,1679,38],[1838,81,1679,39],[1838,82,1679,40],[1838,83,1679,41],[1838,87,1679,45],[1838,90,1679,49],[1838,92,1679,51],[1839,6,1680,8],[1839,13,1680,15],[1840,8,1680,17,"ok"],[1840,10,1680,19],[1840,12,1680,21],[1840,17,1680,26],[1841,8,1680,28,"error"],[1841,13,1680,33],[1841,15,1680,35],[1842,6,1680,76],[1842,7,1680,77],[1843,4,1681,4],[1844,4,1682,4],[1845,4,1683,4],[1845,10,1683,10,"kings"],[1845,15,1683,15],[1845,18,1683,18],[1845,19,1684,8],[1846,6,1684,10,"color"],[1846,11,1684,15],[1846,13,1684,17],[1846,20,1684,24],[1847,6,1684,26,"regex"],[1847,11,1684,31],[1847,13,1684,33],[1848,4,1684,38],[1848,5,1684,39],[1848,7,1685,8],[1849,6,1685,10,"color"],[1849,11,1685,15],[1849,13,1685,17],[1849,20,1685,24],[1850,6,1685,26,"regex"],[1850,11,1685,31],[1850,13,1685,33],[1851,4,1685,38],[1851,5,1685,39],[1851,6,1686,5],[1852,4,1687,4],[1852,9,1687,9],[1852,15,1687,15],[1853,6,1687,17,"color"],[1853,11,1687,22],[1854,6,1687,24,"regex"],[1855,4,1687,30],[1855,5,1687,31],[1855,9,1687,35,"kings"],[1855,14,1687,40],[1855,16,1687,42],[1856,6,1688,8],[1856,10,1688,12],[1856,11,1688,13,"regex"],[1856,16,1688,18],[1856,17,1688,19,"test"],[1856,21,1688,23],[1856,22,1688,24,"tokens"],[1856,28,1688,30],[1856,29,1688,31],[1856,30,1688,32],[1856,31,1688,33],[1856,32,1688,34],[1856,34,1688,36],[1857,8,1689,12],[1857,15,1689,19],[1858,10,1689,21,"ok"],[1858,12,1689,23],[1858,14,1689,25],[1858,19,1689,30],[1859,10,1689,32,"error"],[1859,15,1689,37],[1859,17,1689,39],[1859,41,1689,63,"color"],[1859,46,1689,68],[1860,8,1689,76],[1860,9,1689,77],[1861,6,1690,8],[1862,6,1691,8],[1862,10,1691,12],[1862,11,1691,13,"tokens"],[1862,17,1691,19],[1862,18,1691,20],[1862,19,1691,21],[1862,20,1691,22],[1862,21,1691,23,"match"],[1862,26,1691,28],[1862,27,1691,29,"regex"],[1862,32,1691,34],[1862,33,1691,35],[1862,37,1691,39],[1862,39,1691,41],[1862,41,1691,43,"length"],[1862,47,1691,49],[1862,50,1691,52],[1862,51,1691,53],[1862,53,1691,55],[1863,8,1692,12],[1863,15,1692,19],[1864,10,1692,21,"ok"],[1864,12,1692,23],[1864,14,1692,25],[1864,19,1692,30],[1865,10,1692,32,"error"],[1865,15,1692,37],[1865,17,1692,39],[1865,42,1692,64,"color"],[1865,47,1692,69],[1866,8,1692,78],[1866,9,1692,79],[1867,6,1693,8],[1868,4,1694,4],[1869,4,1695,4],[1870,4,1696,4],[1870,8,1696,8,"Array"],[1870,13,1696,13],[1870,14,1696,14,"from"],[1870,18,1696,18],[1870,19,1696,19,"rows"],[1870,23,1696,23],[1870,24,1696,24],[1870,25,1696,25],[1870,26,1696,26],[1870,29,1696,29,"rows"],[1870,33,1696,33],[1870,34,1696,34],[1870,35,1696,35],[1870,36,1696,36],[1870,37,1696,37],[1870,38,1696,38,"some"],[1870,42,1696,42],[1870,43,1696,44,"char"],[1870,47,1696,48],[1870,51,1696,53,"char"],[1870,55,1696,57],[1870,56,1696,58,"toUpperCase"],[1870,67,1696,69],[1870,68,1696,70],[1870,69,1696,71],[1870,74,1696,76],[1870,77,1696,79],[1870,78,1696,80],[1870,80,1696,82],[1871,6,1697,8],[1871,13,1697,15],[1872,8,1698,12,"ok"],[1872,10,1698,14],[1872,12,1698,16],[1872,17,1698,21],[1873,8,1699,12,"error"],[1873,13,1699,17],[1873,15,1699,19],[1874,6,1700,8],[1874,7,1700,9],[1875,4,1701,4],[1876,4,1702,4],[1876,11,1702,11],[1877,6,1702,13,"ok"],[1877,8,1702,15],[1877,10,1702,17],[1878,4,1702,22],[1878,5,1702,23],[1879,2,1703,0],[1880,2,1704,0],[1881,2,1705,0],[1881,11,1705,9,"getDisambiguator"],[1881,27,1705,25,"getDisambiguator"],[1881,28,1705,26,"move"],[1881,32,1705,30],[1881,34,1705,32,"moves"],[1881,39,1705,37],[1881,41,1705,39],[1882,4,1706,4],[1882,10,1706,10,"from"],[1882,14,1706,14],[1882,17,1706,17,"move"],[1882,21,1706,21],[1882,22,1706,22,"from"],[1882,26,1706,26],[1883,4,1707,4],[1883,10,1707,10,"to"],[1883,12,1707,12],[1883,15,1707,15,"move"],[1883,19,1707,19],[1883,20,1707,20,"to"],[1883,22,1707,22],[1884,4,1708,4],[1884,10,1708,10,"piece"],[1884,15,1708,15],[1884,18,1708,18,"move"],[1884,22,1708,22],[1884,23,1708,23,"piece"],[1884,28,1708,28],[1885,4,1709,4],[1885,8,1709,8,"ambiguities"],[1885,19,1709,19],[1885,22,1709,22],[1885,23,1709,23],[1886,4,1710,4],[1886,8,1710,8,"sameRank"],[1886,16,1710,16],[1886,19,1710,19],[1886,20,1710,20],[1887,4,1711,4],[1887,8,1711,8,"sameFile"],[1887,16,1711,16],[1887,19,1711,19],[1887,20,1711,20],[1888,4,1712,4],[1888,9,1712,9],[1888,13,1712,13,"i"],[1888,14,1712,14],[1888,17,1712,17],[1888,18,1712,18],[1888,20,1712,20,"len"],[1888,23,1712,23],[1888,26,1712,26,"moves"],[1888,31,1712,31],[1888,32,1712,32,"length"],[1888,38,1712,38],[1888,40,1712,40,"i"],[1888,41,1712,41],[1888,44,1712,44,"len"],[1888,47,1712,47],[1888,49,1712,49,"i"],[1888,50,1712,50],[1888,52,1712,52],[1888,54,1712,54],[1889,6,1713,8],[1889,12,1713,14,"ambigFrom"],[1889,21,1713,23],[1889,24,1713,26,"moves"],[1889,29,1713,31],[1889,30,1713,32,"i"],[1889,31,1713,33],[1889,32,1713,34],[1889,33,1713,35,"from"],[1889,37,1713,39],[1890,6,1714,8],[1890,12,1714,14,"ambigTo"],[1890,19,1714,21],[1890,22,1714,24,"moves"],[1890,27,1714,29],[1890,28,1714,30,"i"],[1890,29,1714,31],[1890,30,1714,32],[1890,31,1714,33,"to"],[1890,33,1714,35],[1891,6,1715,8],[1891,12,1715,14,"ambigPiece"],[1891,22,1715,24],[1891,25,1715,27,"moves"],[1891,30,1715,32],[1891,31,1715,33,"i"],[1891,32,1715,34],[1891,33,1715,35],[1891,34,1715,36,"piece"],[1891,39,1715,41],[1892,6,1716,8],[1893,0,1717,0],[1894,0,1718,0],[1895,0,1719,0],[1896,6,1720,8],[1896,10,1720,12,"piece"],[1896,15,1720,17],[1896,20,1720,22,"ambigPiece"],[1896,30,1720,32],[1896,34,1720,36,"from"],[1896,38,1720,40],[1896,43,1720,45,"ambigFrom"],[1896,52,1720,54],[1896,56,1720,58,"to"],[1896,58,1720,60],[1896,63,1720,65,"ambigTo"],[1896,70,1720,72],[1896,72,1720,74],[1897,8,1721,12,"ambiguities"],[1897,19,1721,23],[1897,21,1721,25],[1898,8,1722,12],[1898,12,1722,16,"rank"],[1898,16,1722,20],[1898,17,1722,21,"from"],[1898,21,1722,25],[1898,22,1722,26],[1898,27,1722,31,"rank"],[1898,31,1722,35],[1898,32,1722,36,"ambigFrom"],[1898,41,1722,45],[1898,42,1722,46],[1898,44,1722,48],[1899,10,1723,16,"sameRank"],[1899,18,1723,24],[1899,20,1723,26],[1900,8,1724,12],[1901,8,1725,12],[1901,12,1725,16,"file"],[1901,16,1725,20],[1901,17,1725,21,"from"],[1901,21,1725,25],[1901,22,1725,26],[1901,27,1725,31,"file"],[1901,31,1725,35],[1901,32,1725,36,"ambigFrom"],[1901,41,1725,45],[1901,42,1725,46],[1901,44,1725,48],[1902,10,1726,16,"sameFile"],[1902,18,1726,24],[1902,20,1726,26],[1903,8,1727,12],[1904,6,1728,8],[1905,4,1729,4],[1906,4,1730,4],[1906,8,1730,8,"ambiguities"],[1906,19,1730,19],[1906,22,1730,22],[1906,23,1730,23],[1906,25,1730,25],[1907,6,1731,8],[1907,10,1731,12,"sameRank"],[1907,18,1731,20],[1907,21,1731,23],[1907,22,1731,24],[1907,26,1731,28,"sameFile"],[1907,34,1731,36],[1907,37,1731,39],[1907,38,1731,40],[1907,40,1731,42],[1908,8,1732,12],[1909,0,1733,0],[1910,0,1734,0],[1911,0,1735,0],[1912,8,1736,12],[1912,15,1736,19,"algebraic"],[1912,24,1736,28],[1912,25,1736,29,"from"],[1912,29,1736,33],[1912,30,1736,34],[1913,6,1737,8],[1913,7,1737,9],[1913,13,1738,13],[1913,17,1738,17,"sameFile"],[1913,25,1738,25],[1913,28,1738,28],[1913,29,1738,29],[1913,31,1738,31],[1914,8,1739,12],[1915,0,1740,0],[1916,0,1741,0],[1917,0,1742,0],[1918,8,1743,12],[1918,15,1743,19,"algebraic"],[1918,24,1743,28],[1918,25,1743,29,"from"],[1918,29,1743,33],[1918,30,1743,34],[1918,31,1743,35,"charAt"],[1918,37,1743,41],[1918,38,1743,42],[1918,39,1743,43],[1918,40,1743,44],[1919,6,1744,8],[1919,7,1744,9],[1919,13,1745,13],[1920,8,1746,12],[1921,8,1747,12],[1921,15,1747,19,"algebraic"],[1921,24,1747,28],[1921,25,1747,29,"from"],[1921,29,1747,33],[1921,30,1747,34],[1921,31,1747,35,"charAt"],[1921,37,1747,41],[1921,38,1747,42],[1921,39,1747,43],[1921,40,1747,44],[1922,6,1748,8],[1923,4,1749,4],[1924,4,1750,4],[1924,11,1750,11],[1924,13,1750,13],[1925,2,1751,0],[1926,2,1752,0],[1926,11,1752,9,"addMove"],[1926,18,1752,16,"addMove"],[1926,19,1752,17,"moves"],[1926,24,1752,22],[1926,26,1752,24,"color"],[1926,31,1752,29],[1926,33,1752,31,"from"],[1926,37,1752,35],[1926,39,1752,37,"to"],[1926,41,1752,39],[1926,43,1752,41,"piece"],[1926,48,1752,46],[1926,50,1752,48,"captured"],[1926,58,1752,56],[1926,61,1752,59,"undefined"],[1926,70,1752,68],[1926,72,1752,70,"flags"],[1926,77,1752,75],[1926,80,1752,78,"BITS"],[1926,84,1752,82],[1926,85,1752,83,"NORMAL"],[1926,91,1752,89],[1926,93,1752,91],[1927,4,1753,4],[1927,10,1753,10,"r"],[1927,11,1753,11],[1927,14,1753,14,"rank"],[1927,18,1753,18],[1927,19,1753,19,"to"],[1927,21,1753,21],[1927,22,1753,22],[1928,4,1754,4],[1928,8,1754,8,"piece"],[1928,13,1754,13],[1928,18,1754,18,"PAWN"],[1928,22,1754,22],[1928,27,1754,27,"r"],[1928,28,1754,28],[1928,33,1754,33,"RANK_1"],[1928,39,1754,39],[1928,43,1754,43,"r"],[1928,44,1754,44],[1928,49,1754,49,"RANK_8"],[1928,55,1754,55],[1928,56,1754,56],[1928,58,1754,58],[1929,6,1755,8],[1929,11,1755,13],[1929,15,1755,17,"i"],[1929,16,1755,18],[1929,19,1755,21],[1929,20,1755,22],[1929,22,1755,24,"i"],[1929,23,1755,25],[1929,26,1755,28,"PROMOTIONS"],[1929,36,1755,38],[1929,37,1755,39,"length"],[1929,43,1755,45],[1929,45,1755,47,"i"],[1929,46,1755,48],[1929,48,1755,50],[1929,50,1755,52],[1930,8,1756,12],[1930,14,1756,18,"promotion"],[1930,23,1756,27],[1930,26,1756,30,"PROMOTIONS"],[1930,36,1756,40],[1930,37,1756,41,"i"],[1930,38,1756,42],[1930,39,1756,43],[1931,8,1757,12,"moves"],[1931,13,1757,17],[1931,14,1757,18,"push"],[1931,18,1757,22],[1931,19,1757,23],[1932,10,1758,16,"color"],[1932,15,1758,21],[1933,10,1759,16,"from"],[1933,14,1759,20],[1934,10,1760,16,"to"],[1934,12,1760,18],[1935,10,1761,16,"piece"],[1935,15,1761,21],[1936,10,1762,16,"captured"],[1936,18,1762,24],[1937,10,1763,16,"promotion"],[1937,19,1763,25],[1938,10,1764,16,"flags"],[1938,15,1764,21],[1938,17,1764,23,"flags"],[1938,22,1764,28],[1938,25,1764,31,"BITS"],[1938,29,1764,35],[1938,30,1764,36,"PROMOTION"],[1939,8,1765,12],[1939,9,1765,13],[1939,10,1765,14],[1940,6,1766,8],[1941,4,1767,4],[1941,5,1767,5],[1941,11,1768,9],[1942,6,1769,8,"moves"],[1942,11,1769,13],[1942,12,1769,14,"push"],[1942,16,1769,18],[1942,17,1769,19],[1943,8,1770,12,"color"],[1943,13,1770,17],[1944,8,1771,12,"from"],[1944,12,1771,16],[1945,8,1772,12,"to"],[1945,10,1772,14],[1946,8,1773,12,"piece"],[1946,13,1773,17],[1947,8,1774,12,"captured"],[1947,16,1774,20],[1948,8,1775,12,"flags"],[1949,6,1776,8],[1949,7,1776,9],[1949,8,1776,10],[1950,4,1777,4],[1951,2,1778,0],[1952,2,1779,0],[1952,11,1779,9,"inferPieceType"],[1952,25,1779,23,"inferPieceType"],[1952,26,1779,24,"san"],[1952,29,1779,27],[1952,31,1779,29],[1953,4,1780,4],[1953,8,1780,8,"pieceType"],[1953,17,1780,17],[1953,20,1780,20,"san"],[1953,23,1780,23],[1953,24,1780,24,"charAt"],[1953,30,1780,30],[1953,31,1780,31],[1953,32,1780,32],[1953,33,1780,33],[1954,4,1781,4],[1954,8,1781,8,"pieceType"],[1954,17,1781,17],[1954,21,1781,21],[1954,24,1781,24],[1954,28,1781,28,"pieceType"],[1954,37,1781,37],[1954,41,1781,41],[1954,44,1781,44],[1954,46,1781,46],[1955,6,1782,8],[1955,12,1782,14,"matches"],[1955,19,1782,21],[1955,22,1782,24,"san"],[1955,25,1782,27],[1955,26,1782,28,"match"],[1955,31,1782,33],[1955,32,1782,34],[1955,50,1782,52],[1955,51,1782,53],[1956,6,1783,8],[1956,10,1783,12,"matches"],[1956,17,1783,19],[1956,19,1783,21],[1957,8,1784,12],[1957,15,1784,19,"undefined"],[1957,24,1784,28],[1958,6,1785,8],[1959,6,1786,8],[1959,13,1786,15,"PAWN"],[1959,17,1786,19],[1960,4,1787,4],[1961,4,1788,4,"pieceType"],[1961,13,1788,13],[1961,16,1788,16,"pieceType"],[1961,25,1788,25],[1961,26,1788,26,"toLowerCase"],[1961,37,1788,37],[1961,38,1788,38],[1961,39,1788,39],[1962,4,1789,4],[1962,8,1789,8,"pieceType"],[1962,17,1789,17],[1962,22,1789,22],[1962,25,1789,25],[1962,27,1789,27],[1963,6,1790,8],[1963,13,1790,15,"KING"],[1963,17,1790,19],[1964,4,1791,4],[1965,4,1792,4],[1965,11,1792,11,"pieceType"],[1965,20,1792,20],[1966,2,1793,0],[1967,2,1794,0],[1968,2,1795,0],[1968,11,1795,9,"strippedSan"],[1968,22,1795,20,"strippedSan"],[1968,23,1795,21,"move"],[1968,27,1795,25],[1968,29,1795,27],[1969,4,1796,4],[1969,11,1796,11,"move"],[1969,15,1796,15],[1969,16,1796,16,"replace"],[1969,23,1796,23],[1969,24,1796,24],[1969,27,1796,27],[1969,29,1796,29],[1969,31,1796,31],[1969,32,1796,32],[1969,33,1796,33,"replace"],[1969,40,1796,40],[1969,41,1796,41],[1969,54,1796,54],[1969,56,1796,56],[1969,58,1796,58],[1969,59,1796,59],[1970,2,1797,0],[1971,2,1798,0],[1971,8,1798,6,"Chess"],[1971,13,1798,11],[1971,14,1798,12],[1972,4,1799,4,"_board"],[1972,10,1799,10],[1972,13,1799,13],[1972,17,1799,17,"Array"],[1972,22,1799,22],[1972,23,1799,23],[1972,26,1799,26],[1972,27,1799,27],[1973,4,1800,4,"_turn"],[1973,9,1800,9],[1973,12,1800,12,"WHITE"],[1973,17,1800,17],[1974,4,1801,4,"_header"],[1974,11,1801,11],[1974,14,1801,14],[1974,15,1801,15],[1974,16,1801,16],[1975,4,1802,4,"_kings"],[1975,10,1802,10],[1975,13,1802,13],[1976,6,1802,15,"w"],[1976,7,1802,16],[1976,9,1802,18,"EMPTY"],[1976,14,1802,23],[1977,6,1802,25,"b"],[1977,7,1802,26],[1977,9,1802,28,"EMPTY"],[1978,4,1802,34],[1978,5,1802,35],[1979,4,1803,4,"_epSquare"],[1979,13,1803,13],[1979,16,1803,16],[1979,17,1803,17],[1979,18,1803,18],[1980,4,1804,4,"_halfMoves"],[1980,14,1804,14],[1980,17,1804,17],[1980,18,1804,18],[1981,4,1805,4,"_moveNumber"],[1981,15,1805,15],[1981,18,1805,18],[1981,19,1805,19],[1982,4,1806,4,"_history"],[1982,12,1806,12],[1982,15,1806,15],[1982,17,1806,17],[1983,4,1807,4,"_comments"],[1983,13,1807,13],[1983,16,1807,16],[1983,17,1807,17],[1983,18,1807,18],[1984,4,1808,4,"_castling"],[1984,13,1808,13],[1984,16,1808,16],[1985,6,1808,18,"w"],[1985,7,1808,19],[1985,9,1808,21],[1985,10,1808,22],[1986,6,1808,24,"b"],[1986,7,1808,25],[1986,9,1808,27],[1987,4,1808,29],[1987,5,1808,30],[1988,4,1809,4,"_hash"],[1988,9,1809,9],[1988,12,1809,12],[1988,14,1809,14],[1989,4,1810,4],[1990,4,1811,4,"_positionCount"],[1990,18,1811,18],[1990,21,1811,21],[1990,25,1811,25,"Map"],[1990,28,1811,28],[1990,29,1811,29],[1990,30,1811,30],[1991,4,1812,4,"constructor"],[1991,15,1812,15,"constructor"],[1991,16,1812,16,"fen"],[1991,19,1812,19],[1991,22,1812,22,"DEFAULT_POSITION"],[1991,38,1812,38],[1991,40,1812,40],[1992,6,1812,42,"skipValidation"],[1992,20,1812,56],[1992,23,1812,59],[1993,4,1812,65],[1993,5,1812,66],[1993,8,1812,69],[1993,9,1812,70],[1993,10,1812,71],[1993,12,1812,73],[1994,6,1813,8],[1994,10,1813,12],[1994,11,1813,13,"load"],[1994,15,1813,17],[1994,16,1813,18,"fen"],[1994,19,1813,21],[1994,21,1813,23],[1995,8,1813,25,"skipValidation"],[1996,6,1813,40],[1996,7,1813,41],[1996,8,1813,42],[1997,4,1814,4],[1998,4,1815,4,"clear"],[1998,9,1815,9,"clear"],[1998,10,1815,10],[1999,6,1815,12,"preserveHeaders"],[1999,21,1815,27],[1999,24,1815,30],[2000,4,1815,36],[2000,5,1815,37],[2000,8,1815,40],[2000,9,1815,41],[2000,10,1815,42],[2000,12,1815,44],[2001,6,1816,8],[2001,10,1816,12],[2001,11,1816,13,"_board"],[2001,17,1816,19],[2001,20,1816,22],[2001,24,1816,26,"Array"],[2001,29,1816,31],[2001,30,1816,32],[2001,33,1816,35],[2001,34,1816,36],[2002,6,1817,8],[2002,10,1817,12],[2002,11,1817,13,"_kings"],[2002,17,1817,19],[2002,20,1817,22],[2003,8,1817,24,"w"],[2003,9,1817,25],[2003,11,1817,27,"EMPTY"],[2003,16,1817,32],[2004,8,1817,34,"b"],[2004,9,1817,35],[2004,11,1817,37,"EMPTY"],[2005,6,1817,43],[2005,7,1817,44],[2006,6,1818,8],[2006,10,1818,12],[2006,11,1818,13,"_turn"],[2006,16,1818,18],[2006,19,1818,21,"WHITE"],[2006,24,1818,26],[2007,6,1819,8],[2007,10,1819,12],[2007,11,1819,13,"_castling"],[2007,20,1819,22],[2007,23,1819,25],[2008,8,1819,27,"w"],[2008,9,1819,28],[2008,11,1819,30],[2008,12,1819,31],[2009,8,1819,33,"b"],[2009,9,1819,34],[2009,11,1819,36],[2010,6,1819,38],[2010,7,1819,39],[2011,6,1820,8],[2011,10,1820,12],[2011,11,1820,13,"_epSquare"],[2011,20,1820,22],[2011,23,1820,25,"EMPTY"],[2011,28,1820,30],[2012,6,1821,8],[2012,10,1821,12],[2012,11,1821,13,"_halfMoves"],[2012,21,1821,23],[2012,24,1821,26],[2012,25,1821,27],[2013,6,1822,8],[2013,10,1822,12],[2013,11,1822,13,"_moveNumber"],[2013,22,1822,24],[2013,25,1822,27],[2013,26,1822,28],[2014,6,1823,8],[2014,10,1823,12],[2014,11,1823,13,"_history"],[2014,19,1823,21],[2014,22,1823,24],[2014,24,1823,26],[2015,6,1824,8],[2015,10,1824,12],[2015,11,1824,13,"_comments"],[2015,20,1824,22],[2015,23,1824,25],[2015,24,1824,26],[2015,25,1824,27],[2016,6,1825,8],[2016,10,1825,12],[2016,11,1825,13,"_header"],[2016,18,1825,20],[2016,21,1825,23,"preserveHeaders"],[2016,36,1825,38],[2016,39,1825,41],[2016,43,1825,45],[2016,44,1825,46,"_header"],[2016,51,1825,53],[2016,54,1825,56],[2017,8,1825,58],[2017,11,1825,61,"HEADER_TEMPLATE"],[2018,6,1825,77],[2018,7,1825,78],[2019,6,1826,8],[2019,10,1826,12],[2019,11,1826,13,"_hash"],[2019,16,1826,18],[2019,19,1826,21],[2019,23,1826,25],[2019,24,1826,26,"_computeHash"],[2019,36,1826,38],[2019,37,1826,39],[2019,38,1826,40],[2020,6,1827,8],[2020,10,1827,12],[2020,11,1827,13,"_positionCount"],[2020,25,1827,27],[2020,28,1827,30],[2020,32,1827,34,"Map"],[2020,35,1827,37],[2020,36,1827,38],[2020,37,1827,39],[2021,6,1828,8],[2022,0,1829,0],[2023,0,1830,0],[2024,0,1831,0],[2025,0,1832,0],[2026,6,1833,8],[2026,10,1833,12],[2026,11,1833,13,"_header"],[2026,18,1833,20],[2026,19,1833,21],[2026,26,1833,28],[2026,27,1833,29],[2026,30,1833,32],[2026,34,1833,36],[2027,6,1834,8],[2027,10,1834,12],[2027,11,1834,13,"_header"],[2027,18,1834,20],[2027,19,1834,21],[2027,24,1834,26],[2027,25,1834,27],[2027,28,1834,30],[2027,32,1834,34],[2028,4,1835,4],[2029,4,1836,4,"load"],[2029,8,1836,8,"load"],[2029,9,1836,9,"fen"],[2029,12,1836,12],[2029,14,1836,14],[2030,6,1836,16,"skipValidation"],[2030,20,1836,30],[2030,23,1836,33],[2030,28,1836,38],[2031,6,1836,40,"preserveHeaders"],[2031,21,1836,55],[2031,24,1836,58],[2032,4,1836,64],[2032,5,1836,65],[2032,8,1836,68],[2032,9,1836,69],[2032,10,1836,70],[2032,12,1836,72],[2033,6,1837,8],[2033,10,1837,12,"tokens"],[2033,16,1837,18],[2033,19,1837,21,"fen"],[2033,22,1837,24],[2033,23,1837,25,"split"],[2033,28,1837,30],[2033,29,1837,31],[2033,34,1837,36],[2033,35,1837,37],[2034,6,1838,8],[2035,6,1839,8],[2035,10,1839,12,"tokens"],[2035,16,1839,18],[2035,17,1839,19,"length"],[2035,23,1839,25],[2035,27,1839,29],[2035,28,1839,30],[2035,32,1839,34,"tokens"],[2035,38,1839,40],[2035,39,1839,41,"length"],[2035,45,1839,47],[2035,48,1839,50],[2035,49,1839,51],[2035,51,1839,53],[2036,8,1840,12],[2036,14,1840,18,"adjustments"],[2036,25,1840,29],[2036,28,1840,32],[2036,29,1840,33],[2036,32,1840,36],[2036,34,1840,38],[2036,37,1840,41],[2036,39,1840,43],[2036,42,1840,46],[2036,44,1840,48],[2036,47,1840,51],[2036,48,1840,52],[2037,8,1841,12,"fen"],[2037,11,1841,15],[2037,14,1841,18,"tokens"],[2037,20,1841,24],[2037,21,1841,25,"concat"],[2037,27,1841,31],[2037,28,1841,32,"adjustments"],[2037,39,1841,43],[2037,40,1841,44,"slice"],[2037,45,1841,49],[2037,46,1841,50],[2037,48,1841,52],[2037,49,1841,53],[2037,52,1841,56,"tokens"],[2037,58,1841,62],[2037,59,1841,63,"length"],[2037,65,1841,69],[2037,66,1841,70],[2037,67,1841,71],[2037,68,1841,72],[2037,69,1841,73,"join"],[2037,73,1841,77],[2037,74,1841,78],[2037,77,1841,81],[2037,78,1841,82],[2038,6,1842,8],[2039,6,1843,8,"tokens"],[2039,12,1843,14],[2039,15,1843,17,"fen"],[2039,18,1843,20],[2039,19,1843,21,"split"],[2039,24,1843,26],[2039,25,1843,27],[2039,30,1843,32],[2039,31,1843,33],[2040,6,1844,8],[2040,10,1844,12],[2040,11,1844,13,"skipValidation"],[2040,25,1844,27],[2040,27,1844,29],[2041,8,1845,12],[2041,14,1845,18],[2042,10,1845,20,"ok"],[2042,12,1845,22],[2043,10,1845,24,"error"],[2044,8,1845,30],[2044,9,1845,31],[2044,12,1845,34,"validateFen"],[2044,23,1845,45],[2044,24,1845,46,"fen"],[2044,27,1845,49],[2044,28,1845,50],[2045,8,1846,12],[2045,12,1846,16],[2045,13,1846,17,"ok"],[2045,15,1846,19],[2045,17,1846,21],[2046,10,1847,16],[2046,16,1847,22],[2046,20,1847,26,"Error"],[2046,25,1847,31],[2046,26,1847,32,"error"],[2046,31,1847,37],[2046,32,1847,38],[2047,8,1848,12],[2048,6,1849,8],[2049,6,1850,8],[2049,12,1850,14,"position"],[2049,20,1850,22],[2049,23,1850,25,"tokens"],[2049,29,1850,31],[2049,30,1850,32],[2049,31,1850,33],[2049,32,1850,34],[2050,6,1851,8],[2050,10,1851,12,"square"],[2050,16,1851,18],[2050,19,1851,21],[2050,20,1851,22],[2051,6,1852,8],[2051,10,1852,12],[2051,11,1852,13,"clear"],[2051,16,1852,18],[2051,17,1852,19],[2052,8,1852,21,"preserveHeaders"],[2053,6,1852,37],[2053,7,1852,38],[2053,8,1852,39],[2054,6,1853,8],[2054,11,1853,13],[2054,15,1853,17,"i"],[2054,16,1853,18],[2054,19,1853,21],[2054,20,1853,22],[2054,22,1853,24,"i"],[2054,23,1853,25],[2054,26,1853,28,"position"],[2054,34,1853,36],[2054,35,1853,37,"length"],[2054,41,1853,43],[2054,43,1853,45,"i"],[2054,44,1853,46],[2054,46,1853,48],[2054,48,1853,50],[2055,8,1854,12],[2055,14,1854,18,"piece"],[2055,19,1854,23],[2055,22,1854,26,"position"],[2055,30,1854,34],[2055,31,1854,35,"charAt"],[2055,37,1854,41],[2055,38,1854,42,"i"],[2055,39,1854,43],[2055,40,1854,44],[2056,8,1855,12],[2056,12,1855,16,"piece"],[2056,17,1855,21],[2056,22,1855,26],[2056,25,1855,29],[2056,27,1855,31],[2057,10,1856,16,"square"],[2057,16,1856,22],[2057,20,1856,26],[2057,21,1856,27],[2058,8,1857,12],[2058,9,1857,13],[2058,15,1858,17],[2058,19,1858,21,"isDigit"],[2058,26,1858,28],[2058,27,1858,29,"piece"],[2058,32,1858,34],[2058,33,1858,35],[2058,35,1858,37],[2059,10,1859,16,"square"],[2059,16,1859,22],[2059,20,1859,26,"parseInt"],[2059,28,1859,34],[2059,29,1859,35,"piece"],[2059,34,1859,40],[2059,36,1859,42],[2059,38,1859,44],[2059,39,1859,45],[2060,8,1860,12],[2060,9,1860,13],[2060,15,1861,17],[2061,10,1862,16],[2061,16,1862,22,"color"],[2061,21,1862,27],[2061,24,1862,30,"piece"],[2061,29,1862,35],[2061,32,1862,38],[2061,35,1862,41],[2061,38,1862,44,"WHITE"],[2061,43,1862,49],[2061,46,1862,52,"BLACK"],[2061,51,1862,57],[2062,10,1863,16],[2062,14,1863,20],[2062,15,1863,21,"_put"],[2062,19,1863,25],[2062,20,1863,26],[2063,12,1863,28,"type"],[2063,16,1863,32],[2063,18,1863,34,"piece"],[2063,23,1863,39],[2063,24,1863,40,"toLowerCase"],[2063,35,1863,51],[2063,36,1863,52],[2063,37,1863,53],[2064,12,1863,55,"color"],[2065,10,1863,61],[2065,11,1863,62],[2065,13,1863,64,"algebraic"],[2065,22,1863,73],[2065,23,1863,74,"square"],[2065,29,1863,80],[2065,30,1863,81],[2065,31,1863,82],[2066,10,1864,16,"square"],[2066,16,1864,22],[2066,18,1864,24],[2067,8,1865,12],[2068,6,1866,8],[2069,6,1867,8],[2069,10,1867,12],[2069,11,1867,13,"_turn"],[2069,16,1867,18],[2069,19,1867,21,"tokens"],[2069,25,1867,27],[2069,26,1867,28],[2069,27,1867,29],[2069,28,1867,30],[2070,6,1868,8],[2070,10,1868,12,"tokens"],[2070,16,1868,18],[2070,17,1868,19],[2070,18,1868,20],[2070,19,1868,21],[2070,20,1868,22,"indexOf"],[2070,27,1868,29],[2070,28,1868,30],[2070,31,1868,33],[2070,32,1868,34],[2070,35,1868,37],[2070,36,1868,38],[2070,37,1868,39],[2070,39,1868,41],[2071,8,1869,12],[2071,12,1869,16],[2071,13,1869,17,"_castling"],[2071,22,1869,26],[2071,23,1869,27,"w"],[2071,24,1869,28],[2071,28,1869,32,"BITS"],[2071,32,1869,36],[2071,33,1869,37,"KSIDE_CASTLE"],[2071,45,1869,49],[2072,6,1870,8],[2073,6,1871,8],[2073,10,1871,12,"tokens"],[2073,16,1871,18],[2073,17,1871,19],[2073,18,1871,20],[2073,19,1871,21],[2073,20,1871,22,"indexOf"],[2073,27,1871,29],[2073,28,1871,30],[2073,31,1871,33],[2073,32,1871,34],[2073,35,1871,37],[2073,36,1871,38],[2073,37,1871,39],[2073,39,1871,41],[2074,8,1872,12],[2074,12,1872,16],[2074,13,1872,17,"_castling"],[2074,22,1872,26],[2074,23,1872,27,"w"],[2074,24,1872,28],[2074,28,1872,32,"BITS"],[2074,32,1872,36],[2074,33,1872,37,"QSIDE_CASTLE"],[2074,45,1872,49],[2075,6,1873,8],[2076,6,1874,8],[2076,10,1874,12,"tokens"],[2076,16,1874,18],[2076,17,1874,19],[2076,18,1874,20],[2076,19,1874,21],[2076,20,1874,22,"indexOf"],[2076,27,1874,29],[2076,28,1874,30],[2076,31,1874,33],[2076,32,1874,34],[2076,35,1874,37],[2076,36,1874,38],[2076,37,1874,39],[2076,39,1874,41],[2077,8,1875,12],[2077,12,1875,16],[2077,13,1875,17,"_castling"],[2077,22,1875,26],[2077,23,1875,27,"b"],[2077,24,1875,28],[2077,28,1875,32,"BITS"],[2077,32,1875,36],[2077,33,1875,37,"KSIDE_CASTLE"],[2077,45,1875,49],[2078,6,1876,8],[2079,6,1877,8],[2079,10,1877,12,"tokens"],[2079,16,1877,18],[2079,17,1877,19],[2079,18,1877,20],[2079,19,1877,21],[2079,20,1877,22,"indexOf"],[2079,27,1877,29],[2079,28,1877,30],[2079,31,1877,33],[2079,32,1877,34],[2079,35,1877,37],[2079,36,1877,38],[2079,37,1877,39],[2079,39,1877,41],[2080,8,1878,12],[2080,12,1878,16],[2080,13,1878,17,"_castling"],[2080,22,1878,26],[2080,23,1878,27,"b"],[2080,24,1878,28],[2080,28,1878,32,"BITS"],[2080,32,1878,36],[2080,33,1878,37,"QSIDE_CASTLE"],[2080,45,1878,49],[2081,6,1879,8],[2082,6,1880,8],[2082,10,1880,12],[2082,11,1880,13,"_epSquare"],[2082,20,1880,22],[2082,23,1880,25,"tokens"],[2082,29,1880,31],[2082,30,1880,32],[2082,31,1880,33],[2082,32,1880,34],[2082,37,1880,39],[2082,40,1880,42],[2082,43,1880,45,"EMPTY"],[2082,48,1880,50],[2082,51,1880,53,"Ox88"],[2082,55,1880,57],[2082,56,1880,58,"tokens"],[2082,62,1880,64],[2082,63,1880,65],[2082,64,1880,66],[2082,65,1880,67],[2082,66,1880,68],[2083,6,1881,8],[2083,10,1881,12],[2083,11,1881,13,"_halfMoves"],[2083,21,1881,23],[2083,24,1881,26,"parseInt"],[2083,32,1881,34],[2083,33,1881,35,"tokens"],[2083,39,1881,41],[2083,40,1881,42],[2083,41,1881,43],[2083,42,1881,44],[2083,44,1881,46],[2083,46,1881,48],[2083,47,1881,49],[2084,6,1882,8],[2084,10,1882,12],[2084,11,1882,13,"_moveNumber"],[2084,22,1882,24],[2084,25,1882,27,"parseInt"],[2084,33,1882,35],[2084,34,1882,36,"tokens"],[2084,40,1882,42],[2084,41,1882,43],[2084,42,1882,44],[2084,43,1882,45],[2084,45,1882,47],[2084,47,1882,49],[2084,48,1882,50],[2085,6,1883,8],[2085,10,1883,12],[2085,11,1883,13,"_hash"],[2085,16,1883,18],[2085,19,1883,21],[2085,23,1883,25],[2085,24,1883,26,"_computeHash"],[2085,36,1883,38],[2085,37,1883,39],[2085,38,1883,40],[2086,6,1884,8],[2086,10,1884,12],[2086,11,1884,13,"_updateSetup"],[2086,23,1884,25],[2086,24,1884,26,"fen"],[2086,27,1884,29],[2086,28,1884,30],[2087,6,1885,8],[2087,10,1885,12],[2087,11,1885,13,"_incPositionCount"],[2087,28,1885,30],[2087,29,1885,31],[2087,30,1885,32],[2088,4,1886,4],[2089,4,1887,4,"fen"],[2089,7,1887,7,"fen"],[2089,8,1887,8],[2090,6,1887,10,"forceEnpassantSquare"],[2090,26,1887,30],[2090,29,1887,33],[2091,4,1887,40],[2091,5,1887,41],[2091,8,1887,44],[2091,9,1887,45],[2091,10,1887,46],[2091,12,1887,48],[2092,6,1888,8],[2092,10,1888,12,"empty"],[2092,15,1888,17],[2092,18,1888,20],[2092,19,1888,21],[2093,6,1889,8],[2093,10,1889,12,"fen"],[2093,13,1889,15],[2093,16,1889,18],[2093,18,1889,20],[2094,6,1890,8],[2094,11,1890,13],[2094,15,1890,17,"i"],[2094,16,1890,18],[2094,19,1890,21,"Ox88"],[2094,23,1890,25],[2094,24,1890,26,"a8"],[2094,26,1890,28],[2094,28,1890,30,"i"],[2094,29,1890,31],[2094,33,1890,35,"Ox88"],[2094,37,1890,39],[2094,38,1890,40,"h1"],[2094,40,1890,42],[2094,42,1890,44,"i"],[2094,43,1890,45],[2094,45,1890,47],[2094,47,1890,49],[2095,8,1891,12],[2095,12,1891,16],[2095,16,1891,20],[2095,17,1891,21,"_board"],[2095,23,1891,27],[2095,24,1891,28,"i"],[2095,25,1891,29],[2095,26,1891,30],[2095,28,1891,32],[2096,10,1892,16],[2096,14,1892,20,"empty"],[2096,19,1892,25],[2096,22,1892,28],[2096,23,1892,29],[2096,25,1892,31],[2097,12,1893,20,"fen"],[2097,15,1893,23],[2097,19,1893,27,"empty"],[2097,24,1893,32],[2098,12,1894,20,"empty"],[2098,17,1894,25],[2098,20,1894,28],[2098,21,1894,29],[2099,10,1895,16],[2100,10,1896,16],[2100,16,1896,22],[2101,12,1896,24,"color"],[2101,17,1896,29],[2102,12,1896,31,"type"],[2102,16,1896,35],[2102,18,1896,37,"piece"],[2103,10,1896,43],[2103,11,1896,44],[2103,14,1896,47],[2103,18,1896,51],[2103,19,1896,52,"_board"],[2103,25,1896,58],[2103,26,1896,59,"i"],[2103,27,1896,60],[2103,28,1896,61],[2104,10,1897,16,"fen"],[2104,13,1897,19],[2104,17,1897,23,"color"],[2104,22,1897,28],[2104,27,1897,33,"WHITE"],[2104,32,1897,38],[2104,35,1897,41,"piece"],[2104,40,1897,46],[2104,41,1897,47,"toUpperCase"],[2104,52,1897,58],[2104,53,1897,59],[2104,54,1897,60],[2104,57,1897,63,"piece"],[2104,62,1897,68],[2104,63,1897,69,"toLowerCase"],[2104,74,1897,80],[2104,75,1897,81],[2104,76,1897,82],[2105,8,1898,12],[2105,9,1898,13],[2105,15,1899,17],[2106,10,1900,16,"empty"],[2106,15,1900,21],[2106,17,1900,23],[2107,8,1901,12],[2108,8,1902,12],[2108,12,1902,17,"i"],[2108,13,1902,18],[2108,16,1902,21],[2108,17,1902,22],[2108,20,1902,26],[2108,24,1902,30],[2108,26,1902,32],[2109,10,1903,16],[2109,14,1903,20,"empty"],[2109,19,1903,25],[2109,22,1903,28],[2109,23,1903,29],[2109,25,1903,31],[2110,12,1904,20,"fen"],[2110,15,1904,23],[2110,19,1904,27,"empty"],[2110,24,1904,32],[2111,10,1905,16],[2112,10,1906,16],[2112,14,1906,20,"i"],[2112,15,1906,21],[2112,20,1906,26,"Ox88"],[2112,24,1906,30],[2112,25,1906,31,"h1"],[2112,27,1906,33],[2112,29,1906,35],[2113,12,1907,20,"fen"],[2113,15,1907,23],[2113,19,1907,27],[2113,22,1907,30],[2114,10,1908,16],[2115,10,1909,16,"empty"],[2115,15,1909,21],[2115,18,1909,24],[2115,19,1909,25],[2116,10,1910,16,"i"],[2116,11,1910,17],[2116,15,1910,21],[2116,16,1910,22],[2117,8,1911,12],[2118,6,1912,8],[2119,6,1913,8],[2119,10,1913,12,"castling"],[2119,18,1913,20],[2119,21,1913,23],[2119,23,1913,25],[2120,6,1914,8],[2120,10,1914,12],[2120,14,1914,16],[2120,15,1914,17,"_castling"],[2120,24,1914,26],[2120,25,1914,27,"WHITE"],[2120,30,1914,32],[2120,31,1914,33],[2120,34,1914,36,"BITS"],[2120,38,1914,40],[2120,39,1914,41,"KSIDE_CASTLE"],[2120,51,1914,53],[2120,53,1914,55],[2121,8,1915,12,"castling"],[2121,16,1915,20],[2121,20,1915,24],[2121,23,1915,27],[2122,6,1916,8],[2123,6,1917,8],[2123,10,1917,12],[2123,14,1917,16],[2123,15,1917,17,"_castling"],[2123,24,1917,26],[2123,25,1917,27,"WHITE"],[2123,30,1917,32],[2123,31,1917,33],[2123,34,1917,36,"BITS"],[2123,38,1917,40],[2123,39,1917,41,"QSIDE_CASTLE"],[2123,51,1917,53],[2123,53,1917,55],[2124,8,1918,12,"castling"],[2124,16,1918,20],[2124,20,1918,24],[2124,23,1918,27],[2125,6,1919,8],[2126,6,1920,8],[2126,10,1920,12],[2126,14,1920,16],[2126,15,1920,17,"_castling"],[2126,24,1920,26],[2126,25,1920,27,"BLACK"],[2126,30,1920,32],[2126,31,1920,33],[2126,34,1920,36,"BITS"],[2126,38,1920,40],[2126,39,1920,41,"KSIDE_CASTLE"],[2126,51,1920,53],[2126,53,1920,55],[2127,8,1921,12,"castling"],[2127,16,1921,20],[2127,20,1921,24],[2127,23,1921,27],[2128,6,1922,8],[2129,6,1923,8],[2129,10,1923,12],[2129,14,1923,16],[2129,15,1923,17,"_castling"],[2129,24,1923,26],[2129,25,1923,27,"BLACK"],[2129,30,1923,32],[2129,31,1923,33],[2129,34,1923,36,"BITS"],[2129,38,1923,40],[2129,39,1923,41,"QSIDE_CASTLE"],[2129,51,1923,53],[2129,53,1923,55],[2130,8,1924,12,"castling"],[2130,16,1924,20],[2130,20,1924,24],[2130,23,1924,27],[2131,6,1925,8],[2132,6,1926,8],[2133,6,1927,8,"castling"],[2133,14,1927,16],[2133,17,1927,19,"castling"],[2133,25,1927,27],[2133,29,1927,31],[2133,32,1927,34],[2134,6,1928,8],[2134,10,1928,12,"epSquare"],[2134,18,1928,20],[2134,21,1928,23],[2134,24,1928,26],[2135,6,1929,8],[2136,0,1930,0],[2137,0,1931,0],[2138,0,1932,0],[2139,6,1933,8],[2139,10,1933,12],[2139,14,1933,16],[2139,15,1933,17,"_epSquare"],[2139,24,1933,26],[2139,29,1933,31,"EMPTY"],[2139,34,1933,36],[2139,36,1933,38],[2140,8,1934,12],[2140,12,1934,16,"forceEnpassantSquare"],[2140,32,1934,36],[2140,34,1934,38],[2141,10,1935,16,"epSquare"],[2141,18,1935,24],[2141,21,1935,27,"algebraic"],[2141,30,1935,36],[2141,31,1935,37],[2141,35,1935,41],[2141,36,1935,42,"_epSquare"],[2141,45,1935,51],[2141,46,1935,52],[2142,8,1936,12],[2142,9,1936,13],[2142,15,1937,17],[2143,10,1938,16],[2143,16,1938,22,"bigPawnSquare"],[2143,29,1938,35],[2143,32,1938,38],[2143,36,1938,42],[2143,37,1938,43,"_epSquare"],[2143,46,1938,52],[2143,50,1938,56],[2143,54,1938,60],[2143,55,1938,61,"_turn"],[2143,60,1938,66],[2143,65,1938,71,"WHITE"],[2143,70,1938,76],[2143,73,1938,79],[2143,75,1938,81],[2143,78,1938,84],[2143,79,1938,85],[2143,81,1938,87],[2143,82,1938,88],[2144,10,1939,16],[2144,16,1939,22,"squares"],[2144,23,1939,29],[2144,26,1939,32],[2144,27,1939,33,"bigPawnSquare"],[2144,40,1939,46],[2144,43,1939,49],[2144,44,1939,50],[2144,46,1939,52,"bigPawnSquare"],[2144,59,1939,65],[2144,62,1939,68],[2144,63,1939,69],[2144,64,1939,70],[2145,10,1940,16],[2145,15,1940,21],[2145,21,1940,27,"square"],[2145,27,1940,33],[2145,31,1940,37,"squares"],[2145,38,1940,44],[2145,40,1940,46],[2146,12,1941,20],[2147,12,1942,20],[2147,16,1942,24,"square"],[2147,22,1942,30],[2147,25,1942,33],[2147,29,1942,37],[2147,31,1942,39],[2148,14,1943,24],[2149,12,1944,20],[2150,12,1945,20],[2150,18,1945,26,"color"],[2150,23,1945,31],[2150,26,1945,34],[2150,30,1945,38],[2150,31,1945,39,"_turn"],[2150,36,1945,44],[2151,12,1946,20],[2152,12,1947,20],[2152,16,1947,24],[2152,20,1947,28],[2152,21,1947,29,"_board"],[2152,27,1947,35],[2152,28,1947,36,"square"],[2152,34,1947,42],[2152,35,1947,43],[2152,37,1947,45,"color"],[2152,42,1947,50],[2152,47,1947,55,"color"],[2152,52,1947,60],[2152,56,1948,24],[2152,60,1948,28],[2152,61,1948,29,"_board"],[2152,67,1948,35],[2152,68,1948,36,"square"],[2152,74,1948,42],[2152,75,1948,43],[2152,77,1948,45,"type"],[2152,81,1948,49],[2152,86,1948,54,"PAWN"],[2152,90,1948,58],[2152,92,1948,60],[2153,14,1949,24],[2154,14,1950,24],[2154,18,1950,28],[2154,19,1950,29,"_makeMove"],[2154,28,1950,38],[2154,29,1950,39],[2155,16,1951,28,"color"],[2155,21,1951,33],[2156,16,1952,28,"from"],[2156,20,1952,32],[2156,22,1952,34,"square"],[2156,28,1952,40],[2157,16,1953,28,"to"],[2157,18,1953,30],[2157,20,1953,32],[2157,24,1953,36],[2157,25,1953,37,"_epSquare"],[2157,34,1953,46],[2158,16,1954,28,"piece"],[2158,21,1954,33],[2158,23,1954,35,"PAWN"],[2158,27,1954,39],[2159,16,1955,28,"captured"],[2159,24,1955,36],[2159,26,1955,38,"PAWN"],[2159,30,1955,42],[2160,16,1956,28,"flags"],[2160,21,1956,33],[2160,23,1956,35,"BITS"],[2160,27,1956,39],[2160,28,1956,40,"EP_CAPTURE"],[2161,14,1957,24],[2161,15,1957,25],[2161,16,1957,26],[2162,14,1958,24],[2162,20,1958,30,"isLegal"],[2162,27,1958,37],[2162,30,1958,40],[2162,31,1958,41],[2162,35,1958,45],[2162,36,1958,46,"_isKingAttacked"],[2162,51,1958,61],[2162,52,1958,62,"color"],[2162,57,1958,67],[2162,58,1958,68],[2163,14,1959,24],[2163,18,1959,28],[2163,19,1959,29,"_undoMove"],[2163,28,1959,38],[2163,29,1959,39],[2163,30,1959,40],[2164,14,1960,24],[2165,14,1961,24],[2165,18,1961,28,"isLegal"],[2165,25,1961,35],[2165,27,1961,37],[2166,16,1962,28,"epSquare"],[2166,24,1962,36],[2166,27,1962,39,"algebraic"],[2166,36,1962,48],[2166,37,1962,49],[2166,41,1962,53],[2166,42,1962,54,"_epSquare"],[2166,51,1962,63],[2166,52,1962,64],[2167,16,1963,28],[2168,14,1964,24],[2169,12,1965,20],[2170,10,1966,16],[2171,8,1967,12],[2172,6,1968,8],[2173,6,1969,8],[2173,13,1969,15],[2173,14,1970,12,"fen"],[2173,17,1970,15],[2173,19,1971,12],[2173,23,1971,16],[2173,24,1971,17,"_turn"],[2173,29,1971,22],[2173,31,1972,12,"castling"],[2173,39,1972,20],[2173,41,1973,12,"epSquare"],[2173,49,1973,20],[2173,51,1974,12],[2173,55,1974,16],[2173,56,1974,17,"_halfMoves"],[2173,66,1974,27],[2173,68,1975,12],[2173,72,1975,16],[2173,73,1975,17,"_moveNumber"],[2173,84,1975,28],[2173,85,1976,9],[2173,86,1976,10,"join"],[2173,90,1976,14],[2173,91,1976,15],[2173,94,1976,18],[2173,95,1976,19],[2174,4,1977,4],[2175,4,1978,4,"_pieceKey"],[2175,13,1978,13,"_pieceKey"],[2175,14,1978,14,"i"],[2175,15,1978,15],[2175,17,1978,17],[2176,6,1979,8],[2176,10,1979,12],[2176,11,1979,13],[2176,15,1979,17],[2176,16,1979,18,"_board"],[2176,22,1979,24],[2176,23,1979,25,"i"],[2176,24,1979,26],[2176,25,1979,27],[2176,27,1979,29],[2177,8,1980,12],[2177,15,1980,19],[2177,17,1980,21],[2178,6,1981,8],[2179,6,1982,8],[2179,12,1982,14],[2180,8,1982,16,"color"],[2180,13,1982,21],[2181,8,1982,23,"type"],[2182,6,1982,28],[2182,7,1982,29],[2182,10,1982,32],[2182,14,1982,36],[2182,15,1982,37,"_board"],[2182,21,1982,43],[2182,22,1982,44,"i"],[2182,23,1982,45],[2182,24,1982,46],[2183,6,1983,8],[2183,12,1983,14,"colorIndex"],[2183,22,1983,24],[2183,25,1983,27],[2184,8,1984,12,"w"],[2184,9,1984,13],[2184,11,1984,15],[2184,12,1984,16],[2185,8,1985,12,"b"],[2185,9,1985,13],[2185,11,1985,15],[2186,6,1986,8],[2186,7,1986,9],[2186,8,1986,10,"color"],[2186,13,1986,15],[2186,14,1986,16],[2187,6,1987,8],[2187,12,1987,14,"typeIndex"],[2187,21,1987,23],[2187,24,1987,26],[2188,8,1988,12,"p"],[2188,9,1988,13],[2188,11,1988,15],[2188,12,1988,16],[2189,8,1989,12,"n"],[2189,9,1989,13],[2189,11,1989,15],[2189,12,1989,16],[2190,8,1990,12,"b"],[2190,9,1990,13],[2190,11,1990,15],[2190,12,1990,16],[2191,8,1991,12,"r"],[2191,9,1991,13],[2191,11,1991,15],[2191,12,1991,16],[2192,8,1992,12,"q"],[2192,9,1992,13],[2192,11,1992,15],[2192,12,1992,16],[2193,8,1993,12,"k"],[2193,9,1993,13],[2193,11,1993,15],[2194,6,1994,8],[2194,7,1994,9],[2194,8,1994,10,"type"],[2194,12,1994,14],[2194,13,1994,15],[2195,6,1995,8],[2195,13,1995,15,"PIECE_KEYS"],[2195,23,1995,25],[2195,24,1995,26,"colorIndex"],[2195,34,1995,36],[2195,35,1995,37],[2195,36,1995,38,"typeIndex"],[2195,45,1995,47],[2195,46,1995,48],[2195,47,1995,49,"i"],[2195,48,1995,50],[2195,49,1995,51],[2196,4,1996,4],[2197,4,1997,4,"_epKey"],[2197,10,1997,10,"_epKey"],[2197,11,1997,10],[2197,13,1997,13],[2198,6,1998,8],[2198,13,1998,15],[2198,17,1998,19],[2198,18,1998,20,"_epSquare"],[2198,27,1998,29],[2198,32,1998,34,"EMPTY"],[2198,37,1998,39],[2198,40,1998,42],[2198,42,1998,44],[2198,45,1998,47,"EP_KEYS"],[2198,52,1998,54],[2198,53,1998,55],[2198,57,1998,59],[2198,58,1998,60,"_epSquare"],[2198,67,1998,69],[2198,70,1998,72],[2198,71,1998,73],[2198,72,1998,74],[2199,4,1999,4],[2200,4,2000,4,"_castlingKey"],[2200,16,2000,16,"_castlingKey"],[2200,17,2000,16],[2200,19,2000,19],[2201,6,2001,8],[2201,12,2001,14,"index"],[2201,17,2001,19],[2201,20,2001,23],[2201,24,2001,27],[2201,25,2001,28,"_castling"],[2201,34,2001,37],[2201,35,2001,38,"w"],[2201,36,2001,39],[2201,40,2001,43],[2201,41,2001,44],[2201,44,2001,49],[2201,48,2001,53],[2201,49,2001,54,"_castling"],[2201,58,2001,63],[2201,59,2001,64,"b"],[2201,60,2001,65],[2201,64,2001,69],[2201,65,2001,71],[2202,6,2002,8],[2202,13,2002,15,"CASTLING_KEYS"],[2202,26,2002,28],[2202,27,2002,29,"index"],[2202,32,2002,34],[2202,33,2002,35],[2203,4,2003,4],[2204,4,2004,4,"_computeHash"],[2204,16,2004,16,"_computeHash"],[2204,17,2004,16],[2204,19,2004,19],[2205,6,2005,8],[2205,10,2005,12,"hash"],[2205,14,2005,16],[2205,17,2005,19],[2205,19,2005,21],[2206,6,2006,8],[2206,11,2006,13],[2206,15,2006,17,"i"],[2206,16,2006,18],[2206,19,2006,21,"Ox88"],[2206,23,2006,25],[2206,24,2006,26,"a8"],[2206,26,2006,28],[2206,28,2006,30,"i"],[2206,29,2006,31],[2206,33,2006,35,"Ox88"],[2206,37,2006,39],[2206,38,2006,40,"h1"],[2206,40,2006,42],[2206,42,2006,44,"i"],[2206,43,2006,45],[2206,45,2006,47],[2206,47,2006,49],[2207,8,2007,12],[2208,8,2008,12],[2208,12,2008,16,"i"],[2208,13,2008,17],[2208,16,2008,20],[2208,20,2008,24],[2208,22,2008,26],[2209,10,2009,16,"i"],[2209,11,2009,17],[2209,15,2009,21],[2209,16,2009,22],[2210,10,2010,16],[2211,8,2011,12],[2212,8,2012,12],[2212,12,2012,16],[2212,16,2012,20],[2212,17,2012,21,"_board"],[2212,23,2012,27],[2212,24,2012,28,"i"],[2212,25,2012,29],[2212,26,2012,30],[2212,28,2012,32],[2213,10,2013,16,"hash"],[2213,14,2013,20],[2213,18,2013,24],[2213,22,2013,28],[2213,23,2013,29,"_pieceKey"],[2213,32,2013,38],[2213,33,2013,39,"i"],[2213,34,2013,40],[2213,35,2013,41],[2214,8,2014,12],[2215,6,2015,8],[2216,6,2016,8,"hash"],[2216,10,2016,12],[2216,14,2016,16],[2216,18,2016,20],[2216,19,2016,21,"_epKey"],[2216,25,2016,27],[2216,26,2016,28],[2216,27,2016,29],[2217,6,2017,8,"hash"],[2217,10,2017,12],[2217,14,2017,16],[2217,18,2017,20],[2217,19,2017,21,"_castlingKey"],[2217,31,2017,33],[2217,32,2017,34],[2217,33,2017,35],[2218,6,2018,8],[2218,10,2018,12],[2218,14,2018,16],[2218,15,2018,17,"_turn"],[2218,20,2018,22],[2218,25,2018,27],[2218,28,2018,30],[2218,30,2018,32],[2219,8,2019,12,"hash"],[2219,12,2019,16],[2219,16,2019,20,"SIDE_KEY"],[2219,24,2019,28],[2220,6,2020,8],[2221,6,2021,8],[2221,13,2021,15,"hash"],[2221,17,2021,19],[2222,4,2022,4],[2223,4,2023,4],[2224,0,2024,0],[2225,0,2025,0],[2226,0,2026,0],[2227,0,2027,0],[2228,0,2028,0],[2229,4,2029,4,"_updateSetup"],[2229,16,2029,16,"_updateSetup"],[2229,17,2029,17,"fen"],[2229,20,2029,20],[2229,22,2029,22],[2230,6,2030,8],[2230,10,2030,12],[2230,14,2030,16],[2230,15,2030,17,"_history"],[2230,23,2030,25],[2230,24,2030,26,"length"],[2230,30,2030,32],[2230,33,2030,35],[2230,34,2030,36],[2230,36,2031,12],[2231,6,2032,8],[2231,10,2032,12,"fen"],[2231,13,2032,15],[2231,18,2032,20,"DEFAULT_POSITION"],[2231,34,2032,36],[2231,36,2032,38],[2232,8,2033,12],[2232,12,2033,16],[2232,13,2033,17,"_header"],[2232,20,2033,24],[2232,21,2033,25],[2232,28,2033,32],[2232,29,2033,33],[2232,32,2033,36],[2232,35,2033,39],[2233,8,2034,12],[2233,12,2034,16],[2233,13,2034,17,"_header"],[2233,20,2034,24],[2233,21,2034,25],[2233,26,2034,30],[2233,27,2034,31],[2233,30,2034,34,"fen"],[2233,33,2034,37],[2234,6,2035,8],[2234,7,2035,9],[2234,13,2036,13],[2235,8,2037,12],[2235,12,2037,16],[2235,13,2037,17,"_header"],[2235,20,2037,24],[2235,21,2037,25],[2235,28,2037,32],[2235,29,2037,33],[2235,32,2037,36],[2235,36,2037,40],[2236,8,2038,12],[2236,12,2038,16],[2236,13,2038,17,"_header"],[2236,20,2038,24],[2236,21,2038,25],[2236,26,2038,30],[2236,27,2038,31],[2236,30,2038,34],[2236,34,2038,38],[2237,6,2039,8],[2238,4,2040,4],[2239,4,2041,4,"reset"],[2239,9,2041,9,"reset"],[2239,10,2041,9],[2239,12,2041,12],[2240,6,2042,8],[2240,10,2042,12],[2240,11,2042,13,"load"],[2240,15,2042,17],[2240,16,2042,18,"DEFAULT_POSITION"],[2240,32,2042,34],[2240,33,2042,35],[2241,4,2043,4],[2242,4,2044,4,"get"],[2242,7,2044,7,"get"],[2242,8,2044,8,"square"],[2242,14,2044,14],[2242,16,2044,16],[2243,6,2045,8],[2243,13,2045,15],[2243,17,2045,19],[2243,18,2045,20,"_board"],[2243,24,2045,26],[2243,25,2045,27,"Ox88"],[2243,29,2045,31],[2243,30,2045,32,"square"],[2243,36,2045,38],[2243,37,2045,39],[2243,38,2045,40],[2244,4,2046,4],[2245,4,2047,4,"findPiece"],[2245,13,2047,13,"findPiece"],[2245,14,2047,14,"piece"],[2245,19,2047,19],[2245,21,2047,21],[2246,6,2048,8],[2246,12,2048,14,"squares"],[2246,19,2048,21],[2246,22,2048,24],[2246,24,2048,26],[2247,6,2049,8],[2247,11,2049,13],[2247,15,2049,17,"i"],[2247,16,2049,18],[2247,19,2049,21,"Ox88"],[2247,23,2049,25],[2247,24,2049,26,"a8"],[2247,26,2049,28],[2247,28,2049,30,"i"],[2247,29,2049,31],[2247,33,2049,35,"Ox88"],[2247,37,2049,39],[2247,38,2049,40,"h1"],[2247,40,2049,42],[2247,42,2049,44,"i"],[2247,43,2049,45],[2247,45,2049,47],[2247,47,2049,49],[2248,8,2050,12],[2249,8,2051,12],[2249,12,2051,16,"i"],[2249,13,2051,17],[2249,16,2051,20],[2249,20,2051,24],[2249,22,2051,26],[2250,10,2052,16,"i"],[2250,11,2052,17],[2250,15,2052,21],[2250,16,2052,22],[2251,10,2053,16],[2252,8,2054,12],[2253,8,2055,12],[2254,8,2056,12],[2254,12,2056,16],[2254,13,2056,17],[2254,17,2056,21],[2254,18,2056,22,"_board"],[2254,24,2056,28],[2254,25,2056,29,"i"],[2254,26,2056,30],[2254,27,2056,31],[2254,31,2056,35],[2254,35,2056,39],[2254,36,2056,40,"_board"],[2254,42,2056,46],[2254,43,2056,47,"i"],[2254,44,2056,48],[2254,45,2056,49],[2254,47,2056,51,"color"],[2254,52,2056,56],[2254,57,2056,61,"piece"],[2254,62,2056,66],[2254,63,2056,67,"color"],[2254,68,2056,72],[2254,70,2056,74],[2255,10,2057,16],[2256,8,2058,12],[2257,8,2059,12],[2258,8,2060,12],[2258,12,2060,16],[2258,16,2060,20],[2258,17,2060,21,"_board"],[2258,23,2060,27],[2258,24,2060,28,"i"],[2258,25,2060,29],[2258,26,2060,30],[2258,27,2060,31,"color"],[2258,32,2060,36],[2258,37,2060,41,"piece"],[2258,42,2060,46],[2258,43,2060,47,"color"],[2258,48,2060,52],[2258,52,2061,16],[2258,56,2061,20],[2258,57,2061,21,"_board"],[2258,63,2061,27],[2258,64,2061,28,"i"],[2258,65,2061,29],[2258,66,2061,30],[2258,67,2061,31,"type"],[2258,71,2061,35],[2258,76,2061,40,"piece"],[2258,81,2061,45],[2258,82,2061,46,"type"],[2258,86,2061,50],[2258,88,2061,52],[2259,10,2062,16,"squares"],[2259,17,2062,23],[2259,18,2062,24,"push"],[2259,22,2062,28],[2259,23,2062,29,"algebraic"],[2259,32,2062,38],[2259,33,2062,39,"i"],[2259,34,2062,40],[2259,35,2062,41],[2259,36,2062,42],[2260,8,2063,12],[2261,6,2064,8],[2262,6,2065,8],[2262,13,2065,15,"squares"],[2262,20,2065,22],[2263,4,2066,4],[2264,4,2067,4,"put"],[2264,7,2067,7,"put"],[2264,8,2067,8],[2265,6,2067,10,"type"],[2265,10,2067,14],[2266,6,2067,16,"color"],[2267,4,2067,22],[2267,5,2067,23],[2267,7,2067,25,"square"],[2267,13,2067,31],[2267,15,2067,33],[2268,6,2068,8],[2268,10,2068,12],[2268,14,2068,16],[2268,15,2068,17,"_put"],[2268,19,2068,21],[2268,20,2068,22],[2269,8,2068,24,"type"],[2269,12,2068,28],[2270,8,2068,30,"color"],[2271,6,2068,36],[2271,7,2068,37],[2271,9,2068,39,"square"],[2271,15,2068,45],[2271,16,2068,46],[2271,18,2068,48],[2272,8,2069,12],[2272,12,2069,16],[2272,13,2069,17,"_updateCastlingRights"],[2272,34,2069,38],[2272,35,2069,39],[2272,36,2069,40],[2273,8,2070,12],[2273,12,2070,16],[2273,13,2070,17,"_updateEnPassantSquare"],[2273,35,2070,39],[2273,36,2070,40],[2273,37,2070,41],[2274,8,2071,12],[2274,12,2071,16],[2274,13,2071,17,"_updateSetup"],[2274,25,2071,29],[2274,26,2071,30],[2274,30,2071,34],[2274,31,2071,35,"fen"],[2274,34,2071,38],[2274,35,2071,39],[2274,36,2071,40],[2274,37,2071,41],[2275,8,2072,12],[2275,15,2072,19],[2275,19,2072,23],[2276,6,2073,8],[2277,6,2074,8],[2277,13,2074,15],[2277,18,2074,20],[2278,4,2075,4],[2279,4,2076,4,"_set"],[2279,8,2076,8,"_set"],[2279,9,2076,9,"sq"],[2279,11,2076,11],[2279,13,2076,13,"piece"],[2279,18,2076,18],[2279,20,2076,20],[2280,6,2077,8],[2280,10,2077,12],[2280,11,2077,13,"_hash"],[2280,16,2077,18],[2280,20,2077,22],[2280,24,2077,26],[2280,25,2077,27,"_pieceKey"],[2280,34,2077,36],[2280,35,2077,37,"sq"],[2280,37,2077,39],[2280,38,2077,40],[2281,6,2078,8],[2281,10,2078,12],[2281,11,2078,13,"_board"],[2281,17,2078,19],[2281,18,2078,20,"sq"],[2281,20,2078,22],[2281,21,2078,23],[2281,24,2078,26,"piece"],[2281,29,2078,31],[2282,6,2079,8],[2282,10,2079,12],[2282,11,2079,13,"_hash"],[2282,16,2079,18],[2282,20,2079,22],[2282,24,2079,26],[2282,25,2079,27,"_pieceKey"],[2282,34,2079,36],[2282,35,2079,37,"sq"],[2282,37,2079,39],[2282,38,2079,40],[2283,4,2080,4],[2284,4,2081,4,"_put"],[2284,8,2081,8,"_put"],[2284,9,2081,9],[2285,6,2081,11,"type"],[2285,10,2081,15],[2286,6,2081,17,"color"],[2287,4,2081,23],[2287,5,2081,24],[2287,7,2081,26,"square"],[2287,13,2081,32],[2287,15,2081,34],[2288,6,2082,8],[2289,6,2083,8],[2289,10,2083,12,"SYMBOLS"],[2289,17,2083,19],[2289,18,2083,20,"indexOf"],[2289,25,2083,27],[2289,26,2083,28,"type"],[2289,30,2083,32],[2289,31,2083,33,"toLowerCase"],[2289,42,2083,44],[2289,43,2083,45],[2289,44,2083,46],[2289,45,2083,47],[2289,50,2083,52],[2289,51,2083,53],[2289,52,2083,54],[2289,54,2083,56],[2290,8,2084,12],[2290,15,2084,19],[2290,20,2084,24],[2291,6,2085,8],[2292,6,2086,8],[2293,6,2087,8],[2293,10,2087,12],[2293,12,2087,14,"square"],[2293,18,2087,20],[2293,22,2087,24,"Ox88"],[2293,26,2087,28],[2293,27,2087,29],[2293,29,2087,31],[2294,8,2088,12],[2294,15,2088,19],[2294,20,2088,24],[2295,6,2089,8],[2296,6,2090,8],[2296,12,2090,14,"sq"],[2296,14,2090,16],[2296,17,2090,19,"Ox88"],[2296,21,2090,23],[2296,22,2090,24,"square"],[2296,28,2090,30],[2296,29,2090,31],[2297,6,2091,8],[2298,6,2092,8],[2298,10,2092,12,"type"],[2298,14,2092,16],[2298,18,2092,20,"KING"],[2298,22,2092,24],[2298,26,2093,12],[2298,28,2093,14],[2298,32,2093,18],[2298,33,2093,19,"_kings"],[2298,39,2093,25],[2298,40,2093,26,"color"],[2298,45,2093,31],[2298,46,2093,32],[2298,50,2093,36,"EMPTY"],[2298,55,2093,41],[2298,59,2093,45],[2298,63,2093,49],[2298,64,2093,50,"_kings"],[2298,70,2093,56],[2298,71,2093,57,"color"],[2298,76,2093,62],[2298,77,2093,63],[2298,81,2093,67,"sq"],[2298,83,2093,69],[2298,84,2093,70],[2298,86,2093,72],[2299,8,2094,12],[2299,15,2094,19],[2299,20,2094,24],[2300,6,2095,8],[2301,6,2096,8],[2301,12,2096,14,"currentPieceOnSquare"],[2301,32,2096,34],[2301,35,2096,37],[2301,39,2096,41],[2301,40,2096,42,"_board"],[2301,46,2096,48],[2301,47,2096,49,"sq"],[2301,49,2096,51],[2301,50,2096,52],[2302,6,2097,8],[2303,6,2098,8],[2303,10,2098,12,"currentPieceOnSquare"],[2303,30,2098,32],[2303,34,2098,36,"currentPieceOnSquare"],[2303,54,2098,56],[2303,55,2098,57,"type"],[2303,59,2098,61],[2303,64,2098,66,"KING"],[2303,68,2098,70],[2303,70,2098,72],[2304,8,2099,12],[2304,12,2099,16],[2304,13,2099,17,"_kings"],[2304,19,2099,23],[2304,20,2099,24,"currentPieceOnSquare"],[2304,40,2099,44],[2304,41,2099,45,"color"],[2304,46,2099,50],[2304,47,2099,51],[2304,50,2099,54,"EMPTY"],[2304,55,2099,59],[2305,6,2100,8],[2306,6,2101,8],[2306,10,2101,12],[2306,11,2101,13,"_set"],[2306,15,2101,17],[2306,16,2101,18,"sq"],[2306,18,2101,20],[2306,20,2101,22],[2307,8,2101,24,"type"],[2307,12,2101,28],[2307,14,2101,30,"type"],[2307,18,2101,34],[2308,8,2101,36,"color"],[2308,13,2101,41],[2308,15,2101,43,"color"],[2309,6,2101,49],[2309,7,2101,50],[2309,8,2101,51],[2310,6,2102,8],[2310,10,2102,12,"type"],[2310,14,2102,16],[2310,19,2102,21,"KING"],[2310,23,2102,25],[2310,25,2102,27],[2311,8,2103,12],[2311,12,2103,16],[2311,13,2103,17,"_kings"],[2311,19,2103,23],[2311,20,2103,24,"color"],[2311,25,2103,29],[2311,26,2103,30],[2311,29,2103,33,"sq"],[2311,31,2103,35],[2312,6,2104,8],[2313,6,2105,8],[2313,13,2105,15],[2313,17,2105,19],[2314,4,2106,4],[2315,4,2107,4,"_clear"],[2315,10,2107,10,"_clear"],[2315,11,2107,11,"sq"],[2315,13,2107,13],[2315,15,2107,15],[2316,6,2108,8],[2316,10,2108,12],[2316,11,2108,13,"_hash"],[2316,16,2108,18],[2316,20,2108,22],[2316,24,2108,26],[2316,25,2108,27,"_pieceKey"],[2316,34,2108,36],[2316,35,2108,37,"sq"],[2316,37,2108,39],[2316,38,2108,40],[2317,6,2109,8],[2317,13,2109,15],[2317,17,2109,19],[2317,18,2109,20,"_board"],[2317,24,2109,26],[2317,25,2109,27,"sq"],[2317,27,2109,29],[2317,28,2109,30],[2318,4,2110,4],[2319,4,2111,4,"remove"],[2319,10,2111,10,"remove"],[2319,11,2111,11,"square"],[2319,17,2111,17],[2319,19,2111,19],[2320,6,2112,8],[2320,12,2112,14,"piece"],[2320,17,2112,19],[2320,20,2112,22],[2320,24,2112,26],[2320,25,2112,27,"get"],[2320,28,2112,30],[2320,29,2112,31,"square"],[2320,35,2112,37],[2320,36,2112,38],[2321,6,2113,8],[2321,10,2113,12],[2321,11,2113,13,"_clear"],[2321,17,2113,19],[2321,18,2113,20,"Ox88"],[2321,22,2113,24],[2321,23,2113,25,"square"],[2321,29,2113,31],[2321,30,2113,32],[2321,31,2113,33],[2322,6,2114,8],[2322,10,2114,12,"piece"],[2322,15,2114,17],[2322,19,2114,21,"piece"],[2322,24,2114,26],[2322,25,2114,27,"type"],[2322,29,2114,31],[2322,34,2114,36,"KING"],[2322,38,2114,40],[2322,40,2114,42],[2323,8,2115,12],[2323,12,2115,16],[2323,13,2115,17,"_kings"],[2323,19,2115,23],[2323,20,2115,24,"piece"],[2323,25,2115,29],[2323,26,2115,30,"color"],[2323,31,2115,35],[2323,32,2115,36],[2323,35,2115,39,"EMPTY"],[2323,40,2115,44],[2324,6,2116,8],[2325,6,2117,8],[2325,10,2117,12],[2325,11,2117,13,"_updateCastlingRights"],[2325,32,2117,34],[2325,33,2117,35],[2325,34,2117,36],[2326,6,2118,8],[2326,10,2118,12],[2326,11,2118,13,"_updateEnPassantSquare"],[2326,33,2118,35],[2326,34,2118,36],[2326,35,2118,37],[2327,6,2119,8],[2327,10,2119,12],[2327,11,2119,13,"_updateSetup"],[2327,23,2119,25],[2327,24,2119,26],[2327,28,2119,30],[2327,29,2119,31,"fen"],[2327,32,2119,34],[2327,33,2119,35],[2327,34,2119,36],[2327,35,2119,37],[2328,6,2120,8],[2328,13,2120,15,"piece"],[2328,18,2120,20],[2329,4,2121,4],[2330,4,2122,4,"_updateCastlingRights"],[2330,25,2122,25,"_updateCastlingRights"],[2330,26,2122,25],[2330,28,2122,28],[2331,6,2123,8],[2331,10,2123,12],[2331,11,2123,13,"_hash"],[2331,16,2123,18],[2331,20,2123,22],[2331,24,2123,26],[2331,25,2123,27,"_castlingKey"],[2331,37,2123,39],[2331,38,2123,40],[2331,39,2123,41],[2332,6,2124,8],[2332,12,2124,14,"whiteKingInPlace"],[2332,28,2124,30],[2332,31,2124,33],[2332,35,2124,37],[2332,36,2124,38,"_board"],[2332,42,2124,44],[2332,43,2124,45,"Ox88"],[2332,47,2124,49],[2332,48,2124,50,"e1"],[2332,50,2124,52],[2332,51,2124,53],[2332,53,2124,55,"type"],[2332,57,2124,59],[2332,62,2124,64,"KING"],[2332,66,2124,68],[2332,70,2125,12],[2332,74,2125,16],[2332,75,2125,17,"_board"],[2332,81,2125,23],[2332,82,2125,24,"Ox88"],[2332,86,2125,28],[2332,87,2125,29,"e1"],[2332,89,2125,31],[2332,90,2125,32],[2332,92,2125,34,"color"],[2332,97,2125,39],[2332,102,2125,44,"WHITE"],[2332,107,2125,49],[2333,6,2126,8],[2333,12,2126,14,"blackKingInPlace"],[2333,28,2126,30],[2333,31,2126,33],[2333,35,2126,37],[2333,36,2126,38,"_board"],[2333,42,2126,44],[2333,43,2126,45,"Ox88"],[2333,47,2126,49],[2333,48,2126,50,"e8"],[2333,50,2126,52],[2333,51,2126,53],[2333,53,2126,55,"type"],[2333,57,2126,59],[2333,62,2126,64,"KING"],[2333,66,2126,68],[2333,70,2127,12],[2333,74,2127,16],[2333,75,2127,17,"_board"],[2333,81,2127,23],[2333,82,2127,24,"Ox88"],[2333,86,2127,28],[2333,87,2127,29,"e8"],[2333,89,2127,31],[2333,90,2127,32],[2333,92,2127,34,"color"],[2333,97,2127,39],[2333,102,2127,44,"BLACK"],[2333,107,2127,49],[2334,6,2128,8],[2334,10,2128,12],[2334,11,2128,13,"whiteKingInPlace"],[2334,27,2128,29],[2334,31,2129,12],[2334,35,2129,16],[2334,36,2129,17,"_board"],[2334,42,2129,23],[2334,43,2129,24,"Ox88"],[2334,47,2129,28],[2334,48,2129,29,"a1"],[2334,50,2129,31],[2334,51,2129,32],[2334,53,2129,34,"type"],[2334,57,2129,38],[2334,62,2129,43,"ROOK"],[2334,66,2129,47],[2334,70,2130,12],[2334,74,2130,16],[2334,75,2130,17,"_board"],[2334,81,2130,23],[2334,82,2130,24,"Ox88"],[2334,86,2130,28],[2334,87,2130,29,"a1"],[2334,89,2130,31],[2334,90,2130,32],[2334,92,2130,34,"color"],[2334,97,2130,39],[2334,102,2130,44,"WHITE"],[2334,107,2130,49],[2334,109,2130,51],[2335,8,2131,12],[2335,12,2131,16],[2335,13,2131,17,"_castling"],[2335,22,2131,26],[2335,23,2131,27,"w"],[2335,24,2131,28],[2335,28,2131,32],[2335,29,2131,33],[2335,31,2131,35],[2336,6,2132,8],[2337,6,2133,8],[2337,10,2133,12],[2337,11,2133,13,"whiteKingInPlace"],[2337,27,2133,29],[2337,31,2134,12],[2337,35,2134,16],[2337,36,2134,17,"_board"],[2337,42,2134,23],[2337,43,2134,24,"Ox88"],[2337,47,2134,28],[2337,48,2134,29,"h1"],[2337,50,2134,31],[2337,51,2134,32],[2337,53,2134,34,"type"],[2337,57,2134,38],[2337,62,2134,43,"ROOK"],[2337,66,2134,47],[2337,70,2135,12],[2337,74,2135,16],[2337,75,2135,17,"_board"],[2337,81,2135,23],[2337,82,2135,24,"Ox88"],[2337,86,2135,28],[2337,87,2135,29,"h1"],[2337,89,2135,31],[2337,90,2135,32],[2337,92,2135,34,"color"],[2337,97,2135,39],[2337,102,2135,44,"WHITE"],[2337,107,2135,49],[2337,109,2135,51],[2338,8,2136,12],[2338,12,2136,16],[2338,13,2136,17,"_castling"],[2338,22,2136,26],[2338,23,2136,27,"w"],[2338,24,2136,28],[2338,28,2136,32],[2338,29,2136,33],[2338,31,2136,35],[2339,6,2137,8],[2340,6,2138,8],[2340,10,2138,12],[2340,11,2138,13,"blackKingInPlace"],[2340,27,2138,29],[2340,31,2139,12],[2340,35,2139,16],[2340,36,2139,17,"_board"],[2340,42,2139,23],[2340,43,2139,24,"Ox88"],[2340,47,2139,28],[2340,48,2139,29,"a8"],[2340,50,2139,31],[2340,51,2139,32],[2340,53,2139,34,"type"],[2340,57,2139,38],[2340,62,2139,43,"ROOK"],[2340,66,2139,47],[2340,70,2140,12],[2340,74,2140,16],[2340,75,2140,17,"_board"],[2340,81,2140,23],[2340,82,2140,24,"Ox88"],[2340,86,2140,28],[2340,87,2140,29,"a8"],[2340,89,2140,31],[2340,90,2140,32],[2340,92,2140,34,"color"],[2340,97,2140,39],[2340,102,2140,44,"BLACK"],[2340,107,2140,49],[2340,109,2140,51],[2341,8,2141,12],[2341,12,2141,16],[2341,13,2141,17,"_castling"],[2341,22,2141,26],[2341,23,2141,27,"b"],[2341,24,2141,28],[2341,28,2141,32],[2341,29,2141,33],[2341,31,2141,35],[2342,6,2142,8],[2343,6,2143,8],[2343,10,2143,12],[2343,11,2143,13,"blackKingInPlace"],[2343,27,2143,29],[2343,31,2144,12],[2343,35,2144,16],[2343,36,2144,17,"_board"],[2343,42,2144,23],[2343,43,2144,24,"Ox88"],[2343,47,2144,28],[2343,48,2144,29,"h8"],[2343,50,2144,31],[2343,51,2144,32],[2343,53,2144,34,"type"],[2343,57,2144,38],[2343,62,2144,43,"ROOK"],[2343,66,2144,47],[2343,70,2145,12],[2343,74,2145,16],[2343,75,2145,17,"_board"],[2343,81,2145,23],[2343,82,2145,24,"Ox88"],[2343,86,2145,28],[2343,87,2145,29,"h8"],[2343,89,2145,31],[2343,90,2145,32],[2343,92,2145,34,"color"],[2343,97,2145,39],[2343,102,2145,44,"BLACK"],[2343,107,2145,49],[2343,109,2145,51],[2344,8,2146,12],[2344,12,2146,16],[2344,13,2146,17,"_castling"],[2344,22,2146,26],[2344,23,2146,27,"b"],[2344,24,2146,28],[2344,28,2146,32],[2344,29,2146,33],[2344,31,2146,35],[2345,6,2147,8],[2346,6,2148,8],[2346,10,2148,12],[2346,11,2148,13,"_hash"],[2346,16,2148,18],[2346,20,2148,22],[2346,24,2148,26],[2346,25,2148,27,"_castlingKey"],[2346,37,2148,39],[2346,38,2148,40],[2346,39,2148,41],[2347,4,2149,4],[2348,4,2150,4,"_updateEnPassantSquare"],[2348,26,2150,26,"_updateEnPassantSquare"],[2348,27,2150,26],[2348,29,2150,29],[2349,6,2151,8],[2349,10,2151,12],[2349,14,2151,16],[2349,15,2151,17,"_epSquare"],[2349,24,2151,26],[2349,29,2151,31,"EMPTY"],[2349,34,2151,36],[2349,36,2151,38],[2350,8,2152,12],[2351,6,2153,8],[2352,6,2154,8],[2352,12,2154,14,"startSquare"],[2352,23,2154,25],[2352,26,2154,28],[2352,30,2154,32],[2352,31,2154,33,"_epSquare"],[2352,40,2154,42],[2352,44,2154,46],[2352,48,2154,50],[2352,49,2154,51,"_turn"],[2352,54,2154,56],[2352,59,2154,61,"WHITE"],[2352,64,2154,66],[2352,67,2154,69],[2352,68,2154,70],[2352,70,2154,72],[2352,73,2154,75],[2352,75,2154,77],[2352,76,2154,78],[2353,6,2155,8],[2353,12,2155,14,"currentSquare"],[2353,25,2155,27],[2353,28,2155,30],[2353,32,2155,34],[2353,33,2155,35,"_epSquare"],[2353,42,2155,44],[2353,46,2155,48],[2353,50,2155,52],[2353,51,2155,53,"_turn"],[2353,56,2155,58],[2353,61,2155,63,"WHITE"],[2353,66,2155,68],[2353,69,2155,71],[2353,71,2155,73],[2353,74,2155,76],[2353,75,2155,77],[2353,77,2155,79],[2353,78,2155,80],[2354,6,2156,8],[2354,12,2156,14,"attackers"],[2354,21,2156,23],[2354,24,2156,26],[2354,25,2156,27,"currentSquare"],[2354,38,2156,40],[2354,41,2156,43],[2354,42,2156,44],[2354,44,2156,46,"currentSquare"],[2354,57,2156,59],[2354,60,2156,62],[2354,61,2156,63],[2354,62,2156,64],[2355,6,2157,8],[2355,10,2157,12],[2355,14,2157,16],[2355,15,2157,17,"_board"],[2355,21,2157,23],[2355,22,2157,24,"startSquare"],[2355,33,2157,35],[2355,34,2157,36],[2355,39,2157,41],[2355,43,2157,45],[2355,47,2158,12],[2355,51,2158,16],[2355,52,2158,17,"_board"],[2355,58,2158,23],[2355,59,2158,24],[2355,63,2158,28],[2355,64,2158,29,"_epSquare"],[2355,73,2158,38],[2355,74,2158,39],[2355,79,2158,44],[2355,83,2158,48],[2355,87,2159,12],[2355,91,2159,16],[2355,92,2159,17,"_board"],[2355,98,2159,23],[2355,99,2159,24,"currentSquare"],[2355,112,2159,37],[2355,113,2159,38],[2355,115,2159,40,"color"],[2355,120,2159,45],[2355,125,2159,50,"swapColor"],[2355,134,2159,59],[2355,135,2159,60],[2355,139,2159,64],[2355,140,2159,65,"_turn"],[2355,145,2159,70],[2355,146,2159,71],[2355,150,2160,12],[2355,154,2160,16],[2355,155,2160,17,"_board"],[2355,161,2160,23],[2355,162,2160,24,"currentSquare"],[2355,175,2160,37],[2355,176,2160,38],[2355,178,2160,40,"type"],[2355,182,2160,44],[2355,187,2160,49,"PAWN"],[2355,191,2160,53],[2355,193,2160,55],[2356,8,2161,12],[2356,12,2161,16],[2356,13,2161,17,"_hash"],[2356,18,2161,22],[2356,22,2161,26],[2356,26,2161,30],[2356,27,2161,31,"_epKey"],[2356,33,2161,37],[2356,34,2161,38],[2356,35,2161,39],[2357,8,2162,12],[2357,12,2162,16],[2357,13,2162,17,"_epSquare"],[2357,22,2162,26],[2357,25,2162,29,"EMPTY"],[2357,30,2162,34],[2358,8,2163,12],[2359,6,2164,8],[2360,6,2165,8],[2360,12,2165,14,"canCapture"],[2360,22,2165,24],[2360,25,2165,28,"square"],[2360,31,2165,34],[2360,35,2165,39],[2360,37,2165,41,"square"],[2360,43,2165,47],[2360,46,2165,50],[2360,50,2165,54],[2360,51,2165,55],[2360,55,2166,12],[2360,59,2166,16],[2360,60,2166,17,"_board"],[2360,66,2166,23],[2360,67,2166,24,"square"],[2360,73,2166,30],[2360,74,2166,31],[2360,76,2166,33,"color"],[2360,81,2166,38],[2360,86,2166,43],[2360,90,2166,47],[2360,91,2166,48,"_turn"],[2360,96,2166,53],[2360,100,2167,12],[2360,104,2167,16],[2360,105,2167,17,"_board"],[2360,111,2167,23],[2360,112,2167,24,"square"],[2360,118,2167,30],[2360,119,2167,31],[2360,121,2167,33,"type"],[2360,125,2167,37],[2360,130,2167,42,"PAWN"],[2360,134,2167,46],[2361,6,2168,8],[2361,10,2168,12],[2361,11,2168,13,"attackers"],[2361,20,2168,22],[2361,21,2168,23,"some"],[2361,25,2168,27],[2361,26,2168,28,"canCapture"],[2361,36,2168,38],[2361,37,2168,39],[2361,39,2168,41],[2362,8,2169,12],[2362,12,2169,16],[2362,13,2169,17,"_hash"],[2362,18,2169,22],[2362,22,2169,26],[2362,26,2169,30],[2362,27,2169,31,"_epKey"],[2362,33,2169,37],[2362,34,2169,38],[2362,35,2169,39],[2363,8,2170,12],[2363,12,2170,16],[2363,13,2170,17,"_epSquare"],[2363,22,2170,26],[2363,25,2170,29,"EMPTY"],[2363,30,2170,34],[2364,6,2171,8],[2365,4,2172,4],[2366,4,2173,4,"_attacked"],[2366,13,2173,13,"_attacked"],[2366,14,2173,14,"color"],[2366,19,2173,19],[2366,21,2173,21,"square"],[2366,27,2173,27],[2366,29,2173,29,"verbose"],[2366,36,2173,36],[2366,38,2173,38],[2367,6,2174,8],[2367,12,2174,14,"attackers"],[2367,21,2174,23],[2367,24,2174,26],[2367,26,2174,28],[2368,6,2175,8],[2368,11,2175,13],[2368,15,2175,17,"i"],[2368,16,2175,18],[2368,19,2175,21,"Ox88"],[2368,23,2175,25],[2368,24,2175,26,"a8"],[2368,26,2175,28],[2368,28,2175,30,"i"],[2368,29,2175,31],[2368,33,2175,35,"Ox88"],[2368,37,2175,39],[2368,38,2175,40,"h1"],[2368,40,2175,42],[2368,42,2175,44,"i"],[2368,43,2175,45],[2368,45,2175,47],[2368,47,2175,49],[2369,8,2176,12],[2370,8,2177,12],[2370,12,2177,16,"i"],[2370,13,2177,17],[2370,16,2177,20],[2370,20,2177,24],[2370,22,2177,26],[2371,10,2178,16,"i"],[2371,11,2178,17],[2371,15,2178,21],[2371,16,2178,22],[2372,10,2179,16],[2373,8,2180,12],[2374,8,2181,12],[2375,8,2182,12],[2375,12,2182,16],[2375,16,2182,20],[2375,17,2182,21,"_board"],[2375,23,2182,27],[2375,24,2182,28,"i"],[2375,25,2182,29],[2375,26,2182,30],[2375,31,2182,35,"undefined"],[2375,40,2182,44],[2375,44,2182,48],[2375,48,2182,52],[2375,49,2182,53,"_board"],[2375,55,2182,59],[2375,56,2182,60,"i"],[2375,57,2182,61],[2375,58,2182,62],[2375,59,2182,63,"color"],[2375,64,2182,68],[2375,69,2182,73,"color"],[2375,74,2182,78],[2375,76,2182,80],[2376,10,2183,16],[2377,8,2184,12],[2378,8,2185,12],[2378,14,2185,18,"piece"],[2378,19,2185,23],[2378,22,2185,26],[2378,26,2185,30],[2378,27,2185,31,"_board"],[2378,33,2185,37],[2378,34,2185,38,"i"],[2378,35,2185,39],[2378,36,2185,40],[2379,8,2186,12],[2379,14,2186,18,"difference"],[2379,24,2186,28],[2379,27,2186,31,"i"],[2379,28,2186,32],[2379,31,2186,35,"square"],[2379,37,2186,41],[2380,8,2187,12],[2381,8,2188,12],[2381,12,2188,16,"difference"],[2381,22,2188,26],[2381,27,2188,31],[2381,28,2188,32],[2381,30,2188,34],[2382,10,2189,16],[2383,8,2190,12],[2384,8,2191,12],[2384,14,2191,18,"index"],[2384,19,2191,23],[2384,22,2191,26,"difference"],[2384,32,2191,36],[2384,35,2191,39],[2384,38,2191,42],[2385,8,2192,12],[2385,12,2192,16,"ATTACKS"],[2385,19,2192,23],[2385,20,2192,24,"index"],[2385,25,2192,29],[2385,26,2192,30],[2385,29,2192,33,"PIECE_MASKS"],[2385,40,2192,44],[2385,41,2192,45,"piece"],[2385,46,2192,50],[2385,47,2192,51,"type"],[2385,51,2192,55],[2385,52,2192,56],[2385,54,2192,58],[2386,10,2193,16],[2386,14,2193,20,"piece"],[2386,19,2193,25],[2386,20,2193,26,"type"],[2386,24,2193,30],[2386,29,2193,35,"PAWN"],[2386,33,2193,39],[2386,35,2193,41],[2387,12,2194,20],[2387,16,2194,25,"difference"],[2387,26,2194,35],[2387,29,2194,38],[2387,30,2194,39],[2387,34,2194,43,"piece"],[2387,39,2194,48],[2387,40,2194,49,"color"],[2387,45,2194,54],[2387,50,2194,59,"WHITE"],[2387,55,2194,64],[2387,59,2195,25,"difference"],[2387,69,2195,35],[2387,73,2195,39],[2387,74,2195,40],[2387,78,2195,44,"piece"],[2387,83,2195,49],[2387,84,2195,50,"color"],[2387,89,2195,55],[2387,94,2195,60,"BLACK"],[2387,99,2195,66],[2387,101,2195,68],[2388,14,2196,24],[2388,18,2196,28],[2388,19,2196,29,"verbose"],[2388,26,2196,36],[2388,28,2196,38],[2389,16,2197,28],[2389,23,2197,35],[2389,27,2197,39],[2390,14,2198,24],[2390,15,2198,25],[2390,21,2199,29],[2391,16,2200,28,"attackers"],[2391,25,2200,37],[2391,26,2200,38,"push"],[2391,30,2200,42],[2391,31,2200,43,"algebraic"],[2391,40,2200,52],[2391,41,2200,53,"i"],[2391,42,2200,54],[2391,43,2200,55],[2391,44,2200,56],[2392,14,2201,24],[2393,12,2202,20],[2394,12,2203,20],[2395,10,2204,16],[2396,10,2205,16],[2397,10,2206,16],[2397,14,2206,20,"piece"],[2397,19,2206,25],[2397,20,2206,26,"type"],[2397,24,2206,30],[2397,29,2206,35],[2397,32,2206,38],[2397,36,2206,42,"piece"],[2397,41,2206,47],[2397,42,2206,48,"type"],[2397,46,2206,52],[2397,51,2206,57],[2397,54,2206,60],[2397,56,2206,62],[2398,12,2207,20],[2398,16,2207,24],[2398,17,2207,25,"verbose"],[2398,24,2207,32],[2398,26,2207,34],[2399,14,2208,24],[2399,21,2208,31],[2399,25,2208,35],[2400,12,2209,20],[2400,13,2209,21],[2400,19,2210,25],[2401,14,2211,24,"attackers"],[2401,23,2211,33],[2401,24,2211,34,"push"],[2401,28,2211,38],[2401,29,2211,39,"algebraic"],[2401,38,2211,48],[2401,39,2211,49,"i"],[2401,40,2211,50],[2401,41,2211,51],[2401,42,2211,52],[2402,14,2212,24],[2403,12,2213,20],[2404,10,2214,16],[2405,10,2215,16],[2405,16,2215,22,"offset"],[2405,22,2215,28],[2405,25,2215,31,"RAYS"],[2405,29,2215,35],[2405,30,2215,36,"index"],[2405,35,2215,41],[2405,36,2215,42],[2406,10,2216,16],[2406,14,2216,20,"j"],[2406,15,2216,21],[2406,18,2216,24,"i"],[2406,19,2216,25],[2406,22,2216,28,"offset"],[2406,28,2216,34],[2407,10,2217,16],[2407,14,2217,20,"blocked"],[2407,21,2217,27],[2407,24,2217,30],[2407,29,2217,35],[2408,10,2218,16],[2408,17,2218,23,"j"],[2408,18,2218,24],[2408,23,2218,29,"square"],[2408,29,2218,35],[2408,31,2218,37],[2409,12,2219,20],[2409,16,2219,24],[2409,20,2219,28],[2409,21,2219,29,"_board"],[2409,27,2219,35],[2409,28,2219,36,"j"],[2409,29,2219,37],[2409,30,2219,38],[2409,34,2219,42],[2409,38,2219,46],[2409,40,2219,48],[2410,14,2220,24,"blocked"],[2410,21,2220,31],[2410,24,2220,34],[2410,28,2220,38],[2411,14,2221,24],[2412,12,2222,20],[2413,12,2223,20,"j"],[2413,13,2223,21],[2413,17,2223,25,"offset"],[2413,23,2223,31],[2414,10,2224,16],[2415,10,2225,16],[2415,14,2225,20],[2415,15,2225,21,"blocked"],[2415,22,2225,28],[2415,24,2225,30],[2416,12,2226,20],[2416,16,2226,24],[2416,17,2226,25,"verbose"],[2416,24,2226,32],[2416,26,2226,34],[2417,14,2227,24],[2417,21,2227,31],[2417,25,2227,35],[2418,12,2228,20],[2418,13,2228,21],[2418,19,2229,25],[2419,14,2230,24,"attackers"],[2419,23,2230,33],[2419,24,2230,34,"push"],[2419,28,2230,38],[2419,29,2230,39,"algebraic"],[2419,38,2230,48],[2419,39,2230,49,"i"],[2419,40,2230,50],[2419,41,2230,51],[2419,42,2230,52],[2420,14,2231,24],[2421,12,2232,20],[2422,10,2233,16],[2423,8,2234,12],[2424,6,2235,8],[2425,6,2236,8],[2425,10,2236,12,"verbose"],[2425,17,2236,19],[2425,19,2236,21],[2426,8,2237,12],[2426,15,2237,19,"attackers"],[2426,24,2237,28],[2427,6,2238,8],[2427,7,2238,9],[2427,13,2239,13],[2428,8,2240,12],[2428,15,2240,19],[2428,20,2240,24],[2429,6,2241,8],[2430,4,2242,4],[2431,4,2243,4,"attackers"],[2431,13,2243,13,"attackers"],[2431,14,2243,14,"square"],[2431,20,2243,20],[2431,22,2243,22,"attackedBy"],[2431,32,2243,32],[2431,34,2243,34],[2432,6,2244,8],[2432,10,2244,12],[2432,11,2244,13,"attackedBy"],[2432,21,2244,23],[2432,23,2244,25],[2433,8,2245,12],[2433,15,2245,19],[2433,19,2245,23],[2433,20,2245,24,"_attacked"],[2433,29,2245,33],[2433,30,2245,34],[2433,34,2245,38],[2433,35,2245,39,"_turn"],[2433,40,2245,44],[2433,42,2245,46,"Ox88"],[2433,46,2245,50],[2433,47,2245,51,"square"],[2433,53,2245,57],[2433,54,2245,58],[2433,56,2245,60],[2433,60,2245,64],[2433,61,2245,65],[2434,6,2246,8],[2434,7,2246,9],[2434,13,2247,13],[2435,8,2248,12],[2435,15,2248,19],[2435,19,2248,23],[2435,20,2248,24,"_attacked"],[2435,29,2248,33],[2435,30,2248,34,"attackedBy"],[2435,40,2248,44],[2435,42,2248,46,"Ox88"],[2435,46,2248,50],[2435,47,2248,51,"square"],[2435,53,2248,57],[2435,54,2248,58],[2435,56,2248,60],[2435,60,2248,64],[2435,61,2248,65],[2436,6,2249,8],[2437,4,2250,4],[2438,4,2251,4,"_isKingAttacked"],[2438,19,2251,19,"_isKingAttacked"],[2438,20,2251,20,"color"],[2438,25,2251,25],[2438,27,2251,27],[2439,6,2252,8],[2439,12,2252,14,"square"],[2439,18,2252,20],[2439,21,2252,23],[2439,25,2252,27],[2439,26,2252,28,"_kings"],[2439,32,2252,34],[2439,33,2252,35,"color"],[2439,38,2252,40],[2439,39,2252,41],[2440,6,2253,8],[2440,13,2253,15,"square"],[2440,19,2253,21],[2440,24,2253,26],[2440,25,2253,27],[2440,26,2253,28],[2440,29,2253,31],[2440,34,2253,36],[2440,37,2253,39],[2440,41,2253,43],[2440,42,2253,44,"_attacked"],[2440,51,2253,53],[2440,52,2253,54,"swapColor"],[2440,61,2253,63],[2440,62,2253,64,"color"],[2440,67,2253,69],[2440,68,2253,70],[2440,70,2253,72,"square"],[2440,76,2253,78],[2440,77,2253,79],[2441,4,2254,4],[2442,4,2255,4,"hash"],[2442,8,2255,8,"hash"],[2442,9,2255,8],[2442,11,2255,11],[2443,6,2256,8],[2443,13,2256,15],[2443,17,2256,19],[2443,18,2256,20,"_hash"],[2443,23,2256,25],[2443,24,2256,26,"toString"],[2443,32,2256,34],[2443,33,2256,35],[2443,35,2256,37],[2443,36,2256,38],[2444,4,2257,4],[2445,4,2258,4,"isAttacked"],[2445,14,2258,14,"isAttacked"],[2445,15,2258,15,"square"],[2445,21,2258,21],[2445,23,2258,23,"attackedBy"],[2445,33,2258,33],[2445,35,2258,35],[2446,6,2259,8],[2446,13,2259,15],[2446,17,2259,19],[2446,18,2259,20,"_attacked"],[2446,27,2259,29],[2446,28,2259,30,"attackedBy"],[2446,38,2259,40],[2446,40,2259,42,"Ox88"],[2446,44,2259,46],[2446,45,2259,47,"square"],[2446,51,2259,53],[2446,52,2259,54],[2446,53,2259,55],[2447,4,2260,4],[2448,4,2261,4,"isCheck"],[2448,11,2261,11,"isCheck"],[2448,12,2261,11],[2448,14,2261,14],[2449,6,2262,8],[2449,13,2262,15],[2449,17,2262,19],[2449,18,2262,20,"_isKingAttacked"],[2449,33,2262,35],[2449,34,2262,36],[2449,38,2262,40],[2449,39,2262,41,"_turn"],[2449,44,2262,46],[2449,45,2262,47],[2450,4,2263,4],[2451,4,2264,4,"inCheck"],[2451,11,2264,11,"inCheck"],[2451,12,2264,11],[2451,14,2264,14],[2452,6,2265,8],[2452,13,2265,15],[2452,17,2265,19],[2452,18,2265,20,"isCheck"],[2452,25,2265,27],[2452,26,2265,28],[2452,27,2265,29],[2453,4,2266,4],[2454,4,2267,4,"isCheckmate"],[2454,15,2267,15,"isCheckmate"],[2454,16,2267,15],[2454,18,2267,18],[2455,6,2268,8],[2455,13,2268,15],[2455,17,2268,19],[2455,18,2268,20,"isCheck"],[2455,25,2268,27],[2455,26,2268,28],[2455,27,2268,29],[2455,31,2268,33],[2455,35,2268,37],[2455,36,2268,38,"_moves"],[2455,42,2268,44],[2455,43,2268,45],[2455,44,2268,46],[2455,45,2268,47,"length"],[2455,51,2268,53],[2455,56,2268,58],[2455,57,2268,59],[2456,4,2269,4],[2457,4,2270,4,"isStalemate"],[2457,15,2270,15,"isStalemate"],[2457,16,2270,15],[2457,18,2270,18],[2458,6,2271,8],[2458,13,2271,15],[2458,14,2271,16],[2458,18,2271,20],[2458,19,2271,21,"isCheck"],[2458,26,2271,28],[2458,27,2271,29],[2458,28,2271,30],[2458,32,2271,34],[2458,36,2271,38],[2458,37,2271,39,"_moves"],[2458,43,2271,45],[2458,44,2271,46],[2458,45,2271,47],[2458,46,2271,48,"length"],[2458,52,2271,54],[2458,57,2271,59],[2458,58,2271,60],[2459,4,2272,4],[2460,4,2273,4,"isInsufficientMaterial"],[2460,26,2273,26,"isInsufficientMaterial"],[2460,27,2273,26],[2460,29,2273,29],[2461,6,2274,8],[2462,0,2275,0],[2463,0,2276,0],[2464,0,2277,0],[2465,0,2278,0],[2466,0,2279,0],[2467,0,2280,0],[2468,6,2281,8],[2468,12,2281,14,"pieces"],[2468,18,2281,20],[2468,21,2281,23],[2469,8,2282,12,"b"],[2469,9,2282,13],[2469,11,2282,15],[2469,12,2282,16],[2470,8,2283,12,"n"],[2470,9,2283,13],[2470,11,2283,15],[2470,12,2283,16],[2471,8,2284,12,"r"],[2471,9,2284,13],[2471,11,2284,15],[2471,12,2284,16],[2472,8,2285,12,"q"],[2472,9,2285,13],[2472,11,2285,15],[2472,12,2285,16],[2473,8,2286,12,"k"],[2473,9,2286,13],[2473,11,2286,15],[2473,12,2286,16],[2474,8,2287,12,"p"],[2474,9,2287,13],[2474,11,2287,15],[2475,6,2288,8],[2475,7,2288,9],[2476,6,2289,8],[2476,12,2289,14,"bishops"],[2476,19,2289,21],[2476,22,2289,24],[2476,24,2289,26],[2477,6,2290,8],[2477,10,2290,12,"numPieces"],[2477,19,2290,21],[2477,22,2290,24],[2477,23,2290,25],[2478,6,2291,8],[2478,10,2291,12,"squareColor"],[2478,21,2291,23],[2478,24,2291,26],[2478,25,2291,27],[2479,6,2292,8],[2479,11,2292,13],[2479,15,2292,17,"i"],[2479,16,2292,18],[2479,19,2292,21,"Ox88"],[2479,23,2292,25],[2479,24,2292,26,"a8"],[2479,26,2292,28],[2479,28,2292,30,"i"],[2479,29,2292,31],[2479,33,2292,35,"Ox88"],[2479,37,2292,39],[2479,38,2292,40,"h1"],[2479,40,2292,42],[2479,42,2292,44,"i"],[2479,43,2292,45],[2479,45,2292,47],[2479,47,2292,49],[2480,8,2293,12,"squareColor"],[2480,19,2293,23],[2480,22,2293,26],[2480,23,2293,27,"squareColor"],[2480,34,2293,38],[2480,37,2293,41],[2480,38,2293,42],[2480,42,2293,46],[2480,43,2293,47],[2481,8,2294,12],[2481,12,2294,16,"i"],[2481,13,2294,17],[2481,16,2294,20],[2481,20,2294,24],[2481,22,2294,26],[2482,10,2295,16,"i"],[2482,11,2295,17],[2482,15,2295,21],[2482,16,2295,22],[2483,10,2296,16],[2484,8,2297,12],[2485,8,2298,12],[2485,14,2298,18,"piece"],[2485,19,2298,23],[2485,22,2298,26],[2485,26,2298,30],[2485,27,2298,31,"_board"],[2485,33,2298,37],[2485,34,2298,38,"i"],[2485,35,2298,39],[2485,36,2298,40],[2486,8,2299,12],[2486,12,2299,16,"piece"],[2486,17,2299,21],[2486,19,2299,23],[2487,10,2300,16,"pieces"],[2487,16,2300,22],[2487,17,2300,23,"piece"],[2487,22,2300,28],[2487,23,2300,29,"type"],[2487,27,2300,33],[2487,28,2300,34],[2487,31,2300,37,"piece"],[2487,36,2300,42],[2487,37,2300,43,"type"],[2487,41,2300,47],[2487,45,2300,51,"pieces"],[2487,51,2300,57],[2487,54,2300,60,"pieces"],[2487,60,2300,66],[2487,61,2300,67,"piece"],[2487,66,2300,72],[2487,67,2300,73,"type"],[2487,71,2300,77],[2487,72,2300,78],[2487,75,2300,81],[2487,76,2300,82],[2487,79,2300,85],[2487,80,2300,86],[2488,10,2301,16],[2488,14,2301,20,"piece"],[2488,19,2301,25],[2488,20,2301,26,"type"],[2488,24,2301,30],[2488,29,2301,35,"BISHOP"],[2488,35,2301,41],[2488,37,2301,43],[2489,12,2302,20,"bishops"],[2489,19,2302,27],[2489,20,2302,28,"push"],[2489,24,2302,32],[2489,25,2302,33,"squareColor"],[2489,36,2302,44],[2489,37,2302,45],[2490,10,2303,16],[2491,10,2304,16,"numPieces"],[2491,19,2304,25],[2491,21,2304,27],[2492,8,2305,12],[2493,6,2306,8],[2494,6,2307,8],[2495,6,2308,8],[2495,10,2308,12,"numPieces"],[2495,19,2308,21],[2495,24,2308,26],[2495,25,2308,27],[2495,27,2308,29],[2496,8,2309,12],[2496,15,2309,19],[2496,19,2309,23],[2497,6,2310,8],[2497,7,2310,9],[2497,13,2311,13],[2498,6,2312,8],[2499,6,2313,8,"numPieces"],[2499,15,2313,17],[2499,20,2313,22],[2499,21,2313,23],[2499,26,2314,13,"pieces"],[2499,32,2314,19],[2499,33,2314,20,"BISHOP"],[2499,39,2314,26],[2499,40,2314,27],[2499,45,2314,32],[2499,46,2314,33],[2499,50,2314,37,"pieces"],[2499,56,2314,43],[2499,57,2314,44,"KNIGHT"],[2499,63,2314,50],[2499,64,2314,51],[2499,69,2314,56],[2499,70,2314,57],[2499,71,2314,58],[2499,73,2314,60],[2500,8,2315,12],[2500,15,2315,19],[2500,19,2315,23],[2501,6,2316,8],[2501,7,2316,9],[2501,13,2317,13],[2501,17,2317,17,"numPieces"],[2501,26,2317,26],[2501,31,2317,31,"pieces"],[2501,37,2317,37],[2501,38,2317,38,"BISHOP"],[2501,44,2317,44],[2501,45,2317,45],[2501,48,2317,48],[2501,49,2317,49],[2501,51,2317,51],[2502,8,2318,12],[2503,8,2319,12],[2503,12,2319,16,"sum"],[2503,15,2319,19],[2503,18,2319,22],[2503,19,2319,23],[2504,8,2320,12],[2504,14,2320,18,"len"],[2504,17,2320,21],[2504,20,2320,24,"bishops"],[2504,27,2320,31],[2504,28,2320,32,"length"],[2504,34,2320,38],[2505,8,2321,12],[2505,13,2321,17],[2505,17,2321,21,"i"],[2505,18,2321,22],[2505,21,2321,25],[2505,22,2321,26],[2505,24,2321,28,"i"],[2505,25,2321,29],[2505,28,2321,32,"len"],[2505,31,2321,35],[2505,33,2321,37,"i"],[2505,34,2321,38],[2505,36,2321,40],[2505,38,2321,42],[2506,10,2322,16,"sum"],[2506,13,2322,19],[2506,17,2322,23,"bishops"],[2506,24,2322,30],[2506,25,2322,31,"i"],[2506,26,2322,32],[2506,27,2322,33],[2507,8,2323,12],[2508,8,2324,12],[2508,12,2324,16,"sum"],[2508,15,2324,19],[2508,20,2324,24],[2508,21,2324,25],[2508,25,2324,29,"sum"],[2508,28,2324,32],[2508,33,2324,37,"len"],[2508,36,2324,40],[2508,38,2324,42],[2509,10,2325,16],[2509,17,2325,23],[2509,21,2325,27],[2510,8,2326,12],[2511,6,2327,8],[2512,6,2328,8],[2512,13,2328,15],[2512,18,2328,20],[2513,4,2329,4],[2514,4,2330,4,"isThreefoldRepetition"],[2514,25,2330,25,"isThreefoldRepetition"],[2514,26,2330,25],[2514,28,2330,28],[2515,6,2331,8],[2515,13,2331,15],[2515,17,2331,19],[2515,18,2331,20,"_getPositionCount"],[2515,35,2331,37],[2515,36,2331,38],[2515,40,2331,42],[2515,41,2331,43,"_hash"],[2515,46,2331,48],[2515,47,2331,49],[2515,51,2331,53],[2515,52,2331,54],[2516,4,2332,4],[2517,4,2333,4,"isDrawByFiftyMoves"],[2517,22,2333,22,"isDrawByFiftyMoves"],[2517,23,2333,22],[2517,25,2333,25],[2518,6,2334,8],[2518,13,2334,15],[2518,17,2334,19],[2518,18,2334,20,"_halfMoves"],[2518,28,2334,30],[2518,32,2334,34],[2518,35,2334,37],[2518,36,2334,38],[2518,37,2334,39],[2519,4,2335,4],[2520,4,2336,4,"isDraw"],[2520,10,2336,10,"isDraw"],[2520,11,2336,10],[2520,13,2336,13],[2521,6,2337,8],[2521,13,2337,16],[2521,17,2337,20],[2521,18,2337,21,"isDrawByFiftyMoves"],[2521,36,2337,39],[2521,37,2337,40],[2521,38,2337,41],[2521,42,2338,12],[2521,46,2338,16],[2521,47,2338,17,"isStalemate"],[2521,58,2338,28],[2521,59,2338,29],[2521,60,2338,30],[2521,64,2339,12],[2521,68,2339,16],[2521,69,2339,17,"isInsufficientMaterial"],[2521,91,2339,39],[2521,92,2339,40],[2521,93,2339,41],[2521,97,2340,12],[2521,101,2340,16],[2521,102,2340,17,"isThreefoldRepetition"],[2521,123,2340,38],[2521,124,2340,39],[2521,125,2340,40],[2522,4,2341,4],[2523,4,2342,4,"isGameOver"],[2523,14,2342,14,"isGameOver"],[2523,15,2342,14],[2523,17,2342,17],[2524,6,2343,8],[2524,13,2343,15],[2524,17,2343,19],[2524,18,2343,20,"isCheckmate"],[2524,29,2343,31],[2524,30,2343,32],[2524,31,2343,33],[2524,35,2343,37],[2524,39,2343,41],[2524,40,2343,42,"isDraw"],[2524,46,2343,48],[2524,47,2343,49],[2524,48,2343,50],[2525,4,2344,4],[2526,4,2345,4,"moves"],[2526,9,2345,9,"moves"],[2526,10,2345,10],[2527,6,2345,12,"verbose"],[2527,13,2345,19],[2527,16,2345,22],[2527,21,2345,27],[2528,6,2345,29,"square"],[2528,12,2345,35],[2528,15,2345,38,"undefined"],[2528,24,2345,47],[2529,6,2345,49,"piece"],[2529,11,2345,54],[2529,14,2345,57,"undefined"],[2530,4,2345,68],[2530,5,2345,69],[2530,8,2345,72],[2530,9,2345,73],[2530,10,2345,74],[2530,12,2345,76],[2531,6,2346,8],[2531,12,2346,14,"moves"],[2531,17,2346,19],[2531,20,2346,22],[2531,24,2346,26],[2531,25,2346,27,"_moves"],[2531,31,2346,33],[2531,32,2346,34],[2532,8,2346,36,"square"],[2532,14,2346,42],[2533,8,2346,44,"piece"],[2534,6,2346,50],[2534,7,2346,51],[2534,8,2346,52],[2535,6,2347,8],[2535,10,2347,12,"verbose"],[2535,17,2347,19],[2535,19,2347,21],[2536,8,2348,12],[2536,15,2348,19,"moves"],[2536,20,2348,24],[2536,21,2348,25,"map"],[2536,24,2348,28],[2536,25,2348,30,"move"],[2536,29,2348,34],[2536,33,2348,39],[2536,37,2348,43,"Move"],[2536,41,2348,47],[2536,42,2348,48],[2536,46,2348,52],[2536,48,2348,54,"move"],[2536,52,2348,58],[2536,53,2348,59],[2536,54,2348,60],[2537,6,2349,8],[2537,7,2349,9],[2537,13,2350,13],[2538,8,2351,12],[2538,15,2351,19,"moves"],[2538,20,2351,24],[2538,21,2351,25,"map"],[2538,24,2351,28],[2538,25,2351,30,"move"],[2538,29,2351,34],[2538,33,2351,39],[2538,37,2351,43],[2538,38,2351,44,"_moveToSan"],[2538,48,2351,54],[2538,49,2351,55,"move"],[2538,53,2351,59],[2538,55,2351,61,"moves"],[2538,60,2351,66],[2538,61,2351,67],[2538,62,2351,68],[2539,6,2352,8],[2540,4,2353,4],[2541,4,2354,4,"_moves"],[2541,10,2354,10,"_moves"],[2541,11,2354,11],[2542,6,2354,13,"legal"],[2542,11,2354,18],[2542,14,2354,21],[2542,18,2354,25],[2543,6,2354,27,"piece"],[2543,11,2354,32],[2543,14,2354,35,"undefined"],[2543,23,2354,44],[2544,6,2354,46,"square"],[2544,12,2354,52],[2544,15,2354,55,"undefined"],[2545,4,2354,66],[2545,5,2354,67],[2545,8,2354,70],[2545,9,2354,71],[2545,10,2354,72],[2545,12,2354,74],[2546,6,2355,8],[2546,12,2355,14,"forSquare"],[2546,21,2355,23],[2546,24,2355,26,"square"],[2546,30,2355,32],[2546,33,2355,35,"square"],[2546,39,2355,41],[2546,40,2355,42,"toLowerCase"],[2546,51,2355,53],[2546,52,2355,54],[2546,53,2355,55],[2546,56,2355,58,"undefined"],[2546,65,2355,67],[2547,6,2356,8],[2547,12,2356,14,"forPiece"],[2547,20,2356,22],[2547,23,2356,25,"piece"],[2547,28,2356,30],[2547,30,2356,32,"toLowerCase"],[2547,41,2356,43],[2547,42,2356,44],[2547,43,2356,45],[2548,6,2357,8],[2548,12,2357,14,"moves"],[2548,17,2357,19],[2548,20,2357,22],[2548,22,2357,24],[2549,6,2358,8],[2549,12,2358,14,"us"],[2549,14,2358,16],[2549,17,2358,19],[2549,21,2358,23],[2549,22,2358,24,"_turn"],[2549,27,2358,29],[2550,6,2359,8],[2550,12,2359,14,"them"],[2550,16,2359,18],[2550,19,2359,21,"swapColor"],[2550,28,2359,30],[2550,29,2359,31,"us"],[2550,31,2359,33],[2550,32,2359,34],[2551,6,2360,8],[2551,10,2360,12,"firstSquare"],[2551,21,2360,23],[2551,24,2360,26,"Ox88"],[2551,28,2360,30],[2551,29,2360,31,"a8"],[2551,31,2360,33],[2552,6,2361,8],[2552,10,2361,12,"lastSquare"],[2552,20,2361,22],[2552,23,2361,25,"Ox88"],[2552,27,2361,29],[2552,28,2361,30,"h1"],[2552,30,2361,32],[2553,6,2362,8],[2553,10,2362,12,"singleSquare"],[2553,22,2362,24],[2553,25,2362,27],[2553,30,2362,32],[2554,6,2363,8],[2555,6,2364,8],[2555,10,2364,12,"forSquare"],[2555,19,2364,21],[2555,21,2364,23],[2556,8,2365,12],[2557,8,2366,12],[2557,12,2366,16],[2557,14,2366,18,"forSquare"],[2557,23,2366,27],[2557,27,2366,31,"Ox88"],[2557,31,2366,35],[2557,32,2366,36],[2557,34,2366,38],[2558,10,2367,16],[2558,17,2367,23],[2558,19,2367,25],[2559,8,2368,12],[2559,9,2368,13],[2559,15,2369,17],[2560,10,2370,16,"firstSquare"],[2560,21,2370,27],[2560,24,2370,30,"lastSquare"],[2560,34,2370,40],[2560,37,2370,43,"Ox88"],[2560,41,2370,47],[2560,42,2370,48,"forSquare"],[2560,51,2370,57],[2560,52,2370,58],[2561,10,2371,16,"singleSquare"],[2561,22,2371,28],[2561,25,2371,31],[2561,29,2371,35],[2562,8,2372,12],[2563,6,2373,8],[2564,6,2374,8],[2564,11,2374,13],[2564,15,2374,17,"from"],[2564,19,2374,21],[2564,22,2374,24,"firstSquare"],[2564,33,2374,35],[2564,35,2374,37,"from"],[2564,39,2374,41],[2564,43,2374,45,"lastSquare"],[2564,53,2374,55],[2564,55,2374,57,"from"],[2564,59,2374,61],[2564,61,2374,63],[2564,63,2374,65],[2565,8,2375,12],[2566,8,2376,12],[2566,12,2376,16,"from"],[2566,16,2376,20],[2566,19,2376,23],[2566,23,2376,27],[2566,25,2376,29],[2567,10,2377,16,"from"],[2567,14,2377,20],[2567,18,2377,24],[2567,19,2377,25],[2568,10,2378,16],[2569,8,2379,12],[2570,8,2380,12],[2571,8,2381,12],[2571,12,2381,16],[2571,13,2381,17],[2571,17,2381,21],[2571,18,2381,22,"_board"],[2571,24,2381,28],[2571,25,2381,29,"from"],[2571,29,2381,33],[2571,30,2381,34],[2571,34,2381,38],[2571,38,2381,42],[2571,39,2381,43,"_board"],[2571,45,2381,49],[2571,46,2381,50,"from"],[2571,50,2381,54],[2571,51,2381,55],[2571,52,2381,56,"color"],[2571,57,2381,61],[2571,62,2381,66,"them"],[2571,66,2381,70],[2571,68,2381,72],[2572,10,2382,16],[2573,8,2383,12],[2574,8,2384,12],[2574,14,2384,18],[2575,10,2384,20,"type"],[2576,8,2384,25],[2576,9,2384,26],[2576,12,2384,29],[2576,16,2384,33],[2576,17,2384,34,"_board"],[2576,23,2384,40],[2576,24,2384,41,"from"],[2576,28,2384,45],[2576,29,2384,46],[2577,8,2385,12],[2577,12,2385,16,"to"],[2577,14,2385,18],[2578,8,2386,12],[2578,12,2386,16,"type"],[2578,16,2386,20],[2578,21,2386,25,"PAWN"],[2578,25,2386,29],[2578,27,2386,31],[2579,10,2387,16],[2579,14,2387,20,"forPiece"],[2579,22,2387,28],[2579,26,2387,32,"forPiece"],[2579,34,2387,40],[2579,39,2387,45,"type"],[2579,43,2387,49],[2579,45,2388,20],[2580,10,2389,16],[2581,10,2390,16,"to"],[2581,12,2390,18],[2581,15,2390,21,"from"],[2581,19,2390,25],[2581,22,2390,28,"PAWN_OFFSETS"],[2581,34,2390,40],[2581,35,2390,41,"us"],[2581,37,2390,43],[2581,38,2390,44],[2581,39,2390,45],[2581,40,2390,46],[2581,41,2390,47],[2582,10,2391,16],[2582,14,2391,20],[2582,15,2391,21],[2582,19,2391,25],[2582,20,2391,26,"_board"],[2582,26,2391,32],[2582,27,2391,33,"to"],[2582,29,2391,35],[2582,30,2391,36],[2582,32,2391,38],[2583,12,2392,20,"addMove"],[2583,19,2392,27],[2583,20,2392,28,"moves"],[2583,25,2392,33],[2583,27,2392,35,"us"],[2583,29,2392,37],[2583,31,2392,39,"from"],[2583,35,2392,43],[2583,37,2392,45,"to"],[2583,39,2392,47],[2583,41,2392,49,"PAWN"],[2583,45,2392,53],[2583,46,2392,54],[2584,12,2393,20],[2585,12,2394,20,"to"],[2585,14,2394,22],[2585,17,2394,25,"from"],[2585,21,2394,29],[2585,24,2394,32,"PAWN_OFFSETS"],[2585,36,2394,44],[2585,37,2394,45,"us"],[2585,39,2394,47],[2585,40,2394,48],[2585,41,2394,49],[2585,42,2394,50],[2585,43,2394,51],[2586,12,2395,20],[2586,16,2395,24,"SECOND_RANK"],[2586,27,2395,35],[2586,28,2395,36,"us"],[2586,30,2395,38],[2586,31,2395,39],[2586,36,2395,44,"rank"],[2586,40,2395,48],[2586,41,2395,49,"from"],[2586,45,2395,53],[2586,46,2395,54],[2586,50,2395,58],[2586,51,2395,59],[2586,55,2395,63],[2586,56,2395,64,"_board"],[2586,62,2395,70],[2586,63,2395,71,"to"],[2586,65,2395,73],[2586,66,2395,74],[2586,68,2395,76],[2587,14,2396,24,"addMove"],[2587,21,2396,31],[2587,22,2396,32,"moves"],[2587,27,2396,37],[2587,29,2396,39,"us"],[2587,31,2396,41],[2587,33,2396,43,"from"],[2587,37,2396,47],[2587,39,2396,49,"to"],[2587,41,2396,51],[2587,43,2396,53,"PAWN"],[2587,47,2396,57],[2587,49,2396,59,"undefined"],[2587,58,2396,68],[2587,60,2396,70,"BITS"],[2587,64,2396,74],[2587,65,2396,75,"BIG_PAWN"],[2587,73,2396,83],[2587,74,2396,84],[2588,12,2397,20],[2589,10,2398,16],[2590,10,2399,16],[2591,10,2400,16],[2591,15,2400,21],[2591,19,2400,25,"j"],[2591,20,2400,26],[2591,23,2400,29],[2591,24,2400,30],[2591,26,2400,32,"j"],[2591,27,2400,33],[2591,30,2400,36],[2591,31,2400,37],[2591,33,2400,39,"j"],[2591,34,2400,40],[2591,36,2400,42],[2591,38,2400,44],[2592,12,2401,20,"to"],[2592,14,2401,22],[2592,17,2401,25,"from"],[2592,21,2401,29],[2592,24,2401,32,"PAWN_OFFSETS"],[2592,36,2401,44],[2592,37,2401,45,"us"],[2592,39,2401,47],[2592,40,2401,48],[2592,41,2401,49,"j"],[2592,42,2401,50],[2592,43,2401,51],[2593,12,2402,20],[2593,16,2402,24,"to"],[2593,18,2402,26],[2593,21,2402,29],[2593,25,2402,33],[2593,27,2403,24],[2594,12,2404,20],[2594,16,2404,24],[2594,20,2404,28],[2594,21,2404,29,"_board"],[2594,27,2404,35],[2594,28,2404,36,"to"],[2594,30,2404,38],[2594,31,2404,39],[2594,33,2404,41,"color"],[2594,38,2404,46],[2594,43,2404,51,"them"],[2594,47,2404,55],[2594,49,2404,57],[2595,14,2405,24,"addMove"],[2595,21,2405,31],[2595,22,2405,32,"moves"],[2595,27,2405,37],[2595,29,2405,39,"us"],[2595,31,2405,41],[2595,33,2405,43,"from"],[2595,37,2405,47],[2595,39,2405,49,"to"],[2595,41,2405,51],[2595,43,2405,53,"PAWN"],[2595,47,2405,57],[2595,49,2405,59],[2595,53,2405,63],[2595,54,2405,64,"_board"],[2595,60,2405,70],[2595,61,2405,71,"to"],[2595,63,2405,73],[2595,64,2405,74],[2595,65,2405,75,"type"],[2595,69,2405,79],[2595,71,2405,81,"BITS"],[2595,75,2405,85],[2595,76,2405,86,"CAPTURE"],[2595,83,2405,93],[2595,84,2405,94],[2596,12,2406,20],[2596,13,2406,21],[2596,19,2407,25],[2596,23,2407,29,"to"],[2596,25,2407,31],[2596,30,2407,36],[2596,34,2407,40],[2596,35,2407,41,"_epSquare"],[2596,44,2407,50],[2596,46,2407,52],[2597,14,2408,24,"addMove"],[2597,21,2408,31],[2597,22,2408,32,"moves"],[2597,27,2408,37],[2597,29,2408,39,"us"],[2597,31,2408,41],[2597,33,2408,43,"from"],[2597,37,2408,47],[2597,39,2408,49,"to"],[2597,41,2408,51],[2597,43,2408,53,"PAWN"],[2597,47,2408,57],[2597,49,2408,59,"PAWN"],[2597,53,2408,63],[2597,55,2408,65,"BITS"],[2597,59,2408,69],[2597,60,2408,70,"EP_CAPTURE"],[2597,70,2408,80],[2597,71,2408,81],[2598,12,2409,20],[2599,10,2410,16],[2600,8,2411,12],[2600,9,2411,13],[2600,15,2412,17],[2601,10,2413,16],[2601,14,2413,20,"forPiece"],[2601,22,2413,28],[2601,26,2413,32,"forPiece"],[2601,34,2413,40],[2601,39,2413,45,"type"],[2601,43,2413,49],[2601,45,2414,20],[2602,10,2415,16],[2602,15,2415,21],[2602,19,2415,25,"j"],[2602,20,2415,26],[2602,23,2415,29],[2602,24,2415,30],[2602,26,2415,32,"len"],[2602,29,2415,35],[2602,32,2415,38,"PIECE_OFFSETS"],[2602,45,2415,51],[2602,46,2415,52,"type"],[2602,50,2415,56],[2602,51,2415,57],[2602,52,2415,58,"length"],[2602,58,2415,64],[2602,60,2415,66,"j"],[2602,61,2415,67],[2602,64,2415,70,"len"],[2602,67,2415,73],[2602,69,2415,75,"j"],[2602,70,2415,76],[2602,72,2415,78],[2602,74,2415,80],[2603,12,2416,20],[2603,18,2416,26,"offset"],[2603,24,2416,32],[2603,27,2416,35,"PIECE_OFFSETS"],[2603,40,2416,48],[2603,41,2416,49,"type"],[2603,45,2416,53],[2603,46,2416,54],[2603,47,2416,55,"j"],[2603,48,2416,56],[2603,49,2416,57],[2604,12,2417,20,"to"],[2604,14,2417,22],[2604,17,2417,25,"from"],[2604,21,2417,29],[2605,12,2418,20],[2605,19,2418,27],[2605,23,2418,31],[2605,25,2418,33],[2606,14,2419,24,"to"],[2606,16,2419,26],[2606,20,2419,30,"offset"],[2606,26,2419,36],[2607,14,2420,24],[2607,18,2420,28,"to"],[2607,20,2420,30],[2607,23,2420,33],[2607,27,2420,37],[2607,29,2421,28],[2608,14,2422,24],[2608,18,2422,28],[2608,19,2422,29],[2608,23,2422,33],[2608,24,2422,34,"_board"],[2608,30,2422,40],[2608,31,2422,41,"to"],[2608,33,2422,43],[2608,34,2422,44],[2608,36,2422,46],[2609,16,2423,28,"addMove"],[2609,23,2423,35],[2609,24,2423,36,"moves"],[2609,29,2423,41],[2609,31,2423,43,"us"],[2609,33,2423,45],[2609,35,2423,47,"from"],[2609,39,2423,51],[2609,41,2423,53,"to"],[2609,43,2423,55],[2609,45,2423,57,"type"],[2609,49,2423,61],[2609,50,2423,62],[2610,14,2424,24],[2610,15,2424,25],[2610,21,2425,29],[2611,16,2426,28],[2612,16,2427,28],[2612,20,2427,32],[2612,24,2427,36],[2612,25,2427,37,"_board"],[2612,31,2427,43],[2612,32,2427,44,"to"],[2612,34,2427,46],[2612,35,2427,47],[2612,36,2427,48,"color"],[2612,41,2427,53],[2612,46,2427,58,"us"],[2612,48,2427,60],[2612,50,2428,32],[2613,16,2429,28,"addMove"],[2613,23,2429,35],[2613,24,2429,36,"moves"],[2613,29,2429,41],[2613,31,2429,43,"us"],[2613,33,2429,45],[2613,35,2429,47,"from"],[2613,39,2429,51],[2613,41,2429,53,"to"],[2613,43,2429,55],[2613,45,2429,57,"type"],[2613,49,2429,61],[2613,51,2429,63],[2613,55,2429,67],[2613,56,2429,68,"_board"],[2613,62,2429,74],[2613,63,2429,75,"to"],[2613,65,2429,77],[2613,66,2429,78],[2613,67,2429,79,"type"],[2613,71,2429,83],[2613,73,2429,85,"BITS"],[2613,77,2429,89],[2613,78,2429,90,"CAPTURE"],[2613,85,2429,97],[2613,86,2429,98],[2614,16,2430,28],[2615,14,2431,24],[2616,14,2432,24],[2617,14,2433,24],[2617,18,2433,28,"type"],[2617,22,2433,32],[2617,27,2433,37,"KNIGHT"],[2617,33,2433,43],[2617,37,2433,47,"type"],[2617,41,2433,51],[2617,46,2433,56,"KING"],[2617,50,2433,60],[2617,52,2434,28],[2618,12,2435,20],[2619,10,2436,16],[2620,8,2437,12],[2621,6,2438,8],[2622,6,2439,8],[2623,0,2440,0],[2624,0,2441,0],[2625,0,2442,0],[2626,0,2443,0],[2627,6,2444,8],[2627,10,2444,12,"forPiece"],[2627,18,2444,20],[2627,23,2444,25,"undefined"],[2627,32,2444,34],[2627,36,2444,38,"forPiece"],[2627,44,2444,46],[2627,49,2444,51,"KING"],[2627,53,2444,55],[2627,55,2444,57],[2628,8,2445,12],[2628,12,2445,16],[2628,13,2445,17,"singleSquare"],[2628,25,2445,29],[2628,29,2445,33,"lastSquare"],[2628,39,2445,43],[2628,44,2445,48],[2628,48,2445,52],[2628,49,2445,53,"_kings"],[2628,55,2445,59],[2628,56,2445,60,"us"],[2628,58,2445,62],[2628,59,2445,63],[2628,61,2445,65],[2629,10,2446,16],[2630,10,2447,16],[2630,14,2447,20],[2630,18,2447,24],[2630,19,2447,25,"_castling"],[2630,28,2447,34],[2630,29,2447,35,"us"],[2630,31,2447,37],[2630,32,2447,38],[2630,35,2447,41,"BITS"],[2630,39,2447,45],[2630,40,2447,46,"KSIDE_CASTLE"],[2630,52,2447,58],[2630,54,2447,60],[2631,12,2448,20],[2631,18,2448,26,"castlingFrom"],[2631,30,2448,38],[2631,33,2448,41],[2631,37,2448,45],[2631,38,2448,46,"_kings"],[2631,44,2448,52],[2631,45,2448,53,"us"],[2631,47,2448,55],[2631,48,2448,56],[2632,12,2449,20],[2632,18,2449,26,"castlingTo"],[2632,28,2449,36],[2632,31,2449,39,"castlingFrom"],[2632,43,2449,51],[2632,46,2449,54],[2632,47,2449,55],[2633,12,2450,20],[2633,16,2450,24],[2633,17,2450,25],[2633,21,2450,29],[2633,22,2450,30,"_board"],[2633,28,2450,36],[2633,29,2450,37,"castlingFrom"],[2633,41,2450,49],[2633,44,2450,52],[2633,45,2450,53],[2633,46,2450,54],[2633,50,2451,24],[2633,51,2451,25],[2633,55,2451,29],[2633,56,2451,30,"_board"],[2633,62,2451,36],[2633,63,2451,37,"castlingTo"],[2633,73,2451,47],[2633,74,2451,48],[2633,78,2452,24],[2633,79,2452,25],[2633,83,2452,29],[2633,84,2452,30,"_attacked"],[2633,93,2452,39],[2633,94,2452,40,"them"],[2633,98,2452,44],[2633,100,2452,46],[2633,104,2452,50],[2633,105,2452,51,"_kings"],[2633,111,2452,57],[2633,112,2452,58,"us"],[2633,114,2452,60],[2633,115,2452,61],[2633,116,2452,62],[2633,120,2453,24],[2633,121,2453,25],[2633,125,2453,29],[2633,126,2453,30,"_attacked"],[2633,135,2453,39],[2633,136,2453,40,"them"],[2633,140,2453,44],[2633,142,2453,46,"castlingFrom"],[2633,154,2453,58],[2633,157,2453,61],[2633,158,2453,62],[2633,159,2453,63],[2633,163,2454,24],[2633,164,2454,25],[2633,168,2454,29],[2633,169,2454,30,"_attacked"],[2633,178,2454,39],[2633,179,2454,40,"them"],[2633,183,2454,44],[2633,185,2454,46,"castlingTo"],[2633,195,2454,56],[2633,196,2454,57],[2633,198,2454,59],[2634,14,2455,24,"addMove"],[2634,21,2455,31],[2634,22,2455,32,"moves"],[2634,27,2455,37],[2634,29,2455,39,"us"],[2634,31,2455,41],[2634,33,2455,43],[2634,37,2455,47],[2634,38,2455,48,"_kings"],[2634,44,2455,54],[2634,45,2455,55,"us"],[2634,47,2455,57],[2634,48,2455,58],[2634,50,2455,60,"castlingTo"],[2634,60,2455,70],[2634,62,2455,72,"KING"],[2634,66,2455,76],[2634,68,2455,78,"undefined"],[2634,77,2455,87],[2634,79,2455,89,"BITS"],[2634,83,2455,93],[2634,84,2455,94,"KSIDE_CASTLE"],[2634,96,2455,106],[2634,97,2455,107],[2635,12,2456,20],[2636,10,2457,16],[2637,10,2458,16],[2638,10,2459,16],[2638,14,2459,20],[2638,18,2459,24],[2638,19,2459,25,"_castling"],[2638,28,2459,34],[2638,29,2459,35,"us"],[2638,31,2459,37],[2638,32,2459,38],[2638,35,2459,41,"BITS"],[2638,39,2459,45],[2638,40,2459,46,"QSIDE_CASTLE"],[2638,52,2459,58],[2638,54,2459,60],[2639,12,2460,20],[2639,18,2460,26,"castlingFrom"],[2639,30,2460,38],[2639,33,2460,41],[2639,37,2460,45],[2639,38,2460,46,"_kings"],[2639,44,2460,52],[2639,45,2460,53,"us"],[2639,47,2460,55],[2639,48,2460,56],[2640,12,2461,20],[2640,18,2461,26,"castlingTo"],[2640,28,2461,36],[2640,31,2461,39,"castlingFrom"],[2640,43,2461,51],[2640,46,2461,54],[2640,47,2461,55],[2641,12,2462,20],[2641,16,2462,24],[2641,17,2462,25],[2641,21,2462,29],[2641,22,2462,30,"_board"],[2641,28,2462,36],[2641,29,2462,37,"castlingFrom"],[2641,41,2462,49],[2641,44,2462,52],[2641,45,2462,53],[2641,46,2462,54],[2641,50,2463,24],[2641,51,2463,25],[2641,55,2463,29],[2641,56,2463,30,"_board"],[2641,62,2463,36],[2641,63,2463,37,"castlingFrom"],[2641,75,2463,49],[2641,78,2463,52],[2641,79,2463,53],[2641,80,2463,54],[2641,84,2464,24],[2641,85,2464,25],[2641,89,2464,29],[2641,90,2464,30,"_board"],[2641,96,2464,36],[2641,97,2464,37,"castlingFrom"],[2641,109,2464,49],[2641,112,2464,52],[2641,113,2464,53],[2641,114,2464,54],[2641,118,2465,24],[2641,119,2465,25],[2641,123,2465,29],[2641,124,2465,30,"_attacked"],[2641,133,2465,39],[2641,134,2465,40,"them"],[2641,138,2465,44],[2641,140,2465,46],[2641,144,2465,50],[2641,145,2465,51,"_kings"],[2641,151,2465,57],[2641,152,2465,58,"us"],[2641,154,2465,60],[2641,155,2465,61],[2641,156,2465,62],[2641,160,2466,24],[2641,161,2466,25],[2641,165,2466,29],[2641,166,2466,30,"_attacked"],[2641,175,2466,39],[2641,176,2466,40,"them"],[2641,180,2466,44],[2641,182,2466,46,"castlingFrom"],[2641,194,2466,58],[2641,197,2466,61],[2641,198,2466,62],[2641,199,2466,63],[2641,203,2467,24],[2641,204,2467,25],[2641,208,2467,29],[2641,209,2467,30,"_attacked"],[2641,218,2467,39],[2641,219,2467,40,"them"],[2641,223,2467,44],[2641,225,2467,46,"castlingTo"],[2641,235,2467,56],[2641,236,2467,57],[2641,238,2467,59],[2642,14,2468,24,"addMove"],[2642,21,2468,31],[2642,22,2468,32,"moves"],[2642,27,2468,37],[2642,29,2468,39,"us"],[2642,31,2468,41],[2642,33,2468,43],[2642,37,2468,47],[2642,38,2468,48,"_kings"],[2642,44,2468,54],[2642,45,2468,55,"us"],[2642,47,2468,57],[2642,48,2468,58],[2642,50,2468,60,"castlingTo"],[2642,60,2468,70],[2642,62,2468,72,"KING"],[2642,66,2468,76],[2642,68,2468,78,"undefined"],[2642,77,2468,87],[2642,79,2468,89,"BITS"],[2642,83,2468,93],[2642,84,2468,94,"QSIDE_CASTLE"],[2642,96,2468,106],[2642,97,2468,107],[2643,12,2469,20],[2644,10,2470,16],[2645,8,2471,12],[2646,6,2472,8],[2647,6,2473,8],[2648,0,2474,0],[2649,0,2475,0],[2650,0,2476,0],[2651,6,2477,8],[2651,10,2477,12],[2651,11,2477,13,"legal"],[2651,16,2477,18],[2651,20,2477,22],[2651,24,2477,26],[2651,25,2477,27,"_kings"],[2651,31,2477,33],[2651,32,2477,34,"us"],[2651,34,2477,36],[2651,35,2477,37],[2651,40,2477,42],[2651,41,2477,43],[2651,42,2477,44],[2651,44,2477,46],[2652,8,2478,12],[2652,15,2478,19,"moves"],[2652,20,2478,24],[2653,6,2479,8],[2654,6,2480,8],[2655,6,2481,8],[2655,12,2481,14,"legalMoves"],[2655,22,2481,24],[2655,25,2481,27],[2655,27,2481,29],[2656,6,2482,8],[2656,11,2482,13],[2656,15,2482,17,"i"],[2656,16,2482,18],[2656,19,2482,21],[2656,20,2482,22],[2656,22,2482,24,"len"],[2656,25,2482,27],[2656,28,2482,30,"moves"],[2656,33,2482,35],[2656,34,2482,36,"length"],[2656,40,2482,42],[2656,42,2482,44,"i"],[2656,43,2482,45],[2656,46,2482,48,"len"],[2656,49,2482,51],[2656,51,2482,53,"i"],[2656,52,2482,54],[2656,54,2482,56],[2656,56,2482,58],[2657,8,2483,12],[2657,12,2483,16],[2657,13,2483,17,"_makeMove"],[2657,22,2483,26],[2657,23,2483,27,"moves"],[2657,28,2483,32],[2657,29,2483,33,"i"],[2657,30,2483,34],[2657,31,2483,35],[2657,32,2483,36],[2658,8,2484,12],[2658,12,2484,16],[2658,13,2484,17],[2658,17,2484,21],[2658,18,2484,22,"_isKingAttacked"],[2658,33,2484,37],[2658,34,2484,38,"us"],[2658,36,2484,40],[2658,37,2484,41],[2658,39,2484,43],[2659,10,2485,16,"legalMoves"],[2659,20,2485,26],[2659,21,2485,27,"push"],[2659,25,2485,31],[2659,26,2485,32,"moves"],[2659,31,2485,37],[2659,32,2485,38,"i"],[2659,33,2485,39],[2659,34,2485,40],[2659,35,2485,41],[2660,8,2486,12],[2661,8,2487,12],[2661,12,2487,16],[2661,13,2487,17,"_undoMove"],[2661,22,2487,26],[2661,23,2487,27],[2661,24,2487,28],[2662,6,2488,8],[2663,6,2489,8],[2663,13,2489,15,"legalMoves"],[2663,23,2489,25],[2664,4,2490,4],[2665,4,2491,4,"move"],[2665,8,2491,8,"move"],[2665,9,2491,9,"move"],[2665,13,2491,13],[2665,15,2491,15],[2666,6,2491,17,"strict"],[2666,12,2491,23],[2666,15,2491,26],[2667,4,2491,32],[2667,5,2491,33],[2667,8,2491,36],[2667,9,2491,37],[2667,10,2491,38],[2667,12,2491,40],[2668,6,2492,8],[2669,0,2493,0],[2670,0,2494,0],[2671,0,2495,0],[2672,0,2496,0],[2673,0,2497,0],[2674,0,2498,0],[2675,0,2499,0],[2676,0,2500,0],[2677,0,2501,0],[2678,0,2502,0],[2679,0,2503,0],[2680,0,2504,0],[2681,6,2505,8],[2681,10,2505,12,"moveObj"],[2681,17,2505,19],[2681,20,2505,22],[2681,24,2505,26],[2682,6,2506,8],[2682,10,2506,12],[2682,17,2506,19,"move"],[2682,21,2506,23],[2682,26,2506,28],[2682,34,2506,36],[2682,36,2506,38],[2683,8,2507,12,"moveObj"],[2683,15,2507,19],[2683,18,2507,22],[2683,22,2507,26],[2683,23,2507,27,"_moveFromSan"],[2683,35,2507,39],[2683,36,2507,40,"move"],[2683,40,2507,44],[2683,42,2507,46,"strict"],[2683,48,2507,52],[2683,49,2507,53],[2684,6,2508,8],[2684,7,2508,9],[2684,13,2509,13],[2684,17,2509,17,"move"],[2684,21,2509,21],[2684,26,2509,26],[2684,30,2509,30],[2684,32,2509,32],[2685,8,2510,12,"moveObj"],[2685,15,2510,19],[2685,18,2510,22],[2685,22,2510,26],[2685,23,2510,27,"_moveFromSan"],[2685,35,2510,39],[2685,36,2510,40,"SAN_NULLMOVE"],[2685,48,2510,52],[2685,50,2510,54,"strict"],[2685,56,2510,60],[2685,57,2510,61],[2686,6,2511,8],[2686,7,2511,9],[2686,13,2512,13],[2686,17,2512,17],[2686,24,2512,24,"move"],[2686,28,2512,28],[2686,33,2512,33],[2686,41,2512,41],[2686,43,2512,43],[2687,8,2513,12],[2687,14,2513,18,"moves"],[2687,19,2513,23],[2687,22,2513,26],[2687,26,2513,30],[2687,27,2513,31,"_moves"],[2687,33,2513,37],[2687,34,2513,38],[2687,35,2513,39],[2688,8,2514,12],[2689,8,2515,12],[2689,13,2515,17],[2689,17,2515,21,"i"],[2689,18,2515,22],[2689,21,2515,25],[2689,22,2515,26],[2689,24,2515,28,"len"],[2689,27,2515,31],[2689,30,2515,34,"moves"],[2689,35,2515,39],[2689,36,2515,40,"length"],[2689,42,2515,46],[2689,44,2515,48,"i"],[2689,45,2515,49],[2689,48,2515,52,"len"],[2689,51,2515,55],[2689,53,2515,57,"i"],[2689,54,2515,58],[2689,56,2515,60],[2689,58,2515,62],[2690,10,2516,16],[2690,14,2516,20,"move"],[2690,18,2516,24],[2690,19,2516,25,"from"],[2690,23,2516,29],[2690,28,2516,34,"algebraic"],[2690,37,2516,43],[2690,38,2516,44,"moves"],[2690,43,2516,49],[2690,44,2516,50,"i"],[2690,45,2516,51],[2690,46,2516,52],[2690,47,2516,53,"from"],[2690,51,2516,57],[2690,52,2516,58],[2690,56,2517,20,"move"],[2690,60,2517,24],[2690,61,2517,25,"to"],[2690,63,2517,27],[2690,68,2517,32,"algebraic"],[2690,77,2517,41],[2690,78,2517,42,"moves"],[2690,83,2517,47],[2690,84,2517,48,"i"],[2690,85,2517,49],[2690,86,2517,50],[2690,87,2517,51,"to"],[2690,89,2517,53],[2690,90,2517,54],[2690,95,2518,21],[2690,97,2518,23],[2690,108,2518,34],[2690,112,2518,38,"moves"],[2690,117,2518,43],[2690,118,2518,44,"i"],[2690,119,2518,45],[2690,120,2518,46],[2690,121,2518,47],[2690,125,2518,51,"move"],[2690,129,2518,55],[2690,130,2518,56,"promotion"],[2690,139,2518,65],[2690,144,2518,70,"moves"],[2690,149,2518,75],[2690,150,2518,76,"i"],[2690,151,2518,77],[2690,152,2518,78],[2690,153,2518,79,"promotion"],[2690,162,2518,88],[2690,163,2518,89],[2690,165,2518,91],[2691,12,2519,20,"moveObj"],[2691,19,2519,27],[2691,22,2519,30,"moves"],[2691,27,2519,35],[2691,28,2519,36,"i"],[2691,29,2519,37],[2691,30,2519,38],[2692,12,2520,20],[2693,10,2521,16],[2694,8,2522,12],[2695,6,2523,8],[2696,6,2524,8],[2697,6,2525,8],[2697,10,2525,12],[2697,11,2525,13,"moveObj"],[2697,18,2525,20],[2697,20,2525,22],[2698,8,2526,12],[2698,12,2526,16],[2698,19,2526,23,"move"],[2698,23,2526,27],[2698,28,2526,32],[2698,36,2526,40],[2698,38,2526,42],[2699,10,2527,16],[2699,16,2527,22],[2699,20,2527,26,"Error"],[2699,25,2527,31],[2699,26,2527,32],[2699,43,2527,49,"move"],[2699,47,2527,53],[2699,49,2527,55],[2699,50,2527,56],[2700,8,2528,12],[2700,9,2528,13],[2700,15,2529,17],[2701,10,2530,16],[2701,16,2530,22],[2701,20,2530,26,"Error"],[2701,25,2530,31],[2701,26,2530,32],[2701,43,2530,49,"JSON"],[2701,47,2530,53],[2701,48,2530,54,"stringify"],[2701,57,2530,63],[2701,58,2530,64,"move"],[2701,62,2530,68],[2701,63,2530,69],[2701,65,2530,71],[2701,66,2530,72],[2702,8,2531,12],[2703,6,2532,8],[2704,6,2533,8],[2705,6,2534,8],[2705,10,2534,12],[2705,14,2534,16],[2705,15,2534,17,"isCheck"],[2705,22,2534,24],[2705,23,2534,25],[2705,24,2534,26],[2705,28,2534,30,"moveObj"],[2705,35,2534,37],[2705,36,2534,38,"flags"],[2705,41,2534,43],[2705,44,2534,46,"BITS"],[2705,48,2534,50],[2705,49,2534,51,"NULL_MOVE"],[2705,58,2534,60],[2705,60,2534,62],[2706,8,2535,12],[2706,14,2535,18],[2706,18,2535,22,"Error"],[2706,23,2535,27],[2706,24,2535,28],[2706,61,2535,65],[2706,62,2535,66],[2707,6,2536,8],[2708,6,2537,8],[2709,0,2538,0],[2710,0,2539,0],[2711,0,2540,0],[2712,6,2541,8],[2712,12,2541,14,"prettyMove"],[2712,22,2541,24],[2712,25,2541,27],[2712,29,2541,31,"Move"],[2712,33,2541,35],[2712,34,2541,36],[2712,38,2541,40],[2712,40,2541,42,"moveObj"],[2712,47,2541,49],[2712,48,2541,50],[2713,6,2542,8],[2713,10,2542,12],[2713,11,2542,13,"_makeMove"],[2713,20,2542,22],[2713,21,2542,23,"moveObj"],[2713,28,2542,30],[2713,29,2542,31],[2714,6,2543,8],[2714,10,2543,12],[2714,11,2543,13,"_incPositionCount"],[2714,28,2543,30],[2714,29,2543,31],[2714,30,2543,32],[2715,6,2544,8],[2715,13,2544,15,"prettyMove"],[2715,23,2544,25],[2716,4,2545,4],[2717,4,2546,4,"_push"],[2717,9,2546,9,"_push"],[2717,10,2546,10,"move"],[2717,14,2546,14],[2717,16,2546,16],[2718,6,2547,8],[2718,10,2547,12],[2718,11,2547,13,"_history"],[2718,19,2547,21],[2718,20,2547,22,"push"],[2718,24,2547,26],[2718,25,2547,27],[2719,8,2548,12,"move"],[2719,12,2548,16],[2720,8,2549,12,"kings"],[2720,13,2549,17],[2720,15,2549,19],[2721,10,2549,21,"b"],[2721,11,2549,22],[2721,13,2549,24],[2721,17,2549,28],[2721,18,2549,29,"_kings"],[2721,24,2549,35],[2721,25,2549,36,"b"],[2721,26,2549,37],[2722,10,2549,39,"w"],[2722,11,2549,40],[2722,13,2549,42],[2722,17,2549,46],[2722,18,2549,47,"_kings"],[2722,24,2549,53],[2722,25,2549,54,"w"],[2723,8,2549,56],[2723,9,2549,57],[2724,8,2550,12,"turn"],[2724,12,2550,16],[2724,14,2550,18],[2724,18,2550,22],[2724,19,2550,23,"_turn"],[2724,24,2550,28],[2725,8,2551,12,"castling"],[2725,16,2551,20],[2725,18,2551,22],[2726,10,2551,24,"b"],[2726,11,2551,25],[2726,13,2551,27],[2726,17,2551,31],[2726,18,2551,32,"_castling"],[2726,27,2551,41],[2726,28,2551,42,"b"],[2726,29,2551,43],[2727,10,2551,45,"w"],[2727,11,2551,46],[2727,13,2551,48],[2727,17,2551,52],[2727,18,2551,53,"_castling"],[2727,27,2551,62],[2727,28,2551,63,"w"],[2728,8,2551,65],[2728,9,2551,66],[2729,8,2552,12,"epSquare"],[2729,16,2552,20],[2729,18,2552,22],[2729,22,2552,26],[2729,23,2552,27,"_epSquare"],[2729,32,2552,36],[2730,8,2553,12,"halfMoves"],[2730,17,2553,21],[2730,19,2553,23],[2730,23,2553,27],[2730,24,2553,28,"_halfMoves"],[2730,34,2553,38],[2731,8,2554,12,"moveNumber"],[2731,18,2554,22],[2731,20,2554,24],[2731,24,2554,28],[2731,25,2554,29,"_moveNumber"],[2732,6,2555,8],[2732,7,2555,9],[2732,8,2555,10],[2733,4,2556,4],[2734,4,2557,4,"_movePiece"],[2734,14,2557,14,"_movePiece"],[2734,15,2557,15,"from"],[2734,19,2557,19],[2734,21,2557,21,"to"],[2734,23,2557,23],[2734,25,2557,25],[2735,6,2558,8],[2735,10,2558,12],[2735,11,2558,13,"_hash"],[2735,16,2558,18],[2735,20,2558,22],[2735,24,2558,26],[2735,25,2558,27,"_pieceKey"],[2735,34,2558,36],[2735,35,2558,37,"from"],[2735,39,2558,41],[2735,40,2558,42],[2736,6,2559,8],[2736,10,2559,12],[2736,11,2559,13,"_board"],[2736,17,2559,19],[2736,18,2559,20,"to"],[2736,20,2559,22],[2736,21,2559,23],[2736,24,2559,26],[2736,28,2559,30],[2736,29,2559,31,"_board"],[2736,35,2559,37],[2736,36,2559,38,"from"],[2736,40,2559,42],[2736,41,2559,43],[2737,6,2560,8],[2737,13,2560,15],[2737,17,2560,19],[2737,18,2560,20,"_board"],[2737,24,2560,26],[2737,25,2560,27,"from"],[2737,29,2560,31],[2737,30,2560,32],[2738,6,2561,8],[2738,10,2561,12],[2738,11,2561,13,"_hash"],[2738,16,2561,18],[2738,20,2561,22],[2738,24,2561,26],[2738,25,2561,27,"_pieceKey"],[2738,34,2561,36],[2738,35,2561,37,"to"],[2738,37,2561,39],[2738,38,2561,40],[2739,4,2562,4],[2740,4,2563,4,"_makeMove"],[2740,13,2563,13,"_makeMove"],[2740,14,2563,14,"move"],[2740,18,2563,18],[2740,20,2563,20],[2741,6,2564,8],[2741,12,2564,14,"us"],[2741,14,2564,16],[2741,17,2564,19],[2741,21,2564,23],[2741,22,2564,24,"_turn"],[2741,27,2564,29],[2742,6,2565,8],[2742,12,2565,14,"them"],[2742,16,2565,18],[2742,19,2565,21,"swapColor"],[2742,28,2565,30],[2742,29,2565,31,"us"],[2742,31,2565,33],[2742,32,2565,34],[2743,6,2566,8],[2743,10,2566,12],[2743,11,2566,13,"_push"],[2743,16,2566,18],[2743,17,2566,19,"move"],[2743,21,2566,23],[2743,22,2566,24],[2744,6,2567,8],[2744,10,2567,12,"move"],[2744,14,2567,16],[2744,15,2567,17,"flags"],[2744,20,2567,22],[2744,23,2567,25,"BITS"],[2744,27,2567,29],[2744,28,2567,30,"NULL_MOVE"],[2744,37,2567,39],[2744,39,2567,41],[2745,8,2568,12],[2745,12,2568,16,"us"],[2745,14,2568,18],[2745,19,2568,23,"BLACK"],[2745,24,2568,28],[2745,26,2568,30],[2746,10,2569,16],[2746,14,2569,20],[2746,15,2569,21,"_moveNumber"],[2746,26,2569,32],[2746,28,2569,34],[2747,8,2570,12],[2748,8,2571,12],[2748,12,2571,16],[2748,13,2571,17,"_halfMoves"],[2748,23,2571,27],[2748,25,2571,29],[2749,8,2572,12],[2749,12,2572,16],[2749,13,2572,17,"_turn"],[2749,18,2572,22],[2749,21,2572,25,"them"],[2749,25,2572,29],[2750,8,2573,12],[2750,12,2573,16],[2750,13,2573,17,"_epSquare"],[2750,22,2573,26],[2750,25,2573,29,"EMPTY"],[2750,30,2573,34],[2751,8,2574,12],[2752,6,2575,8],[2753,6,2576,8],[2753,10,2576,12],[2753,11,2576,13,"_hash"],[2753,16,2576,18],[2753,20,2576,22],[2753,24,2576,26],[2753,25,2576,27,"_epKey"],[2753,31,2576,33],[2753,32,2576,34],[2753,33,2576,35],[2754,6,2577,8],[2754,10,2577,12],[2754,11,2577,13,"_hash"],[2754,16,2577,18],[2754,20,2577,22],[2754,24,2577,26],[2754,25,2577,27,"_castlingKey"],[2754,37,2577,39],[2754,38,2577,40],[2754,39,2577,41],[2755,6,2578,8],[2755,10,2578,12,"move"],[2755,14,2578,16],[2755,15,2578,17,"captured"],[2755,23,2578,25],[2755,25,2578,27],[2756,8,2579,12],[2756,12,2579,16],[2756,13,2579,17,"_hash"],[2756,18,2579,22],[2756,22,2579,26],[2756,26,2579,30],[2756,27,2579,31,"_pieceKey"],[2756,36,2579,40],[2756,37,2579,41,"move"],[2756,41,2579,45],[2756,42,2579,46,"to"],[2756,44,2579,48],[2756,45,2579,49],[2757,6,2580,8],[2758,6,2581,8],[2758,10,2581,12],[2758,11,2581,13,"_movePiece"],[2758,21,2581,23],[2758,22,2581,24,"move"],[2758,26,2581,28],[2758,27,2581,29,"from"],[2758,31,2581,33],[2758,33,2581,35,"move"],[2758,37,2581,39],[2758,38,2581,40,"to"],[2758,40,2581,42],[2758,41,2581,43],[2759,6,2582,8],[2760,6,2583,8],[2760,10,2583,12,"move"],[2760,14,2583,16],[2760,15,2583,17,"flags"],[2760,20,2583,22],[2760,23,2583,25,"BITS"],[2760,27,2583,29],[2760,28,2583,30,"EP_CAPTURE"],[2760,38,2583,40],[2760,40,2583,42],[2761,8,2584,12],[2761,12,2584,16],[2761,16,2584,20],[2761,17,2584,21,"_turn"],[2761,22,2584,26],[2761,27,2584,31,"BLACK"],[2761,32,2584,36],[2761,34,2584,38],[2762,10,2585,16],[2762,14,2585,20],[2762,15,2585,21,"_clear"],[2762,21,2585,27],[2762,22,2585,28,"move"],[2762,26,2585,32],[2762,27,2585,33,"to"],[2762,29,2585,35],[2762,32,2585,38],[2762,34,2585,40],[2762,35,2585,41],[2763,8,2586,12],[2763,9,2586,13],[2763,15,2587,17],[2764,10,2588,16],[2764,14,2588,20],[2764,15,2588,21,"_clear"],[2764,21,2588,27],[2764,22,2588,28,"move"],[2764,26,2588,32],[2764,27,2588,33,"to"],[2764,29,2588,35],[2764,32,2588,38],[2764,34,2588,40],[2764,35,2588,41],[2765,8,2589,12],[2766,6,2590,8],[2767,6,2591,8],[2768,6,2592,8],[2768,10,2592,12,"move"],[2768,14,2592,16],[2768,15,2592,17,"promotion"],[2768,24,2592,26],[2768,26,2592,28],[2769,8,2593,12],[2769,12,2593,16],[2769,13,2593,17,"_clear"],[2769,19,2593,23],[2769,20,2593,24,"move"],[2769,24,2593,28],[2769,25,2593,29,"to"],[2769,27,2593,31],[2769,28,2593,32],[2770,8,2594,12],[2770,12,2594,16],[2770,13,2594,17,"_set"],[2770,17,2594,21],[2770,18,2594,22,"move"],[2770,22,2594,26],[2770,23,2594,27,"to"],[2770,25,2594,29],[2770,27,2594,31],[2771,10,2594,33,"type"],[2771,14,2594,37],[2771,16,2594,39,"move"],[2771,20,2594,43],[2771,21,2594,44,"promotion"],[2771,30,2594,53],[2772,10,2594,55,"color"],[2772,15,2594,60],[2772,17,2594,62,"us"],[2773,8,2594,65],[2773,9,2594,66],[2773,10,2594,67],[2774,6,2595,8],[2775,6,2596,8],[2776,6,2597,8],[2776,10,2597,12],[2776,14,2597,16],[2776,15,2597,17,"_board"],[2776,21,2597,23],[2776,22,2597,24,"move"],[2776,26,2597,28],[2776,27,2597,29,"to"],[2776,29,2597,31],[2776,30,2597,32],[2776,31,2597,33,"type"],[2776,35,2597,37],[2776,40,2597,42,"KING"],[2776,44,2597,46],[2776,46,2597,48],[2777,8,2598,12],[2777,12,2598,16],[2777,13,2598,17,"_kings"],[2777,19,2598,23],[2777,20,2598,24,"us"],[2777,22,2598,26],[2777,23,2598,27],[2777,26,2598,30,"move"],[2777,30,2598,34],[2777,31,2598,35,"to"],[2777,33,2598,37],[2778,8,2599,12],[2779,8,2600,12],[2779,12,2600,16,"move"],[2779,16,2600,20],[2779,17,2600,21,"flags"],[2779,22,2600,26],[2779,25,2600,29,"BITS"],[2779,29,2600,33],[2779,30,2600,34,"KSIDE_CASTLE"],[2779,42,2600,46],[2779,44,2600,48],[2780,10,2601,16],[2780,16,2601,22,"castlingTo"],[2780,26,2601,32],[2780,29,2601,35,"move"],[2780,33,2601,39],[2780,34,2601,40,"to"],[2780,36,2601,42],[2780,39,2601,45],[2780,40,2601,46],[2781,10,2602,16],[2781,16,2602,22,"castlingFrom"],[2781,28,2602,34],[2781,31,2602,37,"move"],[2781,35,2602,41],[2781,36,2602,42,"to"],[2781,38,2602,44],[2781,41,2602,47],[2781,42,2602,48],[2782,10,2603,16],[2782,14,2603,20],[2782,15,2603,21,"_movePiece"],[2782,25,2603,31],[2782,26,2603,32,"castlingFrom"],[2782,38,2603,44],[2782,40,2603,46,"castlingTo"],[2782,50,2603,56],[2782,51,2603,57],[2783,8,2604,12],[2783,9,2604,13],[2783,15,2605,17],[2783,19,2605,21,"move"],[2783,23,2605,25],[2783,24,2605,26,"flags"],[2783,29,2605,31],[2783,32,2605,34,"BITS"],[2783,36,2605,38],[2783,37,2605,39,"QSIDE_CASTLE"],[2783,49,2605,51],[2783,51,2605,53],[2784,10,2606,16],[2784,16,2606,22,"castlingTo"],[2784,26,2606,32],[2784,29,2606,35,"move"],[2784,33,2606,39],[2784,34,2606,40,"to"],[2784,36,2606,42],[2784,39,2606,45],[2784,40,2606,46],[2785,10,2607,16],[2785,16,2607,22,"castlingFrom"],[2785,28,2607,34],[2785,31,2607,37,"move"],[2785,35,2607,41],[2785,36,2607,42,"to"],[2785,38,2607,44],[2785,41,2607,47],[2785,42,2607,48],[2786,10,2608,16],[2786,14,2608,20],[2786,15,2608,21,"_movePiece"],[2786,25,2608,31],[2786,26,2608,32,"castlingFrom"],[2786,38,2608,44],[2786,40,2608,46,"castlingTo"],[2786,50,2608,56],[2786,51,2608,57],[2787,8,2609,12],[2788,8,2610,12],[2789,8,2611,12],[2789,12,2611,16],[2789,13,2611,17,"_castling"],[2789,22,2611,26],[2789,23,2611,27,"us"],[2789,25,2611,29],[2789,26,2611,30],[2789,29,2611,33],[2789,30,2611,34],[2790,6,2612,8],[2791,6,2613,8],[2792,6,2614,8],[2792,10,2614,12],[2792,14,2614,16],[2792,15,2614,17,"_castling"],[2792,24,2614,26],[2792,25,2614,27,"us"],[2792,27,2614,29],[2792,28,2614,30],[2792,30,2614,32],[2793,8,2615,12],[2793,13,2615,17],[2793,17,2615,21,"i"],[2793,18,2615,22],[2793,21,2615,25],[2793,22,2615,26],[2793,24,2615,28,"len"],[2793,27,2615,31],[2793,30,2615,34,"ROOKS"],[2793,35,2615,39],[2793,36,2615,40,"us"],[2793,38,2615,42],[2793,39,2615,43],[2793,40,2615,44,"length"],[2793,46,2615,50],[2793,48,2615,52,"i"],[2793,49,2615,53],[2793,52,2615,56,"len"],[2793,55,2615,59],[2793,57,2615,61,"i"],[2793,58,2615,62],[2793,60,2615,64],[2793,62,2615,66],[2794,10,2616,16],[2794,14,2616,20,"move"],[2794,18,2616,24],[2794,19,2616,25,"from"],[2794,23,2616,29],[2794,28,2616,34,"ROOKS"],[2794,33,2616,39],[2794,34,2616,40,"us"],[2794,36,2616,42],[2794,37,2616,43],[2794,38,2616,44,"i"],[2794,39,2616,45],[2794,40,2616,46],[2794,41,2616,47,"square"],[2794,47,2616,53],[2794,51,2617,20],[2794,55,2617,24],[2794,56,2617,25,"_castling"],[2794,65,2617,34],[2794,66,2617,35,"us"],[2794,68,2617,37],[2794,69,2617,38],[2794,72,2617,41,"ROOKS"],[2794,77,2617,46],[2794,78,2617,47,"us"],[2794,80,2617,49],[2794,81,2617,50],[2794,82,2617,51,"i"],[2794,83,2617,52],[2794,84,2617,53],[2794,85,2617,54,"flag"],[2794,89,2617,58],[2794,91,2617,60],[2795,12,2618,20],[2795,16,2618,24],[2795,17,2618,25,"_castling"],[2795,26,2618,34],[2795,27,2618,35,"us"],[2795,29,2618,37],[2795,30,2618,38],[2795,34,2618,42,"ROOKS"],[2795,39,2618,47],[2795,40,2618,48,"us"],[2795,42,2618,50],[2795,43,2618,51],[2795,44,2618,52,"i"],[2795,45,2618,53],[2795,46,2618,54],[2795,47,2618,55,"flag"],[2795,51,2618,59],[2796,12,2619,20],[2797,10,2620,16],[2798,8,2621,12],[2799,6,2622,8],[2800,6,2623,8],[2801,6,2624,8],[2801,10,2624,12],[2801,14,2624,16],[2801,15,2624,17,"_castling"],[2801,24,2624,26],[2801,25,2624,27,"them"],[2801,29,2624,31],[2801,30,2624,32],[2801,32,2624,34],[2802,8,2625,12],[2802,13,2625,17],[2802,17,2625,21,"i"],[2802,18,2625,22],[2802,21,2625,25],[2802,22,2625,26],[2802,24,2625,28,"len"],[2802,27,2625,31],[2802,30,2625,34,"ROOKS"],[2802,35,2625,39],[2802,36,2625,40,"them"],[2802,40,2625,44],[2802,41,2625,45],[2802,42,2625,46,"length"],[2802,48,2625,52],[2802,50,2625,54,"i"],[2802,51,2625,55],[2802,54,2625,58,"len"],[2802,57,2625,61],[2802,59,2625,63,"i"],[2802,60,2625,64],[2802,62,2625,66],[2802,64,2625,68],[2803,10,2626,16],[2803,14,2626,20,"move"],[2803,18,2626,24],[2803,19,2626,25,"to"],[2803,21,2626,27],[2803,26,2626,32,"ROOKS"],[2803,31,2626,37],[2803,32,2626,38,"them"],[2803,36,2626,42],[2803,37,2626,43],[2803,38,2626,44,"i"],[2803,39,2626,45],[2803,40,2626,46],[2803,41,2626,47,"square"],[2803,47,2626,53],[2803,51,2627,20],[2803,55,2627,24],[2803,56,2627,25,"_castling"],[2803,65,2627,34],[2803,66,2627,35,"them"],[2803,70,2627,39],[2803,71,2627,40],[2803,74,2627,43,"ROOKS"],[2803,79,2627,48],[2803,80,2627,49,"them"],[2803,84,2627,53],[2803,85,2627,54],[2803,86,2627,55,"i"],[2803,87,2627,56],[2803,88,2627,57],[2803,89,2627,58,"flag"],[2803,93,2627,62],[2803,95,2627,64],[2804,12,2628,20],[2804,16,2628,24],[2804,17,2628,25,"_castling"],[2804,26,2628,34],[2804,27,2628,35,"them"],[2804,31,2628,39],[2804,32,2628,40],[2804,36,2628,44,"ROOKS"],[2804,41,2628,49],[2804,42,2628,50,"them"],[2804,46,2628,54],[2804,47,2628,55],[2804,48,2628,56,"i"],[2804,49,2628,57],[2804,50,2628,58],[2804,51,2628,59,"flag"],[2804,55,2628,63],[2805,12,2629,20],[2806,10,2630,16],[2807,8,2631,12],[2808,6,2632,8],[2809,6,2633,8],[2809,10,2633,12],[2809,11,2633,13,"_hash"],[2809,16,2633,18],[2809,20,2633,22],[2809,24,2633,26],[2809,25,2633,27,"_castlingKey"],[2809,37,2633,39],[2809,38,2633,40],[2809,39,2633,41],[2810,6,2634,8],[2811,6,2635,8],[2811,10,2635,12,"move"],[2811,14,2635,16],[2811,15,2635,17,"flags"],[2811,20,2635,22],[2811,23,2635,25,"BITS"],[2811,27,2635,29],[2811,28,2635,30,"BIG_PAWN"],[2811,36,2635,38],[2811,38,2635,40],[2812,8,2636,12],[2812,12,2636,16,"epSquare"],[2812,20,2636,24],[2813,8,2637,12],[2813,12,2637,16,"us"],[2813,14,2637,18],[2813,19,2637,23,"BLACK"],[2813,24,2637,28],[2813,26,2637,30],[2814,10,2638,16,"epSquare"],[2814,18,2638,24],[2814,21,2638,27,"move"],[2814,25,2638,31],[2814,26,2638,32,"to"],[2814,28,2638,34],[2814,31,2638,37],[2814,33,2638,39],[2815,8,2639,12],[2815,9,2639,13],[2815,15,2640,17],[2816,10,2641,16,"epSquare"],[2816,18,2641,24],[2816,21,2641,27,"move"],[2816,25,2641,31],[2816,26,2641,32,"to"],[2816,28,2641,34],[2816,31,2641,37],[2816,33,2641,39],[2817,8,2642,12],[2818,8,2643,12],[2818,12,2643,17],[2818,14,2643,20,"move"],[2818,18,2643,24],[2818,19,2643,25,"to"],[2818,21,2643,27],[2818,24,2643,30],[2818,25,2643,31],[2818,28,2643,35],[2818,32,2643,39],[2818,33,2643,40],[2818,37,2644,16],[2818,41,2644,20],[2818,42,2644,21,"_board"],[2818,48,2644,27],[2818,49,2644,28,"move"],[2818,53,2644,32],[2818,54,2644,33,"to"],[2818,56,2644,35],[2818,59,2644,38],[2818,60,2644,39],[2818,61,2644,40],[2818,63,2644,42,"type"],[2818,67,2644,46],[2818,72,2644,51,"PAWN"],[2818,76,2644,55],[2818,80,2645,16],[2818,84,2645,20],[2818,85,2645,21,"_board"],[2818,91,2645,27],[2818,92,2645,28,"move"],[2818,96,2645,32],[2818,97,2645,33,"to"],[2818,99,2645,35],[2818,102,2645,38],[2818,103,2645,39],[2818,104,2645,40],[2818,106,2645,42,"color"],[2818,111,2645,47],[2818,116,2645,52,"them"],[2818,120,2645,56],[2818,124,2646,17],[2818,126,2646,20,"move"],[2818,130,2646,24],[2818,131,2646,25,"to"],[2818,133,2646,27],[2818,136,2646,30],[2818,137,2646,31],[2818,140,2646,35],[2818,144,2646,39],[2818,145,2646,40],[2818,149,2647,20],[2818,153,2647,24],[2818,154,2647,25,"_board"],[2818,160,2647,31],[2818,161,2647,32,"move"],[2818,165,2647,36],[2818,166,2647,37,"to"],[2818,168,2647,39],[2818,171,2647,42],[2818,172,2647,43],[2818,173,2647,44],[2818,175,2647,46,"type"],[2818,179,2647,50],[2818,184,2647,55,"PAWN"],[2818,188,2647,59],[2818,192,2648,20],[2818,196,2648,24],[2818,197,2648,25,"_board"],[2818,203,2648,31],[2818,204,2648,32,"move"],[2818,208,2648,36],[2818,209,2648,37,"to"],[2818,211,2648,39],[2818,214,2648,42],[2818,215,2648,43],[2818,216,2648,44],[2818,218,2648,46,"color"],[2818,223,2648,51],[2818,228,2648,56,"them"],[2818,232,2648,61],[2818,234,2648,63],[2819,10,2649,16],[2819,14,2649,20],[2819,15,2649,21,"_epSquare"],[2819,24,2649,30],[2819,27,2649,33,"epSquare"],[2819,35,2649,41],[2820,10,2650,16],[2820,14,2650,20],[2820,15,2650,21,"_hash"],[2820,20,2650,26],[2820,24,2650,30],[2820,28,2650,34],[2820,29,2650,35,"_epKey"],[2820,35,2650,41],[2820,36,2650,42],[2820,37,2650,43],[2821,8,2651,12],[2821,9,2651,13],[2821,15,2652,17],[2822,10,2653,16],[2822,14,2653,20],[2822,15,2653,21,"_epSquare"],[2822,24,2653,30],[2822,27,2653,33,"EMPTY"],[2822,32,2653,38],[2823,8,2654,12],[2824,6,2655,8],[2824,7,2655,9],[2824,13,2656,13],[2825,8,2657,12],[2825,12,2657,16],[2825,13,2657,17,"_epSquare"],[2825,22,2657,26],[2825,25,2657,29,"EMPTY"],[2825,30,2657,34],[2826,6,2658,8],[2827,6,2659,8],[2828,6,2660,8],[2828,10,2660,12,"move"],[2828,14,2660,16],[2828,15,2660,17,"piece"],[2828,20,2660,22],[2828,25,2660,27,"PAWN"],[2828,29,2660,31],[2828,31,2660,33],[2829,8,2661,12],[2829,12,2661,16],[2829,13,2661,17,"_halfMoves"],[2829,23,2661,27],[2829,26,2661,30],[2829,27,2661,31],[2830,6,2662,8],[2830,7,2662,9],[2830,13,2663,13],[2830,17,2663,17,"move"],[2830,21,2663,21],[2830,22,2663,22,"flags"],[2830,27,2663,27],[2830,31,2663,31,"BITS"],[2830,35,2663,35],[2830,36,2663,36,"CAPTURE"],[2830,43,2663,43],[2830,46,2663,46,"BITS"],[2830,50,2663,50],[2830,51,2663,51,"EP_CAPTURE"],[2830,61,2663,61],[2830,62,2663,62],[2830,64,2663,64],[2831,8,2664,12],[2831,12,2664,16],[2831,13,2664,17,"_halfMoves"],[2831,23,2664,27],[2831,26,2664,30],[2831,27,2664,31],[2832,6,2665,8],[2832,7,2665,9],[2832,13,2666,13],[2833,8,2667,12],[2833,12,2667,16],[2833,13,2667,17,"_halfMoves"],[2833,23,2667,27],[2833,25,2667,29],[2834,6,2668,8],[2835,6,2669,8],[2835,10,2669,12,"us"],[2835,12,2669,14],[2835,17,2669,19,"BLACK"],[2835,22,2669,24],[2835,24,2669,26],[2836,8,2670,12],[2836,12,2670,16],[2836,13,2670,17,"_moveNumber"],[2836,24,2670,28],[2836,26,2670,30],[2837,6,2671,8],[2838,6,2672,8],[2838,10,2672,12],[2838,11,2672,13,"_turn"],[2838,16,2672,18],[2838,19,2672,21,"them"],[2838,23,2672,25],[2839,6,2673,8],[2839,10,2673,12],[2839,11,2673,13,"_hash"],[2839,16,2673,18],[2839,20,2673,22,"SIDE_KEY"],[2839,28,2673,30],[2840,4,2674,4],[2841,4,2675,4,"undo"],[2841,8,2675,8,"undo"],[2841,9,2675,8],[2841,11,2675,11],[2842,6,2676,8],[2842,12,2676,14,"hash"],[2842,16,2676,18],[2842,19,2676,21],[2842,23,2676,25],[2842,24,2676,26,"_hash"],[2842,29,2676,31],[2843,6,2677,8],[2843,12,2677,14,"move"],[2843,16,2677,18],[2843,19,2677,21],[2843,23,2677,25],[2843,24,2677,26,"_undoMove"],[2843,33,2677,35],[2843,34,2677,36],[2843,35,2677,37],[2844,6,2678,8],[2844,10,2678,12,"move"],[2844,14,2678,16],[2844,16,2678,18],[2845,8,2679,12],[2845,14,2679,18,"prettyMove"],[2845,24,2679,28],[2845,27,2679,31],[2845,31,2679,35,"Move"],[2845,35,2679,39],[2845,36,2679,40],[2845,40,2679,44],[2845,42,2679,46,"move"],[2845,46,2679,50],[2845,47,2679,51],[2846,8,2680,12],[2846,12,2680,16],[2846,13,2680,17,"_decPositionCount"],[2846,30,2680,34],[2846,31,2680,35,"hash"],[2846,35,2680,39],[2846,36,2680,40],[2847,8,2681,12],[2847,15,2681,19,"prettyMove"],[2847,25,2681,29],[2848,6,2682,8],[2849,6,2683,8],[2849,13,2683,15],[2849,17,2683,19],[2850,4,2684,4],[2851,4,2685,4,"_undoMove"],[2851,13,2685,13,"_undoMove"],[2851,14,2685,13],[2851,16,2685,16],[2852,6,2686,8],[2852,12,2686,14,"old"],[2852,15,2686,17],[2852,18,2686,20],[2852,22,2686,24],[2852,23,2686,25,"_history"],[2852,31,2686,33],[2852,32,2686,34,"pop"],[2852,35,2686,37],[2852,36,2686,38],[2852,37,2686,39],[2853,6,2687,8],[2853,10,2687,12,"old"],[2853,13,2687,15],[2853,18,2687,20,"undefined"],[2853,27,2687,29],[2853,29,2687,31],[2854,8,2688,12],[2854,15,2688,19],[2854,19,2688,23],[2855,6,2689,8],[2856,6,2690,8],[2856,10,2690,12],[2856,11,2690,13,"_hash"],[2856,16,2690,18],[2856,20,2690,22],[2856,24,2690,26],[2856,25,2690,27,"_epKey"],[2856,31,2690,33],[2856,32,2690,34],[2856,33,2690,35],[2857,6,2691,8],[2857,10,2691,12],[2857,11,2691,13,"_hash"],[2857,16,2691,18],[2857,20,2691,22],[2857,24,2691,26],[2857,25,2691,27,"_castlingKey"],[2857,37,2691,39],[2857,38,2691,40],[2857,39,2691,41],[2858,6,2692,8],[2858,12,2692,14,"move"],[2858,16,2692,18],[2858,19,2692,21,"old"],[2858,22,2692,24],[2858,23,2692,25,"move"],[2858,27,2692,29],[2859,6,2693,8],[2859,10,2693,12],[2859,11,2693,13,"_kings"],[2859,17,2693,19],[2859,20,2693,22,"old"],[2859,23,2693,25],[2859,24,2693,26,"kings"],[2859,29,2693,31],[2860,6,2694,8],[2860,10,2694,12],[2860,11,2694,13,"_turn"],[2860,16,2694,18],[2860,19,2694,21,"old"],[2860,22,2694,24],[2860,23,2694,25,"turn"],[2860,27,2694,29],[2861,6,2695,8],[2861,10,2695,12],[2861,11,2695,13,"_castling"],[2861,20,2695,22],[2861,23,2695,25,"old"],[2861,26,2695,28],[2861,27,2695,29,"castling"],[2861,35,2695,37],[2862,6,2696,8],[2862,10,2696,12],[2862,11,2696,13,"_epSquare"],[2862,20,2696,22],[2862,23,2696,25,"old"],[2862,26,2696,28],[2862,27,2696,29,"epSquare"],[2862,35,2696,37],[2863,6,2697,8],[2863,10,2697,12],[2863,11,2697,13,"_halfMoves"],[2863,21,2697,23],[2863,24,2697,26,"old"],[2863,27,2697,29],[2863,28,2697,30,"halfMoves"],[2863,37,2697,39],[2864,6,2698,8],[2864,10,2698,12],[2864,11,2698,13,"_moveNumber"],[2864,22,2698,24],[2864,25,2698,27,"old"],[2864,28,2698,30],[2864,29,2698,31,"moveNumber"],[2864,39,2698,41],[2865,6,2699,8],[2865,10,2699,12],[2865,11,2699,13,"_hash"],[2865,16,2699,18],[2865,20,2699,22],[2865,24,2699,26],[2865,25,2699,27,"_epKey"],[2865,31,2699,33],[2865,32,2699,34],[2865,33,2699,35],[2866,6,2700,8],[2866,10,2700,12],[2866,11,2700,13,"_hash"],[2866,16,2700,18],[2866,20,2700,22],[2866,24,2700,26],[2866,25,2700,27,"_castlingKey"],[2866,37,2700,39],[2866,38,2700,40],[2866,39,2700,41],[2867,6,2701,8],[2867,10,2701,12],[2867,11,2701,13,"_hash"],[2867,16,2701,18],[2867,20,2701,22,"SIDE_KEY"],[2867,28,2701,30],[2868,6,2702,8],[2868,12,2702,14,"us"],[2868,14,2702,16],[2868,17,2702,19],[2868,21,2702,23],[2868,22,2702,24,"_turn"],[2868,27,2702,29],[2869,6,2703,8],[2869,12,2703,14,"them"],[2869,16,2703,18],[2869,19,2703,21,"swapColor"],[2869,28,2703,30],[2869,29,2703,31,"us"],[2869,31,2703,33],[2869,32,2703,34],[2870,6,2704,8],[2870,10,2704,12,"move"],[2870,14,2704,16],[2870,15,2704,17,"flags"],[2870,20,2704,22],[2870,23,2704,25,"BITS"],[2870,27,2704,29],[2870,28,2704,30,"NULL_MOVE"],[2870,37,2704,39],[2870,39,2704,41],[2871,8,2705,12],[2871,15,2705,19,"move"],[2871,19,2705,23],[2872,6,2706,8],[2873,6,2707,8],[2873,10,2707,12],[2873,11,2707,13,"_movePiece"],[2873,21,2707,23],[2873,22,2707,24,"move"],[2873,26,2707,28],[2873,27,2707,29,"to"],[2873,29,2707,31],[2873,31,2707,33,"move"],[2873,35,2707,37],[2873,36,2707,38,"from"],[2873,40,2707,42],[2873,41,2707,43],[2874,6,2708,8],[2875,6,2709,8],[2875,10,2709,12,"move"],[2875,14,2709,16],[2875,15,2709,17,"piece"],[2875,20,2709,22],[2875,22,2709,24],[2876,8,2710,12],[2876,12,2710,16],[2876,13,2710,17,"_clear"],[2876,19,2710,23],[2876,20,2710,24,"move"],[2876,24,2710,28],[2876,25,2710,29,"from"],[2876,29,2710,33],[2876,30,2710,34],[2877,8,2711,12],[2877,12,2711,16],[2877,13,2711,17,"_set"],[2877,17,2711,21],[2877,18,2711,22,"move"],[2877,22,2711,26],[2877,23,2711,27,"from"],[2877,27,2711,31],[2877,29,2711,33],[2878,10,2711,35,"type"],[2878,14,2711,39],[2878,16,2711,41,"move"],[2878,20,2711,45],[2878,21,2711,46,"piece"],[2878,26,2711,51],[2879,10,2711,53,"color"],[2879,15,2711,58],[2879,17,2711,60,"us"],[2880,8,2711,63],[2880,9,2711,64],[2880,10,2711,65],[2881,6,2712,8],[2882,6,2713,8],[2882,10,2713,12,"move"],[2882,14,2713,16],[2882,15,2713,17,"captured"],[2882,23,2713,25],[2882,25,2713,27],[2883,8,2714,12],[2883,12,2714,16,"move"],[2883,16,2714,20],[2883,17,2714,21,"flags"],[2883,22,2714,26],[2883,25,2714,29,"BITS"],[2883,29,2714,33],[2883,30,2714,34,"EP_CAPTURE"],[2883,40,2714,44],[2883,42,2714,46],[2884,10,2715,16],[2885,10,2716,16],[2885,14,2716,20,"index"],[2885,19,2716,25],[2886,10,2717,16],[2886,14,2717,20,"us"],[2886,16,2717,22],[2886,21,2717,27,"BLACK"],[2886,26,2717,32],[2886,28,2717,34],[2887,12,2718,20,"index"],[2887,17,2718,25],[2887,20,2718,28,"move"],[2887,24,2718,32],[2887,25,2718,33,"to"],[2887,27,2718,35],[2887,30,2718,38],[2887,32,2718,40],[2888,10,2719,16],[2888,11,2719,17],[2888,17,2720,21],[2889,12,2721,20,"index"],[2889,17,2721,25],[2889,20,2721,28,"move"],[2889,24,2721,32],[2889,25,2721,33,"to"],[2889,27,2721,35],[2889,30,2721,38],[2889,32,2721,40],[2890,10,2722,16],[2891,10,2723,16],[2891,14,2723,20],[2891,15,2723,21,"_set"],[2891,19,2723,25],[2891,20,2723,26,"index"],[2891,25,2723,31],[2891,27,2723,33],[2892,12,2723,35,"type"],[2892,16,2723,39],[2892,18,2723,41,"PAWN"],[2892,22,2723,45],[2893,12,2723,47,"color"],[2893,17,2723,52],[2893,19,2723,54,"them"],[2894,10,2723,59],[2894,11,2723,60],[2894,12,2723,61],[2895,8,2724,12],[2895,9,2724,13],[2895,15,2725,17],[2896,10,2726,16],[2897,10,2727,16],[2897,14,2727,20],[2897,15,2727,21,"_set"],[2897,19,2727,25],[2897,20,2727,26,"move"],[2897,24,2727,30],[2897,25,2727,31,"to"],[2897,27,2727,33],[2897,29,2727,35],[2898,12,2727,37,"type"],[2898,16,2727,41],[2898,18,2727,43,"move"],[2898,22,2727,47],[2898,23,2727,48,"captured"],[2898,31,2727,56],[2899,12,2727,58,"color"],[2899,17,2727,63],[2899,19,2727,65,"them"],[2900,10,2727,70],[2900,11,2727,71],[2900,12,2727,72],[2901,8,2728,12],[2902,6,2729,8],[2903,6,2730,8],[2903,10,2730,12,"move"],[2903,14,2730,16],[2903,15,2730,17,"flags"],[2903,20,2730,22],[2903,24,2730,26,"BITS"],[2903,28,2730,30],[2903,29,2730,31,"KSIDE_CASTLE"],[2903,41,2730,43],[2903,44,2730,46,"BITS"],[2903,48,2730,50],[2903,49,2730,51,"QSIDE_CASTLE"],[2903,61,2730,63],[2903,62,2730,64],[2903,64,2730,66],[2904,8,2731,12],[2904,12,2731,16,"castlingTo"],[2904,22,2731,26],[2904,24,2731,28,"castlingFrom"],[2904,36,2731,40],[2905,8,2732,12],[2905,12,2732,16,"move"],[2905,16,2732,20],[2905,17,2732,21,"flags"],[2905,22,2732,26],[2905,25,2732,29,"BITS"],[2905,29,2732,33],[2905,30,2732,34,"KSIDE_CASTLE"],[2905,42,2732,46],[2905,44,2732,48],[2906,10,2733,16,"castlingTo"],[2906,20,2733,26],[2906,23,2733,29,"move"],[2906,27,2733,33],[2906,28,2733,34,"to"],[2906,30,2733,36],[2906,33,2733,39],[2906,34,2733,40],[2907,10,2734,16,"castlingFrom"],[2907,22,2734,28],[2907,25,2734,31,"move"],[2907,29,2734,35],[2907,30,2734,36,"to"],[2907,32,2734,38],[2907,35,2734,41],[2907,36,2734,42],[2908,8,2735,12],[2908,9,2735,13],[2908,15,2736,17],[2909,10,2737,16,"castlingTo"],[2909,20,2737,26],[2909,23,2737,29,"move"],[2909,27,2737,33],[2909,28,2737,34,"to"],[2909,30,2737,36],[2909,33,2737,39],[2909,34,2737,40],[2910,10,2738,16,"castlingFrom"],[2910,22,2738,28],[2910,25,2738,31,"move"],[2910,29,2738,35],[2910,30,2738,36,"to"],[2910,32,2738,38],[2910,35,2738,41],[2910,36,2738,42],[2911,8,2739,12],[2912,8,2740,12],[2912,12,2740,16],[2912,13,2740,17,"_movePiece"],[2912,23,2740,27],[2912,24,2740,28,"castlingFrom"],[2912,36,2740,40],[2912,38,2740,42,"castlingTo"],[2912,48,2740,52],[2912,49,2740,53],[2913,6,2741,8],[2914,6,2742,8],[2914,13,2742,15,"move"],[2914,17,2742,19],[2915,4,2743,4],[2916,4,2744,4,"pgn"],[2916,7,2744,7,"pgn"],[2916,8,2744,8],[2917,6,2744,10,"newline"],[2917,13,2744,17],[2917,16,2744,20],[2917,20,2744,24],[2918,6,2744,26,"maxWidth"],[2918,14,2744,34],[2918,17,2744,37],[2919,4,2744,40],[2919,5,2744,41],[2919,8,2744,44],[2919,9,2744,45],[2919,10,2744,46],[2919,12,2744,48],[2920,6,2745,8],[2921,0,2746,0],[2922,0,2747,0],[2923,0,2748,0],[2924,6,2749,8],[2924,12,2749,14,"result"],[2924,18,2749,20],[2924,21,2749,23],[2924,23,2749,25],[2925,6,2750,8],[2925,10,2750,12,"headerExists"],[2925,22,2750,24],[2925,25,2750,27],[2925,30,2750,32],[2926,6,2751,8],[2927,6,2752,8],[2927,11,2752,13],[2927,17,2752,19,"i"],[2927,18,2752,20],[2927,22,2752,24],[2927,26,2752,28],[2927,27,2752,29,"_header"],[2927,34,2752,36],[2927,36,2752,38],[2928,8,2753,12],[2929,0,2754,0],[2930,0,2755,0],[2931,0,2756,0],[2932,0,2757,0],[2933,0,2758,0],[2934,0,2759,0],[2935,8,2760,12],[2935,14,2760,18,"headerTag"],[2935,23,2760,27],[2935,26,2760,30],[2935,30,2760,34],[2935,31,2760,35,"_header"],[2935,38,2760,42],[2935,39,2760,43,"i"],[2935,40,2760,44],[2935,41,2760,45],[2936,8,2761,12],[2936,12,2761,16,"headerTag"],[2936,21,2761,25],[2936,23,2762,16,"result"],[2936,29,2762,22],[2936,30,2762,23,"push"],[2936,34,2762,27],[2936,35,2762,28],[2936,39,2762,32,"i"],[2936,40,2762,33],[2936,45,2762,38],[2936,49,2762,42],[2936,50,2762,43,"_header"],[2936,57,2762,50],[2936,58,2762,51,"i"],[2936,59,2762,52],[2936,60,2762,53],[2936,64,2762,57],[2936,67,2762,60,"newline"],[2936,74,2762,67],[2936,75,2762,68],[2937,8,2763,12,"headerExists"],[2937,20,2763,24],[2937,23,2763,27],[2937,27,2763,31],[2938,6,2764,8],[2939,6,2765,8],[2939,10,2765,12,"headerExists"],[2939,22,2765,24],[2939,26,2765,28],[2939,30,2765,32],[2939,31,2765,33,"_history"],[2939,39,2765,41],[2939,40,2765,42,"length"],[2939,46,2765,48],[2939,48,2765,50],[2940,8,2766,12,"result"],[2940,14,2766,18],[2940,15,2766,19,"push"],[2940,19,2766,23],[2940,20,2766,24,"newline"],[2940,27,2766,31],[2940,28,2766,32],[2941,6,2767,8],[2942,6,2768,8],[2942,12,2768,14,"appendComment"],[2942,25,2768,27],[2942,28,2768,31,"moveString"],[2942,38,2768,41],[2942,42,2768,46],[2943,8,2769,12],[2943,14,2769,18,"comment"],[2943,21,2769,25],[2943,24,2769,28],[2943,28,2769,32],[2943,29,2769,33,"_comments"],[2943,38,2769,42],[2943,39,2769,43],[2943,43,2769,47],[2943,44,2769,48,"fen"],[2943,47,2769,51],[2943,48,2769,52],[2943,49,2769,53],[2943,50,2769,54],[2944,8,2770,12],[2944,12,2770,16],[2944,19,2770,23,"comment"],[2944,26,2770,30],[2944,31,2770,35],[2944,42,2770,46],[2944,44,2770,48],[2945,10,2771,16],[2945,16,2771,22,"delimiter"],[2945,25,2771,31],[2945,28,2771,34,"moveString"],[2945,38,2771,44],[2945,39,2771,45,"length"],[2945,45,2771,51],[2945,48,2771,54],[2945,49,2771,55],[2945,52,2771,58],[2945,55,2771,61],[2945,58,2771,64],[2945,60,2771,66],[2946,10,2772,16,"moveString"],[2946,20,2772,26],[2946,23,2772,29],[2946,26,2772,32,"moveString"],[2946,36,2772,42],[2946,39,2772,45,"delimiter"],[2946,48,2772,54],[2946,52,2772,58,"comment"],[2946,59,2772,65],[2946,62,2772,68],[2947,8,2773,12],[2948,8,2774,12],[2948,15,2774,19,"moveString"],[2948,25,2774,29],[2949,6,2775,8],[2949,7,2775,9],[2950,6,2776,8],[2951,6,2777,8],[2951,12,2777,14,"reversedHistory"],[2951,27,2777,29],[2951,30,2777,32],[2951,32,2777,34],[2952,6,2778,8],[2952,13,2778,15],[2952,17,2778,19],[2952,18,2778,20,"_history"],[2952,26,2778,28],[2952,27,2778,29,"length"],[2952,33,2778,35],[2952,36,2778,38],[2952,37,2778,39],[2952,39,2778,41],[2953,8,2779,12,"reversedHistory"],[2953,23,2779,27],[2953,24,2779,28,"push"],[2953,28,2779,32],[2953,29,2779,33],[2953,33,2779,37],[2953,34,2779,38,"_undoMove"],[2953,43,2779,47],[2953,44,2779,48],[2953,45,2779,49],[2953,46,2779,50],[2954,6,2780,8],[2955,6,2781,8],[2955,12,2781,14,"moves"],[2955,17,2781,19],[2955,20,2781,22],[2955,22,2781,24],[2956,6,2782,8],[2956,10,2782,12,"moveString"],[2956,20,2782,22],[2956,23,2782,25],[2956,25,2782,27],[2957,6,2783,8],[2958,6,2784,8],[2958,10,2784,12,"reversedHistory"],[2958,25,2784,27],[2958,26,2784,28,"length"],[2958,32,2784,34],[2958,37,2784,39],[2958,38,2784,40],[2958,40,2784,42],[2959,8,2785,12,"moves"],[2959,13,2785,17],[2959,14,2785,18,"push"],[2959,18,2785,22],[2959,19,2785,23,"appendComment"],[2959,32,2785,36],[2959,33,2785,37],[2959,35,2785,39],[2959,36,2785,40],[2959,37,2785,41],[2960,6,2786,8],[2961,6,2787,8],[2962,6,2788,8],[2962,13,2788,15,"reversedHistory"],[2962,28,2788,30],[2962,29,2788,31,"length"],[2962,35,2788,37],[2962,38,2788,40],[2962,39,2788,41],[2962,41,2788,43],[2963,8,2789,12,"moveString"],[2963,18,2789,22],[2963,21,2789,25,"appendComment"],[2963,34,2789,38],[2963,35,2789,39,"moveString"],[2963,45,2789,49],[2963,46,2789,50],[2964,8,2790,12],[2964,14,2790,18,"move"],[2964,18,2790,22],[2964,21,2790,25,"reversedHistory"],[2964,36,2790,40],[2964,37,2790,41,"pop"],[2964,40,2790,44],[2964,41,2790,45],[2964,42,2790,46],[2965,8,2791,12],[2966,8,2792,12],[2966,12,2792,16],[2966,13,2792,17,"move"],[2966,17,2792,21],[2966,19,2792,23],[2967,10,2793,16],[2968,8,2794,12],[2969,8,2795,12],[2970,8,2796,12],[2970,12,2796,16],[2970,13,2796,17],[2970,17,2796,21],[2970,18,2796,22,"_history"],[2970,26,2796,30],[2970,27,2796,31,"length"],[2970,33,2796,37],[2970,37,2796,41,"move"],[2970,41,2796,45],[2970,42,2796,46,"color"],[2970,47,2796,51],[2970,52,2796,56],[2970,55,2796,59],[2970,57,2796,61],[2971,10,2797,16],[2971,16,2797,22,"prefix"],[2971,22,2797,28],[2971,25,2797,31],[2971,28,2797,34],[2971,32,2797,38],[2971,33,2797,39,"_moveNumber"],[2971,44,2797,50],[2971,51,2797,57],[2972,10,2798,16],[2973,10,2799,16,"moveString"],[2973,20,2799,26],[2973,23,2799,29,"moveString"],[2973,33,2799,39],[2973,36,2799,42],[2973,39,2799,45,"moveString"],[2973,49,2799,55],[2973,53,2799,59,"prefix"],[2973,59,2799,65],[2973,61,2799,67],[2973,64,2799,70,"prefix"],[2973,70,2799,76],[2974,8,2800,12],[2974,9,2800,13],[2974,15,2801,17],[2974,19,2801,21,"move"],[2974,23,2801,25],[2974,24,2801,26,"color"],[2974,29,2801,31],[2974,34,2801,36],[2974,37,2801,39],[2974,39,2801,41],[2975,10,2802,16],[2976,10,2803,16],[2976,14,2803,20,"moveString"],[2976,24,2803,30],[2976,25,2803,31,"length"],[2976,31,2803,37],[2976,33,2803,39],[2977,12,2804,20,"moves"],[2977,17,2804,25],[2977,18,2804,26,"push"],[2977,22,2804,30],[2977,23,2804,31,"moveString"],[2977,33,2804,41],[2977,34,2804,42],[2978,10,2805,16],[2979,10,2806,16,"moveString"],[2979,20,2806,26],[2979,23,2806,29],[2979,27,2806,33],[2979,28,2806,34,"_moveNumber"],[2979,39,2806,45],[2979,42,2806,48],[2979,45,2806,51],[2980,8,2807,12],[2981,8,2808,12,"moveString"],[2981,18,2808,22],[2981,21,2809,16,"moveString"],[2981,31,2809,26],[2981,34,2809,29],[2981,37,2809,32],[2981,40,2809,35],[2981,44,2809,39],[2981,45,2809,40,"_moveToSan"],[2981,55,2809,50],[2981,56,2809,51,"move"],[2981,60,2809,55],[2981,62,2809,57],[2981,66,2809,61],[2981,67,2809,62,"_moves"],[2981,73,2809,68],[2981,74,2809,69],[2982,10,2809,71,"legal"],[2982,15,2809,76],[2982,17,2809,78],[2983,8,2809,83],[2983,9,2809,84],[2983,10,2809,85],[2983,11,2809,86],[2984,8,2810,12],[2984,12,2810,16],[2984,13,2810,17,"_makeMove"],[2984,22,2810,26],[2984,23,2810,27,"move"],[2984,27,2810,31],[2984,28,2810,32],[2985,6,2811,8],[2986,6,2812,8],[2987,6,2813,8],[2987,10,2813,12,"moveString"],[2987,20,2813,22],[2987,21,2813,23,"length"],[2987,27,2813,29],[2987,29,2813,31],[2988,8,2814,12,"moves"],[2988,13,2814,17],[2988,14,2814,18,"push"],[2988,18,2814,22],[2988,19,2814,23,"appendComment"],[2988,32,2814,36],[2988,33,2814,37,"moveString"],[2988,43,2814,47],[2988,44,2814,48],[2988,45,2814,49],[2989,6,2815,8],[2990,6,2816,8],[2991,6,2817,8,"moves"],[2991,11,2817,13],[2991,12,2817,14,"push"],[2991,16,2817,18],[2991,17,2817,19],[2991,21,2817,23],[2991,22,2817,24,"_header"],[2991,29,2817,31],[2991,30,2817,32,"Result"],[2991,36,2817,38],[2991,40,2817,42],[2991,43,2817,45],[2991,44,2817,46],[2992,6,2818,8],[2993,0,2819,0],[2994,0,2820,0],[2995,0,2821,0],[2996,6,2822,8],[2996,10,2822,12,"maxWidth"],[2996,18,2822,20],[2996,23,2822,25],[2996,24,2822,26],[2996,26,2822,28],[2997,8,2823,12],[2997,15,2823,19,"result"],[2997,21,2823,25],[2997,22,2823,26,"join"],[2997,26,2823,30],[2997,27,2823,31],[2997,29,2823,33],[2997,30,2823,34],[2997,33,2823,37,"moves"],[2997,38,2823,42],[2997,39,2823,43,"join"],[2997,43,2823,47],[2997,44,2823,48],[2997,47,2823,51],[2997,48,2823,52],[2998,6,2824,8],[2999,6,2825,8],[3000,6,2826,8],[3000,12,2826,14,"strip"],[3000,17,2826,19],[3000,20,2826,22],[3000,29,2826,22,"strip"],[3000,30,2826,22],[3000,32,2826,34],[3001,8,2827,12],[3001,12,2827,16,"result"],[3001,18,2827,22],[3001,19,2827,23,"length"],[3001,25,2827,29],[3001,28,2827,32],[3001,29,2827,33],[3001,33,2827,37,"result"],[3001,39,2827,43],[3001,40,2827,44,"result"],[3001,46,2827,50],[3001,47,2827,51,"length"],[3001,53,2827,57],[3001,56,2827,60],[3001,57,2827,61],[3001,58,2827,62],[3001,63,2827,67],[3001,66,2827,70],[3001,68,2827,72],[3002,10,2828,16,"result"],[3002,16,2828,22],[3002,17,2828,23,"pop"],[3002,20,2828,26],[3002,21,2828,27],[3002,22,2828,28],[3003,10,2829,16],[3003,17,2829,23],[3003,21,2829,27],[3004,8,2830,12],[3005,8,2831,12],[3005,15,2831,19],[3005,20,2831,24],[3006,6,2832,8],[3006,7,2832,9],[3007,6,2833,8],[3008,6,2834,8],[3008,12,2834,14,"wrapComment"],[3008,23,2834,25],[3008,26,2834,28],[3008,35,2834,28,"wrapComment"],[3008,36,2834,38,"width"],[3008,41,2834,43],[3008,43,2834,45,"move"],[3008,47,2834,49],[3008,49,2834,51],[3009,8,2835,12],[3009,13,2835,17],[3009,19,2835,23,"token"],[3009,24,2835,28],[3009,28,2835,32,"move"],[3009,32,2835,36],[3009,33,2835,37,"split"],[3009,38,2835,42],[3009,39,2835,43],[3009,42,2835,46],[3009,43,2835,47],[3009,45,2835,49],[3010,10,2836,16],[3010,14,2836,20],[3010,15,2836,21,"token"],[3010,20,2836,26],[3010,22,2836,28],[3011,12,2837,20],[3012,10,2838,16],[3013,10,2839,16],[3013,14,2839,20,"width"],[3013,19,2839,25],[3013,22,2839,28,"token"],[3013,27,2839,33],[3013,28,2839,34,"length"],[3013,34,2839,40],[3013,37,2839,43,"maxWidth"],[3013,45,2839,51],[3013,47,2839,53],[3014,12,2840,20],[3014,19,2840,27,"strip"],[3014,24,2840,32],[3014,25,2840,33],[3014,26,2840,34],[3014,28,2840,36],[3015,14,2841,24,"width"],[3015,19,2841,29],[3015,21,2841,31],[3016,12,2842,20],[3017,12,2843,20,"result"],[3017,18,2843,26],[3017,19,2843,27,"push"],[3017,23,2843,31],[3017,24,2843,32,"newline"],[3017,31,2843,39],[3017,32,2843,40],[3018,12,2844,20,"width"],[3018,17,2844,25],[3018,20,2844,28],[3018,21,2844,29],[3019,10,2845,16],[3020,10,2846,16,"result"],[3020,16,2846,22],[3020,17,2846,23,"push"],[3020,21,2846,27],[3020,22,2846,28,"token"],[3020,27,2846,33],[3020,28,2846,34],[3021,10,2847,16,"width"],[3021,15,2847,21],[3021,19,2847,25,"token"],[3021,24,2847,30],[3021,25,2847,31,"length"],[3021,31,2847,37],[3022,10,2848,16,"result"],[3022,16,2848,22],[3022,17,2848,23,"push"],[3022,21,2848,27],[3022,22,2848,28],[3022,25,2848,31],[3022,26,2848,32],[3023,10,2849,16,"width"],[3023,15,2849,21],[3023,17,2849,23],[3024,8,2850,12],[3025,8,2851,12],[3025,12,2851,16,"strip"],[3025,17,2851,21],[3025,18,2851,22],[3025,19,2851,23],[3025,21,2851,25],[3026,10,2852,16,"width"],[3026,15,2852,21],[3026,17,2852,23],[3027,8,2853,12],[3028,8,2854,12],[3028,15,2854,19,"width"],[3028,20,2854,24],[3029,6,2855,8],[3029,7,2855,9],[3030,6,2856,8],[3031,6,2857,8],[3031,10,2857,12,"currentWidth"],[3031,22,2857,24],[3031,25,2857,27],[3031,26,2857,28],[3032,6,2858,8],[3032,11,2858,13],[3032,15,2858,17,"i"],[3032,16,2858,18],[3032,19,2858,21],[3032,20,2858,22],[3032,22,2858,24,"i"],[3032,23,2858,25],[3032,26,2858,28,"moves"],[3032,31,2858,33],[3032,32,2858,34,"length"],[3032,38,2858,40],[3032,40,2858,42,"i"],[3032,41,2858,43],[3032,43,2858,45],[3032,45,2858,47],[3033,8,2859,12],[3033,12,2859,16,"currentWidth"],[3033,24,2859,28],[3033,27,2859,31,"moves"],[3033,32,2859,36],[3033,33,2859,37,"i"],[3033,34,2859,38],[3033,35,2859,39],[3033,36,2859,40,"length"],[3033,42,2859,46],[3033,45,2859,49,"maxWidth"],[3033,53,2859,57],[3033,55,2859,59],[3034,10,2860,16],[3034,14,2860,20,"moves"],[3034,19,2860,25],[3034,20,2860,26,"i"],[3034,21,2860,27],[3034,22,2860,28],[3034,23,2860,29,"includes"],[3034,31,2860,37],[3034,32,2860,38],[3034,35,2860,41],[3034,36,2860,42],[3034,38,2860,44],[3035,12,2861,20,"currentWidth"],[3035,24,2861,32],[3035,27,2861,35,"wrapComment"],[3035,38,2861,46],[3035,39,2861,47,"currentWidth"],[3035,51,2861,59],[3035,53,2861,61,"moves"],[3035,58,2861,66],[3035,59,2861,67,"i"],[3035,60,2861,68],[3035,61,2861,69],[3035,62,2861,70],[3036,12,2862,20],[3037,10,2863,16],[3038,8,2864,12],[3039,8,2865,12],[3040,8,2866,12],[3040,12,2866,16,"currentWidth"],[3040,24,2866,28],[3040,27,2866,31,"moves"],[3040,32,2866,36],[3040,33,2866,37,"i"],[3040,34,2866,38],[3040,35,2866,39],[3040,36,2866,40,"length"],[3040,42,2866,46],[3040,45,2866,49,"maxWidth"],[3040,53,2866,57],[3040,57,2866,61,"i"],[3040,58,2866,62],[3040,63,2866,67],[3040,64,2866,68],[3040,66,2866,70],[3041,10,2867,16],[3042,10,2868,16],[3042,14,2868,20,"result"],[3042,20,2868,26],[3042,21,2868,27,"result"],[3042,27,2868,33],[3042,28,2868,34,"length"],[3042,34,2868,40],[3042,37,2868,43],[3042,38,2868,44],[3042,39,2868,45],[3042,44,2868,50],[3042,47,2868,53],[3042,49,2868,55],[3043,12,2869,20,"result"],[3043,18,2869,26],[3043,19,2869,27,"pop"],[3043,22,2869,30],[3043,23,2869,31],[3043,24,2869,32],[3044,10,2870,16],[3045,10,2871,16,"result"],[3045,16,2871,22],[3045,17,2871,23,"push"],[3045,21,2871,27],[3045,22,2871,28,"newline"],[3045,29,2871,35],[3045,30,2871,36],[3046,10,2872,16,"currentWidth"],[3046,22,2872,28],[3046,25,2872,31],[3046,26,2872,32],[3047,8,2873,12],[3047,9,2873,13],[3047,15,2874,17],[3047,19,2874,21,"i"],[3047,20,2874,22],[3047,25,2874,27],[3047,26,2874,28],[3047,28,2874,30],[3048,10,2875,16,"result"],[3048,16,2875,22],[3048,17,2875,23,"push"],[3048,21,2875,27],[3048,22,2875,28],[3048,25,2875,31],[3048,26,2875,32],[3049,10,2876,16,"currentWidth"],[3049,22,2876,28],[3049,24,2876,30],[3050,8,2877,12],[3051,8,2878,12,"result"],[3051,14,2878,18],[3051,15,2878,19,"push"],[3051,19,2878,23],[3051,20,2878,24,"moves"],[3051,25,2878,29],[3051,26,2878,30,"i"],[3051,27,2878,31],[3051,28,2878,32],[3051,29,2878,33],[3052,8,2879,12,"currentWidth"],[3052,20,2879,24],[3052,24,2879,28,"moves"],[3052,29,2879,33],[3052,30,2879,34,"i"],[3052,31,2879,35],[3052,32,2879,36],[3052,33,2879,37,"length"],[3052,39,2879,43],[3053,6,2880,8],[3054,6,2881,8],[3054,13,2881,15,"result"],[3054,19,2881,21],[3054,20,2881,22,"join"],[3054,24,2881,26],[3054,25,2881,27],[3054,27,2881,29],[3054,28,2881,30],[3055,4,2882,4],[3056,4,2883,4],[3057,0,2884,0],[3058,0,2885,0],[3059,4,2886,4,"header"],[3059,10,2886,10,"header"],[3059,11,2886,11],[3059,14,2886,14,"args"],[3059,18,2886,18],[3059,20,2886,20],[3060,6,2887,8],[3060,11,2887,13],[3060,15,2887,17,"i"],[3060,16,2887,18],[3060,19,2887,21],[3060,20,2887,22],[3060,22,2887,24,"i"],[3060,23,2887,25],[3060,26,2887,28,"args"],[3060,30,2887,32],[3060,31,2887,33,"length"],[3060,37,2887,39],[3060,39,2887,41,"i"],[3060,40,2887,42],[3060,44,2887,46],[3060,45,2887,47],[3060,47,2887,49],[3061,8,2888,12],[3061,12,2888,16],[3061,19,2888,23,"args"],[3061,23,2888,27],[3061,24,2888,28,"i"],[3061,25,2888,29],[3061,26,2888,30],[3061,31,2888,35],[3061,39,2888,43],[3061,43,2888,47],[3061,50,2888,54,"args"],[3061,54,2888,58],[3061,55,2888,59,"i"],[3061,56,2888,60],[3061,59,2888,63],[3061,60,2888,64],[3061,61,2888,65],[3061,66,2888,70],[3061,74,2888,78],[3061,76,2888,80],[3062,10,2889,16],[3062,14,2889,20],[3062,15,2889,21,"_header"],[3062,22,2889,28],[3062,23,2889,29,"args"],[3062,27,2889,33],[3062,28,2889,34,"i"],[3062,29,2889,35],[3062,30,2889,36],[3062,31,2889,37],[3062,34,2889,40,"args"],[3062,38,2889,44],[3062,39,2889,45,"i"],[3062,40,2889,46],[3062,43,2889,49],[3062,44,2889,50],[3062,45,2889,51],[3063,8,2890,12],[3064,6,2891,8],[3065,6,2892,8],[3065,13,2892,15],[3065,17,2892,19],[3065,18,2892,20,"_header"],[3065,25,2892,27],[3066,4,2893,4],[3067,4,2894,4],[3068,4,2895,4,"setHeader"],[3068,13,2895,13,"setHeader"],[3068,14,2895,14,"key"],[3068,17,2895,17],[3068,19,2895,19,"value"],[3068,24,2895,24],[3068,26,2895,26],[3069,6,2896,8],[3069,10,2896,12],[3069,11,2896,13,"_header"],[3069,18,2896,20],[3069,19,2896,21,"key"],[3069,22,2896,24],[3069,23,2896,25],[3069,26,2896,28,"value"],[3069,31,2896,33],[3069,35,2896,37,"SEVEN_TAG_ROSTER"],[3069,51,2896,53],[3069,52,2896,54,"key"],[3069,55,2896,57],[3069,56,2896,58],[3069,60,2896,62],[3069,64,2896,66],[3070,6,2897,8],[3070,13,2897,15],[3070,17,2897,19],[3070,18,2897,20,"getHeaders"],[3070,28,2897,30],[3070,29,2897,31],[3070,30,2897,32],[3071,4,2898,4],[3072,4,2899,4,"removeHeader"],[3072,16,2899,16,"removeHeader"],[3072,17,2899,17,"key"],[3072,20,2899,20],[3072,22,2899,22],[3073,6,2900,8],[3073,10,2900,12,"key"],[3073,13,2900,15],[3073,17,2900,19],[3073,21,2900,23],[3073,22,2900,24,"_header"],[3073,29,2900,31],[3073,31,2900,33],[3074,8,2901,12],[3074,12,2901,16],[3074,13,2901,17,"_header"],[3074,20,2901,24],[3074,21,2901,25,"key"],[3074,24,2901,28],[3074,25,2901,29],[3074,28,2901,32,"SEVEN_TAG_ROSTER"],[3074,44,2901,48],[3074,45,2901,49,"key"],[3074,48,2901,52],[3074,49,2901,53],[3074,53,2901,57],[3074,57,2901,61],[3075,8,2902,12],[3075,15,2902,19],[3075,19,2902,23],[3076,6,2903,8],[3077,6,2904,8],[3077,13,2904,15],[3077,18,2904,20],[3078,4,2905,4],[3079,4,2906,4],[3080,4,2907,4,"getHeaders"],[3080,14,2907,14,"getHeaders"],[3080,15,2907,14],[3080,17,2907,17],[3081,6,2908,8],[3081,12,2908,14,"nonNullHeaders"],[3081,26,2908,28],[3081,29,2908,31],[3081,30,2908,32],[3081,31,2908,33],[3082,6,2909,8],[3082,11,2909,13],[3082,17,2909,19],[3082,18,2909,20,"key"],[3082,21,2909,23],[3082,23,2909,25,"value"],[3082,28,2909,30],[3082,29,2909,31],[3082,33,2909,35,"Object"],[3082,39,2909,41],[3082,40,2909,42,"entries"],[3082,47,2909,49],[3082,48,2909,50],[3082,52,2909,54],[3082,53,2909,55,"_header"],[3082,60,2909,62],[3082,61,2909,63],[3082,63,2909,65],[3083,8,2910,12],[3083,12,2910,16,"value"],[3083,17,2910,21],[3083,22,2910,26],[3083,26,2910,30],[3083,28,2910,32],[3084,10,2911,16,"nonNullHeaders"],[3084,24,2911,30],[3084,25,2911,31,"key"],[3084,28,2911,34],[3084,29,2911,35],[3084,32,2911,38,"value"],[3084,37,2911,43],[3085,8,2912,12],[3086,6,2913,8],[3087,6,2914,8],[3087,13,2914,15,"nonNullHeaders"],[3087,27,2914,29],[3088,4,2915,4],[3089,4,2916,4,"loadPgn"],[3089,11,2916,11,"loadPgn"],[3089,12,2916,12,"pgn"],[3089,15,2916,15],[3089,17,2916,17],[3090,6,2916,19,"strict"],[3090,12,2916,25],[3090,15,2916,28],[3090,20,2916,33],[3091,6,2916,35,"newlineChar"],[3091,17,2916,46],[3091,20,2916,49],[3092,4,2916,58],[3092,5,2916,59],[3092,8,2916,62],[3092,9,2916,63],[3092,10,2916,64],[3092,12,2916,66],[3093,6,2917,8],[3094,6,2918,8],[3094,10,2918,12,"newlineChar"],[3094,21,2918,23],[3094,26,2918,28],[3094,33,2918,35],[3094,35,2918,37],[3095,8,2919,12,"pgn"],[3095,11,2919,15],[3095,14,2919,18,"pgn"],[3095,17,2919,21],[3095,18,2919,22,"replace"],[3095,25,2919,29],[3095,26,2919,30],[3095,30,2919,34,"RegExp"],[3095,36,2919,40],[3095,37,2919,41,"newlineChar"],[3095,48,2919,52],[3095,50,2919,54],[3095,53,2919,57],[3095,54,2919,58],[3095,56,2919,60],[3095,60,2919,64],[3095,61,2919,65],[3096,6,2920,8],[3097,6,2921,8],[3097,12,2921,14,"parsedPgn"],[3097,21,2921,23],[3097,24,2921,26,"peg$parse"],[3097,33,2921,35],[3097,34,2921,36,"pgn"],[3097,37,2921,39],[3097,38,2921,40],[3098,6,2922,8],[3099,6,2923,8],[3099,10,2923,12],[3099,11,2923,13,"reset"],[3099,16,2923,18],[3099,17,2923,19],[3099,18,2923,20],[3100,6,2924,8],[3101,6,2925,8],[3101,12,2925,14,"headers"],[3101,19,2925,21],[3101,22,2925,24,"parsedPgn"],[3101,31,2925,33],[3101,32,2925,34,"headers"],[3101,39,2925,41],[3102,6,2926,8],[3102,10,2926,12,"fen"],[3102,13,2926,15],[3102,16,2926,18],[3102,18,2926,20],[3103,6,2927,8],[3103,11,2927,13],[3103,17,2927,19,"key"],[3103,20,2927,22],[3103,24,2927,26,"headers"],[3103,31,2927,33],[3103,33,2927,35],[3104,8,2928,12],[3105,8,2929,12],[3105,12,2929,16,"key"],[3105,15,2929,19],[3105,16,2929,20,"toLowerCase"],[3105,27,2929,31],[3105,28,2929,32],[3105,29,2929,33],[3105,34,2929,38],[3105,39,2929,43],[3105,41,2929,45],[3106,10,2930,16,"fen"],[3106,13,2930,19],[3106,16,2930,22,"headers"],[3106,23,2930,29],[3106,24,2930,30,"key"],[3106,27,2930,33],[3106,28,2930,34],[3107,8,2931,12],[3108,8,2932,12],[3108,12,2932,16],[3108,13,2932,17,"header"],[3108,19,2932,23],[3108,20,2932,24,"key"],[3108,23,2932,27],[3108,25,2932,29,"headers"],[3108,32,2932,36],[3108,33,2932,37,"key"],[3108,36,2932,40],[3108,37,2932,41],[3108,38,2932,42],[3109,6,2933,8],[3110,6,2934,8],[3111,0,2935,0],[3112,0,2936,0],[3113,0,2937,0],[3114,6,2938,8],[3114,10,2938,12],[3114,11,2938,13,"strict"],[3114,17,2938,19],[3114,19,2938,21],[3115,8,2939,12],[3115,12,2939,16,"fen"],[3115,15,2939,19],[3115,17,2939,21],[3116,10,2940,16],[3116,14,2940,20],[3116,15,2940,21,"load"],[3116,19,2940,25],[3116,20,2940,26,"fen"],[3116,23,2940,29],[3116,25,2940,31],[3117,12,2940,33,"preserveHeaders"],[3117,27,2940,48],[3117,29,2940,50],[3118,10,2940,55],[3118,11,2940,56],[3118,12,2940,57],[3119,8,2941,12],[3120,6,2942,8],[3120,7,2942,9],[3120,13,2943,13],[3121,8,2944,12],[3122,0,2945,0],[3123,0,2946,0],[3124,0,2947,0],[3125,8,2948,12],[3125,12,2948,16,"headers"],[3125,19,2948,23],[3125,20,2948,24],[3125,27,2948,31],[3125,28,2948,32],[3125,33,2948,37],[3125,36,2948,40],[3125,38,2948,42],[3126,10,2949,16],[3126,14,2949,20],[3126,16,2949,22],[3126,21,2949,27],[3126,25,2949,31,"headers"],[3126,32,2949,38],[3126,33,2949,39],[3126,35,2949,41],[3127,12,2950,20],[3127,18,2950,26],[3127,22,2950,30,"Error"],[3127,27,2950,35],[3127,28,2950,36],[3127,82,2950,90],[3127,83,2950,91],[3128,10,2951,16],[3129,10,2952,16],[3130,10,2953,16],[3130,14,2953,20],[3130,15,2953,21,"load"],[3130,19,2953,25],[3130,20,2953,26,"headers"],[3130,27,2953,33],[3130,28,2953,34],[3130,33,2953,39],[3130,34,2953,40],[3130,36,2953,42],[3131,12,2953,44,"preserveHeaders"],[3131,27,2953,59],[3131,29,2953,61],[3132,10,2953,66],[3132,11,2953,67],[3132,12,2953,68],[3133,8,2954,12],[3134,6,2955,8],[3135,6,2956,8],[3135,10,2956,12,"node"],[3135,14,2956,16],[3135,17,2956,19,"parsedPgn"],[3135,26,2956,28],[3135,27,2956,29,"root"],[3135,31,2956,33],[3136,6,2957,8],[3136,13,2957,15,"node"],[3136,17,2957,19],[3136,19,2957,21],[3137,8,2958,12],[3137,12,2958,16,"node"],[3137,16,2958,20],[3137,17,2958,21,"move"],[3137,21,2958,25],[3137,23,2958,27],[3138,10,2959,16],[3138,16,2959,22,"move"],[3138,20,2959,26],[3138,23,2959,29],[3138,27,2959,33],[3138,28,2959,34,"_moveFromSan"],[3138,40,2959,46],[3138,41,2959,47,"node"],[3138,45,2959,51],[3138,46,2959,52,"move"],[3138,50,2959,56],[3138,52,2959,58,"strict"],[3138,58,2959,64],[3138,59,2959,65],[3139,10,2960,16],[3139,14,2960,20,"move"],[3139,18,2960,24],[3139,22,2960,28],[3139,26,2960,32],[3139,28,2960,34],[3140,12,2961,20],[3140,18,2961,26],[3140,22,2961,30,"Error"],[3140,27,2961,35],[3140,28,2961,36],[3140,52,2961,60,"node"],[3140,56,2961,64],[3140,57,2961,65,"move"],[3140,61,2961,69],[3140,63,2961,71],[3140,64,2961,72],[3141,10,2962,16],[3141,11,2962,17],[3141,17,2963,21],[3142,12,2964,20],[3142,16,2964,24],[3142,17,2964,25,"_makeMove"],[3142,26,2964,34],[3142,27,2964,35,"move"],[3142,31,2964,39],[3142,32,2964,40],[3143,12,2965,20],[3143,16,2965,24],[3143,17,2965,25,"_incPositionCount"],[3143,34,2965,42],[3143,35,2965,43],[3143,36,2965,44],[3144,10,2966,16],[3145,8,2967,12],[3146,8,2968,12],[3146,12,2968,16,"node"],[3146,16,2968,20],[3146,17,2968,21,"comment"],[3146,24,2968,28],[3146,29,2968,33,"undefined"],[3146,38,2968,42],[3146,40,2968,44],[3147,10,2969,16],[3147,14,2969,20],[3147,15,2969,21,"_comments"],[3147,24,2969,30],[3147,25,2969,31],[3147,29,2969,35],[3147,30,2969,36,"fen"],[3147,33,2969,39],[3147,34,2969,40],[3147,35,2969,41],[3147,36,2969,42],[3147,39,2969,45,"node"],[3147,43,2969,49],[3147,44,2969,50,"comment"],[3147,51,2969,57],[3148,8,2970,12],[3149,8,2971,12,"node"],[3149,12,2971,16],[3149,15,2971,19,"node"],[3149,19,2971,23],[3149,20,2971,24,"variations"],[3149,30,2971,34],[3149,31,2971,35],[3149,32,2971,36],[3149,33,2971,37],[3150,6,2972,8],[3151,6,2973,8],[3152,0,2974,0],[3153,0,2975,0],[3154,0,2976,0],[3155,0,2977,0],[3156,6,2978,8],[3156,12,2978,14,"result"],[3156,18,2978,20],[3156,21,2978,23,"parsedPgn"],[3156,30,2978,32],[3156,31,2978,33,"result"],[3156,37,2978,39],[3157,6,2979,8],[3157,10,2979,12,"result"],[3157,16,2979,18],[3157,20,2980,12,"Object"],[3157,26,2980,18],[3157,27,2980,19,"keys"],[3157,31,2980,23],[3157,32,2980,24],[3157,36,2980,28],[3157,37,2980,29,"_header"],[3157,44,2980,36],[3157,45,2980,37],[3157,46,2980,38,"length"],[3157,52,2980,44],[3157,56,2981,12],[3157,60,2981,16],[3157,61,2981,17,"_header"],[3157,68,2981,24],[3157,69,2981,25],[3157,77,2981,33],[3157,78,2981,34],[3157,83,2981,39,"result"],[3157,89,2981,45],[3157,91,2981,47],[3158,8,2982,12],[3158,12,2982,16],[3158,13,2982,17,"setHeader"],[3158,22,2982,26],[3158,23,2982,27],[3158,31,2982,35],[3158,33,2982,37,"result"],[3158,39,2982,43],[3158,40,2982,44],[3159,6,2983,8],[3160,4,2984,4],[3161,4,2985,4],[3162,0,2986,0],[3163,0,2987,0],[3164,0,2988,0],[3165,0,2989,0],[3166,0,2990,0],[3167,0,2991,0],[3168,0,2992,0],[3169,0,2993,0],[3170,0,2994,0],[3171,0,2995,0],[3172,4,2996,4,"_moveToSan"],[3172,14,2996,14,"_moveToSan"],[3172,15,2996,15,"move"],[3172,19,2996,19],[3172,21,2996,21,"moves"],[3172,26,2996,26],[3172,28,2996,28],[3173,6,2997,8],[3173,10,2997,12,"output"],[3173,16,2997,18],[3173,19,2997,21],[3173,21,2997,23],[3174,6,2998,8],[3174,10,2998,12,"move"],[3174,14,2998,16],[3174,15,2998,17,"flags"],[3174,20,2998,22],[3174,23,2998,25,"BITS"],[3174,27,2998,29],[3174,28,2998,30,"KSIDE_CASTLE"],[3174,40,2998,42],[3174,42,2998,44],[3175,8,2999,12,"output"],[3175,14,2999,18],[3175,17,2999,21],[3175,22,2999,26],[3176,6,3000,8],[3176,7,3000,9],[3176,13,3001,13],[3176,17,3001,17,"move"],[3176,21,3001,21],[3176,22,3001,22,"flags"],[3176,27,3001,27],[3176,30,3001,30,"BITS"],[3176,34,3001,34],[3176,35,3001,35,"QSIDE_CASTLE"],[3176,47,3001,47],[3176,49,3001,49],[3177,8,3002,12,"output"],[3177,14,3002,18],[3177,17,3002,21],[3177,24,3002,28],[3178,6,3003,8],[3178,7,3003,9],[3178,13,3004,13],[3178,17,3004,17,"move"],[3178,21,3004,21],[3178,22,3004,22,"flags"],[3178,27,3004,27],[3178,30,3004,30,"BITS"],[3178,34,3004,34],[3178,35,3004,35,"NULL_MOVE"],[3178,44,3004,44],[3178,46,3004,46],[3179,8,3005,12],[3179,15,3005,19,"SAN_NULLMOVE"],[3179,27,3005,31],[3180,6,3006,8],[3180,7,3006,9],[3180,13,3007,13],[3181,8,3008,12],[3181,12,3008,16,"move"],[3181,16,3008,20],[3181,17,3008,21,"piece"],[3181,22,3008,26],[3181,27,3008,31,"PAWN"],[3181,31,3008,35],[3181,33,3008,37],[3182,10,3009,16],[3182,16,3009,22,"disambiguator"],[3182,29,3009,35],[3182,32,3009,38,"getDisambiguator"],[3182,48,3009,54],[3182,49,3009,55,"move"],[3182,53,3009,59],[3182,55,3009,61,"moves"],[3182,60,3009,66],[3182,61,3009,67],[3183,10,3010,16,"output"],[3183,16,3010,22],[3183,20,3010,26,"move"],[3183,24,3010,30],[3183,25,3010,31,"piece"],[3183,30,3010,36],[3183,31,3010,37,"toUpperCase"],[3183,42,3010,48],[3183,43,3010,49],[3183,44,3010,50],[3183,47,3010,53,"disambiguator"],[3183,60,3010,66],[3184,8,3011,12],[3185,8,3012,12],[3185,12,3012,16,"move"],[3185,16,3012,20],[3185,17,3012,21,"flags"],[3185,22,3012,26],[3185,26,3012,30,"BITS"],[3185,30,3012,34],[3185,31,3012,35,"CAPTURE"],[3185,38,3012,42],[3185,41,3012,45,"BITS"],[3185,45,3012,49],[3185,46,3012,50,"EP_CAPTURE"],[3185,56,3012,60],[3185,57,3012,61],[3185,59,3012,63],[3186,10,3013,16],[3186,14,3013,20,"move"],[3186,18,3013,24],[3186,19,3013,25,"piece"],[3186,24,3013,30],[3186,29,3013,35,"PAWN"],[3186,33,3013,39],[3186,35,3013,41],[3187,12,3014,20,"output"],[3187,18,3014,26],[3187,22,3014,30,"algebraic"],[3187,31,3014,39],[3187,32,3014,40,"move"],[3187,36,3014,44],[3187,37,3014,45,"from"],[3187,41,3014,49],[3187,42,3014,50],[3187,43,3014,51],[3187,44,3014,52],[3187,45,3014,53],[3188,10,3015,16],[3189,10,3016,16,"output"],[3189,16,3016,22],[3189,20,3016,26],[3189,23,3016,29],[3190,8,3017,12],[3191,8,3018,12,"output"],[3191,14,3018,18],[3191,18,3018,22,"algebraic"],[3191,27,3018,31],[3191,28,3018,32,"move"],[3191,32,3018,36],[3191,33,3018,37,"to"],[3191,35,3018,39],[3191,36,3018,40],[3192,8,3019,12],[3192,12,3019,16,"move"],[3192,16,3019,20],[3192,17,3019,21,"promotion"],[3192,26,3019,30],[3192,28,3019,32],[3193,10,3020,16,"output"],[3193,16,3020,22],[3193,20,3020,26],[3193,23,3020,29],[3193,26,3020,32,"move"],[3193,30,3020,36],[3193,31,3020,37,"promotion"],[3193,40,3020,46],[3193,41,3020,47,"toUpperCase"],[3193,52,3020,58],[3193,53,3020,59],[3193,54,3020,60],[3194,8,3021,12],[3195,6,3022,8],[3196,6,3023,8],[3196,10,3023,12],[3196,11,3023,13,"_makeMove"],[3196,20,3023,22],[3196,21,3023,23,"move"],[3196,25,3023,27],[3196,26,3023,28],[3197,6,3024,8],[3197,10,3024,12],[3197,14,3024,16],[3197,15,3024,17,"isCheck"],[3197,22,3024,24],[3197,23,3024,25],[3197,24,3024,26],[3197,26,3024,28],[3198,8,3025,12],[3198,12,3025,16],[3198,16,3025,20],[3198,17,3025,21,"isCheckmate"],[3198,28,3025,32],[3198,29,3025,33],[3198,30,3025,34],[3198,32,3025,36],[3199,10,3026,16,"output"],[3199,16,3026,22],[3199,20,3026,26],[3199,23,3026,29],[3200,8,3027,12],[3200,9,3027,13],[3200,15,3028,17],[3201,10,3029,16,"output"],[3201,16,3029,22],[3201,20,3029,26],[3201,23,3029,29],[3202,8,3030,12],[3203,6,3031,8],[3204,6,3032,8],[3204,10,3032,12],[3204,11,3032,13,"_undoMove"],[3204,20,3032,22],[3204,21,3032,23],[3204,22,3032,24],[3205,6,3033,8],[3205,13,3033,15,"output"],[3205,19,3033,21],[3206,4,3034,4],[3207,4,3035,4],[3208,4,3036,4,"_moveFromSan"],[3208,16,3036,16,"_moveFromSan"],[3208,17,3036,17,"move"],[3208,21,3036,21],[3208,23,3036,23,"strict"],[3208,29,3036,29],[3208,32,3036,32],[3208,37,3036,37],[3208,39,3036,39],[3209,6,3037,8],[3210,6,3038,8],[3210,10,3038,12,"cleanMove"],[3210,19,3038,21],[3210,22,3038,24,"strippedSan"],[3210,33,3038,35],[3210,34,3038,36,"move"],[3210,38,3038,40],[3210,39,3038,41],[3211,6,3039,8],[3211,10,3039,12],[3211,11,3039,13,"strict"],[3211,17,3039,19],[3211,19,3039,21],[3212,8,3040,12],[3212,12,3040,16,"cleanMove"],[3212,21,3040,25],[3212,26,3040,30],[3212,31,3040,35],[3212,33,3040,37],[3213,10,3041,16,"cleanMove"],[3213,19,3041,25],[3213,22,3041,28],[3213,27,3041,33],[3214,8,3042,12],[3214,9,3042,13],[3214,15,3043,17],[3214,19,3043,21,"cleanMove"],[3214,28,3043,30],[3214,33,3043,35],[3214,40,3043,42],[3214,42,3043,44],[3215,10,3044,16,"cleanMove"],[3215,19,3044,25],[3215,22,3044,28],[3215,29,3044,35],[3216,8,3045,12],[3217,6,3046,8],[3218,6,3047,8],[3219,6,3048,8],[3219,10,3048,12,"cleanMove"],[3219,19,3048,21],[3219,23,3048,25,"SAN_NULLMOVE"],[3219,35,3048,37],[3219,37,3048,39],[3220,8,3049,12],[3220,14,3049,18,"res"],[3220,17,3049,21],[3220,20,3049,24],[3221,10,3050,16,"color"],[3221,15,3050,21],[3221,17,3050,23],[3221,21,3050,27],[3221,22,3050,28,"_turn"],[3221,27,3050,33],[3222,10,3051,16,"from"],[3222,14,3051,20],[3222,16,3051,22],[3222,17,3051,23],[3223,10,3052,16,"to"],[3223,12,3052,18],[3223,14,3052,20],[3223,15,3052,21],[3224,10,3053,16,"piece"],[3224,15,3053,21],[3224,17,3053,23],[3224,20,3053,26],[3225,10,3054,16,"flags"],[3225,15,3054,21],[3225,17,3054,23,"BITS"],[3225,21,3054,27],[3225,22,3054,28,"NULL_MOVE"],[3226,8,3055,12],[3226,9,3055,13],[3227,8,3056,12],[3227,15,3056,19,"res"],[3227,18,3056,22],[3228,6,3057,8],[3229,6,3058,8],[3229,10,3058,12,"pieceType"],[3229,19,3058,21],[3229,22,3058,24,"inferPieceType"],[3229,36,3058,38],[3229,37,3058,39,"cleanMove"],[3229,46,3058,48],[3229,47,3058,49],[3230,6,3059,8],[3230,10,3059,12,"moves"],[3230,15,3059,17],[3230,18,3059,20],[3230,22,3059,24],[3230,23,3059,25,"_moves"],[3230,29,3059,31],[3230,30,3059,32],[3231,8,3059,34,"legal"],[3231,13,3059,39],[3231,15,3059,41],[3231,19,3059,45],[3232,8,3059,47,"piece"],[3232,13,3059,52],[3232,15,3059,54,"pieceType"],[3233,6,3059,64],[3233,7,3059,65],[3233,8,3059,66],[3234,6,3060,8],[3235,6,3061,8],[3235,11,3061,13],[3235,15,3061,17,"i"],[3235,16,3061,18],[3235,19,3061,21],[3235,20,3061,22],[3235,22,3061,24,"len"],[3235,25,3061,27],[3235,28,3061,30,"moves"],[3235,33,3061,35],[3235,34,3061,36,"length"],[3235,40,3061,42],[3235,42,3061,44,"i"],[3235,43,3061,45],[3235,46,3061,48,"len"],[3235,49,3061,51],[3235,51,3061,53,"i"],[3235,52,3061,54],[3235,54,3061,56],[3235,56,3061,58],[3236,8,3062,12],[3236,12,3062,16,"cleanMove"],[3236,21,3062,25],[3236,26,3062,30,"strippedSan"],[3236,37,3062,41],[3236,38,3062,42],[3236,42,3062,46],[3236,43,3062,47,"_moveToSan"],[3236,53,3062,57],[3236,54,3062,58,"moves"],[3236,59,3062,63],[3236,60,3062,64,"i"],[3236,61,3062,65],[3236,62,3062,66],[3236,64,3062,68,"moves"],[3236,69,3062,73],[3236,70,3062,74],[3236,71,3062,75],[3236,73,3062,77],[3237,10,3063,16],[3237,17,3063,23,"moves"],[3237,22,3063,28],[3237,23,3063,29,"i"],[3237,24,3063,30],[3237,25,3063,31],[3238,8,3064,12],[3239,6,3065,8],[3240,6,3066,8],[3241,6,3067,8],[3241,10,3067,12,"strict"],[3241,16,3067,18],[3241,18,3067,20],[3242,8,3068,12],[3242,15,3068,19],[3242,19,3068,23],[3243,6,3069,8],[3244,6,3070,8],[3244,10,3070,12,"piece"],[3244,15,3070,17],[3244,18,3070,20,"undefined"],[3244,27,3070,29],[3245,6,3071,8],[3245,10,3071,12,"matches"],[3245,17,3071,19],[3245,20,3071,22,"undefined"],[3245,29,3071,31],[3246,6,3072,8],[3246,10,3072,12,"from"],[3246,14,3072,16],[3246,17,3072,19,"undefined"],[3246,26,3072,28],[3247,6,3073,8],[3247,10,3073,12,"to"],[3247,12,3073,14],[3247,15,3073,17,"undefined"],[3247,24,3073,26],[3248,6,3074,8],[3248,10,3074,12,"promotion"],[3248,19,3074,21],[3248,22,3074,24,"undefined"],[3248,31,3074,33],[3249,6,3075,8],[3250,0,3076,0],[3251,0,3077,0],[3252,0,3078,0],[3253,0,3079,0],[3254,0,3080,0],[3255,0,3081,0],[3256,0,3082,0],[3257,0,3083,0],[3258,0,3084,0],[3259,0,3085,0],[3260,0,3086,0],[3261,0,3087,0],[3262,0,3088,0],[3263,0,3089,0],[3264,0,3090,0],[3265,6,3091,8],[3265,10,3091,12,"overlyDisambiguated"],[3265,29,3091,31],[3265,32,3091,34],[3265,37,3091,39],[3266,6,3092,8,"matches"],[3266,13,3092,15],[3266,16,3092,18,"cleanMove"],[3266,25,3092,27],[3266,26,3092,28,"match"],[3266,31,3092,33],[3266,32,3092,34],[3266,92,3092,94],[3266,93,3092,95],[3267,6,3093,8],[3267,10,3093,12,"matches"],[3267,17,3093,19],[3267,19,3093,21],[3268,8,3094,12,"piece"],[3268,13,3094,17],[3268,16,3094,20,"matches"],[3268,23,3094,27],[3268,24,3094,28],[3268,25,3094,29],[3268,26,3094,30],[3269,8,3095,12,"from"],[3269,12,3095,16],[3269,15,3095,19,"matches"],[3269,22,3095,26],[3269,23,3095,27],[3269,24,3095,28],[3269,25,3095,29],[3270,8,3096,12,"to"],[3270,10,3096,14],[3270,13,3096,17,"matches"],[3270,20,3096,24],[3270,21,3096,25],[3270,22,3096,26],[3270,23,3096,27],[3271,8,3097,12,"promotion"],[3271,17,3097,21],[3271,20,3097,24,"matches"],[3271,27,3097,31],[3271,28,3097,32],[3271,29,3097,33],[3271,30,3097,34],[3272,8,3098,12],[3272,12,3098,16,"from"],[3272,16,3098,20],[3272,17,3098,21,"length"],[3272,23,3098,27],[3272,27,3098,31],[3272,28,3098,32],[3272,30,3098,34],[3273,10,3099,16,"overlyDisambiguated"],[3273,29,3099,35],[3273,32,3099,38],[3273,36,3099,42],[3274,8,3100,12],[3275,6,3101,8],[3275,7,3101,9],[3275,13,3102,13],[3276,8,3103,12],[3277,0,3104,0],[3278,0,3105,0],[3279,0,3106,0],[3280,0,3107,0],[3281,0,3108,0],[3282,8,3109,12,"matches"],[3282,15,3109,19],[3282,18,3109,22,"cleanMove"],[3282,27,3109,31],[3282,28,3109,32,"match"],[3282,33,3109,37],[3282,34,3109,38],[3282,96,3109,100],[3282,97,3109,101],[3283,8,3110,12],[3283,12,3110,16,"matches"],[3283,19,3110,23],[3283,21,3110,25],[3284,10,3111,16,"piece"],[3284,15,3111,21],[3284,18,3111,24,"matches"],[3284,25,3111,31],[3284,26,3111,32],[3284,27,3111,33],[3284,28,3111,34],[3285,10,3112,16,"from"],[3285,14,3112,20],[3285,17,3112,23,"matches"],[3285,24,3112,30],[3285,25,3112,31],[3285,26,3112,32],[3285,27,3112,33],[3286,10,3113,16,"to"],[3286,12,3113,18],[3286,15,3113,21,"matches"],[3286,22,3113,28],[3286,23,3113,29],[3286,24,3113,30],[3286,25,3113,31],[3287,10,3114,16,"promotion"],[3287,19,3114,25],[3287,22,3114,28,"matches"],[3287,29,3114,35],[3287,30,3114,36],[3287,31,3114,37],[3287,32,3114,38],[3288,10,3115,16],[3288,14,3115,20,"from"],[3288,18,3115,24],[3288,19,3115,25,"length"],[3288,25,3115,31],[3288,29,3115,35],[3288,30,3115,36],[3288,32,3115,38],[3289,12,3116,20,"overlyDisambiguated"],[3289,31,3116,39],[3289,34,3116,42],[3289,38,3116,46],[3290,10,3117,16],[3291,8,3118,12],[3292,6,3119,8],[3293,6,3120,8,"pieceType"],[3293,15,3120,17],[3293,18,3120,20,"inferPieceType"],[3293,32,3120,34],[3293,33,3120,35,"cleanMove"],[3293,42,3120,44],[3293,43,3120,45],[3294,6,3121,8,"moves"],[3294,11,3121,13],[3294,14,3121,16],[3294,18,3121,20],[3294,19,3121,21,"_moves"],[3294,25,3121,27],[3294,26,3121,28],[3295,8,3122,12,"legal"],[3295,13,3122,17],[3295,15,3122,19],[3295,19,3122,23],[3296,8,3123,12,"piece"],[3296,13,3123,17],[3296,15,3123,19,"piece"],[3296,20,3123,24],[3296,23,3123,27,"piece"],[3296,28,3123,32],[3296,31,3123,35,"pieceType"],[3297,6,3124,8],[3297,7,3124,9],[3297,8,3124,10],[3298,6,3125,8],[3298,10,3125,12],[3298,11,3125,13,"to"],[3298,13,3125,15],[3298,15,3125,17],[3299,8,3126,12],[3299,15,3126,19],[3299,19,3126,23],[3300,6,3127,8],[3301,6,3128,8],[3301,11,3128,13],[3301,15,3128,17,"i"],[3301,16,3128,18],[3301,19,3128,21],[3301,20,3128,22],[3301,22,3128,24,"len"],[3301,25,3128,27],[3301,28,3128,30,"moves"],[3301,33,3128,35],[3301,34,3128,36,"length"],[3301,40,3128,42],[3301,42,3128,44,"i"],[3301,43,3128,45],[3301,46,3128,48,"len"],[3301,49,3128,51],[3301,51,3128,53,"i"],[3301,52,3128,54],[3301,54,3128,56],[3301,56,3128,58],[3302,8,3129,12],[3302,12,3129,16],[3302,13,3129,17,"from"],[3302,17,3129,21],[3302,19,3129,23],[3303,10,3130,16],[3304,10,3131,16],[3304,14,3131,20,"cleanMove"],[3304,23,3131,29],[3304,28,3132,20,"strippedSan"],[3304,39,3132,31],[3304,40,3132,32],[3304,44,3132,36],[3304,45,3132,37,"_moveToSan"],[3304,55,3132,47],[3304,56,3132,48,"moves"],[3304,61,3132,53],[3304,62,3132,54,"i"],[3304,63,3132,55],[3304,64,3132,56],[3304,66,3132,58,"moves"],[3304,71,3132,63],[3304,72,3132,64],[3304,73,3132,65],[3304,74,3132,66,"replace"],[3304,81,3132,73],[3304,82,3132,74],[3304,85,3132,77],[3304,87,3132,79],[3304,89,3132,81],[3304,90,3132,82],[3304,92,3132,84],[3305,12,3133,20],[3305,19,3133,27,"moves"],[3305,24,3133,32],[3305,25,3133,33,"i"],[3305,26,3133,34],[3305,27,3133,35],[3306,10,3134,16],[3307,10,3135,16],[3308,8,3136,12],[3308,9,3136,13],[3308,15,3137,17],[3308,19,3137,21],[3308,20,3137,22],[3308,21,3137,23,"piece"],[3308,26,3137,28],[3308,30,3137,32,"piece"],[3308,35,3137,37],[3308,36,3137,38,"toLowerCase"],[3308,47,3137,49],[3308,48,3137,50],[3308,49,3137,51],[3308,53,3137,55,"moves"],[3308,58,3137,60],[3308,59,3137,61,"i"],[3308,60,3137,62],[3308,61,3137,63],[3308,62,3137,64,"piece"],[3308,67,3137,69],[3308,72,3138,16,"Ox88"],[3308,76,3138,20],[3308,77,3138,21,"from"],[3308,81,3138,25],[3308,82,3138,26],[3308,86,3138,30,"moves"],[3308,91,3138,35],[3308,92,3138,36,"i"],[3308,93,3138,37],[3308,94,3138,38],[3308,95,3138,39,"from"],[3308,99,3138,43],[3308,103,3139,16,"Ox88"],[3308,107,3139,20],[3308,108,3139,21,"to"],[3308,110,3139,23],[3308,111,3139,24],[3308,115,3139,28,"moves"],[3308,120,3139,33],[3308,121,3139,34,"i"],[3308,122,3139,35],[3308,123,3139,36],[3308,124,3139,37,"to"],[3308,126,3139,39],[3308,131,3140,17],[3308,132,3140,18,"promotion"],[3308,141,3140,27],[3308,145,3140,31,"promotion"],[3308,154,3140,40],[3308,155,3140,41,"toLowerCase"],[3308,166,3140,52],[3308,167,3140,53],[3308,168,3140,54],[3308,172,3140,58,"moves"],[3308,177,3140,63],[3308,178,3140,64,"i"],[3308,179,3140,65],[3308,180,3140,66],[3308,181,3140,67,"promotion"],[3308,190,3140,76],[3308,191,3140,77],[3308,193,3140,79],[3309,10,3141,16],[3309,17,3141,23,"moves"],[3309,22,3141,28],[3309,23,3141,29,"i"],[3309,24,3141,30],[3309,25,3141,31],[3310,8,3142,12],[3310,9,3142,13],[3310,15,3143,17],[3310,19,3143,21,"overlyDisambiguated"],[3310,38,3143,40],[3310,40,3143,42],[3311,10,3144,16],[3312,0,3145,0],[3313,0,3146,0],[3314,0,3147,0],[3315,10,3148,16],[3315,16,3148,22,"square"],[3315,22,3148,28],[3315,25,3148,31,"algebraic"],[3315,34,3148,40],[3315,35,3148,41,"moves"],[3315,40,3148,46],[3315,41,3148,47,"i"],[3315,42,3148,48],[3315,43,3148,49],[3315,44,3148,50,"from"],[3315,48,3148,54],[3315,49,3148,55],[3316,10,3149,16],[3316,14,3149,20],[3316,15,3149,21],[3316,16,3149,22,"piece"],[3316,21,3149,27],[3316,25,3149,31,"piece"],[3316,30,3149,36],[3316,31,3149,37,"toLowerCase"],[3316,42,3149,48],[3316,43,3149,49],[3316,44,3149,50],[3316,48,3149,54,"moves"],[3316,53,3149,59],[3316,54,3149,60,"i"],[3316,55,3149,61],[3316,56,3149,62],[3316,57,3149,63,"piece"],[3316,62,3149,68],[3316,67,3150,20,"Ox88"],[3316,71,3150,24],[3316,72,3150,25,"to"],[3316,74,3150,27],[3316,75,3150,28],[3316,79,3150,32,"moves"],[3316,84,3150,37],[3316,85,3150,38,"i"],[3316,86,3150,39],[3316,87,3150,40],[3316,88,3150,41,"to"],[3316,90,3150,43],[3316,95,3151,21,"from"],[3316,99,3151,25],[3316,103,3151,29,"square"],[3316,109,3151,35],[3316,110,3151,36],[3316,111,3151,37],[3316,112,3151,38],[3316,116,3151,42,"from"],[3316,120,3151,46],[3316,124,3151,50,"square"],[3316,130,3151,56],[3316,131,3151,57],[3316,132,3151,58],[3316,133,3151,59],[3316,134,3151,60],[3316,139,3152,21],[3316,140,3152,22,"promotion"],[3316,149,3152,31],[3316,153,3152,35,"promotion"],[3316,162,3152,44],[3316,163,3152,45,"toLowerCase"],[3316,174,3152,56],[3316,175,3152,57],[3316,176,3152,58],[3316,180,3152,62,"moves"],[3316,185,3152,67],[3316,186,3152,68,"i"],[3316,187,3152,69],[3316,188,3152,70],[3316,189,3152,71,"promotion"],[3316,198,3152,80],[3316,199,3152,81],[3316,201,3152,83],[3317,12,3153,20],[3317,19,3153,27,"moves"],[3317,24,3153,32],[3317,25,3153,33,"i"],[3317,26,3153,34],[3317,27,3153,35],[3318,10,3154,16],[3319,8,3155,12],[3320,6,3156,8],[3321,6,3157,8],[3321,13,3157,15],[3321,17,3157,19],[3322,4,3158,4],[3323,4,3159,4,"ascii"],[3323,9,3159,9,"ascii"],[3323,10,3159,9],[3323,12,3159,12],[3324,6,3160,8],[3324,10,3160,12,"s"],[3324,11,3160,13],[3324,14,3160,16],[3324,47,3160,49],[3325,6,3161,8],[3325,11,3161,13],[3325,15,3161,17,"i"],[3325,16,3161,18],[3325,19,3161,21,"Ox88"],[3325,23,3161,25],[3325,24,3161,26,"a8"],[3325,26,3161,28],[3325,28,3161,30,"i"],[3325,29,3161,31],[3325,33,3161,35,"Ox88"],[3325,37,3161,39],[3325,38,3161,40,"h1"],[3325,40,3161,42],[3325,42,3161,44,"i"],[3325,43,3161,45],[3325,45,3161,47],[3325,47,3161,49],[3326,8,3162,12],[3327,8,3163,12],[3327,12,3163,16,"file"],[3327,16,3163,20],[3327,17,3163,21,"i"],[3327,18,3163,22],[3327,19,3163,23],[3327,24,3163,28],[3327,25,3163,29],[3327,27,3163,31],[3328,10,3164,16,"s"],[3328,11,3164,17],[3328,15,3164,21],[3328,18,3164,24],[3328,21,3164,27],[3328,31,3164,37],[3328,32,3164,38,"rank"],[3328,36,3164,42],[3328,37,3164,43,"i"],[3328,38,3164,44],[3328,39,3164,45],[3328,40,3164,46],[3328,43,3164,49],[3328,47,3164,53],[3329,8,3165,12],[3330,8,3166,12],[3330,12,3166,16],[3330,16,3166,20],[3330,17,3166,21,"_board"],[3330,23,3166,27],[3330,24,3166,28,"i"],[3330,25,3166,29],[3330,26,3166,30],[3330,28,3166,32],[3331,10,3167,16],[3331,16,3167,22,"piece"],[3331,21,3167,27],[3331,24,3167,30],[3331,28,3167,34],[3331,29,3167,35,"_board"],[3331,35,3167,41],[3331,36,3167,42,"i"],[3331,37,3167,43],[3331,38,3167,44],[3331,39,3167,45,"type"],[3331,43,3167,49],[3332,10,3168,16],[3332,16,3168,22,"color"],[3332,21,3168,27],[3332,24,3168,30],[3332,28,3168,34],[3332,29,3168,35,"_board"],[3332,35,3168,41],[3332,36,3168,42,"i"],[3332,37,3168,43],[3332,38,3168,44],[3332,39,3168,45,"color"],[3332,44,3168,50],[3333,10,3169,16],[3333,16,3169,22,"symbol"],[3333,22,3169,28],[3333,25,3169,31,"color"],[3333,30,3169,36],[3333,35,3169,41,"WHITE"],[3333,40,3169,46],[3333,43,3169,49,"piece"],[3333,48,3169,54],[3333,49,3169,55,"toUpperCase"],[3333,60,3169,66],[3333,61,3169,67],[3333,62,3169,68],[3333,65,3169,71,"piece"],[3333,70,3169,76],[3333,71,3169,77,"toLowerCase"],[3333,82,3169,88],[3333,83,3169,89],[3333,84,3169,90],[3334,10,3170,16,"s"],[3334,11,3170,17],[3334,15,3170,21],[3334,18,3170,24],[3334,21,3170,27,"symbol"],[3334,27,3170,33],[3334,30,3170,36],[3334,33,3170,39],[3335,8,3171,12],[3335,9,3171,13],[3335,15,3172,17],[3336,10,3173,16,"s"],[3336,11,3173,17],[3336,15,3173,21],[3336,20,3173,26],[3337,8,3174,12],[3338,8,3175,12],[3338,12,3175,17,"i"],[3338,13,3175,18],[3338,16,3175,21],[3338,17,3175,22],[3338,20,3175,26],[3338,24,3175,30],[3338,26,3175,32],[3339,10,3176,16,"s"],[3339,11,3176,17],[3339,15,3176,21],[3339,20,3176,26],[3340,10,3177,16,"i"],[3340,11,3177,17],[3340,15,3177,21],[3340,16,3177,22],[3341,8,3178,12],[3342,6,3179,8],[3343,6,3180,8,"s"],[3343,7,3180,9],[3343,11,3180,13],[3343,44,3180,46],[3344,6,3181,8,"s"],[3344,7,3181,9],[3344,11,3181,13],[3344,40,3181,42],[3345,6,3182,8],[3345,13,3182,15,"s"],[3345,14,3182,16],[3346,4,3183,4],[3347,4,3184,4,"perft"],[3347,9,3184,9,"perft"],[3347,10,3184,10,"depth"],[3347,15,3184,15],[3347,17,3184,17],[3348,6,3185,8],[3348,12,3185,14,"moves"],[3348,17,3185,19],[3348,20,3185,22],[3348,24,3185,26],[3348,25,3185,27,"_moves"],[3348,31,3185,33],[3348,32,3185,34],[3349,8,3185,36,"legal"],[3349,13,3185,41],[3349,15,3185,43],[3350,6,3185,49],[3350,7,3185,50],[3350,8,3185,51],[3351,6,3186,8],[3351,10,3186,12,"nodes"],[3351,15,3186,17],[3351,18,3186,20],[3351,19,3186,21],[3352,6,3187,8],[3352,12,3187,14,"color"],[3352,17,3187,19],[3352,20,3187,22],[3352,24,3187,26],[3352,25,3187,27,"_turn"],[3352,30,3187,32],[3353,6,3188,8],[3353,11,3188,13],[3353,15,3188,17,"i"],[3353,16,3188,18],[3353,19,3188,21],[3353,20,3188,22],[3353,22,3188,24,"len"],[3353,25,3188,27],[3353,28,3188,30,"moves"],[3353,33,3188,35],[3353,34,3188,36,"length"],[3353,40,3188,42],[3353,42,3188,44,"i"],[3353,43,3188,45],[3353,46,3188,48,"len"],[3353,49,3188,51],[3353,51,3188,53,"i"],[3353,52,3188,54],[3353,54,3188,56],[3353,56,3188,58],[3354,8,3189,12],[3354,12,3189,16],[3354,13,3189,17,"_makeMove"],[3354,22,3189,26],[3354,23,3189,27,"moves"],[3354,28,3189,32],[3354,29,3189,33,"i"],[3354,30,3189,34],[3354,31,3189,35],[3354,32,3189,36],[3355,8,3190,12],[3355,12,3190,16],[3355,13,3190,17],[3355,17,3190,21],[3355,18,3190,22,"_isKingAttacked"],[3355,33,3190,37],[3355,34,3190,38,"color"],[3355,39,3190,43],[3355,40,3190,44],[3355,42,3190,46],[3356,10,3191,16],[3356,14,3191,20,"depth"],[3356,19,3191,25],[3356,22,3191,28],[3356,23,3191,29],[3356,26,3191,32],[3356,27,3191,33],[3356,29,3191,35],[3357,12,3192,20,"nodes"],[3357,17,3192,25],[3357,21,3192,29],[3357,25,3192,33],[3357,26,3192,34,"perft"],[3357,31,3192,39],[3357,32,3192,40,"depth"],[3357,37,3192,45],[3357,40,3192,48],[3357,41,3192,49],[3357,42,3192,50],[3358,10,3193,16],[3358,11,3193,17],[3358,17,3194,21],[3359,12,3195,20,"nodes"],[3359,17,3195,25],[3359,19,3195,27],[3360,10,3196,16],[3361,8,3197,12],[3362,8,3198,12],[3362,12,3198,16],[3362,13,3198,17,"_undoMove"],[3362,22,3198,26],[3362,23,3198,27],[3362,24,3198,28],[3363,6,3199,8],[3364,6,3200,8],[3364,13,3200,15,"nodes"],[3364,18,3200,20],[3365,4,3201,4],[3366,4,3202,4,"setTurn"],[3366,11,3202,11,"setTurn"],[3366,12,3202,12,"color"],[3366,17,3202,17],[3366,19,3202,19],[3367,6,3203,8],[3367,10,3203,12],[3367,14,3203,16],[3367,15,3203,17,"_turn"],[3367,20,3203,22],[3367,24,3203,26,"color"],[3367,29,3203,31],[3367,31,3203,33],[3368,8,3204,12],[3368,15,3204,19],[3368,20,3204,24],[3369,6,3205,8],[3370,6,3206,8],[3370,10,3206,12],[3370,11,3206,13,"move"],[3370,15,3206,17],[3370,16,3206,18],[3370,20,3206,22],[3370,21,3206,23],[3371,6,3207,8],[3371,13,3207,15],[3371,17,3207,19],[3372,4,3208,4],[3373,4,3209,4,"turn"],[3373,8,3209,8,"turn"],[3373,9,3209,8],[3373,11,3209,11],[3374,6,3210,8],[3374,13,3210,15],[3374,17,3210,19],[3374,18,3210,20,"_turn"],[3374,23,3210,25],[3375,4,3211,4],[3376,4,3212,4,"board"],[3376,9,3212,9,"board"],[3376,10,3212,9],[3376,12,3212,12],[3377,6,3213,8],[3377,12,3213,14,"output"],[3377,18,3213,20],[3377,21,3213,23],[3377,23,3213,25],[3378,6,3214,8],[3378,10,3214,12,"row"],[3378,13,3214,15],[3378,16,3214,18],[3378,18,3214,20],[3379,6,3215,8],[3379,11,3215,13],[3379,15,3215,17,"i"],[3379,16,3215,18],[3379,19,3215,21,"Ox88"],[3379,23,3215,25],[3379,24,3215,26,"a8"],[3379,26,3215,28],[3379,28,3215,30,"i"],[3379,29,3215,31],[3379,33,3215,35,"Ox88"],[3379,37,3215,39],[3379,38,3215,40,"h1"],[3379,40,3215,42],[3379,42,3215,44,"i"],[3379,43,3215,45],[3379,45,3215,47],[3379,47,3215,49],[3380,8,3216,12],[3380,12,3216,16],[3380,16,3216,20],[3380,17,3216,21,"_board"],[3380,23,3216,27],[3380,24,3216,28,"i"],[3380,25,3216,29],[3380,26,3216,30],[3380,30,3216,34],[3380,34,3216,38],[3380,36,3216,40],[3381,10,3217,16,"row"],[3381,13,3217,19],[3381,14,3217,20,"push"],[3381,18,3217,24],[3381,19,3217,25],[3381,23,3217,29],[3381,24,3217,30],[3382,8,3218,12],[3382,9,3218,13],[3382,15,3219,17],[3383,10,3220,16,"row"],[3383,13,3220,19],[3383,14,3220,20,"push"],[3383,18,3220,24],[3383,19,3220,25],[3384,12,3221,20,"square"],[3384,18,3221,26],[3384,20,3221,28,"algebraic"],[3384,29,3221,37],[3384,30,3221,38,"i"],[3384,31,3221,39],[3384,32,3221,40],[3385,12,3222,20,"type"],[3385,16,3222,24],[3385,18,3222,26],[3385,22,3222,30],[3385,23,3222,31,"_board"],[3385,29,3222,37],[3385,30,3222,38,"i"],[3385,31,3222,39],[3385,32,3222,40],[3385,33,3222,41,"type"],[3385,37,3222,45],[3386,12,3223,20,"color"],[3386,17,3223,25],[3386,19,3223,27],[3386,23,3223,31],[3386,24,3223,32,"_board"],[3386,30,3223,38],[3386,31,3223,39,"i"],[3386,32,3223,40],[3386,33,3223,41],[3386,34,3223,42,"color"],[3387,10,3224,16],[3387,11,3224,17],[3387,12,3224,18],[3388,8,3225,12],[3389,8,3226,12],[3389,12,3226,17,"i"],[3389,13,3226,18],[3389,16,3226,21],[3389,17,3226,22],[3389,20,3226,26],[3389,24,3226,30],[3389,26,3226,32],[3390,10,3227,16,"output"],[3390,16,3227,22],[3390,17,3227,23,"push"],[3390,21,3227,27],[3390,22,3227,28,"row"],[3390,25,3227,31],[3390,26,3227,32],[3391,10,3228,16,"row"],[3391,13,3228,19],[3391,16,3228,22],[3391,18,3228,24],[3392,10,3229,16,"i"],[3392,11,3229,17],[3392,15,3229,21],[3392,16,3229,22],[3393,8,3230,12],[3394,6,3231,8],[3395,6,3232,8],[3395,13,3232,15,"output"],[3395,19,3232,21],[3396,4,3233,4],[3397,4,3234,4,"squareColor"],[3397,15,3234,15,"squareColor"],[3397,16,3234,16,"square"],[3397,22,3234,22],[3397,24,3234,24],[3398,6,3235,8],[3398,10,3235,12,"square"],[3398,16,3235,18],[3398,20,3235,22,"Ox88"],[3398,24,3235,26],[3398,26,3235,28],[3399,8,3236,12],[3399,14,3236,18,"sq"],[3399,16,3236,20],[3399,19,3236,23,"Ox88"],[3399,23,3236,27],[3399,24,3236,28,"square"],[3399,30,3236,34],[3399,31,3236,35],[3400,8,3237,12],[3400,15,3237,19],[3400,16,3237,20,"rank"],[3400,20,3237,24],[3400,21,3237,25,"sq"],[3400,23,3237,27],[3400,24,3237,28],[3400,27,3237,31,"file"],[3400,31,3237,35],[3400,32,3237,36,"sq"],[3400,34,3237,38],[3400,35,3237,39],[3400,39,3237,43],[3400,40,3237,44],[3400,45,3237,49],[3400,46,3237,50],[3400,49,3237,53],[3400,56,3237,60],[3400,59,3237,63],[3400,65,3237,69],[3401,6,3238,8],[3402,6,3239,8],[3402,13,3239,15],[3402,17,3239,19],[3403,4,3240,4],[3404,4,3241,4,"history"],[3404,11,3241,11,"history"],[3404,12,3241,12],[3405,6,3241,14,"verbose"],[3405,13,3241,21],[3405,16,3241,24],[3406,4,3241,30],[3406,5,3241,31],[3406,8,3241,34],[3406,9,3241,35],[3406,10,3241,36],[3406,12,3241,38],[3407,6,3242,8],[3407,12,3242,14,"reversedHistory"],[3407,27,3242,29],[3407,30,3242,32],[3407,32,3242,34],[3408,6,3243,8],[3408,12,3243,14,"moveHistory"],[3408,23,3243,25],[3408,26,3243,28],[3408,28,3243,30],[3409,6,3244,8],[3409,13,3244,15],[3409,17,3244,19],[3409,18,3244,20,"_history"],[3409,26,3244,28],[3409,27,3244,29,"length"],[3409,33,3244,35],[3409,36,3244,38],[3409,37,3244,39],[3409,39,3244,41],[3410,8,3245,12,"reversedHistory"],[3410,23,3245,27],[3410,24,3245,28,"push"],[3410,28,3245,32],[3410,29,3245,33],[3410,33,3245,37],[3410,34,3245,38,"_undoMove"],[3410,43,3245,47],[3410,44,3245,48],[3410,45,3245,49],[3410,46,3245,50],[3411,6,3246,8],[3412,6,3247,8],[3412,13,3247,15],[3412,17,3247,19],[3412,19,3247,21],[3413,8,3248,12],[3413,14,3248,18,"move"],[3413,18,3248,22],[3413,21,3248,25,"reversedHistory"],[3413,36,3248,40],[3413,37,3248,41,"pop"],[3413,40,3248,44],[3413,41,3248,45],[3413,42,3248,46],[3414,8,3249,12],[3414,12,3249,16],[3414,13,3249,17,"move"],[3414,17,3249,21],[3414,19,3249,23],[3415,10,3250,16],[3416,8,3251,12],[3417,8,3252,12],[3417,12,3252,16,"verbose"],[3417,19,3252,23],[3417,21,3252,25],[3418,10,3253,16,"moveHistory"],[3418,21,3253,27],[3418,22,3253,28,"push"],[3418,26,3253,32],[3418,27,3253,33],[3418,31,3253,37,"Move"],[3418,35,3253,41],[3418,36,3253,42],[3418,40,3253,46],[3418,42,3253,48,"move"],[3418,46,3253,52],[3418,47,3253,53],[3418,48,3253,54],[3419,8,3254,12],[3419,9,3254,13],[3419,15,3255,17],[3420,10,3256,16,"moveHistory"],[3420,21,3256,27],[3420,22,3256,28,"push"],[3420,26,3256,32],[3420,27,3256,33],[3420,31,3256,37],[3420,32,3256,38,"_moveToSan"],[3420,42,3256,48],[3420,43,3256,49,"move"],[3420,47,3256,53],[3420,49,3256,55],[3420,53,3256,59],[3420,54,3256,60,"_moves"],[3420,60,3256,66],[3420,61,3256,67],[3420,62,3256,68],[3420,63,3256,69],[3420,64,3256,70],[3421,8,3257,12],[3422,8,3258,12],[3422,12,3258,16],[3422,13,3258,17,"_makeMove"],[3422,22,3258,26],[3422,23,3258,27,"move"],[3422,27,3258,31],[3422,28,3258,32],[3423,6,3259,8],[3424,6,3260,8],[3424,13,3260,15,"moveHistory"],[3424,24,3260,26],[3425,4,3261,4],[3426,4,3262,4],[3427,0,3263,0],[3428,0,3264,0],[3429,0,3265,0],[3430,4,3266,4,"_getPositionCount"],[3430,21,3266,21,"_getPositionCount"],[3430,22,3266,22,"hash"],[3430,26,3266,26],[3430,28,3266,28],[3431,6,3267,8],[3431,13,3267,15],[3431,17,3267,19],[3431,18,3267,20,"_positionCount"],[3431,32,3267,34],[3431,33,3267,35,"get"],[3431,36,3267,38],[3431,37,3267,39,"hash"],[3431,41,3267,43],[3431,42,3267,44],[3431,46,3267,48],[3431,47,3267,49],[3432,4,3268,4],[3433,4,3269,4,"_incPositionCount"],[3433,21,3269,21,"_incPositionCount"],[3433,22,3269,21],[3433,24,3269,24],[3434,6,3270,8],[3434,10,3270,12],[3434,11,3270,13,"_positionCount"],[3434,25,3270,27],[3434,26,3270,28,"set"],[3434,29,3270,31],[3434,30,3270,32],[3434,34,3270,36],[3434,35,3270,37,"_hash"],[3434,40,3270,42],[3434,42,3270,44],[3434,43,3270,45],[3434,47,3270,49],[3434,48,3270,50,"_positionCount"],[3434,62,3270,64],[3434,63,3270,65,"get"],[3434,66,3270,68],[3434,67,3270,69],[3434,71,3270,73],[3434,72,3270,74,"_hash"],[3434,77,3270,79],[3434,78,3270,80],[3434,82,3270,84],[3434,83,3270,85],[3434,87,3270,89],[3434,88,3270,90],[3434,89,3270,91],[3435,4,3271,4],[3436,4,3272,4,"_decPositionCount"],[3436,21,3272,21,"_decPositionCount"],[3436,22,3272,22,"hash"],[3436,26,3272,26],[3436,28,3272,28],[3437,6,3273,8],[3437,12,3273,14,"currentCount"],[3437,24,3273,26],[3437,27,3273,29],[3437,31,3273,33],[3437,32,3273,34,"_positionCount"],[3437,46,3273,48],[3437,47,3273,49,"get"],[3437,50,3273,52],[3437,51,3273,53,"hash"],[3437,55,3273,57],[3437,56,3273,58],[3437,60,3273,62],[3437,61,3273,63],[3438,6,3274,8],[3438,10,3274,12,"currentCount"],[3438,22,3274,24],[3438,27,3274,29],[3438,28,3274,30],[3438,30,3274,32],[3439,8,3275,12],[3439,12,3275,16],[3439,13,3275,17,"_positionCount"],[3439,27,3275,31],[3439,28,3275,32,"delete"],[3439,34,3275,38],[3439,35,3275,39,"hash"],[3439,39,3275,43],[3439,40,3275,44],[3440,6,3276,8],[3440,7,3276,9],[3440,13,3277,13],[3441,8,3278,12],[3441,12,3278,16],[3441,13,3278,17,"_positionCount"],[3441,27,3278,31],[3441,28,3278,32,"set"],[3441,31,3278,35],[3441,32,3278,36,"hash"],[3441,36,3278,40],[3441,38,3278,42,"currentCount"],[3441,50,3278,54],[3441,53,3278,57],[3441,54,3278,58],[3441,55,3278,59],[3442,6,3279,8],[3443,4,3280,4],[3444,4,3281,4,"_pruneComments"],[3444,18,3281,18,"_pruneComments"],[3444,19,3281,18],[3444,21,3281,21],[3445,6,3282,8],[3445,12,3282,14,"reversedHistory"],[3445,27,3282,29],[3445,30,3282,32],[3445,32,3282,34],[3446,6,3283,8],[3446,12,3283,14,"currentComments"],[3446,27,3283,29],[3446,30,3283,32],[3446,31,3283,33],[3446,32,3283,34],[3447,6,3284,8],[3447,12,3284,14,"copyComment"],[3447,23,3284,25],[3447,26,3284,29,"fen"],[3447,29,3284,32],[3447,33,3284,37],[3448,8,3285,12],[3448,12,3285,16,"fen"],[3448,15,3285,19],[3448,19,3285,23],[3448,23,3285,27],[3448,24,3285,28,"_comments"],[3448,33,3285,37],[3448,35,3285,39],[3449,10,3286,16,"currentComments"],[3449,25,3286,31],[3449,26,3286,32,"fen"],[3449,29,3286,35],[3449,30,3286,36],[3449,33,3286,39],[3449,37,3286,43],[3449,38,3286,44,"_comments"],[3449,47,3286,53],[3449,48,3286,54,"fen"],[3449,51,3286,57],[3449,52,3286,58],[3450,8,3287,12],[3451,6,3288,8],[3451,7,3288,9],[3452,6,3289,8],[3452,13,3289,15],[3452,17,3289,19],[3452,18,3289,20,"_history"],[3452,26,3289,28],[3452,27,3289,29,"length"],[3452,33,3289,35],[3452,36,3289,38],[3452,37,3289,39],[3452,39,3289,41],[3453,8,3290,12,"reversedHistory"],[3453,23,3290,27],[3453,24,3290,28,"push"],[3453,28,3290,32],[3453,29,3290,33],[3453,33,3290,37],[3453,34,3290,38,"_undoMove"],[3453,43,3290,47],[3453,44,3290,48],[3453,45,3290,49],[3453,46,3290,50],[3454,6,3291,8],[3455,6,3292,8,"copyComment"],[3455,17,3292,19],[3455,18,3292,20],[3455,22,3292,24],[3455,23,3292,25,"fen"],[3455,26,3292,28],[3455,27,3292,29],[3455,28,3292,30],[3455,29,3292,31],[3456,6,3293,8],[3456,13,3293,15],[3456,17,3293,19],[3456,19,3293,21],[3457,8,3294,12],[3457,14,3294,18,"move"],[3457,18,3294,22],[3457,21,3294,25,"reversedHistory"],[3457,36,3294,40],[3457,37,3294,41,"pop"],[3457,40,3294,44],[3457,41,3294,45],[3457,42,3294,46],[3458,8,3295,12],[3458,12,3295,16],[3458,13,3295,17,"move"],[3458,17,3295,21],[3458,19,3295,23],[3459,10,3296,16],[3460,8,3297,12],[3461,8,3298,12],[3461,12,3298,16],[3461,13,3298,17,"_makeMove"],[3461,22,3298,26],[3461,23,3298,27,"move"],[3461,27,3298,31],[3461,28,3298,32],[3462,8,3299,12,"copyComment"],[3462,19,3299,23],[3462,20,3299,24],[3462,24,3299,28],[3462,25,3299,29,"fen"],[3462,28,3299,32],[3462,29,3299,33],[3462,30,3299,34],[3462,31,3299,35],[3463,6,3300,8],[3464,6,3301,8],[3464,10,3301,12],[3464,11,3301,13,"_comments"],[3464,20,3301,22],[3464,23,3301,25,"currentComments"],[3464,38,3301,40],[3465,4,3302,4],[3466,4,3303,4,"getComment"],[3466,14,3303,14,"getComment"],[3466,15,3303,14],[3466,17,3303,17],[3467,6,3304,8],[3467,13,3304,15],[3467,17,3304,19],[3467,18,3304,20,"_comments"],[3467,27,3304,29],[3467,28,3304,30],[3467,32,3304,34],[3467,33,3304,35,"fen"],[3467,36,3304,38],[3467,37,3304,39],[3467,38,3304,40],[3467,39,3304,41],[3468,4,3305,4],[3469,4,3306,4,"setComment"],[3469,14,3306,14,"setComment"],[3469,15,3306,15,"comment"],[3469,22,3306,22],[3469,24,3306,24],[3470,6,3307,8],[3470,10,3307,12],[3470,11,3307,13,"_comments"],[3470,20,3307,22],[3470,21,3307,23],[3470,25,3307,27],[3470,26,3307,28,"fen"],[3470,29,3307,31],[3470,30,3307,32],[3470,31,3307,33],[3470,32,3307,34],[3470,35,3307,37,"comment"],[3470,42,3307,44],[3470,43,3307,45,"replace"],[3470,50,3307,52],[3470,51,3307,53],[3470,54,3307,56],[3470,56,3307,58],[3470,59,3307,61],[3470,60,3307,62],[3470,61,3307,63,"replace"],[3470,68,3307,70],[3470,69,3307,71],[3470,72,3307,74],[3470,74,3307,76],[3470,77,3307,79],[3470,78,3307,80],[3471,4,3308,4],[3472,4,3309,4],[3473,0,3310,0],[3474,0,3311,0],[3475,4,3312,4,"deleteComment"],[3475,17,3312,17,"deleteComment"],[3475,18,3312,17],[3475,20,3312,20],[3476,6,3313,8],[3476,13,3313,15],[3476,17,3313,19],[3476,18,3313,20,"removeComment"],[3476,31,3313,33],[3476,32,3313,34],[3476,33,3313,35],[3477,4,3314,4],[3478,4,3315,4,"removeComment"],[3478,17,3315,17,"removeComment"],[3478,18,3315,17],[3478,20,3315,20],[3479,6,3316,8],[3479,12,3316,14,"comment"],[3479,19,3316,21],[3479,22,3316,24],[3479,26,3316,28],[3479,27,3316,29,"_comments"],[3479,36,3316,38],[3479,37,3316,39],[3479,41,3316,43],[3479,42,3316,44,"fen"],[3479,45,3316,47],[3479,46,3316,48],[3479,47,3316,49],[3479,48,3316,50],[3480,6,3317,8],[3480,13,3317,15],[3480,17,3317,19],[3480,18,3317,20,"_comments"],[3480,27,3317,29],[3480,28,3317,30],[3480,32,3317,34],[3480,33,3317,35,"fen"],[3480,36,3317,38],[3480,37,3317,39],[3480,38,3317,40],[3480,39,3317,41],[3481,6,3318,8],[3481,13,3318,15,"comment"],[3481,20,3318,22],[3482,4,3319,4],[3483,4,3320,4,"getComments"],[3483,15,3320,15,"getComments"],[3483,16,3320,15],[3483,18,3320,18],[3484,6,3321,8],[3484,10,3321,12],[3484,11,3321,13,"_pruneComments"],[3484,25,3321,27],[3484,26,3321,28],[3484,27,3321,29],[3485,6,3322,8],[3485,13,3322,15,"Object"],[3485,19,3322,21],[3485,20,3322,22,"keys"],[3485,24,3322,26],[3485,25,3322,27],[3485,29,3322,31],[3485,30,3322,32,"_comments"],[3485,39,3322,41],[3485,40,3322,42],[3485,41,3322,43,"map"],[3485,44,3322,46],[3485,45,3322,48,"fen"],[3485,48,3322,51],[3485,52,3322,56],[3486,8,3323,12],[3486,15,3323,19],[3487,10,3323,21,"fen"],[3487,13,3323,24],[3487,15,3323,26,"fen"],[3487,18,3323,29],[3488,10,3323,31,"comment"],[3488,17,3323,38],[3488,19,3323,40],[3488,23,3323,44],[3488,24,3323,45,"_comments"],[3488,33,3323,54],[3488,34,3323,55,"fen"],[3488,37,3323,58],[3489,8,3323,60],[3489,9,3323,61],[3490,6,3324,8],[3490,7,3324,9],[3490,8,3324,10],[3491,4,3325,4],[3492,4,3326,4],[3493,0,3327,0],[3494,0,3328,0],[3495,4,3329,4,"deleteComments"],[3495,18,3329,18,"deleteComments"],[3495,19,3329,18],[3495,21,3329,21],[3496,6,3330,8],[3496,13,3330,15],[3496,17,3330,19],[3496,18,3330,20,"removeComments"],[3496,32,3330,34],[3496,33,3330,35],[3496,34,3330,36],[3497,4,3331,4],[3498,4,3332,4,"removeComments"],[3498,18,3332,18,"removeComments"],[3498,19,3332,18],[3498,21,3332,21],[3499,6,3333,8],[3499,10,3333,12],[3499,11,3333,13,"_pruneComments"],[3499,25,3333,27],[3499,26,3333,28],[3499,27,3333,29],[3500,6,3334,8],[3500,13,3334,15,"Object"],[3500,19,3334,21],[3500,20,3334,22,"keys"],[3500,24,3334,26],[3500,25,3334,27],[3500,29,3334,31],[3500,30,3334,32,"_comments"],[3500,39,3334,41],[3500,40,3334,42],[3500,41,3334,43,"map"],[3500,44,3334,46],[3500,45,3334,48,"fen"],[3500,48,3334,51],[3500,52,3334,56],[3501,8,3335,12],[3501,14,3335,18,"comment"],[3501,21,3335,25],[3501,24,3335,28],[3501,28,3335,32],[3501,29,3335,33,"_comments"],[3501,38,3335,42],[3501,39,3335,43,"fen"],[3501,42,3335,46],[3501,43,3335,47],[3502,8,3336,12],[3502,15,3336,19],[3502,19,3336,23],[3502,20,3336,24,"_comments"],[3502,29,3336,33],[3502,30,3336,34,"fen"],[3502,33,3336,37],[3502,34,3336,38],[3503,8,3337,12],[3503,15,3337,19],[3504,10,3337,21,"fen"],[3504,13,3337,24],[3504,15,3337,26,"fen"],[3504,18,3337,29],[3505,10,3337,31,"comment"],[3505,17,3337,38],[3505,19,3337,40,"comment"],[3506,8,3337,48],[3506,9,3337,49],[3507,6,3338,8],[3507,7,3338,9],[3507,8,3338,10],[3508,4,3339,4],[3509,4,3340,4,"setCastlingRights"],[3509,21,3340,21,"setCastlingRights"],[3509,22,3340,22,"color"],[3509,27,3340,27],[3509,29,3340,29,"rights"],[3509,35,3340,35],[3509,37,3340,37],[3510,6,3341,8],[3510,11,3341,13],[3510,17,3341,19,"side"],[3510,21,3341,23],[3510,25,3341,27],[3510,26,3341,28,"KING"],[3510,30,3341,32],[3510,32,3341,34,"QUEEN"],[3510,37,3341,39],[3510,38,3341,40],[3510,40,3341,42],[3511,8,3342,12],[3511,12,3342,16,"rights"],[3511,18,3342,22],[3511,19,3342,23,"side"],[3511,23,3342,27],[3511,24,3342,28],[3511,29,3342,33,"undefined"],[3511,38,3342,42],[3511,40,3342,44],[3512,10,3343,16],[3512,14,3343,20,"rights"],[3512,20,3343,26],[3512,21,3343,27,"side"],[3512,25,3343,31],[3512,26,3343,32],[3512,28,3343,34],[3513,12,3344,20],[3513,16,3344,24],[3513,17,3344,25,"_castling"],[3513,26,3344,34],[3513,27,3344,35,"color"],[3513,32,3344,40],[3513,33,3344,41],[3513,37,3344,45,"SIDES"],[3513,42,3344,50],[3513,43,3344,51,"side"],[3513,47,3344,55],[3513,48,3344,56],[3514,10,3345,16],[3514,11,3345,17],[3514,17,3346,21],[3515,12,3347,20],[3515,16,3347,24],[3515,17,3347,25,"_castling"],[3515,26,3347,34],[3515,27,3347,35,"color"],[3515,32,3347,40],[3515,33,3347,41],[3515,37,3347,45],[3515,38,3347,46,"SIDES"],[3515,43,3347,51],[3515,44,3347,52,"side"],[3515,48,3347,56],[3515,49,3347,57],[3516,10,3348,16],[3517,8,3349,12],[3518,6,3350,8],[3519,6,3351,8],[3519,10,3351,12],[3519,11,3351,13,"_updateCastlingRights"],[3519,32,3351,34],[3519,33,3351,35],[3519,34,3351,36],[3520,6,3352,8],[3520,12,3352,14,"result"],[3520,18,3352,20],[3520,21,3352,23],[3520,25,3352,27],[3520,26,3352,28,"getCastlingRights"],[3520,43,3352,45],[3520,44,3352,46,"color"],[3520,49,3352,51],[3520,50,3352,52],[3521,6,3353,8],[3521,13,3353,16],[3521,14,3353,17,"rights"],[3521,20,3353,23],[3521,21,3353,24,"KING"],[3521,25,3353,28],[3521,26,3353,29],[3521,31,3353,34,"undefined"],[3521,40,3353,43],[3521,44,3353,47,"rights"],[3521,50,3353,53],[3521,51,3353,54,"KING"],[3521,55,3353,58],[3521,56,3353,59],[3521,61,3353,64,"result"],[3521,67,3353,70],[3521,68,3353,71,"KING"],[3521,72,3353,75],[3521,73,3353,76],[3521,79,3354,13,"rights"],[3521,85,3354,19],[3521,86,3354,20,"QUEEN"],[3521,91,3354,25],[3521,92,3354,26],[3521,97,3354,31,"undefined"],[3521,106,3354,40],[3521,110,3354,44,"rights"],[3521,116,3354,50],[3521,117,3354,51,"QUEEN"],[3521,122,3354,56],[3521,123,3354,57],[3521,128,3354,62,"result"],[3521,134,3354,68],[3521,135,3354,69,"QUEEN"],[3521,140,3354,74],[3521,141,3354,75],[3521,142,3354,76],[3522,4,3355,4],[3523,4,3356,4,"getCastlingRights"],[3523,21,3356,21,"getCastlingRights"],[3523,22,3356,22,"color"],[3523,27,3356,27],[3523,29,3356,29],[3524,6,3357,8],[3524,13,3357,15],[3525,8,3358,12],[3525,9,3358,13,"KING"],[3525,13,3358,17],[3525,16,3358,20],[3525,17,3358,21],[3525,21,3358,25],[3525,22,3358,26,"_castling"],[3525,31,3358,35],[3525,32,3358,36,"color"],[3525,37,3358,41],[3525,38,3358,42],[3525,41,3358,45,"SIDES"],[3525,46,3358,50],[3525,47,3358,51,"KING"],[3525,51,3358,55],[3525,52,3358,56],[3525,58,3358,62],[3525,59,3358,63],[3526,8,3359,12],[3526,9,3359,13,"QUEEN"],[3526,14,3359,18],[3526,17,3359,21],[3526,18,3359,22],[3526,22,3359,26],[3526,23,3359,27,"_castling"],[3526,32,3359,36],[3526,33,3359,37,"color"],[3526,38,3359,42],[3526,39,3359,43],[3526,42,3359,46,"SIDES"],[3526,47,3359,51],[3526,48,3359,52,"QUEEN"],[3526,53,3359,57],[3526,54,3359,58],[3526,60,3359,64],[3527,6,3360,8],[3527,7,3360,9],[3528,4,3361,4],[3529,4,3362,4,"moveNumber"],[3529,14,3362,14,"moveNumber"],[3529,15,3362,14],[3529,17,3362,17],[3530,6,3363,8],[3530,13,3363,15],[3530,17,3363,19],[3530,18,3363,20,"_moveNumber"],[3530,29,3363,31],[3531,4,3364,4],[3532,2,3365,0],[3533,0,3365,1],[3533,3]],"functionMap":{"names":["<global>","rootNode","node","lineToTree","pgn","peg$subclass","C","peg$SyntaxError","peg$padEnd","peg$SyntaxError.prototype.format","peg$SyntaxError.buildMessage","DESCRIBE_EXPECTATION_FNS.literal","DESCRIBE_EXPECTATION_FNS._class","expectation.parts.map$argument_0","DESCRIBE_EXPECTATION_FNS.any","DESCRIBE_EXPECTATION_FNS.end","DESCRIBE_EXPECTATION_FNS.other","hex","literalEscape","s.replace...replace.replace$argument_1","classEscape","describeExpectation","describeExpected","describeFound","peg$parse","peg$f0","peg$f1","peg$f2","peg$f3","peg$f4","peg$f5","peg$f6","peg$f7","peg$f8","peg$f9","peg$f10","peg$literalExpectation","peg$classExpectation","peg$endExpectation","peg$otherExpectation","peg$computePosDetails","peg$computeLocation","peg$fail","peg$buildStructuredError","peg$parsepgn","peg$parsetagPairSection","peg$parsetagPair","peg$parsetagName","peg$parsetagValue","peg$parsemoveTextSection","peg$parseline","peg$parsemove","peg$parsemoveNumber","peg$parsesan","peg$parsesuffixAnnotation","peg$parsenag","peg$parsecomment","peg$parsebraceComment","peg$parserestOfLineComment","peg$parsevariation","peg$parsegameTerminationMarker","peg$parse_","rotl","wrappingMul","xoroshiro128","<anonymous>","Array.from$argument_1","Move","Move#constructor","Move#isCapture","Move#isPromotion","Move#isEnPassant","Move#isKingsideCastle","Move#isQueensideCastle","Move#isBigPawn","rank","file","isDigit","algebraic","swapColor","validateFen","Array.from.some$argument_0","getDisambiguator","addMove","inferPieceType","strippedSan","Chess","Chess#constructor","Chess#clear","Chess#load","Chess#fen","Chess#_pieceKey","Chess#_epKey","Chess#_castlingKey","Chess#_computeHash","Chess#_updateSetup","Chess#reset","Chess#get","Chess#findPiece","Chess#put","Chess#_set","Chess#_put","Chess#_clear","Chess#remove","Chess#_updateCastlingRights","Chess#_updateEnPassantSquare","canCapture","Chess#_attacked","Chess#attackers","Chess#_isKingAttacked","Chess#hash","Chess#isAttacked","Chess#isCheck","Chess#inCheck","Chess#isCheckmate","Chess#isStalemate","Chess#isInsufficientMaterial","Chess#isThreefoldRepetition","Chess#isDrawByFiftyMoves","Chess#isDraw","Chess#isGameOver","Chess#moves","moves.map$argument_0","Chess#_moves","Chess#move","Chess#_push","Chess#_movePiece","Chess#_makeMove","Chess#undo","Chess#_undoMove","Chess#pgn","appendComment","strip","wrapComment","Chess#header","Chess#setHeader","Chess#removeHeader","Chess#getHeaders","Chess#loadPgn","Chess#_moveToSan","Chess#_moveFromSan","Chess#ascii","Chess#perft","Chess#setTurn","Chess#turn","Chess#board","Chess#squareColor","Chess#history","Chess#_getPositionCount","Chess#_incPositionCount","Chess#_decPositionCount","Chess#_pruneComments","copyComment","Chess#getComment","Chess#setComment","Chess#deleteComment","Chess#removeComment","Chess#getComments","Object.keys.map$argument_0","Chess#deleteComments","Chess#removeComments","Chess#setCastlingRights","Chess#getCastlingRights","Chess#moveNumber"],"mappings":"AAA;ECM;GDE;EEE;GFgB;EGE;GHc;EIE;GJkB;AKE;ECC,0CD;CLG;AOE;CPW;AQI;CRM;mCSE;CTgC;+BUE;aCE;KDE;WEE;+CCC;ODI;KFG;SIE;KJE;SKE;KLE;WME;KNE;EOG;GPE;EQE;wCCQ,yCD;wCCC,yCD;GRC;EUE;wCDU,yCC;wCDC,yCC;GVC;EWE;GXE;EYE;GZ4B;EaE;GbE;CVG;AwBE;eCgF,qDD;eEC,0DF;eGC,0DH;eIC,iDJ;eKC,kFL;eMC,sGN;eOC,4BP;eQC,6DR;eSC,2CT;eUC,8BV;gBWC,wDX;EYiB;GZE;EaE;GbE;EcE;GdE;EeE;GfE;EgBE;GhBmC;EiBE;GjBkB;EkBE;GlBS;EmBE;GnBO;EoBE;GpBS;EqBE;GrBc;EsBE;GtBuE;EuBE;GvBuC;EwBE;GxB6B;EyBE;GzBc;E0BE;G1BiB;E2BE;G3BqC;E4BE;G5B+D;E6BE;G7BiH;E8BE;G9BwC;E+BE;G/B0D;EgCE;GhCS;EiCE;GjCyD;EkCE;GlC6C;EmCE;GnC4C;EoCE;GpCyD;EqCE;GrC2B;CxB4B;A8D6B;C9DE;A+DC;C/DE;AgEE;WCC;KDS;ChEC;6CkEE,gFlE;0CkEC,YlE;iDkEC,YlE;AmEW;ICkB;KDkC;IEC;KFE;IGC;KHE;IIC;KJE;IKC;KLE;IMC;KNE;IOC;KPE;CnEC;A2EoN;C3EE;A4EE;C5EE;A6EC;C7EE;A8EE;C9EK;A+EC;C/EE;AgFC;2CCkG,oCD;ChFO;AkFE;ClF8C;AmFC;CnF0B;AoFC;CpFc;AqFE;CrFE;AsFC;ICc;KDE;IEC;KFoB;IGC;KHkD;IIC;KJ0F;IKC;KLkB;IMC;KNE;IOC;KPG;IQC;KRkB;ISO;KTW;IUC;KVE;IWC;KXE;IYC;KZmB;IaC;KbQ;IcC;KdI;IeC;KfyB;IgBC;KhBG;IiBC;KjBU;IkBC;KlB2B;ImBC;2BCe;8CDE;KnBK;IqBC;KrBqE;IsBC;KtBO;IuBC;KvBG;IwBC;KxBE;IyBC;KzBE;I0BC;K1BE;I2BC;K3BE;I4BC;K5BE;I6BC;K7BE;I8BC;K9BwD;I+BC;K/BE;IgCC;KhCE;IiCC;KjCK;IkCC;KlCE;ImCC;6BCG,8BD;6BCG,sCD;KnCE;IqCC;KrCwI;IsCC;KtCsD;IuCC;KvCU;IwCC;KxCK;IyCC;KzC+G;I0CC;K1CS;I2CC;K3C0D;I4CC;8BCwB;SDO;sBEmD;SFM;4BGE;SHqB;K5C2B;IgDI;KhDO;IiDE;KjDG;IkDC;KlDM;ImDE;KnDQ;IoDC;KpDoE;IqDY;KrDsC;IsDE;KtD0H;IuDC;KvDwB;IwDC;KxDiB;IyDC;KzDM;I0DC;K1DE;I2DC;K3DqB;I4DC;K5DM;I6DC;K7DoB;I8DK;K9DE;I+DC;K/DE;IgEC;KhEQ;IiEC;4BCG;SDI;KjEc;ImEC;KnEE;IoEC;KpEE;IqEI;KrEE;IsEC;KtEI;IuEC;+CCE;SDE;KvEC;IyEI;KzEE;I0EC;+CFE;SEI;K1EC;I2EC;K3Ee;I4EC;K5EK;I6EC;K7EE;CtFC"},"hasCjsExports":false},"type":"js/module"}]}